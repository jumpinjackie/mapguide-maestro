<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<FeatureProviderCapabilities>
	<Provider Name="OSGeo.SDF"/>
	<Connection>
		<ThreadCapability>PerConnectionThreaded</ThreadCapability>
		<SpatialContextExtent>
			<Type>Dynamic</Type>
		</SpatialContextExtent>
		<SupportsLocking>false</SupportsLocking>
		<SupportsTimeout>false</SupportsTimeout>
		<SupportsTransactions>false</SupportsTransactions>
		<SupportsSavePoint>false</SupportsSavePoint>
		<SupportsLongTransactions>false</SupportsLongTransactions>
		<SupportsSQL>false</SupportsSQL>
		<SupportsConfiguration>false</SupportsConfiguration>
	</Connection>
	<Schema>
		<Class>
			<Type>Class</Type>
			<Type>FeatureClass</Type>
		</Class>
		<Data>
			<Type>Boolean</Type>
			<Type>Byte</Type>
			<Type>DateTime</Type>
			<Type>Double</Type>
			<Type>Double</Type>
			<Type>Int16</Type>
			<Type>Int32</Type>
			<Type>Int64</Type>
			<Type>Single</Type>
			<Type>String</Type>
		</Data>
		<SupportsInheritance>true</SupportsInheritance>
		<SupportsMultipleSchemas>false</SupportsMultipleSchemas>
		<SupportsObjectProperties>false</SupportsObjectProperties>
		<SupportsAssociationProperties>true</SupportsAssociationProperties>
		<SupportsSchemaOverrides>false</SupportsSchemaOverrides>
		<SupportsNetworkModel>false</SupportsNetworkModel>
		<SupportsAutoIdGeneration>true</SupportsAutoIdGeneration>
		<SupportsDataStoreScopeUniqueIdGeneration>false</SupportsDataStoreScopeUniqueIdGeneration>
		<SupportedAutoGeneratedTypes>
			<Type>Int32</Type>
		</SupportedAutoGeneratedTypes>
		<SupportsSchemaModification>true</SupportsSchemaModification>
	</Schema>
	<Command>
		<SupportedCommands>
			<Name>Select</Name>
			<Name>Insert</Name>
			<Name>Delete</Name>
			<Name>Update</Name>
			<Name>DescribeSchema</Name>
			<Name>ApplySchema</Name>
			<Name>CreateSpatialContext</Name>
			<Name>GetSpatialContexts</Name>
		</SupportedCommands>
		<SupportsParameters>false</SupportsParameters>
		<SupportsTimeout>false</SupportsTimeout>
		<SupportsSelectExpressions>true</SupportsSelectExpressions>
		<SupportsSelectFunctions>true</SupportsSelectFunctions>
		<SupportsSelectDistinct>true</SupportsSelectDistinct>
		<SupportsSelectOrdering>false</SupportsSelectOrdering>
		<SupportsSelectGrouping>false</SupportsSelectGrouping>
	</Command>
	<Filter>
		<Condition>
			<Type>Comparison</Type>
			<Type>Like</Type>
			<Type>In</Type>
			<Type>Null</Type>
			<Type>Spatial</Type>
		</Condition>
		<Spatial>
			<Operation>Contains</Operation>
			<Operation>Disjoint</Operation>
			<Operation>Intersects</Operation>
			<Operation>Within</Operation>
			<Operation>Inside</Operation>
			<Operation>EnvelopeIntersects</Operation>
		</Spatial>
		<SupportsGeodesicDistance>false</SupportsGeodesicDistance>
		<SupportsNonLiteralGeometricOperations>false</SupportsNonLiteralGeometricOperations>
	</Filter>
	<Expression>
		<Type>
			<Name>Basic</Name>
			<Name>Function</Name>
		</Type>
		<FunctionDefinitionList>
			<FunctionDefinition>
				<Name>Avg</Name>
				<Description>Determines the average value of an expression </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Count</Name>
				<Description>Determines the number of objects in the query </Description>
				<ReturnType>Int64</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>boolean </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Boolean</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Max</Name>
				<Description>Determines the maximum value of an expression </Description>
				<ReturnType>Byte</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>byte </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Median</Name>
				<Description>Represents an inverse distribution function with a continuous distribution model </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Min</Name>
				<Description>Returns the minimum value of an expression </Description>
				<ReturnType>Byte</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>byte </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>SpatialExtents</Name>
				<Description>Returns the spatial extents of values of a geometric expression </Description>
				<ReturnType></ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>geometry property </Name>
						<Description>Argument to be processed </Description>
						<ReturnType></ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Stddev</Name>
				<Description>Returns the sample standard deviation of a numeric expression </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Sum</Name>
				<Description>Returns the sum of values of an expression </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>NullValue</Name>
				<Description>Returns the first argument if not NULL, the second otherwise </Description>
				<ReturnType>Boolean</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>boolean </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Boolean</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>boolean </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Boolean</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>ToDate</Name>
				<Description>Converts a string to a date </Description>
				<ReturnType>DateTime</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>text property </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>ToDouble</Name>
				<Description>Converts a string or number to a double </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>ToFloat</Name>
				<Description>Converts a string or number to a float </Description>
				<ReturnType>Single</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>ToInt32</Name>
				<Description>Converts a string or number to an int32 </Description>
				<ReturnType>Int32</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>ToInt64</Name>
				<Description>Converts a string or number to an int64 </Description>
				<ReturnType>Int64</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>ToString</Name>
				<Description>Converts a number or date to a string </Description>
				<ReturnType>String</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>date/time </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>DateTime</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>AddMonths</Name>
				<Description>Adds a specified number of months to a date </Description>
				<ReturnType>DateTime</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>date/time </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>DateTime</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Number of months to be added </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>CurrentDate</Name>
				<Description>Returns the current date </Description>
				<ReturnType>DateTime</ReturnType>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Extract</Name>
				<Description>Extracts a portion of a date/time </Description>
				<ReturnType>DateTime</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>part of the date </Name>
						<Description>Indicates the portion of the date/time to be extracted </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>from date </Name>
						<Description>The date/time from which to extract a portion from </Description>
						<ReturnType>DateTime</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>ExtractToDouble</Name>
				<Description>Extracts a portion of a date/time </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>part of the date </Name>
						<Description>Indicates the portion of the date/time to be extracted </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>from date </Name>
						<Description>The date/time from which to extract a portion from </Description>
						<ReturnType>DateTime</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>ExtractToInt</Name>
				<Description>Extracts a portion of a date/time </Description>
				<ReturnType>Int32</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>part of the date </Name>
						<Description>Indicates the portion of the date/time to be extracted </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>from date </Name>
						<Description>The date/time from which to extract a portion from </Description>
						<ReturnType>DateTime</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>MonthsBetween</Name>
				<Description>Returns the number of months between two dates </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>date1 </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>DateTime</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>date2 </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>DateTime</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Area2D</Name>
				<Description>Determines the area of a given geometry </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>geometry property </Name>
						<Description>Argument to be processed </Description>
						<ReturnType></ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Length2D</Name>
				<Description>Determines the length of a given geometry </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>geometry property </Name>
						<Description>Argument to be processed </Description>
						<ReturnType></ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>X</Name>
				<Description>Determines the X ordinate of a given point geometry </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>geometry property </Name>
						<Description>Argument to be processed </Description>
						<ReturnType></ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Y</Name>
				<Description>Determines the Y ordinate of a given point geometry </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>geometry property </Name>
						<Description>Argument to be processed </Description>
						<ReturnType></ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Z</Name>
				<Description>Determines the Z ordinate of a given point geometry </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>geometry property </Name>
						<Description>Argument to be processed </Description>
						<ReturnType></ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>M</Name>
				<Description>Determines the X ordinate of a given point geometry </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>geometry property </Name>
						<Description>Argument to be processed </Description>
						<ReturnType></ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Abs</Name>
				<Description>Determines the absolute value of a numeric expression </Description>
				<ReturnType>Byte</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Acos</Name>
				<Description>Determines the arc cosine of a numeric expression </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Asin</Name>
				<Description>Determines the arc sine of a numeric expression </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Atan</Name>
				<Description>Determines the arc tangent of a numeric expression </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Atan2</Name>
				<Description>Determines the arc tangent of two numeric expressions </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Cos</Name>
				<Description>Determines the cosine of a numeric expression </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Exp</Name>
				<Description>Determines e raised to the power of a numeric expression value </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Ln</Name>
				<Description>Determines the natural logarithm of a numeric expression </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Log</Name>
				<Description>Determines the logarithm of two numeric expressions </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>base </Name>
						<Description>Logarithm base value </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Mod</Name>
				<Description>Determines the remainder of the division of two numeric expressions </Description>
				<ReturnType>Byte</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>divisor </Name>
						<Description>The divisor </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Power</Name>
				<Description>Raises a numeric expression to the power of another numeric expression </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>base </Name>
						<Description>Represents the power value a number should be raised to </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Remainder</Name>
				<Description>Determines the remainder of the division of two numeric expressions </Description>
				<ReturnType>Int16</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>divisor </Name>
						<Description>The divisor </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Sin</Name>
				<Description>Determines the sine of a numeric expression </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Sqrt</Name>
				<Description>Determines the square root of a numeric expression </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Tan</Name>
				<Description>Determines the tangent of a numeric expression </Description>
				<ReturnType>Double</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Ceil</Name>
				<Description>Determines the smallest integer greater than or equal to the expression value </Description>
				<ReturnType>Byte</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Floor</Name>
				<Description>Returns the largest integer equal to or less than the expression value </Description>
				<ReturnType>Byte</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Round</Name>
				<Description>Rounds a numeric expressions to the specified degree </Description>
				<ReturnType>Byte</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Sign</Name>
				<Description>Returns -1, 0, 1 depending on whether the value is &lt; 0, == 0 or &gt; 0 </Description>
				<ReturnType>Int32</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>number </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Trunc</Name>
				<Description>Truncates a numeric or date expression as specified </Description>
				<ReturnType>DateTime</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>date/time </Name>
						<Description>Argument to be processed </Description>
						<ReturnType>DateTime</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>Operation Indicator </Name>
						<Description>Truncation indicator (YEAR, MONTH, DAY, HOUR, MINUTE) </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Concat</Name>
				<Description>Returns the string concatenation of 2 expressions </Description>
				<ReturnType>String</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>boolean </Name>
						<Description>First string to concatenate </Description>
						<ReturnType>Boolean</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>boolean </Name>
						<Description>Second string to concatenate </Description>
						<ReturnType>Boolean</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Instr</Name>
				<Description>Returns the position of a string within a base string </Description>
				<ReturnType>Int64</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>text property </Name>
						<Description>String to search in </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>search text </Name>
						<Description>String to look for </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Length</Name>
				<Description>Determines the length of a string expression </Description>
				<ReturnType>Int64</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>text property </Name>
						<Description>String for which to calculate the length </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Lower</Name>
				<Description>Converts all uppercase letters in a string expression into lowercase letters </Description>
				<ReturnType>String</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>text property </Name>
						<Description>String to be converted into lowercase </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Lpad</Name>
				<Description>Pads a string expression as directed to the left </Description>
				<ReturnType>String</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>text property </Name>
						<Description>String to pad to the left </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>number of characters </Name>
						<Description>The length the string should be padded to </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Ltrim</Name>
				<Description>Trims a string expression on the left </Description>
				<ReturnType>String</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>text property </Name>
						<Description>String to trim on the left </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Rpad</Name>
				<Description>Pads a string expression as directed to the right </Description>
				<ReturnType>String</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>text property </Name>
						<Description>String to pad to the right </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>number of characters </Name>
						<Description>The length the string should be padded to </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Rtrim</Name>
				<Description>Trims a string expression on the right </Description>
				<ReturnType>String</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>text property </Name>
						<Description>String to trim on the right </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Soundex</Name>
				<Description>Returns the phonetic representation of a string expression </Description>
				<ReturnType>String</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>text property </Name>
						<Description>String for which to identify phonetic representation </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Substr</Name>
				<Description>Returns a substring from a provided string as defined </Description>
				<ReturnType>String</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>text property </Name>
						<Description>String from which to extract </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>position to start </Name>
						<Description>Position from which to extract a substring </Description>
						<ReturnType>Byte</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Translate</Name>
				<Description>Replaces a set of individual characters in a string with replacements </Description>
				<ReturnType>String</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>text property </Name>
						<Description>String where character replacement is executed </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>from-characterset </Name>
						<Description>String identifying individual characters to be replaced </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
					<ArgumentDefinition>
						<Name>to-characterset </Name>
						<Description>String identifying individual replacement characters </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Trim</Name>
				<Description>Trims a string expression </Description>
				<ReturnType>String</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>text property </Name>
						<Description>String to trim </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
			<FunctionDefinition>
				<Name>Upper</Name>
				<Description>Converts all lowercase letters in a string expression into uppercase letters </Description>
				<ReturnType>String</ReturnType>
				<ArgumentDefinitionList>
					<ArgumentDefinition>
						<Name>text property </Name>
						<Description>String to be converted into uppercase </Description>
						<ReturnType>String</ReturnType>
					</ArgumentDefinition>
				</ArgumentDefinitionList>
			</FunctionDefinition>
		</FunctionDefinitionList>
	</Expression>
	<Raster>
		<SupportsRaster>false</SupportsRaster>
		<SupportsStitching>false</SupportsStitching>
		<SupportsSubsampling>false</SupportsSubsampling>
	</Raster>
	<Topology>
		<SupportsTopology>false</SupportsTopology>
		<SupportsTopologicalHierarchy>false</SupportsTopologicalHierarchy>
		<BreaksCurveCrossingsAutomatically>false</BreaksCurveCrossingsAutomatically>
		<ActivatesTopologyByArea>false</ActivatesTopologyByArea>
		<ConstrainsFeatureMovements>false</ConstrainsFeatureMovements>
	</Topology>
	<Geometry>
		<Types>
			<Type>Point</Type>
			<Type>LineString</Type>
			<Type>Polygon</Type>
			<Type>MultiPoint</Type>
			<Type>MultiLineString</Type>
			<Type>MultiPolygon</Type>
			<Type>MultiGeometry</Type>
			<Type>CurveString</Type>
			<Type>CurvePolygon</Type>
			<Type>MultiCurveString</Type>
			<Type>MultiCurvePolygon</Type>
		</Types>
		<Components>
			<Type>LinearRing</Type>
			<Type>ArcSegment</Type>
			<Type>LinearSegment</Type>
			<Type>CurveRing</Type>
		</Components>
		<Dimensionality>3</Dimensionality>
	</Geometry>
</FeatureProviderCapabilities>