{
  "api/OSGeo.MapGuide.MaestroAPI.Services.IService.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Services.IService.html",
    "title": "Interface IService | MapGuide Maestro",
    "keywords": "Interface IService Base interfaces of all MapGuide Services Namespace : OSGeo.MapGuide.MaestroAPI.Services Assembly : cs.temp.dll.dll Syntax public interface IService"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Services.ISiteService.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Services.ISiteService.html",
    "title": "Interface ISiteService | MapGuide Maestro",
    "keywords": "Interface ISiteService Service interface for site operations Namespace : OSGeo.MapGuide.MaestroAPI.Services Assembly : cs.temp.dll.dll Syntax public interface ISiteService : IService Examples This example shows how to obtain a site service instance. Note that you should check if this service type is supported through its capabilities. IServerConnection conn; ... ISiteService siteSvc = (ISiteService)conn.GetService((int)ServiceType.Site); Methods EnumerateGroups() Enumerates the groups. Declaration GroupList EnumerateGroups() Returns Type Description GroupList EnumerateUsers() Enumerates the users. Declaration UserList EnumerateUsers() Returns Type Description UserList EnumerateUsers(String) Enumerates the users. Declaration UserList EnumerateUsers(string group) Parameters Type Name Description System.String group The group. Returns Type Description UserList GetSiteInfo() Gets the site info. Declaration SiteInformation GetSiteInfo() Returns Type Description SiteInformation"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Services.ITileService.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Services.ITileService.html",
    "title": "Interface ITileService | MapGuide Maestro",
    "keywords": "Interface ITileService Provides services for map tile generation Namespace : OSGeo.MapGuide.MaestroAPI.Services Assembly : cs.temp.dll.dll Syntax public interface ITileService : IService Examples This example shows how to obtain a tile service instance. Note that you should check if this service type is supported through its capabilities. IServerConnection conn; ... ITileService tileSvc = (ITileService)conn.GetService((int)ServiceType.Tile); Methods GetTile(String, String, Int32, Int32, Int32) Reads a tile from MapGuide Declaration Stream GetTile(string mapDefinition, string baseLayerGroup, int column, int row, int scaleIndex) Parameters Type Name Description System.String mapDefinition A map with baselayergroups System.String baseLayerGroup The name of a baselayergroup System.Int32 column The column index of the tile System.Int32 row The row index of the tile System.Int32 scaleIndex The scale index for the tile set Returns Type Description System.IO.Stream An image stream"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Services.QueryMapOptions.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Services.QueryMapOptions.html",
    "title": "Class QueryMapOptions | MapGuide Maestro",
    "keywords": "Class QueryMapOptions Additional options for a QueryMapFeatures operation Inheritance System.Object QueryMapOptions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Services Assembly : cs.temp.dll.dll Syntax public class QueryMapOptions Properties FeatureFilter XML filter describing a set of previously selected features. This paramter is useful for obtaining the attribute values of a previously selected feature. Declaration public string FeatureFilter { get; set; } Property Value Type Description System.String LayerAttributeFilter Bitmask specifying the attributes a layer must have to be considered in the selection process. The following attributes are supported: 1 - Layer is visible 2 - Layer is selectable 4 - Layer has a tooltip defined Combinations of one or more attributes are allowed. Declaration public QueryMapFeaturesLayerAttributes LayerAttributeFilter { get; set; } Property Value Type Description QueryMapFeaturesLayerAttributes LayerNames An array of layer names to restrict the selection to Declaration public string[] LayerNames { get; set; } Property Value Type Description System.String []"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Services.ServiceType.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Services.ServiceType.html",
    "title": "Enum ServiceType | MapGuide Maestro",
    "keywords": "Enum ServiceType Defines the type of services Namespace : OSGeo.MapGuide.MaestroAPI.Services Assembly : cs.temp.dll.dll Syntax public enum ServiceType Fields Name Description Drawing Drawing Service Feature Features Service Fusion Fusion Service Mapping Mapping Service Resource Resource Service Site Site Service Tile Tile Service"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Services.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Services.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.Services | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.Services Classes QueryMapOptions Additional options for a QueryMapFeatures operation Interfaces IDrawingService Allows low level access to DWF (Design Web Format) data stored in a resource repository as part of a drawing source. IFeatureService Provides services for accessing, querying and inspecting feature sources IFusionService Provides services for the construction of Fusion web applications IMappingService Provides services for interaction with the runtime map IResourceService Provides services for accessing resources in a repository IService Base interfaces of all MapGuide Services ISiteService Service interface for site operations ITileService Provides services for map tile generation Enums ServiceType Defines the type of services"
  },
  "api/OSGeo.MapGuide.MaestroAPI.SiteResourceType.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.SiteResourceType.html",
    "title": "Class SiteResourceType | MapGuide Maestro",
    "keywords": "Class SiteResourceType Helper class to filter ResourceTypes into the ones that are editable Inheritance System.Object SiteResourceType Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public static class SiteResourceType Methods All() Returns an array of all editable ResourceTypes values Declaration public static ResourceTypes[] All() Returns Type Description ResourceTypes []"
  },
  "api/OSGeo.MapGuide.MaestroAPI.SiteVersions.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.SiteVersions.html",
    "title": "Class SiteVersions | MapGuide Maestro",
    "keywords": "Class SiteVersions Helper class containing known MapGuide Site Versions Inheritance System.Object SiteVersions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public static class SiteVersions Properties SiteVersionNumbers The list of known site version numbers Declaration public static Version[] SiteVersionNumbers { get; } Property Value Type Description Version [] Methods GetVersion(KnownSiteVersions) Gets the specified version by the known site version identifier Declaration public static Version GetVersion(KnownSiteVersions index) Parameters Type Name Description KnownSiteVersions index Returns Type Description Version"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Utility.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Utility.html",
    "title": "Class Utility | MapGuide Maestro",
    "keywords": "Class Utility Various helper functions Inheritance System.Object Utility Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public static class Utility Fields XML_EXCEPTION_KEY The exception data key that hints that an System.Exception thrown is related to XML content errors Declaration public const string XML_EXCEPTION_KEY = \"XmlError\" Field Value Type Description System.String Methods ChangeColorBrightness(Color, Single) Creates color with corrected brightness. Declaration public static Color ChangeColorBrightness(Color color, float correctionFactor) Parameters Type Name Description Color color Color to correct. System.Single correctionFactor The brightness correction factor. Must be between -1 and 1. Negative values produce darker colors. Returns Type Description Color Corrected structure. CleanUpFeatureSet(String) Removes the outer <FeatureInformation> tag, and returns a blank string for empty sets. This eases the use of SelectionXml, because different parts of MapGuide represents it differently. Declaration public static string CleanUpFeatureSet(string input) Parameters Type Name Description System.String input The string to clean Returns Type Description System.String The cleaned string CopyStream(Stream, Stream) Copies the content of a stream into another stream. Automatically attempts to rewind the source stream. Declaration public static void CopyStream(Stream source, Stream target) Parameters Type Name Description Stream source The source stream Stream target The target stream CopyStream(Stream, Stream, Utility.StreamCopyProgressDelegate, Int64) Copies the content of a stream into another stream, with callbacks. Declaration public static void CopyStream(Stream source, Stream target, Utility.StreamCopyProgressDelegate callback, long updateFrequence) Parameters Type Name Description Stream source The source stream Stream target The target stream Utility.StreamCopyProgressDelegate callback An optional callback delegate, may be null. System.Int64 updateFrequence The number of bytes to copy before calling the callback delegate, set to 0 to get every update CopyStream(Stream, Stream, Boolean) Copies the content of a stream into another stream. Declaration public static void CopyStream(Stream source, Stream target, bool rewind) Parameters Type Name Description Stream source The source stream Stream target The target stream System.Boolean rewind True if the source stream should be rewound before being copied CreateDefaultLayer(IServerConnection, LayerType) Creates a layer definition at the highest supported resource version Declaration public static ILayerDefinition CreateDefaultLayer(IServerConnection conn, LayerType layerType) Parameters Type Name Description IServerConnection conn LayerType layerType Returns Type Description ILayerDefinition CreateDefaultLayer(IServerConnection, String, ClassDefinition, String) Creates a default Layer Definition from the given Class Definition Declaration public static string CreateDefaultLayer(IServerConnection conn, string fsId, ClassDefinition clsDef, string targetFolder) Parameters Type Name Description IServerConnection conn System.String fsId ClassDefinition clsDef System.String targetFolder Returns Type Description System.String CreateFlexibleLayout(IServerConnection, String) Creates a flexible layout Declaration public static IApplicationDefinition CreateFlexibleLayout(IServerConnection conn, string templateName) Parameters Type Name Description IServerConnection conn System.String templateName Returns Type Description IApplicationDefinition CreateMapDefinition(IServerConnection, String) Creates a map definition at the highest supported resource version Declaration public static IMapDefinition CreateMapDefinition(IServerConnection conn, string name) Parameters Type Name Description IServerConnection conn System.String name Returns Type Description IMapDefinition CreateMapDefinition(IServerConnection, String, String, IEnvelope) Creates a map definition at the highest supported resource version Declaration public static IMapDefinition CreateMapDefinition(IServerConnection conn, string name, string csWkt, IEnvelope extent) Parameters Type Name Description IServerConnection conn System.String name System.String csWkt IEnvelope extent Returns Type Description IMapDefinition CreateSimpleSymbol(IServerConnection, String, String) Creates a simple symbol definition at the highest supported resource version Declaration public static ISimpleSymbolDefinition CreateSimpleSymbol(IServerConnection conn, string name, string description) Parameters Type Name Description IServerConnection conn System.String name System.String description Returns Type Description ISimpleSymbolDefinition CreateWatermarkPreviewMapDefinition(IWatermarkDefinition) Creates a preview map definition for the given watermark Declaration public static IMapDefinition2 CreateWatermarkPreviewMapDefinition(IWatermarkDefinition wmd) Parameters Type Name Description IWatermarkDefinition wmd Returns Type Description IMapDefinition2 DecodeFDOName(String) Converts FDO encoded characters into their original character. Declaration public static string DecodeFDOName(string name) Parameters Type Name Description System.String name The FDO encoded string Returns Type Description System.String The unencoded version of the string Remarks FDO names must always be encoded when writing back to attributes in XML configuration documents as it may contain reserved characters that would render the final XML attribute content invalid. Consequently, such names must always be decoded when reading from XML configuration documents otherwise these escape characters may still be present after reading EncodeFDOName(String) FDO encodes a string Declaration public static string EncodeFDOName(string name) Parameters Type Name Description System.String name Returns Type Description System.String Remarks FDO names must always be encoded when writing back to attributes in XML configuration documents as it may contain reserved characters that would render the final XML attribute content invalid. Consequently, such names must always be decoded when reading from XML configuration documents otherwise these escape characters may still be present after reading ExplodeThemeIntoFilteredLayers(IServerConnection, ExplodeThemeOptions, LengthyOperationProgressCallBack) Explodes a themed layer into filtered sub-layers where each sub-layer is filtered on the individual theme rule's filter Declaration public static void ExplodeThemeIntoFilteredLayers(IServerConnection conn, ExplodeThemeOptions options, LengthyOperationProgressCallBack progress) Parameters Type Name Description IServerConnection conn ExplodeThemeOptions options LengthyOperationProgressCallBack progress FdoStringifiyLiteral(String) Surrounds the given string with single-quotes. Mainly used for FDO expressions where string literals are required as un-quoted strings will trigger the FDO expression engine. Declaration public static string FdoStringifiyLiteral(string str) Parameters Type Name Description System.String str Returns Type Description System.String FormatSizeString(Int64) Formats a number of bytes to a human readable format, ea.: 2.56 Kb Declaration public static string FormatSizeString(long size) Parameters Type Name Description System.Int64 size The size in bytes Returns Type Description System.String The human readable string GenerateLayerName(String, String, String, Int32, IVectorRule) Generates a unique layer name for a given vector rule Declaration public static string GenerateLayerName(string layerFormat, string layerName, string scaleRange, int i, IVectorRule rule) Parameters Type Name Description System.String layerFormat System.String layerName System.String scaleRange System.Int32 i IVectorRule rule Returns Type Description System.String GetResourceIdPointers(XmlNode) Enumerates all xml nodes in the document, and looks for tags or attributes named ResourceId Declaration public static List<KeyValuePair<XmlNode, string>> GetResourceIdPointers(XmlNode item) Parameters Type Name Description System.Xml.XmlNode item The xml item to examine Returns Type Description List < KeyValuePair < XmlNode , System.String >> A list with all found elements GetScaleRangeStr(IVectorScaleRange) String-ifies a scale range Declaration public static string GetScaleRangeStr(IVectorScaleRange parentRange) Parameters Type Name Description IVectorScaleRange parentRange Returns Type Description System.String GetStylizationFunctions() Returns the list of known FDO stylization expression functions Declaration public static IEnumerable<IFdoFunctionDefintion> GetStylizationFunctions() Returns Type Description IEnumerable < IFdoFunctionDefintion > HasOriginalXml(Exception) Gets whether the given exception has original xml content attached Declaration public static bool HasOriginalXml(Exception ex) Parameters Type Name Description Exception ex Returns Type Description System.Boolean InRange<T>(T, T, T, Boolean) Returns true if the given value is in range Declaration public static bool InRange<T>(T val, T min, T max, bool bInclusive = true)where T : IComparable Parameters Type Name Description T val T min T max System.Boolean bInclusive Returns Type Description System.Boolean Type Parameters Name Description T IsDbXmlError(Exception) Gets whether the thrown exception is related to DBXML Declaration public static bool IsDbXmlError(Exception ex) Parameters Type Name Description Exception ex Returns Type Description System.Boolean IsSuccessfulConnectionTestResult(String) Checks if the given result is a successful test connection result Declaration public static bool IsSuccessfulConnectionTestResult(string sResult) Parameters Type Name Description System.String sResult Returns Type Description System.Boolean IsZero(Double) Returns true if this value is zero for all intents and purposes Declaration public static bool IsZero(this double val) Parameters Type Name Description System.Double val Returns Type Description System.Boolean IsZero(Single) Returns true if this value is zero for all intents and purposes Declaration public static bool IsZero(this float val) Parameters Type Name Description System.Single val Returns Type Description System.Boolean MakeWktCircle(Double, Double, Double) Creates the WKT for the given circle Declaration public static string MakeWktCircle(double x, double y, double r) Parameters Type Name Description System.Double x System.Double y System.Double r Returns Type Description System.String MakeWktPolygon(Double, Double, Double, Double) Creates the polygon WKT for the given bounding box Declaration public static string MakeWktPolygon(double x1, double y1, double x2, double y2) Parameters Type Name Description System.Double x1 System.Double y1 System.Double x2 System.Double y2 Returns Type Description System.String ParseHTMLColor(String) Parses a color in HTML notation (ea. #ffaabbff) Declaration public static Color ParseHTMLColor(string color) Parameters Type Name Description System.String color The HTML representation of the color Returns Type Description Color The .Net color structure that matches the color ParseHTMLColorARGB(String) Parses a color in HTML notation (ea. #ffaabbff) Declaration public static Color ParseHTMLColorARGB(string color) Parameters Type Name Description System.String color The HTML representation of the color Returns Type Description Color The .Net color structure that matches the color ParseHTMLColorRGBA(String) Parses a color in HTML notation (ea. #ffaabbff) Declaration public static Color ParseHTMLColorRGBA(string color) Parameters Type Name Description System.String color The HTML representation of the color Returns Type Description Color The .Net color structure that matches the color ParseQueryString(String) Parses the given query string to a dictionary Declaration public static IDictionary<string, string> ParseQueryString(string queryString) Parameters Type Name Description System.String queryString Returns Type Description IDictionary < System.String , System.String > RemoveUTF8BOM(MemoryStream) Creates a copy of the stream, with removed Utf8 BOM, if any Declaration public static MemoryStream RemoveUTF8BOM(MemoryStream ms) Parameters Type Name Description MemoryStream ms The stream to fix Returns Type Description MemoryStream A stream with no Utf8 BOM ReplaceResourceIds(XmlDocument, String, String) Replaces all references of the given resource id. Declaration public static bool ReplaceResourceIds(XmlDocument doc, string srcId, string dstId) Parameters Type Name Description XmlDocument doc A resource document. Any replacements will modify the XmlDocument that is passed in System.String srcId The resource id to replace System.String dstId The resource id to replace with Returns Type Description System.Boolean true if a replacement was made. false if no replacements were made SerializeDigit(Double) Turns a decimal value into a string representation in EN-US format Declaration public static string SerializeDigit(double digit) Parameters Type Name Description System.Double digit The value to encode Returns Type Description System.String The encoded value SerializeDigit(Single) Turns a decimal value into a string representation in EN-US format Declaration public static string SerializeDigit(float digit) Parameters Type Name Description System.Single digit The value to encode Returns Type Description System.String The encoded value SerializeHTMLColor(Color, Boolean) Returns the HTML ARGB representation of an .Net color structure Declaration public static string SerializeHTMLColor(Color color, bool includeAlpha) Parameters Type Name Description Color color The color to encode System.Boolean includeAlpha A flag indicating if the color structures alpha value should be included Returns Type Description System.String The HTML representation of the color structure SerializeHTMLColorARGB(Color, Boolean) Returns the HTML ARGB representation of an .Net color structure Declaration public static string SerializeHTMLColorARGB(Color color, bool includeAlpha) Parameters Type Name Description Color color The color to encode System.Boolean includeAlpha A flag indicating if the color structures alpha value should be included Returns Type Description System.String The HTML representation of the color structure SerializeHTMLColorRGBA(Color, Boolean) Returns the HTML RGBA representation of an .Net color structure Declaration public static string SerializeHTMLColorRGBA(Color color, bool includeAlpha) Parameters Type Name Description Color color The color to encode System.Boolean includeAlpha A flag indicating if the color structures alpha value should be included Returns Type Description System.String The HTML representation of the color structure StreamAsArray(Stream) Reads all data from a stream, and returns it as a single array. Note that this is very inefficient if the stream is several megabytes long. Declaration public static byte[] StreamAsArray(Stream s) Parameters Type Name Description Stream s The stream to exhaust Returns Type Description System.Byte [] The streams content as an array StripVersionFromProviderName(String) Strips the version component from provider name Declaration public static string StripVersionFromProviderName(string providername) Parameters Type Name Description System.String providername The provider name. Returns Type Description System.String ThrowAsWebException(Exception) This method tries to extract the html content of a WebException. If succesfull, it will return an exception with an error message corresponding to the html text. If not, it will return the original exception object. Declaration public static Exception ThrowAsWebException(Exception ex) Parameters Type Name Description Exception ex The exception object to extract from Returns Type Description Exception A potentially better exeception ToConnectionString(NameValueCollection) Converts the specified name value collection into a connection string Declaration public static string ToConnectionString(NameValueCollection values) Parameters Type Name Description NameValueCollection values Returns Type Description System.String TransformEnvelope(IEnvelope, String, String) Transforms the envelope. Declaration public static IEnvelope TransformEnvelope(IEnvelope env, string srcCsWkt, string dstCsWkt) Parameters Type Name Description IEnvelope env The env. System.String srcCsWkt The source coordinate system WKT. System.String dstCsWkt The destination coordinate system WKT. Returns Type Description IEnvelope XmlDeepCopy(Object) Builds a copy of the object by serializing it to xml, and then deserializing it. Please note that this function is has a large overhead. Declaration public static object XmlDeepCopy(object source) Parameters Type Name Description System.Object source The object to copy Returns Type Description System.Object A copy of the object"
  },
  "api/OSGeo.MapGuide.MaestroAPI.WeakEventHandler.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.WeakEventHandler.html",
    "title": "Class WeakEventHandler | MapGuide Maestro",
    "keywords": "Class WeakEventHandler A weak event handler factory Inheritance System.Object WeakEventHandler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public static class WeakEventHandler Methods Match(Delegate, Delegate) Returns true if the given weak and strong event handlers match Declaration public static Boolean Match(Delegate weakEventHandler, Delegate strongEventHandler) Parameters Type Name Description Delegate weakEventHandler Delegate strongEventHandler Returns Type Description Boolean Wrap(EventHandler, Action<EventHandler>) Wraps the given event handler as a weak event Declaration public static EventHandler Wrap(EventHandler eh, Action<EventHandler> cleanup) Parameters Type Name Description EventHandler eh Action < EventHandler > cleanup Returns Type Description EventHandler Wrap<TEventHandler>(TEventHandler, Action<TEventHandler>) Wraps the given event handler as a weak event Declaration public static TEventHandler Wrap<TEventHandler>(TEventHandler eh, Action<TEventHandler> cleanup)where TEventHandler : class Parameters Type Name Description TEventHandler eh Action <TEventHandler> cleanup Returns Type Description TEventHandler Type Parameters Name Description TEventHandler Wrap<TEventArgs>(EventHandler<TEventArgs>, Action<EventHandler<TEventArgs>>) Wraps the given event handler as a weak event Declaration public static EventHandler<TEventArgs> Wrap<TEventArgs>(EventHandler<TEventArgs> eh, Action<EventHandler<TEventArgs>> cleanup)where TEventArgs : EventArgs Parameters Type Name Description EventHandler <TEventArgs> eh Action < EventHandler <TEventArgs>> cleanup Returns Type Description EventHandler <TEventArgs> Type Parameters Name Description TEventArgs"
  },
  "api/OSGeo.MapGuide.MaestroAPI.XmlValidator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.XmlValidator.html",
    "title": "Class XmlValidator | MapGuide Maestro",
    "keywords": "Class XmlValidator Class that makes XSD validation Inheritance System.Object XmlValidator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public class XmlValidator Properties ValidationErrors Gets the validation errors. Declaration public ReadOnlyCollection<string> ValidationErrors { get; } Property Value Type Description ReadOnlyCollection < System.String > ValidationWarnings Gets the validation warnings. Declaration public ReadOnlyCollection<string> ValidationWarnings { get; } Property Value Type Description ReadOnlyCollection < System.String > Methods Validate(Stream, XmlSchema[]) Validates the specified XML. Declaration public void Validate(Stream xml, XmlSchema[] xsds) Parameters Type Name Description Stream xml The XML. XmlSchema [] xsds The array of System.Xml.Schema.XmlSchema objects to validate against. ValidateResourceXmlContent(String, String, out String[], out String[]) Validates the content of the resource XML. Declaration public static void ValidateResourceXmlContent(string xmlContent, string xsdPath, out string[] errors, out string[] warnings) Parameters Type Name Description System.String xmlContent Content of the XML. System.String xsdPath The XSD path. System.String [] errors The errors. System.String [] warnings The warnings."
  },
  "api/OSGeo.MapGuide.MaestroAPI.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI Classes ArgumentParser A helper class to parse command-line arguments CommandLineArguments A set of common command-line arguments ConnectionProviderEntry Represents an entry in the Connection Provider Registry ConnectionProviderRegistry The entry point of the Maestro API. The ConnectionProviderRegistry is used to create IServerConnection objects. IServerConnection is the root object of the Maestro API, and is where most of the functionality provided by this API is accessed from. The ConnectionProviderRegistry supports dynamic creation of IServerConnection objects given a provider name and a connection string, which specifies the initialization parameters of the connection. The connection providers are defined in an XML file called ConnectionProviders.xml which contains all the registered providers. Each provider has the following properties: The name of the provider The assembly containing the IServerConnection implementation The name of this IServerConnection implementation The IServerConnection implementation is expected to have a non-public constructor which takes a single parameter, a containing the initialization parameters parsed from the given connection string. CsHelper Provides application-level overrides for coordinate system related functionality. ExplodeThemeOptions Defines parameter for exploding a theme into filtered layers ExtensionMethods Extension methods HttpCoordinateSystemDefinition Interface to MapGuide coordinate system functions. Only works with server > 1.2, since the coordinate mapping is not avalible through Http on older versions HttpServerConnectionParams HTTP connection provider parameters HttpServerConnectionProperties HTTP connection provider properties LengthyOperationCallbackArgs Represents progress of a lengthy operation LengthyOperationCallbackArgs.LengthyOperationItem LengthyOperationProgressArgs Represents progress of a lengthy operation MaestroApiProviderAttribute Marks this assembly as being an implementation of the Maestro API MgServerConnectionBase Base class of all MapGuide connection classes. Covers functionality encompassed by the MapGuide Geospatial Platform API and the MapGuide-specific services (Site, Rendering, Mapping, Tile, Drawing) Platform Platform check helper class. Use this class to determine if this assembly is executing under the Mono Runtime environment. PlatformConnectionBase Base class of all connection classes. Covers functionality encompassed by the MapGuide Geospatial Platform API (ie. Feature Service and Resource Service) RequestEventArgs event object containing dispatched request infromation ResourceEventArgs Contains the resource id SiteResourceType Helper class to filter ResourceTypes into the ones that are editable SiteVersions Helper class containing known MapGuide Site Versions StringConstants Commonly used string constants for MapGuide Strings A strongly-typed resource class, for looking up localized strings, etc. Utility Various helper functions WeakEventHandler A weak event handler factory XmlValidator Class that makes XSD validation Structs ConnectionCacheStats Describes stats of cached objects in a connection Interfaces IConnectionCapabilities Defines the capabilities of this connection. This is used to safely access supported features of the connection. IMpuCalculator An interface for calculating meters-per-unit values IServerConnection MapGuide Platform connection interface. This is the root object of the Maestro API which typically represents a session with a MapGuide Server. Connections are created through the ConnectionProviderRegistry class. All implementations supports the base services of the MapGuide Geospatial API: Resource Service ( IResourceService ) for manipulation of repositories and resources Feature Service ( IFeatureService ) an abstraction layer for querying feature data in technology-independent manner. Coordinate System Catalog ( ICoordinateSystemCatalog for querying coordinate systems and for translating WKT, cs code and EPSG codes to other forms Additional services are supported at various levels depending on the implementation. The Capabilities property provides information about what features, services and resource types are not supported. Enums KnownSiteVersions This file contains the current known versions of the MapGuide server. LengthyOperationCallbackArgs.LengthyOperationItem.OperationStatus Defines the possible operation status values QueryMapFeaturesLayerAttributes Flags that can be used for the QueryMapFeatures operation UnmanagedDataTypes Defines the types of unmananged data Delegates ConnectionFactoryMethod A method that creates IServerConnection instances from the given parameters LengthyOperationCallBack A delegate used to represent relay progress for lengthy operations LengthyOperationProgressCallBack A delegate used to represent relay progress for lengthy operations RequestEventHandler ResourceEventHandler Represents a method involving a resource id Utility.StreamCopyProgressDelegate A delegate used to update a progress bar while copying a stream."
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.ContainerFactoryMethod.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.ContainerFactoryMethod.html",
    "title": "Delegate ContainerFactoryMethod | MapGuide Maestro",
    "keywords": "Delegate ContainerFactoryMethod Factory method signature for creating fusion widget containers Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public delegate IWidgetContainer ContainerFactoryMethod(IApplicationDefinitionContainerInfo container); Parameters Type Name Description IApplicationDefinitionContainerInfo container Returns Type Description IWidgetContainer"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.ExtensionMethods.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.ExtensionMethods.html",
    "title": "Class ExtensionMethods | MapGuide Maestro",
    "keywords": "Class ExtensionMethods Extension method class Inheritance System.Object ExtensionMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public static class ExtensionMethods Methods FindContainer(IApplicationDefinitionContainerInfoSet, String) Gets a specific container info by type Declaration public static IApplicationDefinitionContainerInfo FindContainer(this IApplicationDefinitionContainerInfoSet set, string name) Parameters Type Name Description IApplicationDefinitionContainerInfoSet set System.String name Returns Type Description IApplicationDefinitionContainerInfo FindElementByName(XmlElement[], String) Returns a whose name matches the specified name Declaration public static XmlElement FindElementByName(this XmlElement[] elements, string name) Parameters Type Name Description XmlElement [] elements System.String name Returns Type Description XmlElement FindTemplate(IApplicationDefinitionTemplateInfoSet, String) Gets information for the named template Declaration public static IApplicationDefinitionTemplateInfo FindTemplate(this IApplicationDefinitionTemplateInfoSet set, string name) Parameters Type Name Description IApplicationDefinitionTemplateInfoSet set System.String name Returns Type Description IApplicationDefinitionTemplateInfo FindWidget(IApplicationDefinition, String) Gets the widget of the specified name Declaration public static IWidget FindWidget(this IApplicationDefinition appDef, string name) Parameters Type Name Description IApplicationDefinition appDef System.String name Returns Type Description IWidget FindWidget(IApplicationDefinitionWidgetInfoSet, String) Gets a specific Widget Info by name Declaration public static IWidgetInfo FindWidget(this IApplicationDefinitionWidgetInfoSet set, string name) Parameters Type Name Description IApplicationDefinitionWidgetInfoSet set System.String name Returns Type Description IWidgetInfo GetAllValues(IExtensibleElement) Gets all the properties in this extensible element Declaration public static NameValueCollection GetAllValues(this IExtensibleElement ext) Parameters Type Name Description IExtensibleElement ext Returns Type Description NameValueCollection GetFirstWidgetSet(IApplicationDefinition) Gets the first widget set of this application definition. Declaration public static IWidgetSet GetFirstWidgetSet(this IApplicationDefinition appDef) Parameters Type Name Description IApplicationDefinition appDef Returns Type Description IWidgetSet GetGroupById(IMapSet, String) Gets the specified map group by its id Declaration public static IMapGroup GetGroupById(this IMapSet set, string id) Parameters Type Name Description IMapSet set System.String id Returns Type Description IMapGroup GetMapDefinition(IMap) Set the map definition id Declaration public static string GetMapDefinition(this IMap map) Parameters Type Name Description IMap map Returns Type Description System.String GetNames(IExtensibleElement) Gets the names of all properties of this extensible element Declaration public static string[] GetNames(this IExtensibleElement ext) Parameters Type Name Description IExtensibleElement ext Returns Type Description System.String [] GetTemplateName(IApplicationDefinition) Gets the name of the fusion template Declaration public static string GetTemplateName(this IApplicationDefinition appDef) Parameters Type Name Description IApplicationDefinition appDef Returns Type Description System.String GetValue(IExtensibleElement, String) Gets the value of a property in this extensible element. If none exists, an empty string is returned Declaration public static string GetValue(this IExtensibleElement ext, string name) Parameters Type Name Description IExtensibleElement ext System.String name Returns Type Description System.String RemoveWidget(IApplicationDefinition, String, Boolean) Removes the specified widget from this Declaration public static void RemoveWidget(this IApplicationDefinition appDef, string widgetName, bool deleteReferences) Parameters Type Name Description IApplicationDefinition appDef The app definition. System.String widgetName Name of the widget to remove. System.Boolean deleteReferences if set to true [deletes any references to the widget to be deleted]. SetAllValues(IExtensibleElement, NameValueCollection) Replace the values of all properties in this extensible element with the values provided Declaration public static void SetAllValues(this IExtensibleElement ext, NameValueCollection values) Parameters Type Name Description IExtensibleElement ext NameValueCollection values SetMapDefinition(IMap, String) Gets the map definition id Declaration public static void SetMapDefinition(this IMap map, string mapDefId) Parameters Type Name Description IMap map System.String mapDefId SetValue(IExtensibleElement, String, String) Sets the value of a property in this extensible element. Declaration public static void SetValue(this IExtensibleElement ext, string name, string value) Parameters Type Name Description IExtensibleElement ext System.String name System.String value WidgetNameExists(IApplicationDefinition, String) Gets whether a widget with the specified name already exists Declaration public static bool WidgetNameExists(this IApplicationDefinition appDef, string name) Parameters Type Name Description IApplicationDefinition appDef System.String name Returns Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.FusionTemplateNames.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.FusionTemplateNames.html",
    "title": "Class FusionTemplateNames | MapGuide Maestro",
    "keywords": "Class FusionTemplateNames Defines the stock fusion template names that come with a standard MapGuide installation Inheritance System.Object FusionTemplateNames Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public static class FusionTemplateNames Fields Aqua The Aqua template Declaration public const string Aqua = \"Aqua\" Field Value Type Description System.String LimeGold The LimeGold template Declaration public const string LimeGold = \"LimeGold\" Field Value Type Description System.String Maroon The Maroon template Declaration public const string Maroon = \"Maroon\" Field Value Type Description System.String Preview The preview template. Used for previewing other resources Declaration public const string Preview = \"Preview\" Field Value Type Description System.String Slate The Slate template Declaration public const string Slate = \"Slate\" Field Value Type Description System.String TurquoiseYellow The TurquoiseYellow template Declaration public const string TurquoiseYellow = \"TurquoiseYellow\" Field Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IAllowedValue.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IAllowedValue.html",
    "title": "Interface IAllowedValue | MapGuide Maestro",
    "keywords": "Interface IAllowedValue Describes an allowed widget parameter value Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IAllowedValue Properties Label Gets the label of this value Declaration string Label { get; } Property Value Type Description System.String Name Gets the name of this value Declaration string Name { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourceDocumentHeaderTypeGeneral.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourceDocumentHeaderTypeGeneral.html",
    "title": "Class ResourceDocumentHeaderTypeGeneral | MapGuide Maestro",
    "keywords": "Class ResourceDocumentHeaderTypeGeneral Inheritance System.Object ResourceDocumentHeaderTypeGeneral Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourceDocumentHeaderTypeGeneral : ComponentModel.INotifyPropertyChanged Properties IconName Declaration public string IconName { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this ResourceDocumentHeaderTypeGeneral object Declaration public virtual ResourceDocumentHeaderTypeGeneral Clone() Returns Type Description ResourceDocumentHeaderTypeGeneral Deserialize(String) Declaration public static ResourceDocumentHeaderTypeGeneral Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourceDocumentHeaderTypeGeneral Deserialize(String, out ResourceDocumentHeaderTypeGeneral) Declaration public static bool Deserialize(string xml, out ResourceDocumentHeaderTypeGeneral obj) Parameters Type Name Description System.String xml ResourceDocumentHeaderTypeGeneral obj Returns Type Description System.Boolean Deserialize(String, out ResourceDocumentHeaderTypeGeneral, out Exception) Deserializes workflow markup into an ResourceDocumentHeaderTypeGeneral object Declaration public static bool Deserialize(string xml, out ResourceDocumentHeaderTypeGeneral obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourceDocumentHeaderTypeGeneral obj Output ResourceDocumentHeaderTypeGeneral object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourceDocumentHeaderTypeGeneral LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourceDocumentHeaderTypeGeneral LoadFromFile(String, out ResourceDocumentHeaderTypeGeneral) Declaration public static bool LoadFromFile(string fileName, out ResourceDocumentHeaderTypeGeneral obj) Parameters Type Name Description System.String fileName ResourceDocumentHeaderTypeGeneral obj Returns Type Description System.Boolean LoadFromFile(String, out ResourceDocumentHeaderTypeGeneral, out Exception) Deserializes xml markup from file into an ResourceDocumentHeaderTypeGeneral object Declaration public static bool LoadFromFile(string fileName, out ResourceDocumentHeaderTypeGeneral obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourceDocumentHeaderTypeGeneral obj Output ResourceDocumentHeaderTypeGeneral object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourceDocumentHeaderTypeGeneral object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourceDocumentHeaderTypeGeneral object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourceDocumentHeaderTypeMetadata.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourceDocumentHeaderTypeMetadata.html",
    "title": "Class ResourceDocumentHeaderTypeMetadata | MapGuide Maestro",
    "keywords": "Class ResourceDocumentHeaderTypeMetadata Inheritance System.Object ResourceDocumentHeaderTypeMetadata Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourceDocumentHeaderTypeMetadata : ComponentModel.INotifyPropertyChanged Properties Simple Declaration public ResourceDocumentHeaderTypeMetadataSimple Simple { get; set; } Property Value Type Description ResourceDocumentHeaderTypeMetadataSimple Methods ApplyProperties(NameValueCollection) Applies the specified set of properties to this instance Declaration public void ApplyProperties(NameValueCollection values) Parameters Type Name Description NameValueCollection values Clone() Create a clone of this ResourceDocumentHeaderTypeMetadata object Declaration public virtual ResourceDocumentHeaderTypeMetadata Clone() Returns Type Description ResourceDocumentHeaderTypeMetadata Deserialize(String) Declaration public static ResourceDocumentHeaderTypeMetadata Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourceDocumentHeaderTypeMetadata Deserialize(String, out ResourceDocumentHeaderTypeMetadata) Declaration public static bool Deserialize(string xml, out ResourceDocumentHeaderTypeMetadata obj) Parameters Type Name Description System.String xml ResourceDocumentHeaderTypeMetadata obj Returns Type Description System.Boolean Deserialize(String, out ResourceDocumentHeaderTypeMetadata, out Exception) Deserializes workflow markup into an ResourceDocumentHeaderTypeMetadata object Declaration public static bool Deserialize(string xml, out ResourceDocumentHeaderTypeMetadata obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourceDocumentHeaderTypeMetadata obj Output ResourceDocumentHeaderTypeMetadata object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false GetProperties() Returns a of all the metadata properties Declaration public NameValueCollection GetProperties() Returns Type Description NameValueCollection LoadFromFile(String) Declaration public static ResourceDocumentHeaderTypeMetadata LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourceDocumentHeaderTypeMetadata LoadFromFile(String, out ResourceDocumentHeaderTypeMetadata) Declaration public static bool LoadFromFile(string fileName, out ResourceDocumentHeaderTypeMetadata obj) Parameters Type Name Description System.String fileName ResourceDocumentHeaderTypeMetadata obj Returns Type Description System.Boolean LoadFromFile(String, out ResourceDocumentHeaderTypeMetadata, out Exception) Deserializes xml markup from file into an ResourceDocumentHeaderTypeMetadata object Declaration public static bool LoadFromFile(string fileName, out ResourceDocumentHeaderTypeMetadata obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourceDocumentHeaderTypeMetadata obj Output ResourceDocumentHeaderTypeMetadata object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourceDocumentHeaderTypeMetadata object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourceDocumentHeaderTypeMetadata object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value SetProperty(String, String) Sets a metadata property. Declaration public void SetProperty(string name, string value) Parameters Type Name Description System.String name System.String value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourceDocumentHeaderTypeMetadataSimple.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourceDocumentHeaderTypeMetadataSimple.html",
    "title": "Class ResourceDocumentHeaderTypeMetadataSimple | MapGuide Maestro",
    "keywords": "Class ResourceDocumentHeaderTypeMetadataSimple Inheritance System.Object ResourceDocumentHeaderTypeMetadataSimple Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourceDocumentHeaderTypeMetadataSimple : ComponentModel.INotifyPropertyChanged Properties Property Declaration public BindingList<ResourceDocumentHeaderTypeMetadataSimpleProperty> Property { get; set; } Property Value Type Description BindingList < ResourceDocumentHeaderTypeMetadataSimpleProperty > Methods Clone() Create a clone of this ResourceDocumentHeaderTypeMetadataSimple object Declaration public virtual ResourceDocumentHeaderTypeMetadataSimple Clone() Returns Type Description ResourceDocumentHeaderTypeMetadataSimple Deserialize(String) Declaration public static ResourceDocumentHeaderTypeMetadataSimple Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourceDocumentHeaderTypeMetadataSimple Deserialize(String, out ResourceDocumentHeaderTypeMetadataSimple) Declaration public static bool Deserialize(string xml, out ResourceDocumentHeaderTypeMetadataSimple obj) Parameters Type Name Description System.String xml ResourceDocumentHeaderTypeMetadataSimple obj Returns Type Description System.Boolean Deserialize(String, out ResourceDocumentHeaderTypeMetadataSimple, out Exception) Deserializes workflow markup into an ResourceDocumentHeaderTypeMetadataSimple object Declaration public static bool Deserialize(string xml, out ResourceDocumentHeaderTypeMetadataSimple obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourceDocumentHeaderTypeMetadataSimple obj Output ResourceDocumentHeaderTypeMetadataSimple object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourceDocumentHeaderTypeMetadataSimple LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourceDocumentHeaderTypeMetadataSimple LoadFromFile(String, out ResourceDocumentHeaderTypeMetadataSimple) Declaration public static bool LoadFromFile(string fileName, out ResourceDocumentHeaderTypeMetadataSimple obj) Parameters Type Name Description System.String fileName ResourceDocumentHeaderTypeMetadataSimple obj Returns Type Description System.Boolean LoadFromFile(String, out ResourceDocumentHeaderTypeMetadataSimple, out Exception) Deserializes xml markup from file into an ResourceDocumentHeaderTypeMetadataSimple object Declaration public static bool LoadFromFile(string fileName, out ResourceDocumentHeaderTypeMetadataSimple obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourceDocumentHeaderTypeMetadataSimple obj Output ResourceDocumentHeaderTypeMetadataSimple object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourceDocumentHeaderTypeMetadataSimple object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourceDocumentHeaderTypeMetadataSimple object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourceDocumentHeaderTypeMetadataSimpleProperty.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourceDocumentHeaderTypeMetadataSimpleProperty.html",
    "title": "Class ResourceDocumentHeaderTypeMetadataSimpleProperty | MapGuide Maestro",
    "keywords": "Class ResourceDocumentHeaderTypeMetadataSimpleProperty Inheritance System.Object ResourceDocumentHeaderTypeMetadataSimpleProperty Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourceDocumentHeaderTypeMetadataSimpleProperty : ComponentModel.INotifyPropertyChanged Properties Name Declaration public string Name { get; set; } Property Value Type Description System.String Value Declaration public string Value { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this ResourceDocumentHeaderTypeMetadataSimpleProperty object Declaration public virtual ResourceDocumentHeaderTypeMetadataSimpleProperty Clone() Returns Type Description ResourceDocumentHeaderTypeMetadataSimpleProperty Deserialize(String) Declaration public static ResourceDocumentHeaderTypeMetadataSimpleProperty Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourceDocumentHeaderTypeMetadataSimpleProperty Deserialize(String, out ResourceDocumentHeaderTypeMetadataSimpleProperty) Declaration public static bool Deserialize(string xml, out ResourceDocumentHeaderTypeMetadataSimpleProperty obj) Parameters Type Name Description System.String xml ResourceDocumentHeaderTypeMetadataSimpleProperty obj Returns Type Description System.Boolean Deserialize(String, out ResourceDocumentHeaderTypeMetadataSimpleProperty, out Exception) Deserializes workflow markup into an ResourceDocumentHeaderTypeMetadataSimpleProperty object Declaration public static bool Deserialize(string xml, out ResourceDocumentHeaderTypeMetadataSimpleProperty obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourceDocumentHeaderTypeMetadataSimpleProperty obj Output ResourceDocumentHeaderTypeMetadataSimpleProperty object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourceDocumentHeaderTypeMetadataSimpleProperty LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourceDocumentHeaderTypeMetadataSimpleProperty LoadFromFile(String, out ResourceDocumentHeaderTypeMetadataSimpleProperty) Declaration public static bool LoadFromFile(string fileName, out ResourceDocumentHeaderTypeMetadataSimpleProperty obj) Parameters Type Name Description System.String fileName ResourceDocumentHeaderTypeMetadataSimpleProperty obj Returns Type Description System.Boolean LoadFromFile(String, out ResourceDocumentHeaderTypeMetadataSimpleProperty, out Exception) Deserializes xml markup from file into an ResourceDocumentHeaderTypeMetadataSimpleProperty object Declaration public static bool LoadFromFile(string fileName, out ResourceDocumentHeaderTypeMetadataSimpleProperty obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourceDocumentHeaderTypeMetadataSimpleProperty obj Output ResourceDocumentHeaderTypeMetadataSimpleProperty object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourceDocumentHeaderTypeMetadataSimpleProperty object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourceDocumentHeaderTypeMetadataSimpleProperty object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourceFolderHeaderType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourceFolderHeaderType.html",
    "title": "Class ResourceFolderHeaderType | MapGuide Maestro",
    "keywords": "Class ResourceFolderHeaderType Inheritance System.Object ResourceFolderHeaderType Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourceFolderHeaderType : ComponentModel.INotifyPropertyChanged Constructors ResourceFolderHeaderType() For internal use only. Made public to satisfy serialization requirements. Use OSGeo.MapGuide.ObjectModels.ResourceDocumentHeaderType.CreateDefault to create new instances Declaration public ResourceFolderHeaderType() Properties Security Declaration public ResourceSecurityType Security { get; set; } Property Value Type Description ResourceSecurityType ValidatingSchema Declaration public string ValidatingSchema { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this ResourceFolderHeaderType object Declaration public virtual ResourceFolderHeaderType Clone() Returns Type Description ResourceFolderHeaderType CreateDefault() Declaration public static ResourceFolderHeaderType CreateDefault() Returns Type Description ResourceFolderHeaderType Deserialize(String) Declaration public static ResourceFolderHeaderType Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourceFolderHeaderType Deserialize(String, out ResourceFolderHeaderType) Declaration public static bool Deserialize(string xml, out ResourceFolderHeaderType obj) Parameters Type Name Description System.String xml ResourceFolderHeaderType obj Returns Type Description System.Boolean Deserialize(String, out ResourceFolderHeaderType, out Exception) Deserializes workflow markup into an ResourceFolderHeaderType object Declaration public static bool Deserialize(string xml, out ResourceFolderHeaderType obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourceFolderHeaderType obj Output ResourceFolderHeaderType object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourceFolderHeaderType LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourceFolderHeaderType LoadFromFile(String, out ResourceFolderHeaderType) Declaration public static bool LoadFromFile(string fileName, out ResourceFolderHeaderType obj) Parameters Type Name Description System.String fileName ResourceFolderHeaderType obj Returns Type Description System.Boolean LoadFromFile(String, out ResourceFolderHeaderType, out Exception) Deserializes xml markup from file into an ResourceFolderHeaderType object Declaration public static bool LoadFromFile(string fileName, out ResourceFolderHeaderType obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourceFolderHeaderType obj Output ResourceFolderHeaderType object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourceFolderHeaderType object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourceFolderHeaderType object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourceList.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourceList.html",
    "title": "Class ResourceList | MapGuide Maestro",
    "keywords": "Class ResourceList Resource list Inheritance System.Object ResourceList Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourceList : ComponentModel.INotifyPropertyChanged Properties Children Declaration public IEnumerable<IRepositoryItem> Children { get; } Property Value Type Description IEnumerable < IRepositoryItem > Items Declaration public BindingList<object> Items { get; set; } Property Value Type Description BindingList < System.Object > Methods Clone() Create a clone of this ResourceList object Declaration public virtual ResourceList Clone() Returns Type Description ResourceList Deserialize(String) Declaration public static ResourceList Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourceList Deserialize(String, out ResourceList) Declaration public static bool Deserialize(string xml, out ResourceList obj) Parameters Type Name Description System.String xml ResourceList obj Returns Type Description System.Boolean Deserialize(String, out ResourceList, out Exception) Deserializes workflow markup into an ResourceList object Declaration public static bool Deserialize(string xml, out ResourceList obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourceList obj Output ResourceList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourceList LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourceList LoadFromFile(String, out ResourceList) Declaration public static bool LoadFromFile(string fileName, out ResourceList obj) Parameters Type Name Description System.String fileName ResourceList obj Returns Type Description System.Boolean LoadFromFile(String, out ResourceList, out Exception) Deserializes xml markup from file into an ResourceList object Declaration public static bool LoadFromFile(string fileName, out ResourceList obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourceList obj Output ResourceList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourceList object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourceList object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourceListResourceDocument.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourceListResourceDocument.html",
    "title": "Class ResourceListResourceDocument | MapGuide Maestro",
    "keywords": "Class ResourceListResourceDocument Inheritance System.Object ResourceListResourceDocument Implements IRepositoryItem Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourceListResourceDocument : ComponentModel.INotifyPropertyChanged, IRepositoryItem Properties CreatedDate Declaration public DateTime CreatedDate { get; set; } Property Value Type Description System.DateTime Depth Declaration public string Depth { get; set; } Property Value Type Description System.String HasChildren Declaration public bool HasChildren { get; } Property Value Type Description System.Boolean IsFolder Declaration public bool IsFolder { get; } Property Value Type Description System.Boolean ModifiedDate Declaration public DateTime ModifiedDate { get; set; } Property Value Type Description System.DateTime Name Declaration public string Name { get; } Property Value Type Description System.String Owner Declaration public string Owner { get; set; } Property Value Type Description System.String ResourceDocumentHeader Declaration public ResourceDocumentHeaderType ResourceDocumentHeader { get; set; } Property Value Type Description ResourceDocumentHeaderType ResourceId Declaration public string ResourceId { get; set; } Property Value Type Description System.String ResourceType Declaration public string ResourceType { get; } Property Value Type Description System.String Methods Clone() Create a clone of this ResourceListResourceDocument object Declaration public virtual ResourceListResourceDocument Clone() Returns Type Description ResourceListResourceDocument Deserialize(String) Declaration public static ResourceListResourceDocument Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourceListResourceDocument Deserialize(String, out ResourceListResourceDocument) Declaration public static bool Deserialize(string xml, out ResourceListResourceDocument obj) Parameters Type Name Description System.String xml ResourceListResourceDocument obj Returns Type Description System.Boolean Deserialize(String, out ResourceListResourceDocument, out Exception) Deserializes workflow markup into an ResourceListResourceDocument object Declaration public static bool Deserialize(string xml, out ResourceListResourceDocument obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourceListResourceDocument obj Output ResourceListResourceDocument object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourceListResourceDocument LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourceListResourceDocument LoadFromFile(String, out ResourceListResourceDocument) Declaration public static bool LoadFromFile(string fileName, out ResourceListResourceDocument obj) Parameters Type Name Description System.String fileName ResourceListResourceDocument obj Returns Type Description System.Boolean LoadFromFile(String, out ResourceListResourceDocument, out Exception) Deserializes xml markup from file into an ResourceListResourceDocument object Declaration public static bool LoadFromFile(string fileName, out ResourceListResourceDocument obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourceListResourceDocument obj Output ResourceListResourceDocument object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourceListResourceDocument object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourceListResourceDocument object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Implements IRepositoryItem"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourceListResourceFolder.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourceListResourceFolder.html",
    "title": "Class ResourceListResourceFolder | MapGuide Maestro",
    "keywords": "Class ResourceListResourceFolder Inheritance System.Object ResourceListResourceFolder Implements IRepositoryItem Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourceListResourceFolder : ComponentModel.INotifyPropertyChanged, IRepositoryItem Properties CreatedDate Declaration public DateTime CreatedDate { get; set; } Property Value Type Description System.DateTime Depth Declaration public string Depth { get; set; } Property Value Type Description System.String HasChildren Declaration public bool HasChildren { get; } Property Value Type Description System.Boolean IsFolder Declaration public bool IsFolder { get; } Property Value Type Description System.Boolean ModifiedDate Declaration public DateTime ModifiedDate { get; set; } Property Value Type Description System.DateTime Name Declaration public string Name { get; } Property Value Type Description System.String NumberOfDocuments Declaration public string NumberOfDocuments { get; set; } Property Value Type Description System.String NumberOfFolders Declaration public string NumberOfFolders { get; set; } Property Value Type Description System.String Owner Declaration public string Owner { get; set; } Property Value Type Description System.String ResourceFolderHeader Declaration public ResourceFolderHeaderType ResourceFolderHeader { get; set; } Property Value Type Description ResourceFolderHeaderType ResourceId Declaration public string ResourceId { get; set; } Property Value Type Description System.String ResourceType Declaration public string ResourceType { get; } Property Value Type Description System.String Methods Clone() Create a clone of this ResourceListResourceFolder object Declaration public virtual ResourceListResourceFolder Clone() Returns Type Description ResourceListResourceFolder Deserialize(String) Declaration public static ResourceListResourceFolder Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourceListResourceFolder Deserialize(String, out ResourceListResourceFolder) Declaration public static bool Deserialize(string xml, out ResourceListResourceFolder obj) Parameters Type Name Description System.String xml ResourceListResourceFolder obj Returns Type Description System.Boolean Deserialize(String, out ResourceListResourceFolder, out Exception) Deserializes workflow markup into an ResourceListResourceFolder object Declaration public static bool Deserialize(string xml, out ResourceListResourceFolder obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourceListResourceFolder obj Output ResourceListResourceFolder object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourceListResourceFolder LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourceListResourceFolder LoadFromFile(String, out ResourceListResourceFolder) Declaration public static bool LoadFromFile(string fileName, out ResourceListResourceFolder obj) Parameters Type Name Description System.String fileName ResourceListResourceFolder obj Returns Type Description System.Boolean LoadFromFile(String, out ResourceListResourceFolder, out Exception) Deserializes xml markup from file into an ResourceListResourceFolder object Declaration public static bool LoadFromFile(string fileName, out ResourceListResourceFolder obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourceListResourceFolder obj Output ResourceListResourceFolder object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourceListResourceFolder object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourceListResourceFolder object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Implements IRepositoryItem"
  },
  "api/OSGeo.MapGuide.ObjectModels.FeatureSource.ExtensionMethods.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.FeatureSource.ExtensionMethods.html",
    "title": "Class ExtensionMethods | MapGuide Maestro",
    "keywords": "Class ExtensionMethods Extension methods Inheritance System.Object ExtensionMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.FeatureSource Assembly : cs.temp.dll.dll Syntax public static class ExtensionMethods Methods GetConfigurationContent(IFeatureSource, IServerConnection) Gets the configuration document content Declaration public static string GetConfigurationContent(this IFeatureSource fs, IServerConnection conn) Parameters Type Name Description IFeatureSource fs The Feature Source IServerConnection conn The Server Connection Returns Type Description System.String The configuration document XML content GetIdentityProperties(IFeatureSource, IServerConnection, String) Convenience methods to get the identity properties of a given feature class (name) Declaration public static string[] GetIdentityProperties(this IFeatureSource fs, IServerConnection conn, string className) Parameters Type Name Description IFeatureSource fs The feature source IServerConnection conn The server connection System.String className Name of the class. Returns Type Description System.String [] The array of identity properties SetConfigurationContent(IFeatureSource, IServerConnection, String) Sets the configuration document content Declaration public static void SetConfigurationContent(this IFeatureSource fs, IServerConnection conn, string xmlContent) Parameters Type Name Description IFeatureSource fs The feature source IServerConnection conn The server connection System.String xmlContent The confiugration document XML content"
  },
  "api/OSGeo.MapGuide.ObjectModels.FeatureSource.FeatureSourceCredentialExtensions.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.FeatureSource.FeatureSourceCredentialExtensions.html",
    "title": "Class FeatureSourceCredentialExtensions | MapGuide Maestro",
    "keywords": "Class FeatureSourceCredentialExtensions Extension methods for feature sources Inheritance System.Object FeatureSourceCredentialExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.FeatureSource Assembly : cs.temp.dll.dll Syntax public static class FeatureSourceCredentialExtensions Methods GetEncryptedUsername(IFeatureSource, IServerConnection) Gets the encrypted username referenced by the %MG_USERNAME% placeholder token in the Feature Source content Declaration public static string GetEncryptedUsername(this IFeatureSource fs, IServerConnection conn) Parameters Type Name Description IFeatureSource fs IServerConnection conn Returns Type Description System.String SetEncryptedCredentials(IFeatureSource, IServerConnection, String, String) Sets the encrypted credentials for this Feature Source, the credentials are referenced with the %MG_USERNAME% and %MG_PASSWORD% placeholder tokens in the Feature Source content. Declaration public static void SetEncryptedCredentials(this IFeatureSource fs, IServerConnection conn, string username, string password) Parameters Type Name Description IFeatureSource fs IServerConnection conn System.String username System.String password"
  },
  "api/OSGeo.MapGuide.ObjectModels.FeatureSource.FeatureSourceExtensions.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.FeatureSource.FeatureSourceExtensions.html",
    "title": "Class FeatureSourceExtensions | MapGuide Maestro",
    "keywords": "Class FeatureSourceExtensions Extension method class Inheritance System.Object FeatureSourceExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.FeatureSource Assembly : cs.temp.dll.dll Syntax public static class FeatureSourceExtensions Methods AddRelateProperty(IAttributeRelation, String, String) Adds the specified property pair to this join Declaration public static void AddRelateProperty(this IAttributeRelation rel, string primary, string secondary) Parameters Type Name Description IAttributeRelation rel System.String primary System.String secondary AddSpatialContextOverride(IFeatureSource, String, String) Adds a spatial context override Declaration public static void AddSpatialContextOverride(this IFeatureSource fs, string name, string coordSys) Parameters Type Name Description IFeatureSource fs System.String name System.String coordSys ApplyConnectionProperties(IFeatureSource, NameValueCollection) Sets the connection properties of the feature source Declaration public static void ApplyConnectionProperties(this IFeatureSource fs, NameValueCollection values) Parameters Type Name Description IFeatureSource fs NameValueCollection values GetConnectionProperties(IFeatureSource) Gets a collection of connection properties Declaration public static NameValueCollection GetConnectionProperties(this IFeatureSource fs) Parameters Type Name Description IFeatureSource fs Returns Type Description NameValueCollection"
  },
  "api/OSGeo.MapGuide.ObjectModels.FeatureSource.IAttributeRelation.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.FeatureSource.IAttributeRelation.html",
    "title": "Interface IAttributeRelation | MapGuide Maestro",
    "keywords": "Interface IAttributeRelation Represents an attribute join Namespace : OSGeo.MapGuide.ObjectModels.FeatureSource Assembly : cs.temp.dll.dll Syntax public interface IAttributeRelation : INotifyPropertyChanged Properties AttributeClass Gets or sets the name of the feature class to extend Declaration string AttributeClass { get; set; } Property Value Type Description System.String AttributeNameDelimiter Gets or sets the prefix that prevents a naming collision on both sides of the join Declaration string AttributeNameDelimiter { get; set; } Property Value Type Description System.String ForceOneToOne Gets or sets whether to force 1:1 cardinality Declaration bool ForceOneToOne { get; set; } Property Value Type Description System.Boolean Name Gets or sets the name of the join Declaration string Name { get; set; } Property Value Type Description System.String RelateProperty Gets the property pairs involved in this join Declaration IEnumerable<IRelateProperty> RelateProperty { get; } Property Value Type Description IEnumerable < IRelateProperty > The property pairs. RelatePropertyCount Gets the number of properties being joined on Declaration int RelatePropertyCount { get; } Property Value Type Description System.Int32 RelateType Gets the type of join Declaration RelateTypeEnum RelateType { get; set; } Property Value Type Description RelateTypeEnum ResourceId Gets or sets the feature source id containing the feature class to extend Declaration string ResourceId { get; set; } Property Value Type Description System.String Methods AddRelateProperty(IRelateProperty) Adds the relate property. Declaration void AddRelateProperty(IRelateProperty prop) Parameters Type Name Description IRelateProperty prop The prop. CreatePropertyJoin(String, String) Creates the property join. Declaration IRelateProperty CreatePropertyJoin(string primaryProperty, string secondaryProperty) Parameters Type Name Description System.String primaryProperty The primary property. System.String secondaryProperty The secondary property. Returns Type Description IRelateProperty RemoveAllRelateProperties() Removes all relate properties. Declaration void RemoveAllRelateProperties() RemoveRelateProperty(IRelateProperty) Removes the relate property. Declaration void RemoveRelateProperty(IRelateProperty prop) Parameters Type Name Description IRelateProperty prop The prop."
  },
  "api/OSGeo.MapGuide.ObjectModels.FeatureSource.ICalculatedProperty.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.FeatureSource.ICalculatedProperty.html",
    "title": "Interface ICalculatedProperty | MapGuide Maestro",
    "keywords": "Interface ICalculatedProperty Represents a FDO calculated property Namespace : OSGeo.MapGuide.ObjectModels.FeatureSource Assembly : cs.temp.dll.dll Syntax public interface ICalculatedProperty : INotifyPropertyChanged Properties Expression Gets or sets the FDO expression. Declaration string Expression { get; set; } Property Value Type Description System.String The FDO expression. Name Gets or sets the name. Declaration string Name { get; set; } Property Value Type Description System.String The name."
  },
  "api/OSGeo.MapGuide.ObjectModels.FeatureSource.IFeatureSource.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.FeatureSource.IFeatureSource.html",
    "title": "Interface IFeatureSource | MapGuide Maestro",
    "keywords": "Interface IFeatureSource Represents an FDO feature source Inherited Members IResource.ValidatingSchema IResource.ResourceID IResource.ResourceType IResource.Serialize() IResource.IsStronglyTyped IVersionedEntity.ResourceVersion Namespace : OSGeo.MapGuide.ObjectModels.FeatureSource Assembly : cs.temp.dll.dll Syntax public interface IFeatureSource : IResource, IVersionedEntity, ICloneable, INotifyPropertyChanged Properties ConfigurationDocument Gets or sets the name of the configuration document. Declaration string ConfigurationDocument { get; set; } Property Value Type Description System.String The name of the configuration document. ConnectionPropertyNames Gets an array of names of the currently specified connection properties Declaration string[] ConnectionPropertyNames { get; } Property Value Type Description System.String [] ConnectionString Gets the connection string. Declaration string ConnectionString { get; } Property Value Type Description System.String The connection string. Extension Gets the extensions for this feature source. Declaration IEnumerable<IFeatureSourceExtension> Extension { get; } Property Value Type Description IEnumerable < IFeatureSourceExtension > The extensions. Provider Gets or sets the FDO provider. Declaration string Provider { get; set; } Property Value Type Description System.String The FDO provider. SupplementalSpatialContextInfo Gets the supplemental spatial context info (coordinate system overrides). Declaration IEnumerable<ISpatialContextInfo> SupplementalSpatialContextInfo { get; } Property Value Type Description IEnumerable < ISpatialContextInfo > The supplemental spatial context info. UsesAliasedDataFiles Gets a value indicating whether [uses aliased data files]. Declaration bool UsesAliasedDataFiles { get; } Property Value Type Description System.Boolean true if [uses aliased data files]; otherwise, false . UsesEmbeddedDataFiles Gets a value indicating whether [uses embedded data files]. Declaration bool UsesEmbeddedDataFiles { get; } Property Value Type Description System.Boolean true if [uses embedded data files]; otherwise, false . Methods AddExtension(IFeatureSourceExtension) Adds the extension. Declaration void AddExtension(IFeatureSourceExtension ext) Parameters Type Name Description IFeatureSourceExtension ext The ext. AddSpatialContextOverride(ISpatialContextInfo) Adds the spatial context override. Declaration void AddSpatialContextOverride(ISpatialContextInfo sc) Parameters Type Name Description ISpatialContextInfo sc The sc. ClearConnectionProperties() Removes all specified connection properties Declaration void ClearConnectionProperties() GetAliasedFileName() Gets the name of the aliased file. Can only be called if UsesAliasedDataFiles returns true. An empty string is returned if it is a directory (ie. no file name was found) Declaration string GetAliasedFileName() Returns Type Description System.String GetAliasName() Gets the name of the alias. Can only be called if UsesAliasedDataFiles returns true Declaration string GetAliasName() Returns Type Description System.String GetConnectionProperty(String) Gets the connection property. Declaration string GetConnectionProperty(string name) Parameters Type Name Description System.String name The name. Returns Type Description System.String GetEmbeddedDataName() Gets the name of the embedded data resource. Can only be called if UsesEmbeddedDataFiles returns true. Declaration string GetEmbeddedDataName() Returns Type Description System.String RemoveExtension(IFeatureSourceExtension) Removes the extension. Declaration void RemoveExtension(IFeatureSourceExtension ext) Parameters Type Name Description IFeatureSourceExtension ext The ext. RemoveSpatialContextOverride(ISpatialContextInfo) Removes the spatial context override. Declaration void RemoveSpatialContextOverride(ISpatialContextInfo sc) Parameters Type Name Description ISpatialContextInfo sc The sc. SetConnectionProperty(String, String) Sets the connection property. Declaration void SetConnectionProperty(string name, string value) Parameters Type Name Description System.String name The name. System.String value The value. If null, the matching parameter is removed from the feature source"
  },
  "api/OSGeo.MapGuide.ObjectModels.FeatureSource.IFeatureSourceExtension.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.FeatureSource.IFeatureSourceExtension.html",
    "title": "Interface IFeatureSourceExtension | MapGuide Maestro",
    "keywords": "Interface IFeatureSourceExtension Represents an extended feature class Namespace : OSGeo.MapGuide.ObjectModels.FeatureSource Assembly : cs.temp.dll.dll Syntax public interface IFeatureSourceExtension : INotifyPropertyChanged Properties AttributeRelate Gets the attribute joins Declaration IEnumerable<IAttributeRelation> AttributeRelate { get; } Property Value Type Description IEnumerable < IAttributeRelation > The attribute joins. CalculatedProperty Gets the calculated properties. Declaration IEnumerable<ICalculatedProperty> CalculatedProperty { get; } Property Value Type Description IEnumerable < ICalculatedProperty > The calculated properties. FeatureClass Gets or sets the feature class to extend Declaration string FeatureClass { get; set; } Property Value Type Description System.String The feature class. Name Gets or sets the name. Declaration string Name { get; set; } Property Value Type Description System.String The name. Methods AddCalculatedProperty(ICalculatedProperty) Adds the calculated property. Declaration void AddCalculatedProperty(ICalculatedProperty prop) Parameters Type Name Description ICalculatedProperty prop The prop. AddRelation(IAttributeRelation) Adds the relation. Declaration void AddRelation(IAttributeRelation relate) Parameters Type Name Description IAttributeRelation relate The relate. RemoveCalculatedProperty(ICalculatedProperty) Removes the calculated property. Declaration void RemoveCalculatedProperty(ICalculatedProperty prop) Parameters Type Name Description ICalculatedProperty prop The prop. RemoveRelation(IAttributeRelation) Removes the relation. Declaration void RemoveRelation(IAttributeRelation relate) Parameters Type Name Description IAttributeRelation relate The relate."
  },
  "api/OSGeo.MapGuide.ObjectModels.FeatureSource.IRelateProperty.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.FeatureSource.IRelateProperty.html",
    "title": "Interface IRelateProperty | MapGuide Maestro",
    "keywords": "Interface IRelateProperty Represents a property pair in an attribute join Namespace : OSGeo.MapGuide.ObjectModels.FeatureSource Assembly : cs.temp.dll.dll Syntax public interface IRelateProperty Properties AttributeClassProperty Gets or sets the attribute class property. Declaration string AttributeClassProperty { get; set; } Property Value Type Description System.String The attribute class property. FeatureClassProperty Gets or sets the feature class property. Declaration string FeatureClassProperty { get; set; } Property Value Type Description System.String The feature class property."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ILineVectorStyle.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ILineVectorStyle.html",
    "title": "Interface ILineVectorStyle | MapGuide Maestro",
    "keywords": "Interface ILineVectorStyle Style specification for a line geometry layer Inherited Members IVectorStyle.StyleType IVectorStyle.RuleCount IRuleCollection<ILineRule>.IndexOfRule(ILineRule) IRuleCollection<ILineRule>.GetRuleAt(Int32) IRuleCollection<ILineRule>.MoveUp(ILineRule) IRuleCollection<ILineRule>.MoveDown(ILineRule) IRuleCollection.IndexOfRule(IVectorRule) IRuleCollection.MoveUp(IVectorRule) IRuleCollection.MoveDown(IVectorRule) Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface ILineVectorStyle : IVectorStyle, IRuleCollection<ILineRule>, IRuleCollection Properties Rules Enumerates the rules in this specification Declaration IEnumerable<ILineRule> Rules { get; } Property Value Type Description IEnumerable < ILineRule > Methods AddRule(ILineRule) Adds a rule to this specification Declaration void AddRule(ILineRule rule) Parameters Type Name Description ILineRule rule RemoveAllRules() Removes all current rules Declaration void RemoveAllRules() RemoveRule(ILineRule) Removes a rule from this specification Declaration void RemoveRule(ILineRule rule) Parameters Type Name Description ILineRule rule"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ILineVectorStyle2.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ILineVectorStyle2.html",
    "title": "Interface ILineVectorStyle2 | MapGuide Maestro",
    "keywords": "Interface ILineVectorStyle2 A line vector style introduced in the v1.3.0 layer definition schema Inherited Members ILineVectorStyle.Rules ILineVectorStyle.AddRule(ILineRule) ILineVectorStyle.RemoveRule(ILineRule) ILineVectorStyle.RemoveAllRules() IVectorStyle.StyleType IVectorStyle.RuleCount IRuleCollection<ILineRule>.IndexOfRule(ILineRule) IRuleCollection<ILineRule>.GetRuleAt(Int32) IRuleCollection<ILineRule>.MoveUp(ILineRule) IRuleCollection<ILineRule>.MoveDown(ILineRule) IRuleCollection.IndexOfRule(IVectorRule) IRuleCollection.MoveUp(IVectorRule) IRuleCollection.MoveDown(IVectorRule) Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface ILineVectorStyle2 : ILineVectorStyle, IVectorStyle, IRuleCollection<ILineRule>, IRuleCollection Properties ShowInLegend Gets or sets a value indicating whether [show in legend]. Declaration bool ShowInLegend { get; set; } Property Value Type Description System.Boolean true if [show in legend]; otherwise, false ."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ImageSymbolReferenceType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ImageSymbolReferenceType.html",
    "title": "Enum ImageSymbolReferenceType | MapGuide Maestro",
    "keywords": "Enum ImageSymbolReferenceType The types of image symbol references Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public enum ImageSymbolReferenceType Fields Name Description Inline SymbolReference"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IMarkSymbol.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IMarkSymbol.html",
    "title": "Interface IMarkSymbol | MapGuide Maestro",
    "keywords": "Interface IMarkSymbol Stylization of a predefined shape (ShapeType) Inherited Members ISymbol.Type ISymbol.Unit ISymbol.SizeContext ISymbol.SizeX ISymbol.SizeY ISymbol.Rotation ISymbol.MaintainAspect ISymbol.InsertionPointX ISymbol.InsertionPointY ICloneableLayerElement<IMarkSymbol>.Clone() Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IMarkSymbol : ISymbol, ICloneableLayerElement<IMarkSymbol> Properties Edge Gets or sets the outline settings Declaration IStroke Edge { get; set; } Property Value Type Description IStroke Fill Gets or sets the fill settings Declaration IFill Fill { get; set; } Property Value Type Description IFill Shape Gets or sets the type of shape Declaration ShapeType Shape { get; set; } Property Value Type Description ShapeType"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.INameStringPair.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.INameStringPair.html",
    "title": "Interface INameStringPair | MapGuide Maestro",
    "keywords": "Interface INameStringPair Represents a name-value pair Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface INameStringPair Properties Name Gets or set the name Declaration string Name { get; set; } Property Value Type Description System.String Value Gets or sets the value Declaration string Value { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IParameterOverride.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IParameterOverride.html",
    "title": "Interface IParameterOverride | MapGuide Maestro",
    "keywords": "Interface IParameterOverride Represents a parameter override Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IParameterOverride Properties ParameterIdentifier Gets or sets the identifier of the parameter being overridden Declaration string ParameterIdentifier { get; set; } Property Value Type Description System.String ParameterValue Gets or sets the override value for the parameter Declaration string ParameterValue { get; set; } Property Value Type Description System.String SymbolName Gets or sets the name of the symbol definition containing that parameter being overridden Declaration string SymbolName { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IParameterOverride2.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IParameterOverride2.html",
    "title": "Interface IParameterOverride2 | MapGuide Maestro",
    "keywords": "Interface IParameterOverride2 Version 2 of parameter overrides that supports theme labels. Applies to v1.2.0 of the Layer Definition schema Inherited Members IParameterOverride.SymbolName IParameterOverride.ParameterIdentifier IParameterOverride.ParameterValue Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IParameterOverride2 : IParameterOverride Properties ThemeLabel Gets or sets the theme label. Declaration IThemeLabel ThemeLabel { get; set; } Property Value Type Description IThemeLabel The theme label."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IParameterOverrideCollection.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IParameterOverrideCollection.html",
    "title": "Interface IParameterOverrideCollection | MapGuide Maestro",
    "keywords": "Interface IParameterOverrideCollection A collection of parameter overrides Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IParameterOverrideCollection Properties Count Gets the number of parameter overrides Declaration int Count { get; } Property Value Type Description System.Int32 Item[Int32] Gets the parameter override at the specified index Declaration IParameterOverride this[int index] { get; } Parameters Type Name Description System.Int32 index Property Value Type Description IParameterOverride Override Gets the parameter overrides. Declaration IEnumerable<IParameterOverride> Override { get; } Property Value Type Description IEnumerable < IParameterOverride > The parameter overrides. Methods AddOverride(IParameterOverride) Adds the parameter override. Declaration void AddOverride(IParameterOverride ov) Parameters Type Name Description IParameterOverride ov The parameter override CreateParameterOverride(String, String) Creates a parameter override Declaration IParameterOverride CreateParameterOverride(string symbol, string name) Parameters Type Name Description System.String symbol The symbol name System.String name The name of the parameter to override Returns Type Description IParameterOverride RemoveOverride(IParameterOverride) Removes the parameter override. Declaration void RemoveOverride(IParameterOverride ov) Parameters Type Name Description IParameterOverride ov The parameter override"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.UsageContextType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.UsageContextType.html",
    "title": "Enum UsageContextType | MapGuide Maestro",
    "keywords": "Enum UsageContextType The types of usage context Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public enum UsageContextType Fields Name Description Area Line Point Unspecified"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.html",
    "title": "Namespace OSGeo.MapGuide.ObjectModels.LayerDefinition | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.ObjectModels.LayerDefinition Classes ExtensionMethods Extension methods LayerElementCloningUtil Helper class to clone certain elements Interfaces IAdvancedPlacement Advanced placement settings IAreaRule A style rule for the area/polygon geometry type IAreaSymbolizationFill Symbolization characteristics for areas. IAreaVectorStyle Style specification for a area geometry layer IAreaVectorStyle2 An area vector style introduced in the v1.3.0 layer definition schema IBaseImageSymbol IBasicVectorRule Base interface for basic style rules for all geometric types IBlockSymbol Represents a block symbol IChannelBand Defines how to scale numbers into a color channel ICloneableLayerElement<T> Represents elements that can create clones of themselves ICompositeRule Represents a composite rule ICompositeSymbolization Represents a composite symbolization ICompositeTypeStyle Represents a composite style definition ICompositeTypeStyle2 A composite style introduced in the v1.3.0 layer definition schema IDrawingLayerDefinition Represents a layer definition based on a DWF-based drawing source IElevationSettings Represents elevation settings IExplicitColor An explicit color IExplicitColorBand An explicit color band IExplicitColorBands An explicit color band IExplictColorValue An explicit color value IFill Represents a fill IFontSymbol Symbols that are specified by a font and character. IGridColor A grid color IGridColorBands Specifies a color using distinct RGB values IGridColorRule A grid color rule IGridColorStyle A grid color style IGridScaleRange A grid scale range IGridSurfaceStyle A grid surface style IHillShade Specifies how to shade given a band and a light source IImageSymbol Symbols that are comprised of a raster. IInlineImageSymbol Represents an inline symbol image ILayerDefinition Top-level interface of the layer definition ILayerElementFactory Factory interface to assist in creating common layer definition elements ILineRule A style rule for the line geometry type ILineVectorStyle Style specification for a line geometry layer ILineVectorStyle2 A line vector style introduced in the v1.3.0 layer definition schema IMarkSymbol Stylization of a predefined shape (ShapeType) INameStringPair Represents a name-value pair IParameterOverride Represents a parameter override IParameterOverride2 Version 2 of parameter overrides that supports theme labels. Applies to v1.2.0 of the Layer Definition schema IParameterOverrideCollection A collection of parameter overrides IPointRule A style rule for the point geometry type IPointSymbolization2D Symbolization characteristics for points. IPointVectorStyle Style specification for a point geometry layer IPointVectorStyle2 A point vector style introduced in the v1.3.0 layer definition schema IRasterLayerDefinition Represents a layer definition based on a raster-based feature source IRuleCollection Defines a collection of style rules IRuleCollection<TRule> Defines a collection of style rules IStroke Encapsulates the stylization of a line IStroke2 Encapsulates the stylization of a line. Supported in Layer Definition schema 1.1.0 and newer ISubLayerDefinition Represents the base of all layer definitions ISubLayerDefinition2 Represents the base of all layer definitions. Based on Layer Definition schema version 2.3.0 ISymbol Defines common properties for all symbols ISymbolInstance2 Version 2 of symbol instance that supports rendering passes and specific contexts. Applies to v1.2.0 of the Layer Definition schema ISymbolReference Represents a reference to a symbol library item image ITextSymbol Represents a text symbol IThemeLabel Provides legend labeling information for a theme IUrlData URL information for features IVectorLayerDefinition Represents a layer definition based on a vector-based feature source IVectorLayerDefinition2 Based on Layer Definition schema 2.4.0 IVectorRule Base interface for style rules of all geometric types IVectorScaleRange The stylization to be applied to the vector features for a given scale range IVectorScaleRange2 The stylization to be applied to the vector features for a given scale range. Supports elevation, extrusion settings and Advanced Stylization through composite styles Supported by Layer Definition 1.1.0 and higher IVectorStyle base interface for all style specifications IW2DSymbol Represents a DWF-based W2D symbol Enums BackgroundStyleType The type of background style ElevationTypeType Type of elevation FeatureNameType The type of feature name GeometryContextType The types of geometry context ImageSymbolReferenceType The types of image symbol references ItemChoiceType The type of explicit color LayerType The type of layer definition LengthUnitType The type of length unit PointSymbolType The type of point symbol ShapeType The type of shape SizeContextType The type of size context StyleType Indicates the type of geometry this style specification is for UsageContextType The types of usage context"
  },
  "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.BaseLoadProcedureExtensions.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.BaseLoadProcedureExtensions.html",
    "title": "Class BaseLoadProcedureExtensions | MapGuide Maestro",
    "keywords": "Class BaseLoadProcedureExtensions Extension method class Inheritance System.Object BaseLoadProcedureExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.LoadProcedure Assembly : cs.temp.dll.dll Syntax public static class BaseLoadProcedureExtensions Methods AddFiles(IBaseLoadProcedure, IEnumerable<String>) Adds a group of files to this load procedure Declaration public static void AddFiles(this IBaseLoadProcedure proc, IEnumerable<string> files) Parameters Type Name Description IBaseLoadProcedure proc IEnumerable < System.String > files"
  },
  "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.IBaseLoadProcedure.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.IBaseLoadProcedure.html",
    "title": "Interface IBaseLoadProcedure | MapGuide Maestro",
    "keywords": "Interface IBaseLoadProcedure Base type of all load procedures. All Load Procedures at the minimum require the following information: A list of source files. The root path to load into The folder where spatial data sources will be created [optional, but useless if not specified] The folder where layers will be created [optional. dependent on #3] Once initialized, load procedures can be executed via OSGeo.MapGuide.MaestroAPI.MgServerConnectionBase.ExecuteLoadProcedure(OSGeo.MapGuide.ObjectModels.LoadProcedure.ILoadProcedure,OSGeo.MapGuide.MaestroAPI.LengthyOperationProgressCallBack,System.Boolean) method Because Load Procedures are also resources, they can be saved into the library repository via the OSGeo.MapGuide.MaestroAPI.Services.IResourceService.SaveResource(IResourceHandle) method and retrieved from the repository via the GetResource(String) method Namespace : OSGeo.MapGuide.ObjectModels.LoadProcedure Assembly : cs.temp.dll.dll Syntax public interface IBaseLoadProcedure : INotifyPropertyChanged Properties CoordinateSystem Gets or sets the coordinate system to use if none found in the source file. Declaration string CoordinateSystem { get; set; } Property Value Type Description System.String The coordinate system. GenerateLayers Gets or sets a value indicating whether to create a layer for each spatial data source that is created. This will be created in the LayersFolder under the LayersPath Declaration bool GenerateLayers { get; set; } Property Value Type Description System.Boolean true if [generate layers]; otherwise, false . GenerateMaps Gets or sets the generate maps. Not supported by Maestro Declaration bool ? GenerateMaps { get; set; } Property Value Type Description System.Nullable < System.Boolean > The generate maps. GenerateSpatialDataSources Gets or sets a value indicating whether to create a spatial data source for each source file. The spatial data sources will be created under the SpatialDataSourcesFolder under the SpatialDataSourcesPath Declaration bool GenerateSpatialDataSources { get; set; } Property Value Type Description System.Boolean true if [generate spatial data sources]; otherwise, false . GenerateSymbolLibraries Not supported by Maestro Declaration bool ? GenerateSymbolLibraries { get; set; } Property Value Type Description System.Nullable < System.Boolean > LayersFolder Gets or sets the layers folder. Declaration string LayersFolder { get; set; } Property Value Type Description System.String The layers folder. LayersPath Gets or sets the layers path. Declaration string LayersPath { get; set; } Property Value Type Description System.String The layers path. MapsFolder Gets or sets the maps folder. Not supported by Maestro Declaration string MapsFolder { get; set; } Property Value Type Description System.String The maps folder. MapsPath Gets or sets the maps path. Not supported by Maestro Declaration string MapsPath { get; set; } Property Value Type Description System.String The maps path. ResourceId Gets or sets the resource id that were created as part of executing this load procedure Declaration BindingList<string> ResourceId { get; set; } Property Value Type Description BindingList < System.String > The resource id. RootPath Gets or sets the root path. Declaration string RootPath { get; set; } Property Value Type Description System.String The root path. SourceFile Gets the source files. Declaration BindingList<string> SourceFile { get; } Property Value Type Description BindingList < System.String > The source files. SpatialDataSourcesFolder Gets or sets the spatial data sources folder. Declaration string SpatialDataSourcesFolder { get; set; } Property Value Type Description System.String The spatial data sources folder. SpatialDataSourcesPath Gets or sets the spatial data sources path. Declaration string SpatialDataSourcesPath { get; set; } Property Value Type Description System.String The spatial data sources path. SymbolLibrariesFolder Not supported by Maestro Declaration string SymbolLibrariesFolder { get; set; } Property Value Type Description System.String SymbolLibrariesPath Not supported by Maestro Declaration string SymbolLibrariesPath { get; set; } Property Value Type Description System.String Type Gets the type. Declaration LoadType Type { get; } Property Value Type Description LoadType The type. Methods AddFile(String) Adds the file. Declaration void AddFile(string file) Parameters Type Name Description System.String file The file. RemoveFile(String) Removes the file. Declaration void RemoveFile(string file) Parameters Type Name Description System.String file The file."
  },
  "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.IDwfLoadProcedure.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.IDwfLoadProcedure.html",
    "title": "Interface IDwfLoadProcedure | MapGuide Maestro",
    "keywords": "Interface IDwfLoadProcedure A DWF load procedure. Execution is supported with limitations Inherited Members IBaseLoadProcedure.Type IBaseLoadProcedure.SourceFile IBaseLoadProcedure.AddFile(String) IBaseLoadProcedure.RemoveFile(String) IBaseLoadProcedure.RootPath IBaseLoadProcedure.CoordinateSystem IBaseLoadProcedure.GenerateSpatialDataSources IBaseLoadProcedure.SpatialDataSourcesPath IBaseLoadProcedure.SpatialDataSourcesFolder IBaseLoadProcedure.GenerateLayers IBaseLoadProcedure.LayersPath IBaseLoadProcedure.LayersFolder IBaseLoadProcedure.GenerateMaps IBaseLoadProcedure.MapsPath IBaseLoadProcedure.MapsFolder IBaseLoadProcedure.GenerateSymbolLibraries IBaseLoadProcedure.SymbolLibrariesPath IBaseLoadProcedure.SymbolLibrariesFolder IBaseLoadProcedure.ResourceId Namespace : OSGeo.MapGuide.ObjectModels.LoadProcedure Assembly : cs.temp.dll.dll Syntax public interface IDwfLoadProcedure : IBaseLoadProcedure, INotifyPropertyChanged"
  },
  "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.IDwgLoadProcedure.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.IDwgLoadProcedure.html",
    "title": "Interface IDwgLoadProcedure | MapGuide Maestro",
    "keywords": "Interface IDwgLoadProcedure A DWG load procedure. Execution not supported by Maestro Inherited Members IBaseLoadProcedure.Type IBaseLoadProcedure.SourceFile IBaseLoadProcedure.AddFile(String) IBaseLoadProcedure.RemoveFile(String) IBaseLoadProcedure.RootPath IBaseLoadProcedure.CoordinateSystem IBaseLoadProcedure.GenerateSpatialDataSources IBaseLoadProcedure.SpatialDataSourcesPath IBaseLoadProcedure.SpatialDataSourcesFolder IBaseLoadProcedure.GenerateLayers IBaseLoadProcedure.LayersPath IBaseLoadProcedure.LayersFolder IBaseLoadProcedure.GenerateMaps IBaseLoadProcedure.MapsPath IBaseLoadProcedure.MapsFolder IBaseLoadProcedure.GenerateSymbolLibraries IBaseLoadProcedure.SymbolLibrariesPath IBaseLoadProcedure.SymbolLibrariesFolder IBaseLoadProcedure.ResourceId Namespace : OSGeo.MapGuide.ObjectModels.LoadProcedure Assembly : cs.temp.dll.dll Syntax public interface IDwgLoadProcedure : IBaseLoadProcedure, INotifyPropertyChanged"
  },
  "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.ILoadProcedure.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.ILoadProcedure.html",
    "title": "Interface ILoadProcedure | MapGuide Maestro",
    "keywords": "Interface ILoadProcedure Represents Load Procedures Inherited Members IResource.ValidatingSchema IResource.ResourceID IResource.ResourceType IResource.Serialize() IResource.IsStronglyTyped IVersionedEntity.ResourceVersion Namespace : OSGeo.MapGuide.ObjectModels.LoadProcedure Assembly : cs.temp.dll.dll Syntax public interface ILoadProcedure : IResource, IVersionedEntity, ICloneable, INotifyPropertyChanged Properties SubType Gets the type of the sub. Declaration IBaseLoadProcedure SubType { get; } Property Value Type Description IBaseLoadProcedure The type of the sub."
  },
  "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.IRasterLoadProcedure.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.IRasterLoadProcedure.html",
    "title": "Interface IRasterLoadProcedure | MapGuide Maestro",
    "keywords": "Interface IRasterLoadProcedure A raster load procedure. Execution not supported by Maestro Inherited Members IBaseLoadProcedure.Type IBaseLoadProcedure.SourceFile IBaseLoadProcedure.AddFile(String) IBaseLoadProcedure.RemoveFile(String) IBaseLoadProcedure.RootPath IBaseLoadProcedure.CoordinateSystem IBaseLoadProcedure.GenerateSpatialDataSources IBaseLoadProcedure.SpatialDataSourcesPath IBaseLoadProcedure.SpatialDataSourcesFolder IBaseLoadProcedure.GenerateLayers IBaseLoadProcedure.LayersPath IBaseLoadProcedure.LayersFolder IBaseLoadProcedure.GenerateMaps IBaseLoadProcedure.MapsPath IBaseLoadProcedure.MapsFolder IBaseLoadProcedure.GenerateSymbolLibraries IBaseLoadProcedure.SymbolLibrariesPath IBaseLoadProcedure.SymbolLibrariesFolder IBaseLoadProcedure.ResourceId Namespace : OSGeo.MapGuide.ObjectModels.LoadProcedure Assembly : cs.temp.dll.dll Syntax public interface IRasterLoadProcedure : IBaseLoadProcedure, INotifyPropertyChanged"
  },
  "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IRuntimeLayerInfoCollection.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IRuntimeLayerInfoCollection.html",
    "title": "Interface IRuntimeLayerInfoCollection | MapGuide Maestro",
    "keywords": "Interface IRuntimeLayerInfoCollection A collection of layers Inherited Members IReadOnlyCollection<IRuntimeLayerInfo>.Count IReadOnlyCollection<IRuntimeLayerInfo>.Item[Int32] Namespace : OSGeo.MapGuide.ObjectModels.RuntimeMap Assembly : cs.temp.dll.dll Syntax public interface IRuntimeLayerInfoCollection : IReadOnlyCollection<IRuntimeLayerInfo>, IEnumerable<IRuntimeLayerInfo>"
  },
  "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IRuntimeMapInfo.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IRuntimeMapInfo.html",
    "title": "Interface IRuntimeMapInfo | MapGuide Maestro",
    "keywords": "Interface IRuntimeMapInfo Describes the structure of a Runtime Map Namespace : OSGeo.MapGuide.ObjectModels.RuntimeMap Assembly : cs.temp.dll.dll Syntax public interface IRuntimeMapInfo Properties BackgroundColor Gets the background color Declaration string BackgroundColor { get; } Property Value Type Description System.String CoordinateSystem Gets the coordinate system of this map Declaration ICoordinateSystemInfo CoordinateSystem { get; } Property Value Type Description ICoordinateSystemInfo DisplayDpi Gets the display DPI of the map Declaration int DisplayDpi { get; } Property Value Type Description System.Int32 Extents Gets the bounding box of this map Declaration IEnvelope Extents { get; } Property Value Type Description IEnvelope FiniteDisplayScales Gets the finite display scales defined for this runtime map Declaration double[] FiniteDisplayScales { get; } Property Value Type Description System.Double [] Groups Gets the groups of this map. Declaration IRuntimeLayerGroupInfoCollection Groups { get; } Property Value Type Description IRuntimeLayerGroupInfoCollection Remarks Even if the application did not request layer structure as part of the CreateRuntimeMap or DescribeRuntimeMap request, this property will still contain any Base Layer Groups if defined in the Map Definition IconMimeType Gets the mime type of any inline icons. Declaration string IconMimeType { get; } Property Value Type Description System.String Remarks If the application did not request any icons as part of the CreateRuntimeMap or DescribeRuntimeMap request, this property is null Layers Gets the layers of this map. Declaration IRuntimeLayerInfoCollection Layers { get; } Property Value Type Description IRuntimeLayerInfoCollection Remarks If the application did not request layer structure as part of the CreateRuntimeMap or DescribeRuntimeMap request, this property will be an empty collection MapDefinition Gets the Map Definition resource ID used to create this runtime map Declaration string MapDefinition { get; } Property Value Type Description System.String Name Gets the name of the runtime map. This combined with the session ID provides the means for any code using the MapGuide API to open an existing MgMap instance Declaration string Name { get; } Property Value Type Description System.String SiteVersion Gets the site version of the MapGuide Server Declaration string SiteVersion { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IRuntimeMapInfo2.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IRuntimeMapInfo2.html",
    "title": "Interface IRuntimeMapInfo2 | MapGuide Maestro",
    "keywords": "Interface IRuntimeMapInfo2 Describes the structure of a Runtime Map. Based on RuntimeMap v3.0.0 schema Inherited Members IRuntimeMapInfo.SiteVersion IRuntimeMapInfo.Name IRuntimeMapInfo.MapDefinition IRuntimeMapInfo.BackgroundColor IRuntimeMapInfo.DisplayDpi IRuntimeMapInfo.IconMimeType IRuntimeMapInfo.CoordinateSystem IRuntimeMapInfo.Extents IRuntimeMapInfo.Layers IRuntimeMapInfo.Groups IRuntimeMapInfo.FiniteDisplayScales Namespace : OSGeo.MapGuide.ObjectModels.RuntimeMap Assembly : cs.temp.dll.dll Syntax public interface IRuntimeMapInfo2 : IRuntimeMapInfo Properties TileHeight The tile height Declaration int ? TileHeight { get; set; } Property Value Type Description System.Nullable < System.Int32 > TileSetDefinition The referenced tile set definition Declaration string TileSetDefinition { get; set; } Property Value Type Description System.String TileWidth The tile width Declaration int ? TileWidth { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IRuntimeMapLegendElement.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IRuntimeMapLegendElement.html",
    "title": "Interface IRuntimeMapLegendElement | MapGuide Maestro",
    "keywords": "Interface IRuntimeMapLegendElement Models a legend element Namespace : OSGeo.MapGuide.ObjectModels.RuntimeMap Assembly : cs.temp.dll.dll Syntax public interface IRuntimeMapLegendElement Properties ActuallyVisible Gets whether the element is actually element Declaration bool ActuallyVisible { get; } Property Value Type Description System.Boolean DisplayInLegend Gets whether the element will be shown in the legend Declaration bool DisplayInLegend { get; } Property Value Type Description System.Boolean ExpandInLegend Gets whether the element will be expanded in the legend Declaration bool ExpandInLegend { get; } Property Value Type Description System.Boolean LegendLabel Gets the label of the element Declaration string LegendLabel { get; } Property Value Type Description System.String Name Gets the name of the element Declaration string Name { get; } Property Value Type Description System.String ObjectID Gets the unique id of the element Declaration string ObjectID { get; } Property Value Type Description System.String ParentID Gets the unique id of the element's parent Declaration string ParentID { get; } Property Value Type Description System.String Visible Gets whether the element is potentially Declaration bool Visible { get; } Property Value Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IScaleRangeInfo.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IScaleRangeInfo.html",
    "title": "Interface IScaleRangeInfo | MapGuide Maestro",
    "keywords": "Interface IScaleRangeInfo Represents a scale range of a layer Namespace : OSGeo.MapGuide.ObjectModels.RuntimeMap Assembly : cs.temp.dll.dll Syntax public interface IScaleRangeInfo Properties FeatureStyle Gets the feature styles for this scale range Declaration IFeatureStyleInfoCollection FeatureStyle { get; } Property Value Type Description IFeatureStyleInfoCollection MaxScale Gets the maximum scale this scale range is applicable for Declaration double MaxScale { get; } Property Value Type Description System.Double MinScale Gets the minimum scale this scale range is applicable for Declaration double MinScale { get; } Property Value Type Description System.Double"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.UnmanagedDataListUnmanagedDataFile.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.UnmanagedDataListUnmanagedDataFile.html",
    "title": "Class UnmanagedDataListUnmanagedDataFile | MapGuide Maestro",
    "keywords": "Class UnmanagedDataListUnmanagedDataFile Inheritance System.Object UnmanagedDataListUnmanagedDataFile Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class UnmanagedDataListUnmanagedDataFile : ComponentModel.INotifyPropertyChanged Properties CreatedDate Declaration public DateTime CreatedDate { get; set; } Property Value Type Description System.DateTime FileName Declaration public string FileName { get; } Property Value Type Description System.String ModifiedDate Declaration public DateTime ModifiedDate { get; set; } Property Value Type Description System.DateTime Size Declaration public string Size { get; set; } Property Value Type Description System.String UnmanagedDataId Declaration public string UnmanagedDataId { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this UnmanagedDataListUnmanagedDataFile object Declaration public virtual UnmanagedDataListUnmanagedDataFile Clone() Returns Type Description UnmanagedDataListUnmanagedDataFile Deserialize(String) Declaration public static UnmanagedDataListUnmanagedDataFile Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description UnmanagedDataListUnmanagedDataFile Deserialize(String, out UnmanagedDataListUnmanagedDataFile) Declaration public static bool Deserialize(string xml, out UnmanagedDataListUnmanagedDataFile obj) Parameters Type Name Description System.String xml UnmanagedDataListUnmanagedDataFile obj Returns Type Description System.Boolean Deserialize(String, out UnmanagedDataListUnmanagedDataFile, out Exception) Deserializes workflow markup into an UnmanagedDataListUnmanagedDataFile object Declaration public static bool Deserialize(string xml, out UnmanagedDataListUnmanagedDataFile obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize UnmanagedDataListUnmanagedDataFile obj Output UnmanagedDataListUnmanagedDataFile object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static UnmanagedDataListUnmanagedDataFile LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description UnmanagedDataListUnmanagedDataFile LoadFromFile(String, out UnmanagedDataListUnmanagedDataFile) Declaration public static bool LoadFromFile(string fileName, out UnmanagedDataListUnmanagedDataFile obj) Parameters Type Name Description System.String fileName UnmanagedDataListUnmanagedDataFile obj Returns Type Description System.Boolean LoadFromFile(String, out UnmanagedDataListUnmanagedDataFile, out Exception) Deserializes xml markup from file into an UnmanagedDataListUnmanagedDataFile object Declaration public static bool LoadFromFile(string fileName, out UnmanagedDataListUnmanagedDataFile obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize UnmanagedDataListUnmanagedDataFile obj Output UnmanagedDataListUnmanagedDataFile object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current UnmanagedDataListUnmanagedDataFile object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current UnmanagedDataListUnmanagedDataFile object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.UnmanagedDataListUnmanagedDataFolder.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.UnmanagedDataListUnmanagedDataFolder.html",
    "title": "Class UnmanagedDataListUnmanagedDataFolder | MapGuide Maestro",
    "keywords": "Class UnmanagedDataListUnmanagedDataFolder Inheritance System.Object UnmanagedDataListUnmanagedDataFolder Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class UnmanagedDataListUnmanagedDataFolder : ComponentModel.INotifyPropertyChanged Properties CreatedDate Declaration public DateTime CreatedDate { get; set; } Property Value Type Description System.DateTime FolderName Declaration public string FolderName { get; } Property Value Type Description System.String ModifiedDate Declaration public DateTime ModifiedDate { get; set; } Property Value Type Description System.DateTime NumberOfFiles Declaration public int NumberOfFiles { get; set; } Property Value Type Description System.Int32 NumberOfFolders Declaration public int NumberOfFolders { get; set; } Property Value Type Description System.Int32 UnmanagedDataId Declaration public string UnmanagedDataId { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this UnmanagedDataListUnmanagedDataFolder object Declaration public virtual UnmanagedDataListUnmanagedDataFolder Clone() Returns Type Description UnmanagedDataListUnmanagedDataFolder Deserialize(String) Declaration public static UnmanagedDataListUnmanagedDataFolder Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description UnmanagedDataListUnmanagedDataFolder Deserialize(String, out UnmanagedDataListUnmanagedDataFolder) Declaration public static bool Deserialize(string xml, out UnmanagedDataListUnmanagedDataFolder obj) Parameters Type Name Description System.String xml UnmanagedDataListUnmanagedDataFolder obj Returns Type Description System.Boolean Deserialize(String, out UnmanagedDataListUnmanagedDataFolder, out Exception) Deserializes workflow markup into an UnmanagedDataListUnmanagedDataFolder object Declaration public static bool Deserialize(string xml, out UnmanagedDataListUnmanagedDataFolder obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize UnmanagedDataListUnmanagedDataFolder obj Output UnmanagedDataListUnmanagedDataFolder object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static UnmanagedDataListUnmanagedDataFolder LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description UnmanagedDataListUnmanagedDataFolder LoadFromFile(String, out UnmanagedDataListUnmanagedDataFolder) Declaration public static bool LoadFromFile(string fileName, out UnmanagedDataListUnmanagedDataFolder obj) Parameters Type Name Description System.String fileName UnmanagedDataListUnmanagedDataFolder obj Returns Type Description System.Boolean LoadFromFile(String, out UnmanagedDataListUnmanagedDataFolder, out Exception) Deserializes xml markup from file into an UnmanagedDataListUnmanagedDataFolder object Declaration public static bool LoadFromFile(string fileName, out UnmanagedDataListUnmanagedDataFolder obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize UnmanagedDataListUnmanagedDataFolder obj Output UnmanagedDataListUnmanagedDataFolder object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current UnmanagedDataListUnmanagedDataFolder object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current UnmanagedDataListUnmanagedDataFolder object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.UserList.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.UserList.html",
    "title": "Class UserList | MapGuide Maestro",
    "keywords": "Class UserList User list Inheritance System.Object UserList Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class UserList : ComponentModel.INotifyPropertyChanged Properties Items Declaration public BindingList<object> Items { get; set; } Property Value Type Description BindingList < System.Object > Methods Clone() Create a clone of this UserList object Declaration public virtual UserList Clone() Returns Type Description UserList Deserialize(String) Declaration public static UserList Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description UserList Deserialize(String, out UserList) Declaration public static bool Deserialize(string xml, out UserList obj) Parameters Type Name Description System.String xml UserList obj Returns Type Description System.Boolean Deserialize(String, out UserList, out Exception) Deserializes workflow markup into an UserList object Declaration public static bool Deserialize(string xml, out UserList obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize UserList obj Output UserList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static UserList LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description UserList LoadFromFile(String, out UserList) Declaration public static bool LoadFromFile(string fileName, out UserList obj) Parameters Type Name Description System.String fileName UserList obj Returns Type Description System.Boolean LoadFromFile(String, out UserList, out Exception) Deserializes xml markup from file into an UserList object Declaration public static bool LoadFromFile(string fileName, out UserList obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize UserList obj Output UserList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current UserList object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current UserList object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.UserListGroup.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.UserListGroup.html",
    "title": "Class UserListGroup | MapGuide Maestro",
    "keywords": "Class UserListGroup Inheritance System.Object UserListGroup Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class UserListGroup : ComponentModel.INotifyPropertyChanged Properties Description Declaration public string Description { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this UserListGroup object Declaration public virtual UserListGroup Clone() Returns Type Description UserListGroup Deserialize(String) Declaration public static UserListGroup Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description UserListGroup Deserialize(String, out UserListGroup) Declaration public static bool Deserialize(string xml, out UserListGroup obj) Parameters Type Name Description System.String xml UserListGroup obj Returns Type Description System.Boolean Deserialize(String, out UserListGroup, out Exception) Deserializes workflow markup into an UserListGroup object Declaration public static bool Deserialize(string xml, out UserListGroup obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize UserListGroup obj Output UserListGroup object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static UserListGroup LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description UserListGroup LoadFromFile(String, out UserListGroup) Declaration public static bool LoadFromFile(string fileName, out UserListGroup obj) Parameters Type Name Description System.String fileName UserListGroup obj Returns Type Description System.Boolean LoadFromFile(String, out UserListGroup, out Exception) Deserializes xml markup from file into an UserListGroup object Declaration public static bool LoadFromFile(string fileName, out UserListGroup obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize UserListGroup obj Output UserListGroup object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current UserListGroup object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current UserListGroup object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.UserListUser.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.UserListUser.html",
    "title": "Class UserListUser | MapGuide Maestro",
    "keywords": "Class UserListUser Inheritance System.Object UserListUser Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class UserListUser : ComponentModel.INotifyPropertyChanged Properties Description Declaration public string Description { get; set; } Property Value Type Description System.String FullName Declaration public string FullName { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; set; } Property Value Type Description System.String Password Declaration public string Password { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this UserListUser object Declaration public virtual UserListUser Clone() Returns Type Description UserListUser Deserialize(String) Declaration public static UserListUser Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description UserListUser Deserialize(String, out UserListUser) Declaration public static bool Deserialize(string xml, out UserListUser obj) Parameters Type Name Description System.String xml UserListUser obj Returns Type Description System.Boolean Deserialize(String, out UserListUser, out Exception) Deserializes workflow markup into an UserListUser object Declaration public static bool Deserialize(string xml, out UserListUser obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize UserListUser obj Output UserListUser object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static UserListUser LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description UserListUser LoadFromFile(String, out UserListUser) Declaration public static bool LoadFromFile(string fileName, out UserListUser obj) Parameters Type Name Description System.String fileName UserListUser obj Returns Type Description System.Boolean LoadFromFile(String, out UserListUser, out Exception) Deserializes xml markup from file into an UserListUser object Declaration public static bool LoadFromFile(string fileName, out UserListUser obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize UserListUser obj Output UserListUser object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current UserListUser object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current UserListUser object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.html",
    "title": "Namespace OSGeo.MapGuide.ObjectModels.Common | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.ObjectModels.Common Classes DataStoreList The list of datastores from a EnumerateDataStores request DataStoreListDataStore A data store entry. DrawingSectionList Drawing Section list DrawingSectionListSection DrawingSectionResourceList Drawing Section Resource list DrawingSectionResourceListSectionResource Envelope Specifies an envelope (a rectangle) using two corner points. EnvelopeExtensions Extension method class EnvelopeLowerLeftCoordinate Specifies the lower left corner of the envelope. EnvelopeUpperRightCoordinate Specifies the upper right corner of the envelope. ExtendedDataType FdoLongTransactionList A list of FDO long transactions FdoLongTransactionListLongTransaction A FDO long transaction FdoSpatialContextList FdoSpatialContextListSpatialContext An FDO spatial context definition FdoSpatialContextListSpatialContextExtent This would return AWKT representing extents e.g. polygon, polyline or circle etc. FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate FdoSpatialContextListSpatialContextExtentUpperRightCoordinate FeatureProviderRegistry Root element that contains a collection of FeatureProvider elements. FeatureProviderRegistryFeatureProvider Describes an installed feature provider. FeatureProviderRegistryFeatureProviderConnectionProperty GroupList Group list GroupListGroup RepositoryContentType RepositoryList Repository list RepositoryListRepository ResourceDataList Resource Data list ResourceDataListResourceData ResourceDocumentHeaderType ResourceDocumentHeaderTypeGeneral ResourceDocumentHeaderTypeMetadata ResourceDocumentHeaderTypeMetadataSimple ResourceDocumentHeaderTypeMetadataSimpleProperty ResourceFolderHeaderType ResourceList Resource list ResourceListResourceDocument ResourceListResourceFolder ResourcePackageManifest Resource Package manifest ResourcePackageManifestOperations List of operations ResourcePackageManifestOperationsOperation ResourcePackageManifestOperationsOperationParameters List of operarion parameters ResourcePackageManifestOperationsOperationParametersParameter operation parameter ResourceReferenceList Resource Reference list ResourceSecurityType ResourceSecurityTypeGroups ResourceSecurityTypeGroupsGroup ResourceSecurityTypeUsers ResourceSecurityTypeUsersUser SiteInformation Site Information SiteInformationSiteServer SiteInformationSiteServerOperatingSystem SiteInformationStatistics SiteVersion Site Version StringCollection String list TileProvider TileProviderConnectionProperty TileProviderList UnmanagedDataList Unmanaged data list UnmanagedDataListUnmanagedDataFile UnmanagedDataListUnmanagedDataFolder UserList User list UserListGroup UserListUser Interfaces IEnvelope Represents a rectangular bounding box IExpressionPropertySource An FDO expression property source IFdoSerializable Defines an interface for reading and writing content to and from FDO XML documents IFdoSpatialContext Represents a Spatial Context of a Feature Source ILongTransaction Represents a long transaction ILongTransactionList Represents a list of long transactions IPoint2D Represents a point in 2 dimensional space IPoint3D Represents a point in 3 dimensional space IRepositoryItem Represents an item in the repository IResourceIdReference Represents a resource id reference Enums ExpressionDataType The types of valid FDO expressions for use in Symbol Definitions FdoSpatialContextListSpatialContextExtentType PermissionsType ResourceDataType"
  },
  "api/OSGeo.MapGuide.ObjectModels.DrawingSource.ExtensionMethods.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.DrawingSource.ExtensionMethods.html",
    "title": "Class ExtensionMethods | MapGuide Maestro",
    "keywords": "Class ExtensionMethods Extension methods Inheritance System.Object ExtensionMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.DrawingSource Assembly : cs.temp.dll.dll Syntax public static class ExtensionMethods Methods RegenerateSheetList(IDrawingSource, IServerConnection) Regenerates the sheet list in this drawing source. Declaration public static bool RegenerateSheetList(this IDrawingSource source, IServerConnection conn) Parameters Type Name Description IDrawingSource source The drawing source IServerConnection conn The server connection Returns Type Description System.Boolean True if sheets were regenerated. False otherwise UpdateExtents(IDrawingSource, IServerConnection) Updates the extents of all sheets based on their respective AutoCAD Viewport Data in the embedded PIA resource Declaration public static void UpdateExtents(this IDrawingSource source, IServerConnection conn) Parameters Type Name Description IDrawingSource source The drawing source IServerConnection conn The server connection"
  },
  "api/OSGeo.MapGuide.ObjectModels.DrawingSource.IDrawingSource.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.DrawingSource.IDrawingSource.html",
    "title": "Interface IDrawingSource | MapGuide Maestro",
    "keywords": "Interface IDrawingSource A DWF-based Drawing Source Inherited Members IResource.ValidatingSchema IResource.ResourceID IResource.ResourceType IResource.Serialize() IResource.IsStronglyTyped IVersionedEntity.ResourceVersion Namespace : OSGeo.MapGuide.ObjectModels.DrawingSource Assembly : cs.temp.dll.dll Syntax public interface IDrawingSource : IResource, IVersionedEntity, ICloneable, INotifyPropertyChanged Properties CoordinateSpace Gets or sets the coordinate space. Declaration string CoordinateSpace { get; set; } Property Value Type Description System.String The coordinate space. Sheet Gets the sheets. Declaration IEnumerable<IDrawingSourceSheet> Sheet { get; } Property Value Type Description IEnumerable < IDrawingSourceSheet > The sheets. SourceName Gets or sets the name of the source (dwf file). Declaration string SourceName { get; set; } Property Value Type Description System.String The name of the source. Methods AddSheet(IDrawingSourceSheet) Adds the sheet. Declaration void AddSheet(IDrawingSourceSheet sheet) Parameters Type Name Description IDrawingSourceSheet sheet The sheet. CreateSheet(String, Double, Double, Double, Double) Creates the sheet. Declaration IDrawingSourceSheet CreateSheet(string name, double minx, double miny, double maxx, double maxy) Parameters Type Name Description System.String name The name. System.Double minx The minx. System.Double miny The miny. System.Double maxx The maxx. System.Double maxy The maxy. Returns Type Description IDrawingSourceSheet RemoveAllSheets() Removes all sheets. Declaration void RemoveAllSheets() RemoveSheet(IDrawingSourceSheet) Removes the sheet. Declaration void RemoveSheet(IDrawingSourceSheet sheet) Parameters Type Name Description IDrawingSourceSheet sheet The sheet."
  },
  "api/OSGeo.MapGuide.ObjectModels.DrawingSource.IDrawingSourceSheet.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.DrawingSource.IDrawingSourceSheet.html",
    "title": "Interface IDrawingSourceSheet | MapGuide Maestro",
    "keywords": "Interface IDrawingSourceSheet Represents a sheet (DWF section) Namespace : OSGeo.MapGuide.ObjectModels.DrawingSource Assembly : cs.temp.dll.dll Syntax public interface IDrawingSourceSheet Properties Extent Gets or sets the extent. Declaration IEnvelope Extent { get; set; } Property Value Type Description IEnvelope The extent. Name Gets or sets the name. Declaration string Name { get; set; } Property Value Type Description System.String The name."
  },
  "api/OSGeo.MapGuide.ObjectModels.DrawingSource.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.DrawingSource.html",
    "title": "Namespace OSGeo.MapGuide.ObjectModels.DrawingSource | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.ObjectModels.DrawingSource Classes ExtensionMethods Extension methods Interfaces IDrawingSource A DWF-based Drawing Source IDrawingSourceSheet Represents a sheet (DWF section)"
  },
  "api/OSGeo.MapGuide.ObjectModels.ExtensionMethods.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ExtensionMethods.html",
    "title": "Class ExtensionMethods | MapGuide Maestro",
    "keywords": "Class ExtensionMethods Extension Methods Inheritance System.Object ExtensionMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels Assembly : cs.temp.dll.dll Syntax public static class ExtensionMethods Methods CopyResourceDataTo(IResource, IServerConnection, IResource) Copies the resource data to the specified resource. Both resources are assumed to originate from the same given connection Declaration public static void CopyResourceDataTo(this IResource source, IServerConnection conn, IResource target) Parameters Type Name Description IResource source The source. IServerConnection conn The server connection IResource target The target. Remarks Avoid using this method if you are copying a IFeatureSource with MG_USER_CREDENTIALS resource data, as MapGuide will automatically return the decrypted username for MG_USER_CREDENTIALS, rendering the resource data invalid for the target resource. Instead use the OSGeo.MapGuide.MaestroAPI.Services.IResourceService.CopyResource method, which will copy the resource and its resource data and keep any MG_USER_CREDENTIALS items intact CopyResourceDataTo(IResource, IServerConnection, String) Copies the resource data to the specified resource. Both resources are assumed to originate from the same given connection Declaration public static void CopyResourceDataTo(this IResource source, IServerConnection conn, string targetID) Parameters Type Name Description IResource source The source. IServerConnection conn The server connection System.String targetID The target ID. Remarks Avoid using this method if you are copying a IFeatureSource with MG_USER_CREDENTIALS resource data, as MapGuide will automatically return the decrypted username for MG_USER_CREDENTIALS, rendering the resource data invalid for the target resource. Instead use the OSGeo.MapGuide.MaestroAPI.Services.IResourceService.CopyResource method, which will copy the resource and its resource data and keep any MG_USER_CREDENTIALS items intact"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ICompositeRule.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ICompositeRule.html",
    "title": "Interface ICompositeRule | MapGuide Maestro",
    "keywords": "Interface ICompositeRule Represents a composite rule Inherited Members IVectorRule.LegendLabel IVectorRule.Filter Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface ICompositeRule : IVectorRule Properties CompositeSymbolization Gets or sets the composite symbolization. Declaration ICompositeSymbolization CompositeSymbolization { get; set; } Property Value Type Description ICompositeSymbolization The composite symbolization."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ICompositeSymbolization.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ICompositeSymbolization.html",
    "title": "Interface ICompositeSymbolization | MapGuide Maestro",
    "keywords": "Interface ICompositeSymbolization Represents a composite symbolization Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface ICompositeSymbolization Properties SymbolInstance Gets the symbol instances. Declaration IEnumerable<ISymbolInstance> SymbolInstance { get; } Property Value Type Description IEnumerable < ISymbolInstance > The symbol instances. Methods AddSymbolInstance(ISymbolInstance) Adds the symbol instance. Declaration void AddSymbolInstance(ISymbolInstance inst) Parameters Type Name Description ISymbolInstance inst The inst. CreateInlineCompoundSymbol(ICompoundSymbolDefinition) Creates an inline compound symbol instance Declaration ISymbolInstance CreateInlineCompoundSymbol(ICompoundSymbolDefinition compDef) Parameters Type Name Description ICompoundSymbolDefinition compDef Returns Type Description ISymbolInstance CreateInlineSimpleSymbol(ISimpleSymbolDefinition) Creates an inline simple symbol instance Declaration ISymbolInstance CreateInlineSimpleSymbol(ISimpleSymbolDefinition symDef) Parameters Type Name Description ISimpleSymbolDefinition symDef Returns Type Description ISymbolInstance CreateSymbolReference(String) Creates a symbol reference. Declaration ISymbolInstance CreateSymbolReference(string resourceId) Parameters Type Name Description System.String resourceId Returns Type Description ISymbolInstance MoveSymbolInstanceDown(ISymbolInstance) Moves the specified symbol instance down Declaration int MoveSymbolInstanceDown(ISymbolInstance symRef) Parameters Type Name Description ISymbolInstance symRef Returns Type Description System.Int32 MoveSymbolInstanceUp(ISymbolInstance) Moves the specified symbol instance up Declaration int MoveSymbolInstanceUp(ISymbolInstance symRef) Parameters Type Name Description ISymbolInstance symRef Returns Type Description System.Int32 RemoveAllSymbolInstances() Removes all symbol instances Declaration void RemoveAllSymbolInstances() RemoveSymbolInstance(ISymbolInstance) Removes the symbol instance. Declaration void RemoveSymbolInstance(ISymbolInstance inst) Parameters Type Name Description ISymbolInstance inst The inst. ToXml() Returns the current symbolization as XML Declaration string ToXml() Returns Type Description System.String UpdateFromXml(String) Updates this symbolization with the given XML. The given XML must be composite symbolization XML Declaration void UpdateFromXml(string xml) Parameters Type Name Description System.String xml"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ICompositeTypeStyle.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ICompositeTypeStyle.html",
    "title": "Interface ICompositeTypeStyle | MapGuide Maestro",
    "keywords": "Interface ICompositeTypeStyle Represents a composite style definition Inherited Members IVectorStyle.StyleType IVectorStyle.RuleCount IRuleCollection<ICompositeRule>.IndexOfRule(ICompositeRule) IRuleCollection<ICompositeRule>.GetRuleAt(Int32) IRuleCollection<ICompositeRule>.MoveUp(ICompositeRule) IRuleCollection<ICompositeRule>.MoveDown(ICompositeRule) IRuleCollection.IndexOfRule(IVectorRule) IRuleCollection.MoveUp(IVectorRule) IRuleCollection.MoveDown(IVectorRule) Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface ICompositeTypeStyle : IVectorStyle, IRuleCollection<ICompositeRule>, IRuleCollection Properties CompositeRule Gets the composite rules. Declaration IEnumerable<ICompositeRule> CompositeRule { get; } Property Value Type Description IEnumerable < ICompositeRule > The composite rules. DisplayString Gets a display string for data-binding purposes Declaration string DisplayString { get; } Property Value Type Description System.String Methods AddCompositeRule(ICompositeRule) Adds the composite rule. Declaration void AddCompositeRule(ICompositeRule compRule) Parameters Type Name Description ICompositeRule compRule The comp rule. RemoveCompositeRule(ICompositeRule) Removes the composite rule. Declaration void RemoveCompositeRule(ICompositeRule compRule) Parameters Type Name Description ICompositeRule compRule The comp rule."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ICompositeTypeStyle2.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ICompositeTypeStyle2.html",
    "title": "Interface ICompositeTypeStyle2 | MapGuide Maestro",
    "keywords": "Interface ICompositeTypeStyle2 A composite style introduced in the v1.3.0 layer definition schema Inherited Members ICompositeTypeStyle.DisplayString ICompositeTypeStyle.CompositeRule ICompositeTypeStyle.AddCompositeRule(ICompositeRule) ICompositeTypeStyle.RemoveCompositeRule(ICompositeRule) IVectorStyle.StyleType IVectorStyle.RuleCount IRuleCollection<ICompositeRule>.IndexOfRule(ICompositeRule) IRuleCollection<ICompositeRule>.GetRuleAt(Int32) IRuleCollection<ICompositeRule>.MoveUp(ICompositeRule) IRuleCollection<ICompositeRule>.MoveDown(ICompositeRule) IRuleCollection.IndexOfRule(IVectorRule) IRuleCollection.MoveUp(IVectorRule) IRuleCollection.MoveDown(IVectorRule) Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface ICompositeTypeStyle2 : ICompositeTypeStyle, IVectorStyle, IRuleCollection<ICompositeRule>, IRuleCollection Properties ShowInLegend Gets or sets a value indicating whether [show in legend]. Declaration bool ShowInLegend { get; set; } Property Value Type Description System.Boolean true if [show in legend]; otherwise, false ."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IDrawingLayerDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IDrawingLayerDefinition.html",
    "title": "Interface IDrawingLayerDefinition | MapGuide Maestro",
    "keywords": "Interface IDrawingLayerDefinition Represents a layer definition based on a DWF-based drawing source Inherited Members ISubLayerDefinition.LayerType ISubLayerDefinition.ResourceId Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IDrawingLayerDefinition : ISubLayerDefinition, INotifyPropertyChanged Properties LayerFilter Gets or sets the layers to show from the specified sheet. Shows all layers if this is not specified Declaration string LayerFilter { get; set; } Property Value Type Description System.String MaxScale Gets or sets the zoomed out part of the scale range. Defaults to the application's maximum value if not specified. Exclusive Declaration double MaxScale { get; set; } Property Value Type Description System.Double MinScale Gets or sets the zoomed in part of the scale range. Defaults to 0 if not specified. Inclusive Declaration double MinScale { get; set; } Property Value Type Description System.Double Sheet Gets or sets the sheet of the DWF to user Declaration string Sheet { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.BaseLayerDefinitionValidator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.BaseLayerDefinitionValidator.html",
    "title": "Class BaseLayerDefinitionValidator | MapGuide Maestro",
    "keywords": "Class BaseLayerDefinitionValidator A base layer definition validator class the provides the common validation logic. Because this is working against the layer definition interfaces, this common logic can apply to all versions of the layer definition schema (that implement these interfaces) Inheritance System.Object BaseLayerDefinitionValidator LayerDefinitionValidator Implements IResourceValidator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public abstract class BaseLayerDefinitionValidator : IResourceValidator Properties Connection The server connection which validation will be performed against Declaration public IServerConnection Connection { get; set; } Property Value Type Description IServerConnection SupportedResourceAndVersion Gets the resource type and version this validator supports Declaration public abstract ResourceTypeDescriptor SupportedResourceAndVersion { get; } Property Value Type Description ResourceTypeDescriptor Methods Validate(ResourceValidationContext, IResource, Boolean) Validats the specified resources for common issues associated with this resource type Declaration public virtual ValidationIssue[] Validate(ResourceValidationContext context, IResource resource, bool recurse) Parameters Type Name Description ResourceValidationContext context IResource resource System.Boolean recurse Returns Type Description ValidationIssue [] ValidateBase(ResourceValidationContext, IResource, Boolean) Perform base validation logic Declaration protected ValidationIssue[] ValidateBase(ResourceValidationContext context, IResource resource, bool recurse) Parameters Type Name Description ResourceValidationContext context IResource resource System.Boolean recurse Returns Type Description ValidationIssue [] Implements IResourceValidator"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.BaseLoadProcedureValidator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.BaseLoadProcedureValidator.html",
    "title": "Class BaseLoadProcedureValidator | MapGuide Maestro",
    "keywords": "Class BaseLoadProcedureValidator Base class of all load procedure validations. Provides common load procedure validation logic. Inheritance System.Object BaseLoadProcedureValidator LoadProcedureValidator Implements IResourceValidator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public abstract class BaseLoadProcedureValidator : IResourceValidator Properties Connection The server connection which validation will be performed against Declaration public IServerConnection Connection { get; set; } Property Value Type Description IServerConnection SupportedResourceAndVersion Gets the resource type and version this validator supports Declaration public abstract ResourceTypeDescriptor SupportedResourceAndVersion { get; } Property Value Type Description ResourceTypeDescriptor Methods Validate(ResourceValidationContext, IResource, Boolean) Validats the specified resources for common issues associated with this resource type Declaration public virtual ValidationIssue[] Validate(ResourceValidationContext context, IResource resource, bool recurse) Parameters Type Name Description ResourceValidationContext context IResource resource System.Boolean recurse Returns Type Description ValidationIssue [] ValidateBase(ResourceValidationContext, IResource, Boolean) Performs base validation logic Declaration protected static ValidationIssue[] ValidateBase(ResourceValidationContext context, IResource resource, bool recurse) Parameters Type Name Description ResourceValidationContext context IResource resource System.Boolean recurse Returns Type Description ValidationIssue [] Implements IResourceValidator"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.BaseMapDefinitionValidator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.BaseMapDefinitionValidator.html",
    "title": "Class BaseMapDefinitionValidator | MapGuide Maestro",
    "keywords": "Class BaseMapDefinitionValidator Resource validator for Map Definitions Inheritance System.Object BaseMapDefinitionValidator MapDefinitionValidator Implements IResourceValidator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public abstract class BaseMapDefinitionValidator : IResourceValidator Properties Connection The server connection which validation will be performed against Declaration public IServerConnection Connection { get; set; } Property Value Type Description IServerConnection SupportedResourceAndVersion Gets the resource type and version this validator supports Declaration public abstract ResourceTypeDescriptor SupportedResourceAndVersion { get; } Property Value Type Description ResourceTypeDescriptor Methods Validate(ResourceValidationContext, IResource, Boolean) Validats the specified resources for common issues associated with this resource type Declaration public virtual ValidationIssue[] Validate(ResourceValidationContext context, IResource resource, bool recurse) Parameters Type Name Description ResourceValidationContext context IResource resource System.Boolean recurse Returns Type Description ValidationIssue [] ValidateBase(ResourceValidationContext, IResource, Boolean) Performs base resource validation Declaration protected ValidationIssue[] ValidateBase(ResourceValidationContext context, IResource resource, bool recurse) Parameters Type Name Description ResourceValidationContext context IResource resource System.Boolean recurse Returns Type Description ValidationIssue [] Implements IResourceValidator"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.BaseSymbolDefinitionValidator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.BaseSymbolDefinitionValidator.html",
    "title": "Class BaseSymbolDefinitionValidator | MapGuide Maestro",
    "keywords": "Class BaseSymbolDefinitionValidator The base class of Symbol Definition validators Inheritance System.Object BaseSymbolDefinitionValidator SymbolDefinitionValidator Implements IResourceValidator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public abstract class BaseSymbolDefinitionValidator : IResourceValidator Properties Connection The connection to use Declaration public IServerConnection Connection { get; set; } Property Value Type Description IServerConnection SupportedResourceAndVersion Gets the resource type and version this validator supports Declaration public abstract ResourceTypeDescriptor SupportedResourceAndVersion { get; } Property Value Type Description ResourceTypeDescriptor Methods Validate(ResourceValidationContext, IResource, Boolean) Validats the specified resources for common issues associated with this resource type Declaration public virtual ValidationIssue[] Validate(ResourceValidationContext context, IResource resource, bool recurse) Parameters Type Name Description ResourceValidationContext context IResource resource System.Boolean recurse Returns Type Description ValidationIssue [] ValidateBase(ResourceValidationContext, IResource, Boolean) Validats the specified resources for common issues associated with this resource type Declaration protected ValidationIssue[] ValidateBase(ResourceValidationContext context, IResource resource, bool recurse) Parameters Type Name Description ResourceValidationContext context IResource resource System.Boolean recurse Returns Type Description ValidationIssue [] ValidateSimpleSymbolDefinition(ISimpleSymbolDefinition, ResourceValidationContext) Validates the simple symbol definition. Declaration protected IEnumerable<ValidationIssue> ValidateSimpleSymbolDefinition(ISimpleSymbolDefinition ssym, ResourceValidationContext context) Parameters Type Name Description ISimpleSymbolDefinition ssym The ssym. ResourceValidationContext context The context. Returns Type Description IEnumerable < ValidationIssue > Implements IResourceValidator"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.BaseWebLayoutValidator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.BaseWebLayoutValidator.html",
    "title": "Class BaseWebLayoutValidator | MapGuide Maestro",
    "keywords": "Class BaseWebLayoutValidator Base class of all web layout validators. Provides common validation logic for web layouts Inheritance System.Object BaseWebLayoutValidator WebLayoutValidator Implements IResourceValidator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public abstract class BaseWebLayoutValidator : IResourceValidator Properties Connection The server connection which validation will be performed against Declaration public IServerConnection Connection { get; set; } Property Value Type Description IServerConnection SupportedResourceAndVersion Gets the resource type and version this validator supports Declaration public abstract ResourceTypeDescriptor SupportedResourceAndVersion { get; } Property Value Type Description ResourceTypeDescriptor Methods Validate(ResourceValidationContext, IResource, Boolean) Validats the specified resources for common issues associated with this resource type Declaration public virtual ValidationIssue[] Validate(ResourceValidationContext context, IResource resource, bool recurse) Parameters Type Name Description ResourceValidationContext context IResource resource System.Boolean recurse Returns Type Description ValidationIssue [] ValidateBase(ResourceValidationContext, IResource, Boolean) Performs base validation logic Declaration protected static ValidationIssue[] ValidateBase(ResourceValidationContext context, IResource resource, bool recurse) Parameters Type Name Description ResourceValidationContext context IResource resource System.Boolean recurse Returns Type Description ValidationIssue [] Implements IResourceValidator"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.DrawingSourceValidator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.DrawingSourceValidator.html",
    "title": "Class DrawingSourceValidator | MapGuide Maestro",
    "keywords": "Class DrawingSourceValidator Resource validator for Drawing Sources Inheritance System.Object DrawingSourceValidator Implements IResourceValidator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public class DrawingSourceValidator : IResourceValidator Properties Connection The server connection which validation will be performed against Declaration public IServerConnection Connection { get; set; } Property Value Type Description IServerConnection SupportedResourceAndVersion Gets the resource type and version this validator supports Declaration public ResourceTypeDescriptor SupportedResourceAndVersion { get; } Property Value Type Description ResourceTypeDescriptor Methods Validate(ResourceValidationContext, IResource, Boolean) Validats the specified resources for common issues associated with this resource type Declaration public ValidationIssue[] Validate(ResourceValidationContext context, IResource resource, bool recurse) Parameters Type Name Description ResourceValidationContext context IResource resource System.Boolean recurse Returns Type Description ValidationIssue [] Implements IResourceValidator"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.FeatureSourceValidator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.FeatureSourceValidator.html",
    "title": "Class FeatureSourceValidator | MapGuide Maestro",
    "keywords": "Class FeatureSourceValidator Resource validator for Feature Sources Inheritance System.Object FeatureSourceValidator Implements IResourceValidator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public class FeatureSourceValidator : IResourceValidator Properties Connection The server connection which validation will be performed against Declaration public IServerConnection Connection { get; set; } Property Value Type Description IServerConnection SupportedResourceAndVersion Gets the resource type and version this validator supports Declaration public ResourceTypeDescriptor SupportedResourceAndVersion { get; } Property Value Type Description ResourceTypeDescriptor Methods Validate(ResourceValidationContext, IResource, Boolean) Validats the specified resources for common issues associated with this resource type Declaration public ValidationIssue[] Validate(ResourceValidationContext context, IResource resource, bool recurse) Parameters Type Name Description ResourceValidationContext context IResource resource System.Boolean recurse Returns Type Description ValidationIssue [] Implements IResourceValidator"
  },
  "api/OSGeo.MapGuide.MaestroAPI.ResourceEventArgs.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.ResourceEventArgs.html",
    "title": "Class ResourceEventArgs | MapGuide Maestro",
    "keywords": "Class ResourceEventArgs Contains the resource id Inheritance System.Object ResourceEventArgs Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public class ResourceEventArgs : EventArgs Constructors ResourceEventArgs(String) Constructor Declaration public ResourceEventArgs(string resourceID) Parameters Type Name Description System.String resourceID Properties ResourceID Gets or sets the resource id Declaration public string ResourceID { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.ResourceEventHandler.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.ResourceEventHandler.html",
    "title": "Delegate ResourceEventHandler | MapGuide Maestro",
    "keywords": "Delegate ResourceEventHandler Represents a method involving a resource id Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public delegate void ResourceEventHandler(object sender, ResourceEventArgs e); Parameters Type Name Description System.Object sender ResourceEventArgs e"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Schema.ClassDefinition.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Schema.ClassDefinition.html",
    "title": "Class ClassDefinition | MapGuide Maestro",
    "keywords": "Class ClassDefinition Represents a FDO class definition. A Class Definition defines the structure of features that originate from it in feature queries. Class Definitions usually contain a Geometry property for spatial features. Class Definitions belong to a Feature Schema Inheritance System.Object SchemaElement ClassDefinition Implements IFdoSerializable Inherited Members SchemaElement.Name SchemaElement.Description System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Schema Assembly : cs.temp.dll.dll Syntax public sealed class ClassDefinition : SchemaElement, IFdoSerializable Constructors ClassDefinition(String, String) Initializes a new instance of the ClassDefinition class. Declaration public ClassDefinition(string name, string description) Parameters Type Name Description System.String name The name. System.String description The description. Properties BaseClass Gets or sets the base class Declaration public ClassDefinition BaseClass { get; set; } Property Value Type Description ClassDefinition DefaultGeometryPropertyName Gets or sets the name of the default geometry property. Declaration public string DefaultGeometryPropertyName { get; set; } Property Value Type Description System.String IdentityProperties Gets the identity properties Declaration public ReadOnlyCollection<DataPropertyDefinition> IdentityProperties { get; } Property Value Type Description ReadOnlyCollection < DataPropertyDefinition > IsAbstract Gets or sets whether this is abstract Declaration public bool IsAbstract { get; set; } Property Value Type Description System.Boolean IsComputed Gets or sets whether this is computed. Computed classes should have its properties checked out (and possibly modified) before serving as a basis for a new class definition Declaration public bool IsComputed { get; set; } Property Value Type Description System.Boolean Item[Int32] Gets the property definition at the specified index Declaration public PropertyDefinition this[int index] { get; } Parameters Type Name Description System.Int32 index Property Value Type Description PropertyDefinition Parent Gets the parent schema Declaration public FeatureSchema Parent { get; } Property Value Type Description FeatureSchema Properties Gets the properties Declaration public ReadOnlyCollection<PropertyDefinition> Properties { get; } Property Value Type Description ReadOnlyCollection < PropertyDefinition > QualifiedName Gets the qualified name of this class. The qualified name takes the form [Schema Name]:[Class Name] Declaration public string QualifiedName { get; } Property Value Type Description System.String Methods AddProperty(DataPropertyDefinition, Boolean) Adds the specified data property, with an option to include it as an identity property Declaration public void AddProperty(DataPropertyDefinition prop, bool identity) Parameters Type Name Description DataPropertyDefinition prop System.Boolean identity AddProperty(PropertyDefinition) Adds the specified property definition Declaration public void AddProperty(PropertyDefinition prop) Parameters Type Name Description PropertyDefinition prop ClearIdentityProperties() Removes the assigned identity properties Declaration public void ClearIdentityProperties() Clone(ClassDefinition) Creates a clone of the specified instance Declaration public static ClassDefinition Clone(ClassDefinition source) Parameters Type Name Description ClassDefinition source The instance to clone. Returns Type Description ClassDefinition FindProperty(String) Gets a Property Definition by its name Declaration public PropertyDefinition FindProperty(string name) Parameters Type Name Description System.String name Returns Type Description PropertyDefinition The matching property definition. null if none found GetOrdinal(String) Gets the ordinal of the specified property name Declaration public int GetOrdinal(string name) Parameters Type Name Description System.String name The property name. Returns Type Description System.Int32 IndexOfProperty(PropertyDefinition) Gets the index of the specified property Declaration public int IndexOfProperty(PropertyDefinition prop) Parameters Type Name Description PropertyDefinition prop Returns Type Description System.Int32 RemoveProperty(PropertyDefinition) Removes the specified property from the properties collection. If it is a data property definition, it is also removed from the identity properties collection Declaration public bool RemoveProperty(PropertyDefinition prop) Parameters Type Name Description PropertyDefinition prop Returns Type Description System.Boolean RemoveProperty(String) Removes the property definition of the specified name. If it is a data property it is also removed from the identity properties (if it is specified as one) Declaration public void RemoveProperty(string propertyName) Parameters Type Name Description System.String propertyName RemovePropertyAt(Int32) Removes the property definition at the specified index. If it is a data property is is also removed from the identity properties (if it is specified as one) Declaration public void RemovePropertyAt(int index) Parameters Type Name Description System.Int32 index Implements IFdoSerializable"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Schema.DataPropertyDefinition.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Schema.DataPropertyDefinition.html",
    "title": "Class DataPropertyDefinition | MapGuide Maestro",
    "keywords": "Class DataPropertyDefinition Derives from PropertyDefinition and represents simple values or collections of simple values. This can take on any of the data types listed in the DataPropertyType enumeration. Inheritance System.Object SchemaElement PropertyDefinition DataPropertyDefinition Implements IFdoSerializable IExpressionPropertySource Inherited Members PropertyDefinition.Parent PropertyDefinition.Parse(XmlNode, XmlNamespaceManager) PropertyDefinition.Clone(PropertyDefinition) SchemaElement.Name SchemaElement.Description System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Schema Assembly : cs.temp.dll.dll Syntax public class DataPropertyDefinition : PropertyDefinition, IFdoSerializable, IExpressionPropertySource Constructors DataPropertyDefinition(String, String) Initializes a new instance of the DataPropertyDefinition class. Declaration public DataPropertyDefinition(string name, string description) Parameters Type Name Description System.String name The name. System.String description The description. Properties DataType Gets the data type of this property Declaration public DataPropertyType DataType { get; set; } Property Value Type Description DataPropertyType DefaultValue Gets or sets the default value. Applies only to string data types Declaration public string DefaultValue { get; set; } Property Value Type Description System.String ExpressionType Gets the expression data type Declaration public override ExpressionDataType ExpressionType { get; } Property Value Type Description ExpressionDataType Overrides PropertyDefinition.ExpressionType IsAutoGenerated Gets or sets whether this property automatically generates a value on insert. Declaration public bool IsAutoGenerated { get; set; } Property Value Type Description System.Boolean IsNullable Gets or sets whether this property accepts null values Declaration public bool IsNullable { get; set; } Property Value Type Description System.Boolean IsReadOnly Gets or sets whether this property is read-only Declaration public bool IsReadOnly { get; set; } Property Value Type Description System.Boolean Length Gets or sets the length of this property. Applies only to string and blob/clob data types Declaration public int Length { get; set; } Property Value Type Description System.Int32 Precision Gets or sets the precision of this property. Applies only to decimal data types Declaration public int Precision { get; set; } Property Value Type Description System.Int32 Scale Gets or sets the scale of this property. Applies only to decimal data types. Declaration public int Scale { get; set; } Property Value Type Description System.Int32 Type Gets the type of Property Definition Declaration public override PropertyDefinitionType Type { get; } Property Value Type Description PropertyDefinitionType Overrides PropertyDefinition.Type Methods GetDataType(String) Gets the type of the data. Declaration public static DataPropertyType GetDataType(string xmlType) Parameters Type Name Description System.String xmlType Type of the XML. Returns Type Description DataPropertyType IsNumericType() Convenience method to get whether this data property is numeric Declaration public bool IsNumericType() Returns Type Description System.Boolean ReadXml(XmlNode, XmlNamespaceManager) Set the current element's content from the current XML node Declaration protected override void ReadXml(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description System.Xml.XmlNode node System.Xml.XmlNamespaceManager mgr Overrides PropertyDefinition.ReadXml(XmlNode, XmlNamespaceManager) WriteXml(XmlDocument, XmlNode) Writes the current element's content Declaration protected override void WriteXml(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description System.Xml.XmlDocument doc System.Xml.XmlNode currentNode Overrides PropertyDefinition.WriteXml(XmlDocument, XmlNode) Implements IFdoSerializable IExpressionPropertySource"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Schema.DataPropertyType.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Schema.DataPropertyType.html",
    "title": "Enum DataPropertyType | MapGuide Maestro",
    "keywords": "Enum DataPropertyType Defines the valid data types of data properties Namespace : OSGeo.MapGuide.MaestroAPI.Schema Assembly : cs.temp.dll.dll Syntax public enum DataPropertyType Fields Name Description Blob BLOB Boolean Boolean Byte Byte Clob CLOB DateTime DateTime Double Double Int16 Int16 Int32 Int32 Int64 Int64 Single Single String String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Schema.FeatureGeometricType.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Schema.FeatureGeometricType.html",
    "title": "Enum FeatureGeometricType | MapGuide Maestro",
    "keywords": "Enum FeatureGeometricType Defines the valid types of geometric storage in a geometric property Namespace : OSGeo.MapGuide.MaestroAPI.Schema Assembly : cs.temp.dll.dll Syntax public enum FeatureGeometricType Fields Name Description All All types Curve Curves (lines) Point Points Solid Solids Surface Surfaces (polygons)"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Schema.FeatureSchema.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Schema.FeatureSchema.html",
    "title": "Class FeatureSchema | MapGuide Maestro",
    "keywords": "Class FeatureSchema Contains all of the classes and relationships that make up a particular data model. This class is used to represent the internal logical structure of a Feature Source Inheritance System.Object SchemaElement FeatureSchema Implements IFdoSerializable Inherited Members SchemaElement.Name SchemaElement.Description System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Schema Assembly : cs.temp.dll.dll Syntax public class FeatureSchema : SchemaElement, IFdoSerializable Constructors FeatureSchema(String, String) Initializes a new instance of the FeatureSchema class. Declaration public FeatureSchema(string name, string description) Parameters Type Name Description System.String name The name. System.String description The description. Properties Classes Gets the class definitions Declaration public ReadOnlyCollection<ClassDefinition> Classes { get; } Property Value Type Description ReadOnlyCollection < ClassDefinition > Item[Int32] Gets the class definition at the specified index Declaration public ClassDefinition this[int index] { get; } Parameters Type Name Description System.Int32 index Property Value Type Description ClassDefinition Methods AddClass(ClassDefinition) Adds the specified class definition Declaration public void AddClass(ClassDefinition cls) Parameters Type Name Description ClassDefinition cls Clone(FeatureSchema) Creates a clone of the specified instance Declaration public static FeatureSchema Clone(FeatureSchema fs) Parameters Type Name Description FeatureSchema fs The instance to clone Returns Type Description FeatureSchema GetClass(String) Returns the Class Definition by its name Declaration public ClassDefinition GetClass(string name) Parameters Type Name Description System.String name Returns Type Description ClassDefinition The matching Class Definition. null if it doesn't exist GetItem(Int32) Gets the class definition at the specified index Declaration public ClassDefinition GetItem(int index) Parameters Type Name Description System.Int32 index Returns Type Description ClassDefinition IndexOf(ClassDefinition) Gets the index of the specified class definition Declaration public int IndexOf(ClassDefinition cls) Parameters Type Name Description ClassDefinition cls Returns Type Description System.Int32 ReadXml(XmlNode, XmlNamespaceManager) Set the current element's content from the current XML node Declaration public void ReadXml(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description System.Xml.XmlNode node System.Xml.XmlNamespaceManager mgr RemoveClass(ClassDefinition) Removes the specified class definition Declaration public bool RemoveClass(ClassDefinition cls) Parameters Type Name Description ClassDefinition cls Returns Type Description System.Boolean RemoveClass(String) Removes a class definition by its name Declaration public void RemoveClass(string className) Parameters Type Name Description System.String className WriteXml(XmlDocument, XmlNode) Writes the current element's content Declaration public void WriteXml(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description System.Xml.XmlDocument doc System.Xml.XmlNode currentNode Implements IFdoSerializable"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Schema.FeatureSourceDescription.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Schema.FeatureSourceDescription.html",
    "title": "Class FeatureSourceDescription | MapGuide Maestro",
    "keywords": "Class FeatureSourceDescription Class that represents a the layout of a feature source Inheritance System.Object FeatureSourceDescription Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Schema Assembly : cs.temp.dll.dll Syntax public class FeatureSourceDescription Constructors FeatureSourceDescription(Stream) Initializes a new instance of the FeatureSourceDescription class. Declaration public FeatureSourceDescription(Stream stream) Parameters Type Name Description System.IO.Stream stream The stream. Properties AllClasses Gets all the Class Definitions in this feature source. In the event of identically named Class Definitions beloning in different parent schemas. Use the QualifiedName property to distinguish them. Declaration public IEnumerable<ClassDefinition> AllClasses { get; } Property Value Type Description IEnumerable < ClassDefinition > IsPartial Gets whether this description is a partial description (ie. It doesn't represent the full feature source) Declaration public bool IsPartial { get; } Property Value Type Description System.Boolean SchemaNames Gets an array of feature schema names Declaration public string[] SchemaNames { get; } Property Value Type Description System.String [] Schemas Gets an array of feature schemas in this feature source Declaration public FeatureSchema[] Schemas { get; } Property Value Type Description FeatureSchema [] Methods Clone(FeatureSourceDescription) Creates a clone of the specified instance Declaration public static FeatureSourceDescription Clone(FeatureSourceDescription fsd) Parameters Type Name Description FeatureSourceDescription fsd The instance to clone Returns Type Description FeatureSourceDescription GetClass(String) Gets the specified class definition by its fully qualified name Declaration public ClassDefinition GetClass(string qualifiedName) Parameters Type Name Description System.String qualifiedName Returns Type Description ClassDefinition The matching class definition. null if not found GetClass(String, String) Gets the specified class definition by its name and parent schema name Declaration public ClassDefinition GetClass(string schemaName, string className) Parameters Type Name Description System.String schemaName System.String className Returns Type Description ClassDefinition The matching class definition. null if not found GetSchema(String) Gets a feature schema by its name Declaration public FeatureSchema GetSchema(string schemaName) Parameters Type Name Description System.String schemaName Returns Type Description FeatureSchema The matching feature schema. null if not found HasClasses() Gets whether there are any class definitions Declaration public bool HasClasses() Returns Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.GdalRasterLocationItem.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.GdalRasterLocationItem.html",
    "title": "Class GdalRasterLocationItem | MapGuide Maestro",
    "keywords": "Class GdalRasterLocationItem Represents a directory of raster images in a GDAL configuration document Inheritance System.Object GdalRasterLocationItem Namespace : OSGeo.MapGuide.MaestroAPI.SchemaOverrides Assembly : cs.temp.dll.dll Syntax public class GdalRasterLocationItem : IFdoSerializable Properties Items Gets all the raster image references in this location Declaration public GdalRasterItem[] Items { get; } Property Value Type Description GdalRasterItem [] Location Gets or sets the directory Declaration public string Location { get; set; } Property Value Type Description System.String Methods AddItem(GdalRasterItem) Adds the specified raster image reference Declaration public void AddItem(GdalRasterItem item) Parameters Type Name Description GdalRasterItem item CalculateExtents() Calculates the combined extents of all the raster images in this specified location Declaration public IEnvelope CalculateExtents() Returns Type Description IEnvelope null if there are no raster images. Otherwise returns the combined extent ReadXml(XmlNode, XmlNamespaceManager) Set the current element's content from the current XML node Declaration public void ReadXml(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description System.Xml.XmlNode node System.Xml.XmlNamespaceManager mgr RemoveItem(GdalRasterItem) Removes the specified raster image reference Declaration public void RemoveItem(GdalRasterItem item) Parameters Type Name Description GdalRasterItem item RemoveItem(String) Removes the specified raster image Declaration public void RemoveItem(string fileName) Parameters Type Name Description System.String fileName WriteXml(XmlDocument, XmlNode) Writes the current element's content Declaration public void WriteXml(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description System.Xml.XmlDocument doc System.Xml.XmlNode currentNode"
  },
  "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.GenericConfigurationDocument.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.GenericConfigurationDocument.html",
    "title": "Class GenericConfigurationDocument | MapGuide Maestro",
    "keywords": "Class GenericConfigurationDocument Represents a generic configuration document. Customisation is done by manipulating the individual XML content. Inheritance System.Object ConfigurationDocument GenericConfigurationDocument Inherited Members ConfigurationDocument._spatialContexts ConfigurationDocument._schemas ConfigurationDocument.SpatialContexts ConfigurationDocument.Schemas ConfigurationDocument.AddSpatialContext(IFdoSpatialContext) ConfigurationDocument.RemoveSpatialContext(IFdoSpatialContext) ConfigurationDocument.GetSpatialContext(String) ConfigurationDocument.GetSpatialContextNames() ConfigurationDocument.AddSchema(FeatureSchema) ConfigurationDocument.RemoveSchema(FeatureSchema) ConfigurationDocument.GetSchema(String) ConfigurationDocument.GetClass(String, String) ConfigurationDocument.WriteXml(XmlDocument, XmlNode) ConfigurationDocument.WriteSchemaMappings(XmlDocument, XmlNode) ConfigurationDocument.ReadSchemaMappings(XmlNode, XmlNamespaceManager) ConfigurationDocument.ReadXml(XmlNode, XmlNamespaceManager) ConfigurationDocument.ToXml() ConfigurationDocument.LoadXml(String) ConfigurationDocument.Load(Stream) Namespace : OSGeo.MapGuide.MaestroAPI.SchemaOverrides Assembly : cs.temp.dll.dll Syntax public class GenericConfigurationDocument : ConfigurationDocument Constructors GenericConfigurationDocument() Initializes a new instance of the GenericConfigurationDocument class. Declaration public GenericConfigurationDocument() Methods ReadSchemaMappings(XmlNode, XmlNamespaceManager) Write this document's schema mappings from the given XML document Declaration protected override void ReadSchemaMappings(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description System.Xml.XmlNode node The node. System.Xml.XmlNamespaceManager mgr The namespace manager. WriteSchemaMappings(XmlDocument, XmlNode) Write this document's schema mappings to the given XML document Declaration protected override void WriteSchemaMappings(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description System.Xml.XmlDocument doc System.Xml.XmlNode currentNode"
  },
  "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.OdbcConfigurationDocument.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.OdbcConfigurationDocument.html",
    "title": "Class OdbcConfigurationDocument | MapGuide Maestro",
    "keywords": "Class OdbcConfigurationDocument Represents a configuration document for the ODBC provider. The ODBC configuration document allows you to declare certain tables as point feature classes by specifying the X, Y and optionally Z columns of the table Inheritance System.Object ConfigurationDocument OdbcConfigurationDocument Inherited Members ConfigurationDocument._spatialContexts ConfigurationDocument._schemas ConfigurationDocument.SpatialContexts ConfigurationDocument.Schemas ConfigurationDocument.AddSpatialContext(IFdoSpatialContext) ConfigurationDocument.RemoveSpatialContext(IFdoSpatialContext) ConfigurationDocument.GetSpatialContext(String) ConfigurationDocument.GetSpatialContextNames() ConfigurationDocument.AddSchema(FeatureSchema) ConfigurationDocument.RemoveSchema(FeatureSchema) ConfigurationDocument.GetSchema(String) ConfigurationDocument.GetClass(String, String) ConfigurationDocument.WriteXml(XmlDocument, XmlNode) ConfigurationDocument.WriteSchemaMappings(XmlDocument, XmlNode) ConfigurationDocument.ReadSchemaMappings(XmlNode, XmlNamespaceManager) ConfigurationDocument.ReadXml(XmlNode, XmlNamespaceManager) ConfigurationDocument.ToXml() ConfigurationDocument.LoadXml(String) ConfigurationDocument.Load(Stream) Namespace : OSGeo.MapGuide.MaestroAPI.SchemaOverrides Assembly : cs.temp.dll.dll Syntax public class OdbcConfigurationDocument : ConfigurationDocument Constructors OdbcConfigurationDocument() Initializes a new instance of the OdbcConfigurationDocument class. Declaration public OdbcConfigurationDocument() Methods AddOverride(OdbcTableItem) Adds the specified table override Declaration public void AddOverride(OdbcTableItem item) Parameters Type Name Description OdbcTableItem item ClearMappings() Removes all table overrides Declaration public void ClearMappings() GetMappingsForSchema(String) Gets the table overrides for the specified schema Declaration public List<OdbcTableItem> GetMappingsForSchema(string schemaName) Parameters Type Name Description System.String schemaName Returns Type Description List < OdbcTableItem > GetOverride(String, String) Gets the table override for the specific feature class name. Declaration public OdbcTableItem GetOverride(string schemaName, string className) Parameters Type Name Description System.String schemaName System.String className Returns Type Description OdbcTableItem ReadSchemaMappings(XmlNode, XmlNamespaceManager) Write this document's schema mappings from the given XML document Declaration protected override void ReadSchemaMappings(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description System.Xml.XmlNode node The node. System.Xml.XmlNamespaceManager mgr The namespace manager. WriteSchemaMappings(XmlDocument, XmlNode) Write this document's schema mappings to the given XML document Declaration protected override void WriteSchemaMappings(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description System.Xml.XmlDocument doc System.Xml.XmlNode currentNode"
  },
  "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.OdbcTableItem.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.OdbcTableItem.html",
    "title": "Class OdbcTableItem | MapGuide Maestro",
    "keywords": "Class OdbcTableItem Represents a table override. A table override allows a table to be configured as a point feature class Inheritance System.Object OdbcTableItem Namespace : OSGeo.MapGuide.MaestroAPI.SchemaOverrides Assembly : cs.temp.dll.dll Syntax public class OdbcTableItem : IFdoSerializable Properties ClassName Gets or sets the name of the feature class this override is applicable to Declaration public string ClassName { get; set; } Property Value Type Description System.String SchemaName Gets or sets the name of the feature schema Declaration public string SchemaName { get; set; } Property Value Type Description System.String SpatialContextName Gets or sets the name of the spatial context the point geometries will be applicable to Declaration public string SpatialContextName { get; set; } Property Value Type Description System.String XColumn Gets or sets the name of the column which contains the X coordinates of the point features Declaration public string XColumn { get; set; } Property Value Type Description System.String YColumn Gets or sets the name of the column which contains the Y coordinates of the point features Declaration public string YColumn { get; set; } Property Value Type Description System.String ZColumn Gets or sets the name of the column which contains the Z coordinates of the point features Declaration public string ZColumn { get; set; } Property Value Type Description System.String Methods ReadXml(XmlNode, XmlNamespaceManager) Set the current element's content from the current XML node Declaration public void ReadXml(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description System.Xml.XmlNode node System.Xml.XmlNamespaceManager mgr WriteXml(XmlDocument, XmlNode) Writes the current element's content Declaration public void WriteXml(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description System.Xml.XmlDocument doc System.Xml.XmlNode currentNode"
  },
  "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.RasterWmsItem.WmsImageFormat.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.RasterWmsItem.WmsImageFormat.html",
    "title": "Class RasterWmsItem.WmsImageFormat | MapGuide Maestro",
    "keywords": "Class RasterWmsItem.WmsImageFormat Represents all valid WMS image formats Inheritance System.Object RasterWmsItem.WmsImageFormat Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.SchemaOverrides Assembly : cs.temp.dll.dll Syntax public static class WmsImageFormat Fields GIF Graphics Interchange Format (GIF) Declaration public const string GIF = \"GIF\" Field Value Type Description System.String JPG Joint Photographic Experts Group (JPEG) Declaration public const string JPG = \"JPG\" Field Value Type Description System.String PNG Portable Network Graphics (PNG) Declaration public const string PNG = \"PNG\" Field Value Type Description System.String TIF Tagged Image File (TIF) Declaration public const string TIF = \"TIF\" Field Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.RasterWmsItem.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.RasterWmsItem.html",
    "title": "Class RasterWmsItem | MapGuide Maestro",
    "keywords": "Class RasterWmsItem A WMS Raster configuration element Inheritance System.Object RasterWmsItem Namespace : OSGeo.MapGuide.MaestroAPI.SchemaOverrides Assembly : cs.temp.dll.dll Syntax public class RasterWmsItem : IFdoSerializable Constructors RasterWmsItem(String, String, String) Initializes a new instance of the RasterWmsItem class. Declaration public RasterWmsItem(string schemaName, string className, string rasterPropertyName) Parameters Type Name Description System.String schemaName Name of the schema System.String className Name of the class. System.String rasterPropertyName Name of the raster property. Properties BackgroundColor Gets or sets the color of the background. Declaration public Color BackgroundColor { get; set; } Property Value Type Description Color The color of the background. ElevationDimension Gets or sets the elevation dimension. Declaration public string ElevationDimension { get; set; } Property Value Type Description System.String The elevation dimension. FeatureClass Gets or sets the feature class. Declaration public string FeatureClass { get; set; } Property Value Type Description System.String The feature class. ImageFormat Gets or sets the image format. Declaration public string ImageFormat { get; set; } Property Value Type Description System.String The image format. IsTransparent Gets or sets a value indicating whether this instance is transparent. Declaration public bool IsTransparent { get; set; } Property Value Type Description System.Boolean true if this instance is transparent; otherwise, false . Layers Gets the array of WMS layer configuration elements Declaration public WmsLayerDefinition[] Layers { get; } Property Value Type Description WmsLayerDefinition [] RasterPropertyName Gets or sets the name of the raster property. Declaration public string RasterPropertyName { get; set; } Property Value Type Description System.String The name of the raster property. SchemaName Gets the name of the FDO logical schema this particular override applies to Declaration public string SchemaName { get; } Property Value Type Description System.String SpatialContextName Gets or sets the name of the spatial context. Declaration public string SpatialContextName { get; set; } Property Value Type Description System.String The name of the spatial context. Time Gets or sets the time. Declaration public string Time { get; set; } Property Value Type Description System.String The time. UseTileCache Gets or sets a value indicating whether tile caching is used Declaration public bool UseTileCache { get; set; } Property Value Type Description System.Boolean true if tile caching is used; otherwise, false . Methods AddLayer(WmsLayerDefinition) Adds a WMS layer configuration element. Declaration public void AddLayer(WmsLayerDefinition layer) Parameters Type Name Description WmsLayerDefinition layer The layer. ReadXml(XmlNode, XmlNamespaceManager) Set the current element's content from the current XML node Declaration public void ReadXml(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description XmlNode node XmlNamespaceManager mgr RemoveAllLayers() Removes all WMS layer configuration elements Declaration public void RemoveAllLayers() RemoveLayer(WmsLayerDefinition) Removes the given WMS layer configuration element Declaration public void RemoveLayer(WmsLayerDefinition layer) Parameters Type Name Description WmsLayerDefinition layer The layer. WriteXml(XmlDocument, XmlNode) Writes the current element's content Declaration public void WriteXml(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description XmlDocument doc XmlNode currentNode"
  },
  "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.WmsConfigurationDocument.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.WmsConfigurationDocument.html",
    "title": "Class WmsConfigurationDocument | MapGuide Maestro",
    "keywords": "Class WmsConfigurationDocument Represents a configuration document for the WMS provider. Inheritance System.Object ConfigurationDocument WmsConfigurationDocument Inherited Members ConfigurationDocument._spatialContexts ConfigurationDocument._schemas ConfigurationDocument.SpatialContexts ConfigurationDocument.Schemas ConfigurationDocument.AddSpatialContext(IFdoSpatialContext) ConfigurationDocument.RemoveSpatialContext(IFdoSpatialContext) ConfigurationDocument.GetSpatialContext(String) ConfigurationDocument.GetSpatialContextNames() ConfigurationDocument.AddSchema(FeatureSchema) ConfigurationDocument.RemoveSchema(FeatureSchema) ConfigurationDocument.GetSchema(String) ConfigurationDocument.GetClass(String, String) ConfigurationDocument.WriteXml(XmlDocument, XmlNode) ConfigurationDocument.ReadSchemaMappings(XmlNode, XmlNamespaceManager) ConfigurationDocument.ReadXml(XmlNode, XmlNamespaceManager) ConfigurationDocument.ToXml() ConfigurationDocument.LoadXml(String) ConfigurationDocument.Load(Stream) Namespace : OSGeo.MapGuide.MaestroAPI.SchemaOverrides Assembly : cs.temp.dll.dll Syntax public class WmsConfigurationDocument : ConfigurationDocument Properties RasterOverrides Gets an array of the added override items Declaration public RasterWmsItem[] RasterOverrides { get; } Property Value Type Description RasterWmsItem [] Methods AddRasterItem(RasterWmsItem) Adds the specified override item Declaration public void AddRasterItem(RasterWmsItem item) Parameters Type Name Description RasterWmsItem item EnsureConsistency() Removes any logical classes without physical mappings and vice versa, also ensures that the physical mapping refers to the correct logical raster property Declaration public void EnsureConsistency() EnsureRasterProperties(String) Ensures that classes in this document have an identity property and a raster property. Any classes which have neither, will have properties created for them Declaration public void EnsureRasterProperties(string defaultScName) Parameters Type Name Description System.String defaultScName The name of the default spatial context GetDefaultSpatialContext(IFeatureSource, IServerConnection) Gets the default spatial context from this configuration document. If none is found, the first spatial context from the given Feature Source is used Declaration public string GetDefaultSpatialContext(IFeatureSource fs, IServerConnection conn) Parameters Type Name Description IFeatureSource fs IServerConnection conn Returns Type Description System.String ReadSchemaMappings(XmlNode, XmlNamespaceManager) Write this document's schema mappings from the given XML document Declaration protected override void ReadSchemaMappings(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description System.Xml.XmlNode node The node. System.Xml.XmlNamespaceManager mgr The namespace manager. RemoveRasterItem(RasterWmsItem) Removes the specified override item Declaration public void RemoveRasterItem(RasterWmsItem item) Parameters Type Name Description RasterWmsItem item WriteSchemaMappings(XmlDocument, XmlNode) Write this document's schema mappings to the given XML document Declaration protected override void WriteSchemaMappings(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description XmlDocument doc XmlNode currentNode Overrides ConfigurationDocument.WriteSchemaMappings(XmlDocument, XmlNode)"
  },
  "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.WmsLayerDefinition.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.WmsLayerDefinition.html",
    "title": "Class WmsLayerDefinition | MapGuide Maestro",
    "keywords": "Class WmsLayerDefinition WMS Layer Definition configuration element Inheritance System.Object WmsLayerDefinition Namespace : OSGeo.MapGuide.MaestroAPI.SchemaOverrides Assembly : cs.temp.dll.dll Syntax public class WmsLayerDefinition : IFdoSerializable Constructors WmsLayerDefinition() Initializes a new instance of the WmsLayerDefinition class. Declaration public WmsLayerDefinition() WmsLayerDefinition(String) Initializes a new instance of the WmsLayerDefinition class. Declaration public WmsLayerDefinition(string layerName) Parameters Type Name Description System.String layerName Name of the layer. Properties Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description System.String The name. Style Gets or sets the style. Declaration public string Style { get; set; } Property Value Type Description System.String The style. Methods ReadXml(XmlNode, XmlNamespaceManager) Set the current element's content from the current XML node Declaration public void ReadXml(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description System.Xml.XmlNode node System.Xml.XmlNamespaceManager mgr WriteXml(XmlDocument, XmlNode) Writes the current element's content Declaration public void WriteXml(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description System.Xml.XmlDocument doc System.Xml.XmlNode currentNode"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.MapTilingConfiguration.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.MapTilingConfiguration.html",
    "title": "Class MapTilingConfiguration | MapGuide Maestro",
    "keywords": "Class MapTilingConfiguration Class that represents a single map to build tiles for Inheritance System.Object MapTilingConfiguration Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public class MapTilingConfiguration Constructors MapTilingConfiguration(TilingRunCollection, String) Constructs a new map to be processed Declaration public MapTilingConfiguration(TilingRunCollection parent, string map) Parameters Type Name Description TilingRunCollection parent The parent entry System.String map The resource id for the mapdefinition Properties Groups Gets the list of groups Declaration public string[] Groups { get; } Property Value Type Description System.String [] MaxExtent Gets or sets the maximum extent used to calculate the tiles Declaration public IEnvelope MaxExtent { get; set; } Property Value Type Description IEnvelope Parent Gets a reference to the parent tiling run collection Declaration public TilingRunCollection Parent { get; } Property Value Type Description TilingRunCollection Resolutions Gets the number of resolutions for the map Declaration public int Resolutions { get; } Property Value Type Description System.Int32 ResourceId Gets the resourceId for the map Declaration public string ResourceId { get; } Property Value Type Description System.String ScaleIndexMap The map's scales may have been modified, this array is a map of the new values Declaration public int[] ScaleIndexMap { get; } Property Value Type Description System.Int32 [] TileSet Gets the MapDefintion Declaration public ITileSetAbstract TileSet { get; } Property Value Type Description ITileSetAbstract TotalTiles Gets the total number of tiles to be rendered Declaration public long TotalTiles { get; } Property Value Type Description System.Int64 Methods Render() Renders all tiles in all groups in all scales Declaration public void Render() RenderGroup(String) Renders all tiles in all scales Declaration public void RenderGroup(string group) Parameters Type Name Description System.String group The name of the baselayer group RenderScale(Int32, String) Renders all tiles in a given scale Declaration public void RenderScale(int scaleindex, string group) Parameters Type Name Description System.Int32 scaleindex The scale to render System.String group The name of the baselayer group SetGroups(String[]) Sets the list of groups Declaration public void SetGroups(params string[] groups) Parameters Type Name Description System.String [] groups SetScales(Int32[]) Sets the list of scale indexes Declaration public void SetScales(int[] scaleindexes) Parameters Type Name Description System.Int32 [] scaleindexes SetScalesAndExtend(Int32[], IEnvelope) Sets the list of scale indexes and sets the maximum extent to the given envelope Declaration public void SetScalesAndExtend(int[] scales, IEnvelope envelope) Parameters Type Name Description System.Int32 [] scales IEnvelope envelope"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.TileErrorEventHandler.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.TileErrorEventHandler.html",
    "title": "Delegate TileErrorEventHandler | MapGuide Maestro",
    "keywords": "Delegate TileErrorEventHandler This delegate is used to monitor progress on tile rendering Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public delegate void TileErrorEventHandler(object sender, TileRenderingErrorEventArgs args); Parameters Type Name Description System.Object sender TileRenderingErrorEventArgs args"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.TileProgress.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.TileProgress.html",
    "title": "Struct TileProgress | MapGuide Maestro",
    "keywords": "Struct TileProgress A tile seeding progress event Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public struct TileProgress Constructors TileProgress(Int32, Int32) Constructs a new instance Declaration public TileProgress(int rendered, int total) Parameters Type Name Description System.Int32 rendered System.Int32 total Properties Rendered The number of rendered tiles Declaration public int Rendered { get; } Property Value Type Description System.Int32 Total The total number of tiles to be rendered Declaration public int Total { get; } Property Value Type Description System.Int32"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.TileProgressEventArgs.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.TileProgressEventArgs.html",
    "title": "Class TileProgressEventArgs | MapGuide Maestro",
    "keywords": "Class TileProgressEventArgs Tile progress event Inheritance System.Object TileProgressEventArgs Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public class TileProgressEventArgs : EventArgs Constructors TileProgressEventArgs(CallbackStates, MapTilingConfiguration, String, Int32, Int32, Int32, Boolean) Declaration public TileProgressEventArgs(CallbackStates state, MapTilingConfiguration map, string group, int scaleindex, int row, int column, bool cancel) Parameters Type Name Description CallbackStates state The state that invoked the callback MapTilingConfiguration map The map currently being processed System.String group The group being processed System.Int32 scaleindex The scaleindex being processed System.Int32 row The row being processed System.Int32 column The column being processed System.Boolean cancel A control flag to stop the tile rendering Properties Cancel A control flag to stop the tile rendering Declaration public bool Cancel { get; set; } Property Value Type Description System.Boolean Column The column being processed Declaration public int Column { get; } Property Value Type Description System.Int32 Group The group being processed Declaration public string Group { get; } Property Value Type Description System.String Map The map currently being processed Declaration public MapTilingConfiguration Map { get; } Property Value Type Description MapTilingConfiguration Row The row being processed Declaration public int Row { get; } Property Value Type Description System.Int32 ScaleIndex The scaleindex being processed Declaration public int ScaleIndex { get; } Property Value Type Description System.Int32 State The state that invoked the callback Declaration public CallbackStates State { get; } Property Value Type Description CallbackStates"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.TileProgressEventHandler.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.TileProgressEventHandler.html",
    "title": "Delegate TileProgressEventHandler | MapGuide Maestro",
    "keywords": "Delegate TileProgressEventHandler This delegate is used to monitor progress on tile rendering Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public delegate void TileProgressEventHandler(object sender, TileProgressEventArgs args); Parameters Type Name Description System.Object sender TileProgressEventArgs args"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.TileRef.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.TileRef.html",
    "title": "Struct TileRef | MapGuide Maestro",
    "keywords": "Struct TileRef Defines a request for a single tile Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public struct TileRef Constructors TileRef(String, Int32, Int32, Int32) Constructs a new instance Declaration public TileRef(string groupName, int row, int col, int scale) Parameters Type Name Description System.String groupName System.Int32 row System.Int32 col System.Int32 scale Properties Col The column Declaration public int Col { get; } Property Value Type Description System.Int32 GroupName The base layer group Declaration public string GroupName { get; } Property Value Type Description System.String Row The row Declaration public int Row { get; } Property Value Type Description System.Int32 Scale The scale index Declaration public int Scale { get; } Property Value Type Description System.Int32"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.TileRenderingErrorEventArgs.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.TileRenderingErrorEventArgs.html",
    "title": "Class TileRenderingErrorEventArgs | MapGuide Maestro",
    "keywords": "Class TileRenderingErrorEventArgs The rendering error event Inheritance System.Object TileRenderingErrorEventArgs Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public class TileRenderingErrorEventArgs : EventArgs Constructors TileRenderingErrorEventArgs(CallbackStates, MapTilingConfiguration, String, Int32, Int32, Int32, Exception) Declaration public TileRenderingErrorEventArgs(CallbackStates state, MapTilingConfiguration map, string group, int scaleindex, int row, int column, Exception error) Parameters Type Name Description CallbackStates state The state that invoked the callback MapTilingConfiguration map The map currently being processed System.String group The group being processed System.Int32 scaleindex The scaleindex being processed System.Int32 row The row being processed System.Int32 column The column being processed Exception error Properties Column The column being processed Declaration public int Column { get; } Property Value Type Description System.Int32 Error Declaration public Exception Error { get; set; } Property Value Type Description Exception Group The group being processed Declaration public string Group { get; } Property Value Type Description System.String Map The map currently being processed Declaration public MapTilingConfiguration Map { get; } Property Value Type Description MapTilingConfiguration Row The row being processed Declaration public int Row { get; } Property Value Type Description System.Int32 ScaleIndex The scaleindex being processed Declaration public int ScaleIndex { get; } Property Value Type Description System.Int32 State The state that invoked the callback Declaration public CallbackStates State { get; } Property Value Type Description CallbackStates"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.TileRunParameters.RenderMethodDelegate.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.TileRunParameters.RenderMethodDelegate.html",
    "title": "Delegate TileRunParameters.RenderMethodDelegate | MapGuide Maestro",
    "keywords": "Delegate TileRunParameters.RenderMethodDelegate Defines a tile render method Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public delegate void RenderMethodDelegate(string map, string group, int col, int row, int scale); Parameters Type Name Description System.String map System.String group System.Int32 col System.Int32 row System.Int32 scale"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IApplicationDefinitionWidgetInfoSet.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IApplicationDefinitionWidgetInfoSet.html",
    "title": "Interface IApplicationDefinitionWidgetInfoSet | MapGuide Maestro",
    "keywords": "Interface IApplicationDefinitionWidgetInfoSet Describes all available widgets Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IApplicationDefinitionWidgetInfoSet Properties WidgetInfo Gets the widgets Declaration IEnumerable<IWidgetInfo> WidgetInfo { get; } Property Value Type Description IEnumerable < IWidgetInfo >"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.ICmsMapOptions.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.ICmsMapOptions.html",
    "title": "Interface ICmsMapOptions | MapGuide Maestro",
    "keywords": "Interface ICmsMapOptions Describes external base layer options Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface ICmsMapOptions Properties Name The name of the external base layer Declaration string Name { get; set; } Property Value Type Description System.String Type The type of the external base layer Declaration string Type { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IExtensibleElement.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IExtensibleElement.html",
    "title": "Interface IExtensibleElement | MapGuide Maestro",
    "keywords": "Interface IExtensibleElement Represents an element that is extensible with arbitrary XML content Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IExtensibleElement Properties Extension Gets the extension Declaration IExtension Extension { get; } Property Value Type Description IExtension"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IExtension.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IExtension.html",
    "title": "Interface IExtension | MapGuide Maestro",
    "keywords": "Interface IExtension Represents a region of arbitrary XML content Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IExtension Properties Content Gets or sets the XML content. It is best to use the extension methods to get and set the appropriate values rather than accessing this array directly Declaration XmlElement[] Content { get; set; } Property Value Type Description XmlElement []"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IFlyoutItem.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IFlyoutItem.html",
    "title": "Interface IFlyoutItem | MapGuide Maestro",
    "keywords": "Interface IFlyoutItem Represents a toolbar/menu flyout item Inherited Members IUIItem.Parent IUIItem.Function IMenu.ItemCount IMenu.Items IMenu.MoveUp(IUIItem) IMenu.MoveDown(IUIItem) IMenu.GetIndex(IUIItem) IMenu.Insert(IUIItem, Int32) IMenu.AddItem(IUIItem) IMenu.RemoveItem(IUIItem) Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IFlyoutItem : IUIItem, IMenu, INotifyPropertyChanged Properties ImageClass The image CSS class Declaration string ImageClass { get; set; } Property Value Type Description System.String ImageUrl The image url Declaration string ImageUrl { get; set; } Property Value Type Description System.String Label The label Declaration string Label { get; set; } Property Value Type Description System.String Tooltip The tooltip Declaration string Tooltip { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IMap.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IMap.html",
    "title": "Interface IMap | MapGuide Maestro",
    "keywords": "Interface IMap Describes a map entry in a map group Inherited Members IExtensibleElement.Extension Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IMap : INotifyPropertyChanged, IExtensibleElement Properties CmsMapOptions External base layer options Declaration ICmsMapOptions CmsMapOptions { get; set; } Property Value Type Description ICmsMapOptions OverlayOptions MapGuide overlay options Declaration IMapGuideOverlayOptions OverlayOptions { get; set; } Property Value Type Description IMapGuideOverlayOptions SingleTile Indicates if it is single tile Declaration bool SingleTile { get; set; } Property Value Type Description System.Boolean Type The type of map Declaration string Type { get; set; } Property Value Type Description System.String Methods AsXml() Outputs to XML Declaration string AsXml() Returns Type Description System.String CreateOptions(String, String) Creates external base layer options Declaration ICmsMapOptions CreateOptions(string name, string type) Parameters Type Name Description System.String name System.String type Returns Type Description ICmsMapOptions CreateOverlayOptions(Boolean, Boolean, String) Creates MapGuide overlay options Declaration IMapGuideOverlayOptions CreateOverlayOptions(bool isBaseLayer, bool useOverlay, string projection) Parameters Type Name Description System.Boolean isBaseLayer System.Boolean useOverlay System.String projection Returns Type Description IMapGuideOverlayOptions FromXml(String) Initialize from XML Declaration void FromXml(string xml) Parameters Type Name Description System.String xml"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IMapGroup.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IMapGroup.html",
    "title": "Interface IMapGroup | MapGuide Maestro",
    "keywords": "Interface IMapGroup Describes a Map Group in a Flexible Layout. A MapGroup consists of a MapGuide Map Definition and zero or more external base layers Inherited Members IExtensibleElement.Extension Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IMapGroup : IExtensibleElement, INotifyPropertyChanged Properties id The map group id Declaration string id { get; set; } Property Value Type Description System.String InitialView The initial map view Declaration IMapView InitialView { get; set; } Property Value Type Description IMapView Map The list of map entries Declaration IEnumerable<IMap> Map { get; } Property Value Type Description IEnumerable < IMap > MapCount Gets the count of map entries Declaration int MapCount { get; } Property Value Type Description System.Int32 Methods AddMap(IMap) Adds a map entr Declaration void AddMap(IMap map) Parameters Type Name Description IMap map CreateCmsMapEntry(String, Boolean, String, String) Creates a external base layer map entry Declaration IMap CreateCmsMapEntry(string type, bool singleTile, string name, string olType) Parameters Type Name Description System.String type System.Boolean singleTile System.String name System.String olType Returns Type Description IMap CreateGenericEntry() Creates a generic map entry Declaration IMap CreateGenericEntry() Returns Type Description IMap CreateInitialView(Double, Double, Double) Creates an initial map view Declaration IMapView CreateInitialView(double x, double y, double scale) Parameters Type Name Description System.Double x System.Double y System.Double scale Returns Type Description IMapView CreateMapGuideEntry(String) Creates a MapGuide map entry Declaration IMap CreateMapGuideEntry(string mapDefinition) Parameters Type Name Description System.String mapDefinition Returns Type Description IMap GetMapAt(Int32) Gets the map entry at the given index Declaration IMap GetMapAt(int index) Parameters Type Name Description System.Int32 index Returns Type Description IMap MoveDown(IMap) Moves the given map entry down Declaration bool MoveDown(IMap map) Parameters Type Name Description IMap map Returns Type Description System.Boolean MoveUp(IMap) Moves the given map entry up Declaration bool MoveUp(IMap map) Parameters Type Name Description IMap map Returns Type Description System.Boolean RemoveMap(IMap) Removes the given map entr Declaration void RemoveMap(IMap map) Parameters Type Name Description IMap map"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IMapGuideOverlayOptions.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IMapGuideOverlayOptions.html",
    "title": "Interface IMapGuideOverlayOptions | MapGuide Maestro",
    "keywords": "Interface IMapGuideOverlayOptions Describes MapGuide overlay options Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IMapGuideOverlayOptions Properties IsBaseLayer Indicates if this is a base layer Declaration bool IsBaseLayer { get; set; } Property Value Type Description System.Boolean Projection Indicates the projection Declaration string Projection { get; set; } Property Value Type Description System.String UseOverlay Indicates if selection overlay should be used Declaration bool UseOverlay { get; set; } Property Value Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoFunctionArgumentDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoFunctionArgumentDefinition.html",
    "title": "Interface IFdoFunctionArgumentDefinition | MapGuide Maestro",
    "keywords": "Interface IFdoFunctionArgumentDefinition Describes an argument of an FDO function Namespace : OSGeo.MapGuide.ObjectModels.Capabilities Assembly : cs.temp.dll.dll Syntax public interface IFdoFunctionArgumentDefinition Properties Description The description of the argument Declaration string Description { get; } Property Value Type Description System.String Name The name of the argument Declaration string Name { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoFunctionDefintion.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoFunctionDefintion.html",
    "title": "Interface IFdoFunctionDefintion | MapGuide Maestro",
    "keywords": "Interface IFdoFunctionDefintion Describes an FDO function Namespace : OSGeo.MapGuide.ObjectModels.Capabilities Assembly : cs.temp.dll.dll Syntax public interface IFdoFunctionDefintion Properties Description The description of the function Declaration string Description { get; } Property Value Type Description System.String Name The name of the function Declaration string Name { get; } Property Value Type Description System.String Signatures The array of supported signatures Declaration IFdoFunctionDefintionSignature[] Signatures { get; } Property Value Type Description IFdoFunctionDefintionSignature []"
  },
  "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoFunctionDefintionSignature.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoFunctionDefintionSignature.html",
    "title": "Interface IFdoFunctionDefintionSignature | MapGuide Maestro",
    "keywords": "Interface IFdoFunctionDefintionSignature Describes an FDO function signature Namespace : OSGeo.MapGuide.ObjectModels.Capabilities Assembly : cs.temp.dll.dll Syntax public interface IFdoFunctionDefintionSignature Properties Arguments The array of arguments in this function signature Declaration IFdoFunctionArgumentDefinition[] Arguments { get; } Property Value Type Description IFdoFunctionArgumentDefinition [] ReturnType Gets the return type of this signature Declaration string ReturnType { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoGeometryCapabilities.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoGeometryCapabilities.html",
    "title": "Interface IFdoGeometryCapabilities | MapGuide Maestro",
    "keywords": "Interface IFdoGeometryCapabilities Describes the geometry capabilities of the FDO provider Namespace : OSGeo.MapGuide.ObjectModels.Capabilities Assembly : cs.temp.dll.dll Syntax public interface IFdoGeometryCapabilities Properties Dimensionality The supported dimensionality Declaration string Dimensionality { get; } Property Value Type Description System.String SupportedComponentTypes The array of supported geometry component types Declaration string[] SupportedComponentTypes { get; } Property Value Type Description System.String [] SupportedGeometryTypes The array of supported geometry types Declaration string[] SupportedGeometryTypes { get; } Property Value Type Description System.String []"
  },
  "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoProviderCapabilities.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoProviderCapabilities.html",
    "title": "Interface IFdoProviderCapabilities | MapGuide Maestro",
    "keywords": "Interface IFdoProviderCapabilities Describes capabilities of the FDO provider Namespace : OSGeo.MapGuide.ObjectModels.Capabilities Assembly : cs.temp.dll.dll Syntax public interface IFdoProviderCapabilities Properties Command Command capabilities Declaration IFdoCommandCapabilities Command { get; } Property Value Type Description IFdoCommandCapabilities Connection Connection capabilities Declaration IFdoConnectionCapabilities Connection { get; } Property Value Type Description IFdoConnectionCapabilities Expression Expression capabilities Declaration IFdoExpressionCapabilities Expression { get; } Property Value Type Description IFdoExpressionCapabilities Filter Filter capabilities Declaration IFdoFilterCapabilities Filter { get; } Property Value Type Description IFdoFilterCapabilities Geometry Geometry capabilities Declaration IFdoGeometryCapabilities Geometry { get; } Property Value Type Description IFdoGeometryCapabilities Raster Raster capabilities Declaration IFdoRasterCapabilities Raster { get; } Property Value Type Description IFdoRasterCapabilities Schema Schema capabilities Declaration IFdoSchemaCapabilities Schema { get; } Property Value Type Description IFdoSchemaCapabilities"
  },
  "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoRasterCapabilities.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoRasterCapabilities.html",
    "title": "Interface IFdoRasterCapabilities | MapGuide Maestro",
    "keywords": "Interface IFdoRasterCapabilities Describes the raster capabilities of the FDO provider Namespace : OSGeo.MapGuide.ObjectModels.Capabilities Assembly : cs.temp.dll.dll Syntax public interface IFdoRasterCapabilities Properties SupportsRaster Indicates if rasters are supported Declaration bool SupportsRaster { get; } Property Value Type Description System.Boolean SupportsStitching Indicates if stitching is supported Declaration bool SupportsStitching { get; } Property Value Type Description System.Boolean SupportsSubsampling Indicates if sub-sampling is supported Declaration bool SupportsSubsampling { get; } Property Value Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoSchemaCapabilities.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoSchemaCapabilities.html",
    "title": "Interface IFdoSchemaCapabilities | MapGuide Maestro",
    "keywords": "Interface IFdoSchemaCapabilities Describes the schema capabilities of the FDO provider Namespace : OSGeo.MapGuide.ObjectModels.Capabilities Assembly : cs.temp.dll.dll Syntax public interface IFdoSchemaCapabilities Properties SupportedClassTypes The array of supported class definition types Declaration string[] SupportedClassTypes { get; } Property Value Type Description System.String [] SupportedDataTypes The array of supported data types Declaration string[] SupportedDataTypes { get; } Property Value Type Description System.String [] SupportsAssociationProperties Indicates if association properties are supported Declaration bool SupportsAssociationProperties { get; } Property Value Type Description System.Boolean SupportsInheritance Indicates if inheritance is supported Declaration bool SupportsInheritance { get; } Property Value Type Description System.Boolean SupportsMultipleSchemas Indicates if multiple-schemas is supported Declaration bool SupportsMultipleSchemas { get; } Property Value Type Description System.Boolean SupportsNetworkModel Indicates if network model is supported Declaration bool SupportsNetworkModel { get; } Property Value Type Description System.Boolean SupportsObjectProperties Indicates if object properties is supported Declaration bool SupportsObjectProperties { get; } Property Value Type Description System.Boolean SupportsSchemaOverrides Indicates if schema overrides is supported Declaration bool SupportsSchemaOverrides { get; } Property Value Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.ObjectModels.Capabilities.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Capabilities.html",
    "title": "Namespace OSGeo.MapGuide.ObjectModels.Capabilities | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.ObjectModels.Capabilities Interfaces IFdoCommandCapabilities Describes command capabilities for an FDO provider IFdoConnectionCapabilities Describes connection capabilities for an FDO provider IFdoExpressionCapabilities Describes the FDO expression capabilities of the FDO provider IFdoFilterCapabilities Describes the filter capabilities of the FDO provider IFdoFunctionArgumentDefinition Describes an argument of an FDO function IFdoFunctionDefintion Describes an FDO function IFdoFunctionDefintionSignature Describes an FDO function signature IFdoGeometryCapabilities Describes the geometry capabilities of the FDO provider IFdoProviderCapabilities Describes capabilities of the FDO provider IFdoRasterCapabilities Describes the raster capabilities of the FDO provider IFdoSchemaCapabilities Describes the schema capabilities of the FDO provider"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.GroupList.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.GroupList.html",
    "title": "Class GroupList | MapGuide Maestro",
    "keywords": "Class GroupList Group list Inheritance System.Object GroupList Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class GroupList : ComponentModel.INotifyPropertyChanged Properties Group Declaration public BindingList<GroupListGroup> Group { get; set; } Property Value Type Description BindingList < GroupListGroup > Methods Clone() Create a clone of this GroupList object Declaration public virtual GroupList Clone() Returns Type Description GroupList Deserialize(String) Declaration public static GroupList Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description GroupList Deserialize(String, out GroupList) Declaration public static bool Deserialize(string xml, out GroupList obj) Parameters Type Name Description System.String xml GroupList obj Returns Type Description System.Boolean Deserialize(String, out GroupList, out Exception) Deserializes workflow markup into an GroupList object Declaration public static bool Deserialize(string xml, out GroupList obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize GroupList obj Output GroupList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static GroupList LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description GroupList LoadFromFile(String, out GroupList) Declaration public static bool LoadFromFile(string fileName, out GroupList obj) Parameters Type Name Description System.String fileName GroupList obj Returns Type Description System.Boolean LoadFromFile(String, out GroupList, out Exception) Deserializes xml markup from file into an GroupList object Declaration public static bool LoadFromFile(string fileName, out GroupList obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize GroupList obj Output GroupList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current GroupList object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current GroupList object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.GroupListGroup.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.GroupListGroup.html",
    "title": "Class GroupListGroup | MapGuide Maestro",
    "keywords": "Class GroupListGroup Inheritance System.Object GroupListGroup Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class GroupListGroup : ComponentModel.INotifyPropertyChanged Properties Description Declaration public string Description { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this GroupListGroup object Declaration public virtual GroupListGroup Clone() Returns Type Description GroupListGroup Deserialize(String) Declaration public static GroupListGroup Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description GroupListGroup Deserialize(String, out GroupListGroup) Declaration public static bool Deserialize(string xml, out GroupListGroup obj) Parameters Type Name Description System.String xml GroupListGroup obj Returns Type Description System.Boolean Deserialize(String, out GroupListGroup, out Exception) Deserializes workflow markup into an GroupListGroup object Declaration public static bool Deserialize(string xml, out GroupListGroup obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize GroupListGroup obj Output GroupListGroup object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static GroupListGroup LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description GroupListGroup LoadFromFile(String, out GroupListGroup) Declaration public static bool LoadFromFile(string fileName, out GroupListGroup obj) Parameters Type Name Description System.String fileName GroupListGroup obj Returns Type Description System.Boolean LoadFromFile(String, out GroupListGroup, out Exception) Deserializes xml markup from file into an GroupListGroup object Declaration public static bool LoadFromFile(string fileName, out GroupListGroup obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize GroupListGroup obj Output GroupListGroup object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current GroupListGroup object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current GroupListGroup object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.IEnvelope.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.IEnvelope.html",
    "title": "Interface IEnvelope | MapGuide Maestro",
    "keywords": "Interface IEnvelope Represents a rectangular bounding box Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax public interface IEnvelope : INotifyPropertyChanged Properties MaxX Gets or sets the max X. Declaration double MaxX { get; set; } Property Value Type Description System.Double The max X. MaxY Gets or sets the max Y. Declaration double MaxY { get; set; } Property Value Type Description System.Double The max Y. MinX Gets or sets the min X. Declaration double MinX { get; set; } Property Value Type Description System.Double The min X. MinY Gets or sets the min Y. Declaration double MinY { get; set; } Property Value Type Description System.Double The min Y."
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.IExpressionPropertySource.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.IExpressionPropertySource.html",
    "title": "Interface IExpressionPropertySource | MapGuide Maestro",
    "keywords": "Interface IExpressionPropertySource An FDO expression property source Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax public interface IExpressionPropertySource Properties Description Gets the description Declaration string Description { get; } Property Value Type Description System.String ExpressionType Gets the expression data type Declaration ExpressionDataType ExpressionType { get; } Property Value Type Description ExpressionDataType Name Gets the name Declaration string Name { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.IFdoSerializable.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.IFdoSerializable.html",
    "title": "Interface IFdoSerializable | MapGuide Maestro",
    "keywords": "Interface IFdoSerializable Defines an interface for reading and writing content to and from FDO XML documents Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax public interface IFdoSerializable Methods ReadXml(XmlNode, XmlNamespaceManager) Set the current element's content from the current XML node Declaration void ReadXml(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description XmlNode node XmlNamespaceManager mgr WriteXml(XmlDocument, XmlNode) Writes the current element's content Declaration void WriteXml(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description XmlDocument doc XmlNode currentNode"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.IFdoSpatialContext.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.IFdoSpatialContext.html",
    "title": "Interface IFdoSpatialContext | MapGuide Maestro",
    "keywords": "Interface IFdoSpatialContext Represents a Spatial Context of a Feature Source Inherited Members IFdoSerializable.WriteXml(XmlDocument, XmlNode) IFdoSerializable.ReadXml(XmlNode, XmlNamespaceManager) Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax public interface IFdoSpatialContext : IFdoSerializable Properties CoordinateSystemName Gets or sets the name of the coordinate system. Declaration string CoordinateSystemName { get; set; } Property Value Type Description System.String The name of the coordinate system. CoordinateSystemWkt Gets or sets the coordinate system WKT. Declaration string CoordinateSystemWkt { get; set; } Property Value Type Description System.String The coordinate system WKT. Description Gets or sets the description. Declaration string Description { get; set; } Property Value Type Description System.String The description. Extent Gets or sets the extent. Declaration IEnvelope Extent { get; set; } Property Value Type Description IEnvelope The extent. ExtentType Gets or sets the type of the extent. Declaration FdoSpatialContextListSpatialContextExtentType ExtentType { get; set; } Property Value Type Description FdoSpatialContextListSpatialContextExtentType The type of the extent. Name Gets or sets the name. Declaration string Name { get; set; } Property Value Type Description System.String The name. XYTolerance Gets or sets the XY tolerance. Declaration double XYTolerance { get; set; } Property Value Type Description System.Double The XY tolerance. ZTolerance Gets or sets the Z tolerance. Declaration double ZTolerance { get; set; } Property Value Type Description System.Double The Z tolerance."
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ILongTransaction.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ILongTransaction.html",
    "title": "Interface ILongTransaction | MapGuide Maestro",
    "keywords": "Interface ILongTransaction Represents a long transaction Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax public interface ILongTransaction Properties CreationDate Gets the creation date of the long transaction Declaration string CreationDate { get; } Property Value Type Description System.String Description Gets the description of the long transaction Declaration string Description { get; } Property Value Type Description System.String IsActive Gets whether the long transaction is active Declaration bool IsActive { get; } Property Value Type Description System.Boolean IsFrozen Gets whether the long transaction is frozen Declaration bool IsFrozen { get; } Property Value Type Description System.Boolean Name Gets the name of the long transaction Declaration string Name { get; } Property Value Type Description System.String Owner Gets the owner of the long transaction Declaration string Owner { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ILongTransactionList.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ILongTransactionList.html",
    "title": "Interface ILongTransactionList | MapGuide Maestro",
    "keywords": "Interface ILongTransactionList Represents a list of long transactions Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax public interface ILongTransactionList Properties Transactions Gets the long transactions in this list Declaration IEnumerable<ILongTransaction> Transactions { get; } Property Value Type Description IEnumerable < ILongTransaction >"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourcePackageManifestOperationsOperationParametersParameter.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourcePackageManifestOperationsOperationParametersParameter.html",
    "title": "Class ResourcePackageManifestOperationsOperationParametersParameter | MapGuide Maestro",
    "keywords": "Class ResourcePackageManifestOperationsOperationParametersParameter operation parameter Inheritance System.Object ResourcePackageManifestOperationsOperationParametersParameter Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourcePackageManifestOperationsOperationParametersParameter : ComponentModel.INotifyPropertyChanged Properties ContentType Content type of the referenced resource or data Declaration public string ContentType { get; set; } Property Value Type Description System.String Name Name of the parameter Declaration public string Name { get; set; } Property Value Type Description System.String Value Value of the parameter Declaration public string Value { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this ResourcePackageManifestOperationsOperationParametersParameter object Declaration public virtual ResourcePackageManifestOperationsOperationParametersParameter Clone() Returns Type Description ResourcePackageManifestOperationsOperationParametersParameter Deserialize(String) Declaration public static ResourcePackageManifestOperationsOperationParametersParameter Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourcePackageManifestOperationsOperationParametersParameter Deserialize(String, out ResourcePackageManifestOperationsOperationParametersParameter) Declaration public static bool Deserialize(string xml, out ResourcePackageManifestOperationsOperationParametersParameter obj) Parameters Type Name Description System.String xml ResourcePackageManifestOperationsOperationParametersParameter obj Returns Type Description System.Boolean Deserialize(String, out ResourcePackageManifestOperationsOperationParametersParameter, out Exception) Deserializes workflow markup into an ResourcePackageManifestOperationsOperationParametersParameter object Declaration public static bool Deserialize(string xml, out ResourcePackageManifestOperationsOperationParametersParameter obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourcePackageManifestOperationsOperationParametersParameter obj Output ResourcePackageManifestOperationsOperationParametersParameter object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourcePackageManifestOperationsOperationParametersParameter LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourcePackageManifestOperationsOperationParametersParameter LoadFromFile(String, out ResourcePackageManifestOperationsOperationParametersParameter) Declaration public static bool LoadFromFile(string fileName, out ResourcePackageManifestOperationsOperationParametersParameter obj) Parameters Type Name Description System.String fileName ResourcePackageManifestOperationsOperationParametersParameter obj Returns Type Description System.Boolean LoadFromFile(String, out ResourcePackageManifestOperationsOperationParametersParameter, out Exception) Deserializes xml markup from file into an ResourcePackageManifestOperationsOperationParametersParameter object Declaration public static bool LoadFromFile(string fileName, out ResourcePackageManifestOperationsOperationParametersParameter obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourcePackageManifestOperationsOperationParametersParameter obj Output ResourcePackageManifestOperationsOperationParametersParameter object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourcePackageManifestOperationsOperationParametersParameter object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourcePackageManifestOperationsOperationParametersParameter object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourceReferenceList.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourceReferenceList.html",
    "title": "Class ResourceReferenceList | MapGuide Maestro",
    "keywords": "Class ResourceReferenceList Resource Reference list Inheritance System.Object ResourceReferenceList Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourceReferenceList : ComponentModel.INotifyPropertyChanged Properties ResourceId Declaration public BindingList<string> ResourceId { get; set; } Property Value Type Description BindingList < System.String > Methods Clone() Create a clone of this ResourceReferenceList object Declaration public virtual ResourceReferenceList Clone() Returns Type Description ResourceReferenceList Deserialize(String) Declaration public static ResourceReferenceList Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourceReferenceList Deserialize(String, out ResourceReferenceList) Declaration public static bool Deserialize(string xml, out ResourceReferenceList obj) Parameters Type Name Description System.String xml ResourceReferenceList obj Returns Type Description System.Boolean Deserialize(String, out ResourceReferenceList, out Exception) Deserializes workflow markup into an ResourceReferenceList object Declaration public static bool Deserialize(string xml, out ResourceReferenceList obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourceReferenceList obj Output ResourceReferenceList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourceReferenceList LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourceReferenceList LoadFromFile(String, out ResourceReferenceList) Declaration public static bool LoadFromFile(string fileName, out ResourceReferenceList obj) Parameters Type Name Description System.String fileName ResourceReferenceList obj Returns Type Description System.Boolean LoadFromFile(String, out ResourceReferenceList, out Exception) Deserializes xml markup from file into an ResourceReferenceList object Declaration public static bool LoadFromFile(string fileName, out ResourceReferenceList obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourceReferenceList obj Output ResourceReferenceList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourceReferenceList object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourceReferenceList object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourceSecurityType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourceSecurityType.html",
    "title": "Class ResourceSecurityType | MapGuide Maestro",
    "keywords": "Class ResourceSecurityType Inheritance System.Object ResourceSecurityType Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourceSecurityType : ComponentModel.INotifyPropertyChanged Properties Groups Declaration public ResourceSecurityTypeGroups Groups { get; set; } Property Value Type Description ResourceSecurityTypeGroups Inherited Declaration public bool Inherited { get; set; } Property Value Type Description System.Boolean Users Declaration public ResourceSecurityTypeUsers Users { get; set; } Property Value Type Description ResourceSecurityTypeUsers Methods Clone() Create a clone of this ResourceSecurityType object Declaration public virtual ResourceSecurityType Clone() Returns Type Description ResourceSecurityType Deserialize(String) Declaration public static ResourceSecurityType Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourceSecurityType Deserialize(String, out ResourceSecurityType) Declaration public static bool Deserialize(string xml, out ResourceSecurityType obj) Parameters Type Name Description System.String xml ResourceSecurityType obj Returns Type Description System.Boolean Deserialize(String, out ResourceSecurityType, out Exception) Deserializes workflow markup into an ResourceSecurityType object Declaration public static bool Deserialize(string xml, out ResourceSecurityType obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourceSecurityType obj Output ResourceSecurityType object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourceSecurityType LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourceSecurityType LoadFromFile(String, out ResourceSecurityType) Declaration public static bool LoadFromFile(string fileName, out ResourceSecurityType obj) Parameters Type Name Description System.String fileName ResourceSecurityType obj Returns Type Description System.Boolean LoadFromFile(String, out ResourceSecurityType, out Exception) Deserializes xml markup from file into an ResourceSecurityType object Declaration public static bool LoadFromFile(string fileName, out ResourceSecurityType obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourceSecurityType obj Output ResourceSecurityType object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourceSecurityType object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourceSecurityType object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourceSecurityTypeGroups.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourceSecurityTypeGroups.html",
    "title": "Class ResourceSecurityTypeGroups | MapGuide Maestro",
    "keywords": "Class ResourceSecurityTypeGroups Inheritance System.Object ResourceSecurityTypeGroups Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourceSecurityTypeGroups : ComponentModel.INotifyPropertyChanged Properties Group Declaration public BindingList<ResourceSecurityTypeGroupsGroup> Group { get; set; } Property Value Type Description BindingList < ResourceSecurityTypeGroupsGroup > Methods Clone() Create a clone of this ResourceSecurityTypeGroups object Declaration public virtual ResourceSecurityTypeGroups Clone() Returns Type Description ResourceSecurityTypeGroups Deserialize(String) Declaration public static ResourceSecurityTypeGroups Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourceSecurityTypeGroups Deserialize(String, out ResourceSecurityTypeGroups) Declaration public static bool Deserialize(string xml, out ResourceSecurityTypeGroups obj) Parameters Type Name Description System.String xml ResourceSecurityTypeGroups obj Returns Type Description System.Boolean Deserialize(String, out ResourceSecurityTypeGroups, out Exception) Deserializes workflow markup into an ResourceSecurityTypeGroups object Declaration public static bool Deserialize(string xml, out ResourceSecurityTypeGroups obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourceSecurityTypeGroups obj Output ResourceSecurityTypeGroups object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourceSecurityTypeGroups LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourceSecurityTypeGroups LoadFromFile(String, out ResourceSecurityTypeGroups) Declaration public static bool LoadFromFile(string fileName, out ResourceSecurityTypeGroups obj) Parameters Type Name Description System.String fileName ResourceSecurityTypeGroups obj Returns Type Description System.Boolean LoadFromFile(String, out ResourceSecurityTypeGroups, out Exception) Deserializes xml markup from file into an ResourceSecurityTypeGroups object Declaration public static bool LoadFromFile(string fileName, out ResourceSecurityTypeGroups obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourceSecurityTypeGroups obj Output ResourceSecurityTypeGroups object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourceSecurityTypeGroups object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourceSecurityTypeGroups object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourceSecurityTypeGroupsGroup.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourceSecurityTypeGroupsGroup.html",
    "title": "Class ResourceSecurityTypeGroupsGroup | MapGuide Maestro",
    "keywords": "Class ResourceSecurityTypeGroupsGroup Inheritance System.Object ResourceSecurityTypeGroupsGroup Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourceSecurityTypeGroupsGroup : ComponentModel.INotifyPropertyChanged Properties Name Declaration public string Name { get; set; } Property Value Type Description System.String Permissions Declaration public PermissionsType Permissions { get; set; } Property Value Type Description PermissionsType Methods Clone() Create a clone of this ResourceSecurityTypeGroupsGroup object Declaration public virtual ResourceSecurityTypeGroupsGroup Clone() Returns Type Description ResourceSecurityTypeGroupsGroup Deserialize(String) Declaration public static ResourceSecurityTypeGroupsGroup Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourceSecurityTypeGroupsGroup Deserialize(String, out ResourceSecurityTypeGroupsGroup) Declaration public static bool Deserialize(string xml, out ResourceSecurityTypeGroupsGroup obj) Parameters Type Name Description System.String xml ResourceSecurityTypeGroupsGroup obj Returns Type Description System.Boolean Deserialize(String, out ResourceSecurityTypeGroupsGroup, out Exception) Deserializes workflow markup into an ResourceSecurityTypeGroupsGroup object Declaration public static bool Deserialize(string xml, out ResourceSecurityTypeGroupsGroup obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourceSecurityTypeGroupsGroup obj Output ResourceSecurityTypeGroupsGroup object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourceSecurityTypeGroupsGroup LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourceSecurityTypeGroupsGroup LoadFromFile(String, out ResourceSecurityTypeGroupsGroup) Declaration public static bool LoadFromFile(string fileName, out ResourceSecurityTypeGroupsGroup obj) Parameters Type Name Description System.String fileName ResourceSecurityTypeGroupsGroup obj Returns Type Description System.Boolean LoadFromFile(String, out ResourceSecurityTypeGroupsGroup, out Exception) Deserializes xml markup from file into an ResourceSecurityTypeGroupsGroup object Declaration public static bool LoadFromFile(string fileName, out ResourceSecurityTypeGroupsGroup obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourceSecurityTypeGroupsGroup obj Output ResourceSecurityTypeGroupsGroup object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourceSecurityTypeGroupsGroup object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourceSecurityTypeGroupsGroup object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourceSecurityTypeUsers.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourceSecurityTypeUsers.html",
    "title": "Class ResourceSecurityTypeUsers | MapGuide Maestro",
    "keywords": "Class ResourceSecurityTypeUsers Inheritance System.Object ResourceSecurityTypeUsers Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourceSecurityTypeUsers : ComponentModel.INotifyPropertyChanged Properties User Declaration public BindingList<ResourceSecurityTypeUsersUser> User { get; set; } Property Value Type Description BindingList < ResourceSecurityTypeUsersUser > Methods Clone() Create a clone of this ResourceSecurityTypeUsers object Declaration public virtual ResourceSecurityTypeUsers Clone() Returns Type Description ResourceSecurityTypeUsers Deserialize(String) Declaration public static ResourceSecurityTypeUsers Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourceSecurityTypeUsers Deserialize(String, out ResourceSecurityTypeUsers) Declaration public static bool Deserialize(string xml, out ResourceSecurityTypeUsers obj) Parameters Type Name Description System.String xml ResourceSecurityTypeUsers obj Returns Type Description System.Boolean Deserialize(String, out ResourceSecurityTypeUsers, out Exception) Deserializes workflow markup into an ResourceSecurityTypeUsers object Declaration public static bool Deserialize(string xml, out ResourceSecurityTypeUsers obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourceSecurityTypeUsers obj Output ResourceSecurityTypeUsers object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourceSecurityTypeUsers LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourceSecurityTypeUsers LoadFromFile(String, out ResourceSecurityTypeUsers) Declaration public static bool LoadFromFile(string fileName, out ResourceSecurityTypeUsers obj) Parameters Type Name Description System.String fileName ResourceSecurityTypeUsers obj Returns Type Description System.Boolean LoadFromFile(String, out ResourceSecurityTypeUsers, out Exception) Deserializes xml markup from file into an ResourceSecurityTypeUsers object Declaration public static bool LoadFromFile(string fileName, out ResourceSecurityTypeUsers obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourceSecurityTypeUsers obj Output ResourceSecurityTypeUsers object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourceSecurityTypeUsers object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourceSecurityTypeUsers object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourceSecurityTypeUsersUser.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourceSecurityTypeUsersUser.html",
    "title": "Class ResourceSecurityTypeUsersUser | MapGuide Maestro",
    "keywords": "Class ResourceSecurityTypeUsersUser Inheritance System.Object ResourceSecurityTypeUsersUser Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourceSecurityTypeUsersUser : ComponentModel.INotifyPropertyChanged Properties Name Declaration public string Name { get; set; } Property Value Type Description System.String Permissions Declaration public PermissionsType Permissions { get; set; } Property Value Type Description PermissionsType Methods Clone() Create a clone of this ResourceSecurityTypeUsersUser object Declaration public virtual ResourceSecurityTypeUsersUser Clone() Returns Type Description ResourceSecurityTypeUsersUser Deserialize(String) Declaration public static ResourceSecurityTypeUsersUser Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourceSecurityTypeUsersUser Deserialize(String, out ResourceSecurityTypeUsersUser) Declaration public static bool Deserialize(string xml, out ResourceSecurityTypeUsersUser obj) Parameters Type Name Description System.String xml ResourceSecurityTypeUsersUser obj Returns Type Description System.Boolean Deserialize(String, out ResourceSecurityTypeUsersUser, out Exception) Deserializes workflow markup into an ResourceSecurityTypeUsersUser object Declaration public static bool Deserialize(string xml, out ResourceSecurityTypeUsersUser obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourceSecurityTypeUsersUser obj Output ResourceSecurityTypeUsersUser object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourceSecurityTypeUsersUser LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourceSecurityTypeUsersUser LoadFromFile(String, out ResourceSecurityTypeUsersUser) Declaration public static bool LoadFromFile(string fileName, out ResourceSecurityTypeUsersUser obj) Parameters Type Name Description System.String fileName ResourceSecurityTypeUsersUser obj Returns Type Description System.Boolean LoadFromFile(String, out ResourceSecurityTypeUsersUser, out Exception) Deserializes xml markup from file into an ResourceSecurityTypeUsersUser object Declaration public static bool LoadFromFile(string fileName, out ResourceSecurityTypeUsersUser obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourceSecurityTypeUsersUser obj Output ResourceSecurityTypeUsersUser object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourceSecurityTypeUsersUser object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourceSecurityTypeUsersUser object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.SiteInformation.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.SiteInformation.html",
    "title": "Class SiteInformation | MapGuide Maestro",
    "keywords": "Class SiteInformation Site Information Inheritance System.Object SiteInformation Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class SiteInformation : ComponentModel.INotifyPropertyChanged Properties SiteServer Declaration public SiteInformationSiteServer SiteServer { get; set; } Property Value Type Description SiteInformationSiteServer Statistics Declaration public SiteInformationStatistics Statistics { get; set; } Property Value Type Description SiteInformationStatistics Methods Clone() Create a clone of this SiteInformation object Declaration public virtual SiteInformation Clone() Returns Type Description SiteInformation Deserialize(String) Declaration public static SiteInformation Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description SiteInformation Deserialize(String, out SiteInformation) Declaration public static bool Deserialize(string xml, out SiteInformation obj) Parameters Type Name Description System.String xml SiteInformation obj Returns Type Description System.Boolean Deserialize(String, out SiteInformation, out Exception) Deserializes workflow markup into an SiteInformation object Declaration public static bool Deserialize(string xml, out SiteInformation obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize SiteInformation obj Output SiteInformation object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static SiteInformation LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description SiteInformation LoadFromFile(String, out SiteInformation) Declaration public static bool LoadFromFile(string fileName, out SiteInformation obj) Parameters Type Name Description System.String fileName SiteInformation obj Returns Type Description System.Boolean LoadFromFile(String, out SiteInformation, out Exception) Deserializes xml markup from file into an SiteInformation object Declaration public static bool LoadFromFile(string fileName, out SiteInformation obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize SiteInformation obj Output SiteInformation object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current SiteInformation object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current SiteInformation object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.IVersionedEntity.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.IVersionedEntity.html",
    "title": "Interface IVersionedEntity | MapGuide Maestro",
    "keywords": "Interface IVersionedEntity An entity with an attached version Namespace : OSGeo.MapGuide.ObjectModels Assembly : cs.temp.dll.dll Syntax public interface IVersionedEntity Properties ResourceVersion Gets the resource version. Declaration Version ResourceVersion { get; } Property Value Type Description Version The resource version."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.BackgroundStyleType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.BackgroundStyleType.html",
    "title": "Enum BackgroundStyleType | MapGuide Maestro",
    "keywords": "Enum BackgroundStyleType The type of background style Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public enum BackgroundStyleType Fields Name Description Ghosted Opaque Transparent"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ElevationTypeType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ElevationTypeType.html",
    "title": "Enum ElevationTypeType | MapGuide Maestro",
    "keywords": "Enum ElevationTypeType Type of elevation Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public enum ElevationTypeType Fields Name Description Absolute RelativeToGround"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ExtensionMethods.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ExtensionMethods.html",
    "title": "Class ExtensionMethods | MapGuide Maestro",
    "keywords": "Class ExtensionMethods Extension methods Inheritance System.Object ExtensionMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public static class ExtensionMethods Methods AddOverride(IParameterOverrideCollection, String, String, String) Adds a parameter override Declaration public static IParameterOverride AddOverride(this IParameterOverrideCollection overrides, string symbolName, string paramName, string paramValue) Parameters Type Name Description IParameterOverrideCollection overrides System.String symbolName System.String paramName System.String paramValue Returns Type Description IParameterOverride The added parameter override Apply(IFontSymbol, FontInfo) Applies properties (name, italic, bold, underline) from the characteristics of the specified font Declaration public static void Apply(this IFontSymbol sym, FontInfo f) Parameters Type Name Description IFontSymbol sym FontInfo f Apply(ITextSymbol, FontInfo) Applies properties (name, italic, bold, underline) from the characteristics of the specified font Declaration public static void Apply(this ITextSymbol sym, FontInfo f) Parameters Type Name Description ITextSymbol sym FontInfo f CreateDefaultAreaCompositeRule(ILayerElementFactory) Creates a default area composite rule Declaration public static ICompositeRule CreateDefaultAreaCompositeRule(this ILayerElementFactory fact) Parameters Type Name Description ILayerElementFactory fact The layer element factory Returns Type Description ICompositeRule The default area composite rule CreateDefaultAreaCompositeStyle(ILayerElementFactory) Creates a default area composite style Declaration public static ICompositeTypeStyle CreateDefaultAreaCompositeStyle(this ILayerElementFactory fact) Parameters Type Name Description ILayerElementFactory fact The layer element factory Returns Type Description ICompositeTypeStyle The default area composite style CreateDefaultLineCompositeRule(ILayerElementFactory) Creates a default line composite rule Declaration public static ICompositeRule CreateDefaultLineCompositeRule(this ILayerElementFactory fact) Parameters Type Name Description ILayerElementFactory fact The layer element factory Returns Type Description ICompositeRule The default line composite rule CreateDefaultLineCompositeStyle(ILayerElementFactory) Creates a default line composite style Declaration public static ICompositeTypeStyle CreateDefaultLineCompositeStyle(this ILayerElementFactory fact) Parameters Type Name Description ILayerElementFactory fact The layer element factory Returns Type Description ICompositeTypeStyle The default line composite style CreateDefaultPointCompositeRule(ILayerElementFactory) Creates a default point composite rule Declaration public static ICompositeRule CreateDefaultPointCompositeRule(this ILayerElementFactory fact) Parameters Type Name Description ILayerElementFactory fact The layer element factory Returns Type Description ICompositeRule The default point composite rule CreateDefaultPointCompositeStyle(ILayerElementFactory) Creates a default point composite style Declaration public static ICompositeTypeStyle CreateDefaultPointCompositeStyle(this ILayerElementFactory fact) Parameters Type Name Description ILayerElementFactory fact The layer element factory Returns Type Description ICompositeTypeStyle The default point composite style DefineParameter(ISimpleSymbolDefinition, String, String, String, String, String) Defines a parameter for a simple symbol definition Declaration public static IParameter DefineParameter(this ISimpleSymbolDefinition simpleSym, string identifier, string defaultValue, string displayName, string description, string dataType) Parameters Type Name Description ISimpleSymbolDefinition simpleSym System.String identifier System.String defaultValue System.String displayName System.String description System.String dataType Returns Type Description IParameter The defined parameter GetLayerSpatialContextName(ILayerDefinition, IServerConnection) Gets the name of the active spatial context used by the given layer definition Declaration public static string GetLayerSpatialContextName(this ILayerDefinition ldf, IServerConnection conn) Parameters Type Name Description ILayerDefinition ldf The layer definition IServerConnection conn The server connection Returns Type Description System.String The name of the active spatial context GetScaleRangeCount(IVectorLayerDefinition) Gets the number of scale ranges in this vector layer Declaration public static int GetScaleRangeCount(this IVectorLayerDefinition vl) Parameters Type Name Description IVectorLayerDefinition vl Returns Type Description System.Int32 GetSchema(IVectorLayerDefinition) Gets the referenced schema of this vector layer Declaration public static string GetSchema(this IVectorLayerDefinition vl) Parameters Type Name Description IVectorLayerDefinition vl Returns Type Description System.String GetSpatialContext(ILayerDefinition, IServerConnection) Returns the associated spatial context for this Layer Definition Declaration public static IFdoSpatialContext GetSpatialContext(this ILayerDefinition layer, IServerConnection conn) Parameters Type Name Description ILayerDefinition layer The layer definition IServerConnection conn The server connection Returns Type Description IFdoSpatialContext The associated spatial context GetSpatialExtent(ILayerDefinition, IServerConnection, Boolean, out String) Returns the spatial extent of the data. This is calculated by asking the underlying featuresource for the minimum rectangle that contains all the features in the specified table. If the allowFallbackToContextInformation is set to true, and the query fails, the code will attempt to read this information from the spatial context information instead. Declaration public static IEnvelope GetSpatialExtent(this ILayerDefinition layer, IServerConnection conn, bool allowFallbackToContextInformation, out string csWkt) Parameters Type Name Description ILayerDefinition layer The layer definition IServerConnection conn The server connection System.Boolean allowFallbackToContextInformation If true, will default to the extents of the active spatial context. System.String csWkt The coordinate system WKT that this extent corresponds to Returns Type Description IEnvelope The spatial extent HasVectorScaleRanges(IVectorLayerDefinition) Determines whether the vector layer has scale ranges Declaration public static bool HasVectorScaleRanges(this IVectorLayerDefinition vl) Parameters Type Name Description IVectorLayerDefinition vl The vl. Returns Type Description System.Boolean true if vector layer has scale ranges; otherwise, false . RemoveAllRules(ICompositeTypeStyle) Removes all rules from a composite style Declaration public static void RemoveAllRules(this ICompositeTypeStyle style) Parameters Type Name Description ICompositeTypeStyle style RemoveStyles(IVectorScaleRange, IEnumerable<String>) Purge the specified scale range of the following styles Declaration public static void RemoveStyles(this IVectorScaleRange range, IEnumerable<string> geomTypes) Parameters Type Name Description IVectorScaleRange range IEnumerable < System.String > geomTypes The geometry types to remove RemoveStyles(IVectorScaleRange, String[]) Removes the styles. Declaration public static void RemoveStyles(this IVectorScaleRange range, params string[] geomTypes) Parameters Type Name Description IVectorScaleRange range The range. System.String [] geomTypes The geom types. SetBackgroundColor(IFill, Color) Sets the color of the background. Declaration public static void SetBackgroundColor(this IFill fil, Color c) Parameters Type Name Description IFill fil The fil. Color c The c. SetBackgroundColor(ITextSymbol, Color) Sets the color of the background. Declaration public static void SetBackgroundColor(this ITextSymbol sym, Color c) Parameters Type Name Description ITextSymbol sym The sym. Color c The c. SetBlockColor(IBlockSymbol, Color) Sets the color of the block. Declaration public static void SetBlockColor(this IBlockSymbol sym, Color c) Parameters Type Name Description IBlockSymbol sym The sym. Color c The c. SetDefaultColor(IGridSurfaceStyle, Color) Sets the default color. Declaration public static void SetDefaultColor(this IGridSurfaceStyle style, Color c) Parameters Type Name Description IGridSurfaceStyle style The style. Color c The c. SetFillColor(IW2DSymbol, Color) Sets the color of the fill. Declaration public static void SetFillColor(this IW2DSymbol sym, Color c) Parameters Type Name Description IW2DSymbol sym The sym. Color c The c. SetForegroundColor(IFill, Color) Sets the color of the foreground. Declaration public static void SetForegroundColor(this IFill fil, Color c) Parameters Type Name Description IFill fil The fil. Color c The c. SetForegroundColor(IFontSymbol, Color) Sets the color of the foreground. Declaration public static void SetForegroundColor(this IFontSymbol sym, Color c) Parameters Type Name Description IFontSymbol sym The sym. Color c The c. SetForegroundColor(ITextSymbol, Color) Sets the color of the foreground. Declaration public static void SetForegroundColor(this ITextSymbol sym, Color c) Parameters Type Name Description ITextSymbol sym The sym. Color c The c. SetLayerColor(IBlockSymbol, Color) Sets the color of the layer. Declaration public static void SetLayerColor(this IBlockSymbol sym, Color c) Parameters Type Name Description IBlockSymbol sym The sym. Color c The c. SetLineColor(IW2DSymbol, Color) Sets the color of the line. Declaration public static void SetLineColor(this IW2DSymbol sym, Color c) Parameters Type Name Description IW2DSymbol sym The sym. Color c The c. SetTextColor(IW2DSymbol, Color) Sets the color of the text. Declaration public static void SetTextColor(this IW2DSymbol sym, Color c) Parameters Type Name Description IW2DSymbol sym The sym. Color c The c. SetTransparencyColor(IGridColorStyle, Color) Sets the color of the transparency. Declaration public static void SetTransparencyColor(this IGridColorStyle style, Color c) Parameters Type Name Description IGridColorStyle style The style. Color c The c."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.FeatureNameType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.FeatureNameType.html",
    "title": "Enum FeatureNameType | MapGuide Maestro",
    "keywords": "Enum FeatureNameType The type of feature name Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public enum FeatureNameType Fields Name Description FeatureClass NamedExtension"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.GeometryContextType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.GeometryContextType.html",
    "title": "Enum GeometryContextType | MapGuide Maestro",
    "keywords": "Enum GeometryContextType The types of geometry context Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public enum GeometryContextType Fields Name Description LineString Point Polygon Unspecified"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IAdvancedPlacement.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IAdvancedPlacement.html",
    "title": "Interface IAdvancedPlacement | MapGuide Maestro",
    "keywords": "Interface IAdvancedPlacement Advanced placement settings Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IAdvancedPlacement Properties ScaleLimit Gets or sets the scale limit. Declaration double ScaleLimit { get; set; } Property Value Type Description System.Double The scale limit."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IAreaRule.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IAreaRule.html",
    "title": "Interface IAreaRule | MapGuide Maestro",
    "keywords": "Interface IAreaRule A style rule for the area/polygon geometry type Inherited Members IBasicVectorRule.Label IVectorRule.LegendLabel IVectorRule.Filter Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IAreaRule : IBasicVectorRule, IVectorRule Properties AreaSymbolization2D Gets or sets the polygon stylization settings Declaration IAreaSymbolizationFill AreaSymbolization2D { get; set; } Property Value Type Description IAreaSymbolizationFill"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IAreaSymbolizationFill.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IAreaSymbolizationFill.html",
    "title": "Interface IAreaSymbolizationFill | MapGuide Maestro",
    "keywords": "Interface IAreaSymbolizationFill Symbolization characteristics for areas. Inherited Members ICloneableLayerElement<IAreaSymbolizationFill>.Clone() Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IAreaSymbolizationFill : ICloneableLayerElement<IAreaSymbolizationFill> Properties Fill Gets or sets the style of the polygon fill. Declaration IFill Fill { get; set; } Property Value Type Description IFill Stroke Gets or sets the style of the polygon edge Declaration IStroke Stroke { get; set; } Property Value Type Description IStroke"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IAreaVectorStyle.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IAreaVectorStyle.html",
    "title": "Interface IAreaVectorStyle | MapGuide Maestro",
    "keywords": "Interface IAreaVectorStyle Style specification for a area geometry layer Inherited Members IVectorStyle.StyleType IVectorStyle.RuleCount IRuleCollection<IAreaRule>.IndexOfRule(IAreaRule) IRuleCollection<IAreaRule>.GetRuleAt(Int32) IRuleCollection<IAreaRule>.MoveUp(IAreaRule) IRuleCollection<IAreaRule>.MoveDown(IAreaRule) IRuleCollection.IndexOfRule(IVectorRule) IRuleCollection.MoveUp(IVectorRule) IRuleCollection.MoveDown(IVectorRule) Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IAreaVectorStyle : IVectorStyle, IRuleCollection<IAreaRule>, IRuleCollection Properties Rules Enumerates the rules in this specification Declaration IEnumerable<IAreaRule> Rules { get; } Property Value Type Description IEnumerable < IAreaRule > Methods AddRule(IAreaRule) Adds a rule to this specification Declaration void AddRule(IAreaRule rule) Parameters Type Name Description IAreaRule rule RemoveAllRules() Removes all rules. Declaration void RemoveAllRules() RemoveRule(IAreaRule) Removes a rule from this specification Declaration void RemoveRule(IAreaRule rule) Parameters Type Name Description IAreaRule rule"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IAreaVectorStyle2.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IAreaVectorStyle2.html",
    "title": "Interface IAreaVectorStyle2 | MapGuide Maestro",
    "keywords": "Interface IAreaVectorStyle2 An area vector style introduced in the v1.3.0 layer definition schema Inherited Members IAreaVectorStyle.Rules IAreaVectorStyle.AddRule(IAreaRule) IAreaVectorStyle.RemoveRule(IAreaRule) IAreaVectorStyle.RemoveAllRules() IVectorStyle.StyleType IVectorStyle.RuleCount IRuleCollection<IAreaRule>.IndexOfRule(IAreaRule) IRuleCollection<IAreaRule>.GetRuleAt(Int32) IRuleCollection<IAreaRule>.MoveUp(IAreaRule) IRuleCollection<IAreaRule>.MoveDown(IAreaRule) IRuleCollection.IndexOfRule(IVectorRule) IRuleCollection.MoveUp(IVectorRule) IRuleCollection.MoveDown(IVectorRule) Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IAreaVectorStyle2 : IAreaVectorStyle, IVectorStyle, IRuleCollection<IAreaRule>, IRuleCollection Properties ShowInLegend Gets or sets a value indicating whether [show in legend]. Declaration bool ShowInLegend { get; set; } Property Value Type Description System.Boolean true if [show in legend]; otherwise, false ."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IBaseImageSymbol.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IBaseImageSymbol.html",
    "title": "Interface IBaseImageSymbol | MapGuide Maestro",
    "keywords": "Interface IBaseImageSymbol Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IBaseImageSymbol Properties Type Gets the type. Declaration ImageSymbolReferenceType Type { get; } Property Value Type Description ImageSymbolReferenceType The type."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IBasicVectorRule.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IBasicVectorRule.html",
    "title": "Interface IBasicVectorRule | MapGuide Maestro",
    "keywords": "Interface IBasicVectorRule Base interface for basic style rules for all geometric types Inherited Members IVectorRule.LegendLabel IVectorRule.Filter Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IBasicVectorRule : IVectorRule Properties Label Gets or sets the the label Declaration ITextSymbol Label { get; set; } Property Value Type Description ITextSymbol"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IBlockSymbol.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IBlockSymbol.html",
    "title": "Interface IBlockSymbol | MapGuide Maestro",
    "keywords": "Interface IBlockSymbol Represents a block symbol Inherited Members ISymbol.Type ISymbol.Unit ISymbol.SizeContext ISymbol.SizeX ISymbol.SizeY ISymbol.Rotation ISymbol.MaintainAspect ISymbol.InsertionPointX ISymbol.InsertionPointY ICloneableLayerElement<IBlockSymbol>.Clone() Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IBlockSymbol : ISymbol, ICloneableLayerElement<IBlockSymbol> Properties BlockColor Gets or sets the color of the block Declaration string BlockColor { get; set; } Property Value Type Description System.String BlockName Gets or sets the name of the block Declaration string BlockName { get; set; } Property Value Type Description System.String DrawingName Gets or sets the name of the drawing Declaration string DrawingName { get; set; } Property Value Type Description System.String LayerColor Gets or sets the color of the layer Declaration string LayerColor { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IChannelBand.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IChannelBand.html",
    "title": "Interface IChannelBand | MapGuide Maestro",
    "keywords": "Interface IChannelBand Defines how to scale numbers into a color channel Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IChannelBand Properties Band Gets or sets the name of the band Declaration string Band { get; set; } Property Value Type Description System.String HighBand Gets or sets the high band value. Default is high value found in band. Band values greater than this are snapped to this number Declaration double ? HighBand { get; set; } Property Value Type Description System.Nullable < System.Double > HighChannel Gets or sets the high channel value. Default is 255. Range is 0:255 Declaration byte HighChannel { get; set; } Property Value Type Description System.Byte LowBand Gets or sets the low band value. Default is low value found in band. Band values less than this are snapped to this number Declaration double ? LowBand { get; set; } Property Value Type Description System.Nullable < System.Double > LowChannel Gets or sets the low channel value. Default is 0. Range is 0:255. LowBand is mapped to this number. LowChannel can be greater than HighChannel Declaration byte LowChannel { get; set; } Property Value Type Description System.Byte"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ICloneableLayerElement-1.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ICloneableLayerElement-1.html",
    "title": "Interface ICloneableLayerElement<T> | MapGuide Maestro",
    "keywords": "Interface ICloneableLayerElement<T> Represents elements that can create clones of themselves Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface ICloneableLayerElement<T> Type Parameters Name Description T Methods Clone() Clones this instance. Declaration T Clone() Returns Type Description T"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IPointRule.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IPointRule.html",
    "title": "Interface IPointRule | MapGuide Maestro",
    "keywords": "Interface IPointRule A style rule for the point geometry type Inherited Members IBasicVectorRule.Label IVectorRule.LegendLabel IVectorRule.Filter Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IPointRule : IBasicVectorRule, IVectorRule Properties PointSymbolization2D Gets or sets the symbolization settings for this point rule Declaration IPointSymbolization2D PointSymbolization2D { get; set; } Property Value Type Description IPointSymbolization2D"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IPointSymbolization2D.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IPointSymbolization2D.html",
    "title": "Interface IPointSymbolization2D | MapGuide Maestro",
    "keywords": "Interface IPointSymbolization2D Symbolization characteristics for points. Inherited Members ICloneableLayerElement<IPointSymbolization2D>.Clone() Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IPointSymbolization2D : ICloneableLayerElement<IPointSymbolization2D> Properties Symbol Gets or sets the symbol. Declaration ISymbol Symbol { get; set; } Property Value Type Description ISymbol The symbol."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IPointVectorStyle.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IPointVectorStyle.html",
    "title": "Interface IPointVectorStyle | MapGuide Maestro",
    "keywords": "Interface IPointVectorStyle Style specification for a point geometry layer Inherited Members IVectorStyle.StyleType IVectorStyle.RuleCount IRuleCollection<IPointRule>.IndexOfRule(IPointRule) IRuleCollection<IPointRule>.GetRuleAt(Int32) IRuleCollection<IPointRule>.MoveUp(IPointRule) IRuleCollection<IPointRule>.MoveDown(IPointRule) IRuleCollection.IndexOfRule(IVectorRule) IRuleCollection.MoveUp(IVectorRule) IRuleCollection.MoveDown(IVectorRule) Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IPointVectorStyle : IVectorStyle, IRuleCollection<IPointRule>, IRuleCollection Properties AllowOverpost Gets or sets whether to allow labels from any map layer (including the current layer) to obscure features on the current layer Declaration bool AllowOverpost { get; set; } Property Value Type Description System.Boolean DisplayAsText Gets or sets whether to create a text layer Declaration bool DisplayAsText { get; set; } Property Value Type Description System.Boolean Rules Enumerates the rules for this specification Declaration IEnumerable<IPointRule> Rules { get; } Property Value Type Description IEnumerable < IPointRule > Methods AddRule(IPointRule) Adds a rule to this specification Declaration void AddRule(IPointRule rule) Parameters Type Name Description IPointRule rule RemoveAllRules() Removes all current rules Declaration void RemoveAllRules() RemoveRule(IPointRule) Removes a rule from this specification Declaration void RemoveRule(IPointRule rule) Parameters Type Name Description IPointRule rule"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IPointVectorStyle2.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IPointVectorStyle2.html",
    "title": "Interface IPointVectorStyle2 | MapGuide Maestro",
    "keywords": "Interface IPointVectorStyle2 A point vector style introduced in the v1.3.0 layer definition schema Inherited Members IPointVectorStyle.DisplayAsText IPointVectorStyle.AllowOverpost IPointVectorStyle.Rules IPointVectorStyle.AddRule(IPointRule) IPointVectorStyle.RemoveRule(IPointRule) IPointVectorStyle.RemoveAllRules() IVectorStyle.StyleType IVectorStyle.RuleCount IRuleCollection<IPointRule>.IndexOfRule(IPointRule) IRuleCollection<IPointRule>.GetRuleAt(Int32) IRuleCollection<IPointRule>.MoveUp(IPointRule) IRuleCollection<IPointRule>.MoveDown(IPointRule) IRuleCollection.IndexOfRule(IVectorRule) IRuleCollection.MoveUp(IVectorRule) IRuleCollection.MoveDown(IVectorRule) Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IPointVectorStyle2 : IPointVectorStyle, IVectorStyle, IRuleCollection<IPointRule>, IRuleCollection Properties ShowInLegend Gets or sets a value indicating whether [show in legend]. Declaration bool ShowInLegend { get; set; } Property Value Type Description System.Boolean true if [show in legend]; otherwise, false ."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IRasterLayerDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IRasterLayerDefinition.html",
    "title": "Interface IRasterLayerDefinition | MapGuide Maestro",
    "keywords": "Interface IRasterLayerDefinition Represents a layer definition based on a raster-based feature source Inherited Members ISubLayerDefinition.LayerType ISubLayerDefinition.ResourceId Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IRasterLayerDefinition : ISubLayerDefinition, INotifyPropertyChanged Properties FeatureName Gets or sets the name of the feature class. Declaration string FeatureName { get; set; } Property Value Type Description System.String The name of the feature class. Geometry Gets or sets the raster property. Declaration string Geometry { get; set; } Property Value Type Description System.String The raster property. GridScaleRange Gets the grid scale ranges. Declaration IEnumerable<IGridScaleRange> GridScaleRange { get; } Property Value Type Description IEnumerable < IGridScaleRange > The grid scale ranges. GridScaleRangeCount Gets the grid scale range count. Declaration int GridScaleRangeCount { get; } Property Value Type Description System.Int32 Methods AddGridScaleRange(IGridScaleRange) Adds the specified grid scale range Declaration void AddGridScaleRange(IGridScaleRange range) Parameters Type Name Description IGridScaleRange range GetScaleRangeAt(Int32) Gets the scale range at. Declaration IGridScaleRange GetScaleRangeAt(int index) Parameters Type Name Description System.Int32 index The index. Returns Type Description IGridScaleRange IndexOfScaleRange(IGridScaleRange) Indexes the of scale range. Declaration int IndexOfScaleRange(IGridScaleRange range) Parameters Type Name Description IGridScaleRange range The range. Returns Type Description System.Int32 RemoveGridScaleRange(IGridScaleRange) Removes the specified grid scale range Declaration void RemoveGridScaleRange(IGridScaleRange range) Parameters Type Name Description IGridScaleRange range"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IRuleCollection-1.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IRuleCollection-1.html",
    "title": "Interface IRuleCollection<TRule> | MapGuide Maestro",
    "keywords": "Interface IRuleCollection<TRule> Defines a collection of style rules Inherited Members IRuleCollection.IndexOfRule(IVectorRule) IRuleCollection.MoveUp(IVectorRule) IRuleCollection.MoveDown(IVectorRule) Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IRuleCollection<TRule> : IRuleCollection Type Parameters Name Description TRule The type of the rule. Methods GetRuleAt(Int32) Gets the rule at the specified index Declaration TRule GetRuleAt(int index) Parameters Type Name Description System.Int32 index The index. Returns Type Description TRule IndexOfRule(TRule) Gets the index of the specified rule Declaration int IndexOfRule(TRule rule) Parameters Type Name Description TRule rule Returns Type Description System.Int32 MoveDown(TRule) Moves the specified rule down the list Declaration bool MoveDown(TRule rule) Parameters Type Name Description TRule rule The rule. Returns Type Description System.Boolean MoveUp(TRule) Moves the specified rule up the list Declaration bool MoveUp(TRule rule) Parameters Type Name Description TRule rule The rule. Returns Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IVectorScaleRange.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IVectorScaleRange.html",
    "title": "Interface IVectorScaleRange | MapGuide Maestro",
    "keywords": "Interface IVectorScaleRange The stylization to be applied to the vector features for a given scale range Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IVectorScaleRange Properties AreaStyle Gets or sets the area style for this scale range Declaration IAreaVectorStyle AreaStyle { get; set; } Property Value Type Description IAreaVectorStyle LineStyle Gets or sets the line style for this scale range Declaration ILineVectorStyle LineStyle { get; set; } Property Value Type Description ILineVectorStyle MaxScale The zoomed out part of the scale range. Defaults to the application's maximum value if not specified. Exclusive Declaration double ? MaxScale { get; set; } Property Value Type Description System.Nullable < System.Double > MinScale The zoomed in part of the scale range. Defaults to 0 if not specified. Inclusive Declaration double ? MinScale { get; set; } Property Value Type Description System.Nullable < System.Double > PointStyle Gets or sets the point style for this scale range Declaration IPointVectorStyle PointStyle { get; set; } Property Value Type Description IPointVectorStyle Methods Clone() Creates a clone of this instance Declaration IVectorScaleRange Clone() Returns Type Description IVectorScaleRange"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IVectorScaleRange2.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IVectorScaleRange2.html",
    "title": "Interface IVectorScaleRange2 | MapGuide Maestro",
    "keywords": "Interface IVectorScaleRange2 The stylization to be applied to the vector features for a given scale range. Supports elevation, extrusion settings and Advanced Stylization through composite styles Supported by Layer Definition 1.1.0 and higher Inherited Members IVectorScaleRange.MinScale IVectorScaleRange.MaxScale IVectorScaleRange.AreaStyle IVectorScaleRange.PointStyle IVectorScaleRange.LineStyle IVectorScaleRange.Clone() Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IVectorScaleRange2 : IVectorScaleRange Properties CompositeStyle Gets or sets the composite styles for this scale range Declaration IEnumerable<ICompositeTypeStyle> CompositeStyle { get; set; } Property Value Type Description IEnumerable < ICompositeTypeStyle > CompositeStyleCount Gets the composite style count. Declaration int CompositeStyleCount { get; } Property Value Type Description System.Int32 ElevationSettings Gets or sets the elevation settings Declaration IElevationSettings ElevationSettings { get; set; } Property Value Type Description IElevationSettings Methods Create(String, String, ElevationTypeType, LengthUnitType) Creates a new instance of IElevationSettings . This instance is detached and needs to be assigned to the ElevationSettings property to take effect. Declaration IElevationSettings Create(string zOffset, string zExtrusion, ElevationTypeType zOffsetType, LengthUnitType unit) Parameters Type Name Description System.String zOffset System.String zExtrusion ElevationTypeType zOffsetType LengthUnitType unit Returns Type Description IElevationSettings"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IVectorStyle.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IVectorStyle.html",
    "title": "Interface IVectorStyle | MapGuide Maestro",
    "keywords": "Interface IVectorStyle base interface for all style specifications Inherited Members IRuleCollection.GetRuleAt(Int32) IRuleCollection.IndexOfRule(IVectorRule) IRuleCollection.MoveUp(IVectorRule) IRuleCollection.MoveDown(IVectorRule) Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IVectorStyle : IRuleCollection Properties RuleCount Gets the rule count. Declaration int RuleCount { get; } Property Value Type Description System.Int32 StyleType Gets the type of this style specification Declaration StyleType StyleType { get; } Property Value Type Description StyleType"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IW2DSymbol.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IW2DSymbol.html",
    "title": "Interface IW2DSymbol | MapGuide Maestro",
    "keywords": "Interface IW2DSymbol Represents a DWF-based W2D symbol Inherited Members ISymbol.Type ISymbol.Unit ISymbol.SizeContext ISymbol.SizeX ISymbol.SizeY ISymbol.Rotation ISymbol.MaintainAspect ISymbol.InsertionPointX ISymbol.InsertionPointY ICloneableLayerElement<IW2DSymbol>.Clone() Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IW2DSymbol : ISymbol, ICloneableLayerElement<IW2DSymbol> Properties FillColor Gets or sets the fill color Declaration string FillColor { get; set; } Property Value Type Description System.String LineColor Gets or sets the line color Declaration string LineColor { get; set; } Property Value Type Description System.String TextColor Gets or sets the text color Declaration string TextColor { get; set; } Property Value Type Description System.String W2DSymbol Gets or sets the reference to the symbol Declaration ISymbolReference W2DSymbol { get; set; } Property Value Type Description ISymbolReference"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.LayerElementCloningUtil.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.LayerElementCloningUtil.html",
    "title": "Class LayerElementCloningUtil | MapGuide Maestro",
    "keywords": "Class LayerElementCloningUtil Helper class to clone certain elements Inheritance System.Object LayerElementCloningUtil Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public static class LayerElementCloningUtil Methods CloneStrokes(IEnumerable<IStroke>) Clones the strokes. Declaration public static IList<IStroke> CloneStrokes(IEnumerable<IStroke> strokes) Parameters Type Name Description IEnumerable < IStroke > strokes The strokes. Returns Type Description IList < IStroke >"
  },
  "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IMapDefinitionBase.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IMapDefinitionBase.html",
    "title": "Interface IMapDefinitionBase | MapGuide Maestro",
    "keywords": "Interface IMapDefinitionBase Represents the base interface of map definitions and their runtime forms Namespace : OSGeo.MapGuide.ObjectModels.MapDefinition Assembly : cs.temp.dll.dll Syntax public interface IMapDefinitionBase Properties BackgroundColor Gets or sets the color of the background. Declaration Color BackgroundColor { get; set; } Property Value Type Description Color The color of the background. CoordinateSystem Gets the coordinate system. Layers whose coordinate system does not match will be re-projecte to this coordinate system when rendering Declaration string CoordinateSystem { get; } Property Value Type Description System.String The coordinate system. Name Gets the name. Declaration string Name { get; } Property Value Type Description System.String The name."
  },
  "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IMapLayer.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IMapLayer.html",
    "title": "Interface IMapLayer | MapGuide Maestro",
    "keywords": "Interface IMapLayer A dynamic map layer Inherited Members IBaseMapLayer.ResourceId IBaseMapLayer.Selectable IMapLegendElementBase.Name IMapLegendElementBase.ShowInLegend IMapLegendElementBase.LegendLabel IMapLegendElementBase.ExpandInLegend Namespace : OSGeo.MapGuide.ObjectModels.MapDefinition Assembly : cs.temp.dll.dll Syntax public interface IMapLayer : IBaseMapLayer, IMapLegendElementBase, INotifyPropertyChanged Properties Group Gets or sets the group. Declaration string Group { get; set; } Property Value Type Description System.String The group. Visible Gets or sets a value indicating whether this IMapLayer is visible. Declaration bool Visible { get; set; } Property Value Type Description System.Boolean true if visible; otherwise, false ."
  },
  "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IMapLayerGroup.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IMapLayerGroup.html",
    "title": "Interface IMapLayerGroup | MapGuide Maestro",
    "keywords": "Interface IMapLayerGroup A dynamic map layer group Inherited Members IMapLegendElementBase.Name IMapLegendElementBase.ShowInLegend IMapLegendElementBase.LegendLabel IMapLegendElementBase.ExpandInLegend Namespace : OSGeo.MapGuide.ObjectModels.MapDefinition Assembly : cs.temp.dll.dll Syntax public interface IMapLayerGroup : IMapLegendElementBase, INotifyPropertyChanged Properties Group Gets or sets the group name. If null, it means this layer doesn't belong to any group Declaration string Group { get; set; } Property Value Type Description System.String The group. Parent Gets the parent map definition Declaration IMapDefinition Parent { get; } Property Value Type Description IMapDefinition The parent map definition. Visible Gets or sets a value indicating whether this IMapLayerGroup is visible. Declaration bool Visible { get; set; } Property Value Type Description System.Boolean true if visible; otherwise, false ."
  },
  "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IMapLegendElementBase.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IMapLegendElementBase.html",
    "title": "Interface IMapLegendElementBase | MapGuide Maestro",
    "keywords": "Interface IMapLegendElementBase Base legend element Namespace : OSGeo.MapGuide.ObjectModels.MapDefinition Assembly : cs.temp.dll.dll Syntax public interface IMapLegendElementBase : INotifyPropertyChanged Properties ExpandInLegend Gets or sets a value indicating whether [expand in legend]. Declaration bool ExpandInLegend { get; set; } Property Value Type Description System.Boolean true if [expand in legend]; otherwise, false . LegendLabel Gets or sets the legend label. Declaration string LegendLabel { get; set; } Property Value Type Description System.String The legend label. Name Gets or sets the name. Declaration string Name { get; set; } Property Value Type Description System.String The name. ShowInLegend Gets or sets a value indicating whether [show in legend]. Declaration bool ShowInLegend { get; set; } Property Value Type Description System.Boolean true if [show in legend]; otherwise, false ."
  },
  "api/OSGeo.MapGuide.ObjectModels.MapDefinition.LayerExtent.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.MapDefinition.LayerExtent.html",
    "title": "Class LayerExtent | MapGuide Maestro",
    "keywords": "Class LayerExtent Describes the extent of a given layer Inheritance System.Object LayerExtent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.MapDefinition Assembly : cs.temp.dll.dll Syntax public class LayerExtent Properties Extent The extent of the layer Declaration public IEnvelope Extent { get; set; } Property Value Type Description IEnvelope LayerCoordinateSystem The layer's coordinate system Declaration public string LayerCoordinateSystem { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.MapDefinition.MapDefinitionExtensions.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.MapDefinition.MapDefinitionExtensions.html",
    "title": "Class MapDefinitionExtensions | MapGuide Maestro",
    "keywords": "Class MapDefinitionExtensions Extension method class Inheritance System.Object MapDefinitionExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.MapDefinition Assembly : cs.temp.dll.dll Syntax public static class MapDefinitionExtensions Methods AddBaseLayerGroup(IMapDefinition, String) Adds the specified base layer group to the map definition Declaration public static IBaseMapGroup AddBaseLayerGroup(this IMapDefinition map, string name) Parameters Type Name Description IMapDefinition map System.String name Returns Type Description IBaseMapGroup AddFiniteDisplayScale(IMapDefinition, Double) Adds the specified finite display scale to the Map Definition Declaration public static void AddFiniteDisplayScale(this IMapDefinition map, double scale) Parameters Type Name Description IMapDefinition map System.Double scale AutoSetExtentsFromLayer(IMapDefinition, String) Sets the extents of the map definition from the id of the the given layer definition Does nothing if the extent is already set Declaration public static void AutoSetExtentsFromLayer(this IMapDefinition mdf, string layerDefinitionId) Parameters Type Name Description IMapDefinition mdf System.String layerDefinitionId ConvertToTileSet(IMapDefinition, Version) Converts the given base map section to a Tile Set Definition reference Declaration public static ITileSetDefinition ConvertToTileSet(this IMapDefinition map, Version schemaVersion) Parameters Type Name Description IMapDefinition map Version schemaVersion Returns Type Description ITileSetDefinition GetDynamicLayerCount(IMapDefinition) Gets the number of layers (non-tiled) on this map Declaration public static int GetDynamicLayerCount(this IMapDefinition map) Parameters Type Name Description IMapDefinition map Returns Type Description System.Int32 GetGroupByName(IMapDefinition, String) Gets a group by its name Declaration public static IMapLayerGroup GetGroupByName(this IMapDefinition map, string name) Parameters Type Name Description IMapDefinition map System.String name Returns Type Description IMapLayerGroup GetGroupCount(IMapDefinition) Gets the number of groups (non-tiled) on this map Declaration public static int GetGroupCount(this IMapDefinition map) Parameters Type Name Description IMapDefinition map Returns Type Description System.Int32 GetGroupsForGroup(IMapDefinition, String) Gets all the groups that belong to the specified group Declaration public static IEnumerable<IMapLayerGroup> GetGroupsForGroup(this IMapDefinition map, string name) Parameters Type Name Description IMapDefinition map System.String name Returns Type Description IEnumerable < IMapLayerGroup > GetLayerByName(IMapDefinition, String) Get a layer by its name Declaration public static IMapLayer GetLayerByName(this IMapDefinition map, string name) Parameters Type Name Description IMapDefinition map System.String name Returns Type Description IMapLayer GetLayersForGroup(IMapDefinition, String) Gets all the layers that belong to the specified group Declaration public static IEnumerable<IMapLayer> GetLayersForGroup(this IMapDefinition map, string name) Parameters Type Name Description IMapDefinition map System.String name Returns Type Description IEnumerable < IMapLayer > GetLayersWithoutGroups(IMapDefinition) Gets all that layers that do not belong to a group Declaration public static IEnumerable<IMapLayer> GetLayersWithoutGroups(this IMapDefinition map) Parameters Type Name Description IMapDefinition map Returns Type Description IEnumerable < IMapLayer > RemoveAllFiniteDisplayScales(IMapDefinition, Boolean) Removes all finite display scales from the Map Definition Declaration public static void RemoveAllFiniteDisplayScales(this IMapDefinition map, bool bDetachIfEmpty) Parameters Type Name Description IMapDefinition map System.Boolean bDetachIfEmpty RemoveBaseLayerGroup(IMapDefinition, IBaseMapGroup, Boolean) Removes the given base layer group from the Map Definition Declaration public static void RemoveBaseLayerGroup(this IMapDefinition map, IBaseMapGroup group, bool bDetachIfEmpty) Parameters Type Name Description IMapDefinition map IBaseMapGroup group System.Boolean bDetachIfEmpty RemoveFiniteDisplayScale(IMapDefinition, Double, Boolean) Removes the specified finite display scale from the Map Definition Declaration public static void RemoveFiniteDisplayScale(this IMapDefinition map, double scale, bool bDetachIfEmpty) Parameters Type Name Description IMapDefinition map System.Double scale System.Boolean bDetachIfEmpty RemoveLayerGroupAndChildLayers(IMapDefinition, String) Removes a layer group and all layers associated with this group Declaration public static int RemoveLayerGroupAndChildLayers(this IMapDefinition map, string groupName) Parameters Type Name Description IMapDefinition map System.String groupName Returns Type Description System.Int32 The number of layers removed. Returns 0 if the group is empty or does not exist UpdateDynamicGroupName(IMapDefinition, String, String) Updates the group name references of all layers belonging to a particular group Declaration public static void UpdateDynamicGroupName(this IMapDefinition map, string oldGroupName, string newGroupName) Parameters Type Name Description IMapDefinition map The map. System.String oldGroupName Old name of the group. System.String newGroupName New name of the group."
  },
  "api/OSGeo.MapGuide.ObjectModels.MapDefinition.TileSourceType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.MapDefinition.TileSourceType.html",
    "title": "Enum TileSourceType | MapGuide Maestro",
    "keywords": "Enum TileSourceType Defines the type of tile source Namespace : OSGeo.MapGuide.ObjectModels.MapDefinition Assembly : cs.temp.dll.dll Syntax public enum TileSourceType Fields Name Description External The Map Definition links to an external tile set Inline The tile layer/group settings are defined within the Map Definition None No tile layer/group settings are defined"
  },
  "api/OSGeo.MapGuide.ObjectModels.MapDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.MapDefinition.html",
    "title": "Namespace OSGeo.MapGuide.ObjectModels.MapDefinition | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.ObjectModels.MapDefinition Classes LayerExtent Describes the extent of a given layer MapDefinitionExtensions Extension method class Interfaces IBaseMapDefinition Represents the tiled map portion of the Map Definition IBaseMapGroup Tiled map group IBaseMapLayer Base layer interface ILayerExtentCalculator Computes the extent for a given layer definition IMapDefinition Represents a Map Definition IMapDefinition2 Represents a Map Definition with support for watermarks. Corresponds to schema version 2.3.0 IMapDefinition3 Represents a Map Definition with support for linking to tile sets. Corresponds to schema version 3.0.0 IMapDefinitionBase Represents the base interface of map definitions and their runtime forms IMapLayer A dynamic map layer IMapLayerGroup A dynamic map layer group IMapLegendElementBase Base legend element Enums TileSourceType Defines the type of tile source"
  },
  "api/OSGeo.MapGuide.ObjectModels.MemoryStreamPool.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.MemoryStreamPool.html",
    "title": "Class MemoryStreamPool | MapGuide Maestro",
    "keywords": "Class MemoryStreamPool Provides System.IO.MemoryStream instances with pooled buffers to reduce heap fragmentation and GC pressure Inheritance System.Object MemoryStreamPool Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels Assembly : cs.temp.dll.dll Syntax public static class MemoryStreamPool Methods GetStream() Returns a recyclable System.IO.MemoryStream Declaration public static MemoryStream GetStream() Returns Type Description MemoryStream GetStream(String) Returns a recyclable System.IO.MemoryStream Declaration public static MemoryStream GetStream(string tag) Parameters Type Name Description System.String tag Returns Type Description MemoryStream GetStream(String, Byte[]) Returns a recyclable System.IO.MemoryStream initialized with the given buffer Declaration public static MemoryStream GetStream(string tag, byte[] buffer) Parameters Type Name Description System.String tag System.Byte [] buffer Returns Type Description MemoryStream GetStream(String, Byte[], Int32, Int32) Returns a recyclable System.IO.MemoryStream initialized with the given buffer Declaration public static MemoryStream GetStream(string tag, byte[] buffer, int offset, int length) Parameters Type Name Description System.String tag System.Byte [] buffer System.Int32 offset System.Int32 length Returns Type Description MemoryStream"
  },
  "api/OSGeo.MapGuide.ObjectModels.ObjectFactory.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ObjectFactory.html",
    "title": "Class ObjectFactory | MapGuide Maestro",
    "keywords": "Class ObjectFactory Factory class to create MapGuide resource objects with either pre-defined or sensible default values. This is recommended over creating the objects directly as this ensures that there are no null child properties where the XML schema forbids it. By default this class will only create known versions of any top-level resource (as of writing, up to MapGuide Open Source 2.6 / AIMS 2015). In order to be able to create newer versions where support has not yet been added to this library, you will need to register the appropriate methods that can create resources of this version: RegisterLayerFactoryMethod(Version, Func<LayerType, ILayerDefinition>) for Layer Definitions This registration needs to be done as part of your application's startup/initialization phase. Inheritance System.Object ObjectFactory Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels Assembly : cs.temp.dll.dll Syntax public static class ObjectFactory Methods CreateAttributeRelation() Creates the attribute relation. Declaration public static IAttributeRelation CreateAttributeRelation() Returns Type Description IAttributeRelation CreateCalculatedProperty() Creates the calculated property. Declaration public static ICalculatedProperty CreateCalculatedProperty() Returns Type Description ICalculatedProperty CreateCalculatedProperty(String, String) Creates the calculated property. Declaration public static ICalculatedProperty CreateCalculatedProperty(string name, string expression) Parameters Type Name Description System.String name The name of the calculated property System.String expression The FDO Expression Returns Type Description ICalculatedProperty CreateCompoundSymbol(Version, String, String) Creates the compound symbol. Declaration public static ICompoundSymbolDefinition CreateCompoundSymbol(Version version, string name, string description) Parameters Type Name Description Version version The version. System.String name The name. System.String description The description. Returns Type Description ICompoundSymbolDefinition CreateDefaultLayer(LayerType, Version) Creates the default layer. Declaration public static ILayerDefinition CreateDefaultLayer(LayerType type, Version version) Parameters Type Name Description LayerType type The type. Version version The version. Returns Type Description ILayerDefinition CreateDrawingSource() Creates the drawing source. Declaration public static IDrawingSource CreateDrawingSource() Returns Type Description IDrawingSource CreateEnvelope(Double, Double, Double, Double) Creates an envelope (bounding box) Declaration public static IEnvelope CreateEnvelope(double minx, double miny, double maxx, double maxy) Parameters Type Name Description System.Double minx System.Double miny System.Double maxx System.Double maxy Returns Type Description IEnvelope CreateFeatureSource(String) Creates the feature source. Declaration public static IFeatureSource CreateFeatureSource(string provider) Parameters Type Name Description System.String provider The provider. Returns Type Description IFeatureSource CreateFeatureSource(String, NameValueCollection) Creates the feature source. Declaration public static IFeatureSource CreateFeatureSource(string provider, NameValueCollection values) Parameters Type Name Description System.String provider The provider. NameValueCollection values The connection properties. Returns Type Description IFeatureSource CreateFeatureSourceExtension() Creates the feature source extension. Declaration public static IFeatureSourceExtension CreateFeatureSourceExtension() Returns Type Description IFeatureSourceExtension CreateFeatureSourceExtension(String, String) Creates the feature source extension. Declaration public static IFeatureSourceExtension CreateFeatureSourceExtension(string name, string featureClass) Parameters Type Name Description System.String name System.String featureClass Returns Type Description IFeatureSourceExtension CreateFlexibleLayout(Version, IApplicationDefinitionTemplateInfoSet, IApplicationDefinitionWidgetInfoSet, IApplicationDefinitionContainerInfoSet, String) Creates a fusion flexible layout Declaration public static IApplicationDefinition CreateFlexibleLayout(Version siteVersion, IApplicationDefinitionTemplateInfoSet templates, IApplicationDefinitionWidgetInfoSet widgets, IApplicationDefinitionContainerInfoSet containers, string templateName) Parameters Type Name Description Version siteVersion The site version IApplicationDefinitionTemplateInfoSet templates The set of available templates IApplicationDefinitionWidgetInfoSet widgets The set of available widgets IApplicationDefinitionContainerInfoSet containers The set of available containers System.String templateName The name of the template. See FusionTemplateNames for the common pre-defined names Returns Type Description IApplicationDefinition CreateLoadProcedure(LoadType) Creates the load procedure. Declaration public static ILoadProcedure CreateLoadProcedure(LoadType type) Parameters Type Name Description LoadType type The type. Returns Type Description ILoadProcedure CreateLoadProcedure(LoadType, IEnumerable<String>) Creates the load procedure. Declaration public static ILoadProcedure CreateLoadProcedure(LoadType type, IEnumerable<string> fileNames) Parameters Type Name Description LoadType type The type. IEnumerable < System.String > fileNames The file names. Returns Type Description ILoadProcedure CreateMapDefinition(Version, String) Creates the map definition. Declaration public static IMapDefinition CreateMapDefinition(Version version, string name) Parameters Type Name Description Version version System.String name Returns Type Description IMapDefinition CreateMapDefinition(Version, String, String) Creates the map definition. Declaration public static IMapDefinition CreateMapDefinition(Version ver, string name, string coordinateSystemWkt) Parameters Type Name Description Version ver System.String name System.String coordinateSystemWkt Returns Type Description IMapDefinition CreateMapDefinition(Version, String, String, IEnvelope) Creates the map definition. Declaration public static IMapDefinition CreateMapDefinition(Version ver, string name, string coordinateSystemWkt, IEnvelope env) Parameters Type Name Description Version ver System.String name System.String coordinateSystemWkt IEnvelope env Returns Type Description IMapDefinition CreateMetadata() Creates an empty resource document header metadata object Declaration public static ResourceDocumentHeaderTypeMetadata CreateMetadata() Returns Type Description ResourceDocumentHeaderTypeMetadata CreatePoint2D(Double, Double) Creates a 2d point Declaration public static IPoint2D CreatePoint2D(double x, double y) Parameters Type Name Description System.Double x System.Double y Returns Type Description IPoint2D CreatePoint3D(Double, Double, Double) Creates a 3d point Declaration public static IPoint3D CreatePoint3D(double x, double y, double z) Parameters Type Name Description System.Double x System.Double y System.Double z Returns Type Description IPoint3D CreatePrintLayout() Creates the print layout. Declaration public static IPrintLayout CreatePrintLayout() Returns Type Description IPrintLayout CreateSecurityGroup() Creates an empty group security object Declaration public static ResourceSecurityTypeGroups CreateSecurityGroup() Returns Type Description ResourceSecurityTypeGroups CreateSecurityUser() Creates an empty user security object Declaration public static ResourceSecurityTypeUsers CreateSecurityUser() Returns Type Description ResourceSecurityTypeUsers CreateSimpleLabel(Version, GeometryContextType) Creates a simple label symbol Declaration public static ISimpleSymbolDefinition CreateSimpleLabel(Version version, GeometryContextType type) Parameters Type Name Description Version version GeometryContextType type Returns Type Description ISimpleSymbolDefinition CreateSimplePoint(Version) Declaration public static ISimpleSymbolDefinition CreateSimplePoint(Version version) Parameters Type Name Description Version version Returns Type Description ISimpleSymbolDefinition CreateSimpleSolidFill(Version) Creates a simple solid fill symbol Declaration public static ISimpleSymbolDefinition CreateSimpleSolidFill(Version version) Parameters Type Name Description Version version Returns Type Description ISimpleSymbolDefinition CreateSimpleSolidLine(Version) Creates a simple solid line symbol Declaration public static ISimpleSymbolDefinition CreateSimpleSolidLine(Version version) Parameters Type Name Description Version version Returns Type Description ISimpleSymbolDefinition CreateSimpleSymbol(Version, String, String) Creates a simple symbol definition. Declaration public static ISimpleSymbolDefinition CreateSimpleSymbol(Version version, string name, string description) Parameters Type Name Description Version version The version. System.String name The name. System.String description The description. Returns Type Description ISimpleSymbolDefinition CreateSymbolLibrary() Creates a new symbol library Declaration public static ISymbolLibrary CreateSymbolLibrary() Returns Type Description ISymbolLibrary CreateTileSetDefinition(Version) Creates the tile set definition Declaration public static ITileSetDefinition CreateTileSetDefinition(Version version) Parameters Type Name Description Version version Returns Type Description ITileSetDefinition CreateTileSetDefinition(Version, IEnvelope) Creates the tile set definition using the default provider Declaration public static ITileSetDefinition CreateTileSetDefinition(Version version, IEnvelope extents) Parameters Type Name Description Version version IEnvelope extents Returns Type Description ITileSetDefinition CreateWatermark(SymbolDefinitionType, Version) Creates a Watermark Definition Declaration public static IWatermarkDefinition CreateWatermark(SymbolDefinitionType type, Version version) Parameters Type Name Description SymbolDefinitionType type Version version Returns Type Description IWatermarkDefinition CreateWebLayout(Version, String) Creates the web layout. Declaration public static IWebLayout CreateWebLayout(Version version, string mapDefinitionId) Parameters Type Name Description Version version The version. System.String mapDefinitionId The map definition id. Returns Type Description IWebLayout Deserialize(String, Stream) Deserializes the specified stream for the specified resource type. Declaration public static IResource Deserialize(string resourceType, Stream stream) Parameters Type Name Description System.String resourceType Type of the resource. Stream stream The stream. Returns Type Description IResource DeserializeEmbeddedFlexLayout(Version) Returns a deserialized copy of an embedded Flexible Layout Declaration public static IApplicationDefinition DeserializeEmbeddedFlexLayout(Version siteVersion) Parameters Type Name Description Version siteVersion Returns Type Description IApplicationDefinition DeserializeXml(String) Deserializes the specified XML. Declaration public static IResource DeserializeXml(string xml) Parameters Type Name Description System.String xml The XML. Returns Type Description IResource RegisterCompoundSymbolFactoryMethod(Version, Func<ICompoundSymbolDefinition>) Registers the compound symbol factory method Declaration public static void RegisterCompoundSymbolFactoryMethod(Version version, Func<ICompoundSymbolDefinition> func) Parameters Type Name Description Version version Func < ICompoundSymbolDefinition > func RegisterLayerFactoryMethod(Version, Func<LayerType, ILayerDefinition>) Registers the layer factory method. Declaration public static void RegisterLayerFactoryMethod(Version version, Func<LayerType, ILayerDefinition> method) Parameters Type Name Description Version version The ver. Func < LayerType , ILayerDefinition > method The method. RegisterLoadProcedureFactoryMethod(LoadType, Func<ILoadProcedure>) Registers the load procedure factory method. Declaration public static void RegisterLoadProcedureFactoryMethod(LoadType type, Func<ILoadProcedure> method) Parameters Type Name Description LoadType type The type. Func < ILoadProcedure > method The method. RegisterMapDefinitionFactoryMethod(Version, Func<IMapDefinition>) Register the map definition factory method Declaration public static void RegisterMapDefinitionFactoryMethod(Version version, Func<IMapDefinition> method) Parameters Type Name Description Version version Func < IMapDefinition > method RegisterResource(ResourceTypeDescriptor, ResourceSerializer) Registers a resource serializer Declaration public static void RegisterResource(ResourceTypeDescriptor desc, ResourceSerializer serializer) Parameters Type Name Description ResourceTypeDescriptor desc The desc. ResourceSerializer serializer The serializer. RegisterResourceSerializer(ResourceTypeDescriptor, Func<IResource, Stream>, Func<String, IResource>) Registers a resource serializer Declaration public static void RegisterResourceSerializer(ResourceTypeDescriptor resourceType, Func<IResource, Stream> serializer, Func<string, IResource> deserializer) Parameters Type Name Description ResourceTypeDescriptor resourceType The resource type descriptor. Func < IResource , Stream > serializer The serialize method. Func < System.String , IResource > deserializer The deserialize method. RegisterSimpleSymbolFactoryMethod(Version, Func<ISimpleSymbolDefinition>) Regsiters the simple symbol factory method Declaration public static void RegisterSimpleSymbolFactoryMethod(Version version, Func<ISimpleSymbolDefinition> func) Parameters Type Name Description Version version Func < ISimpleSymbolDefinition > func RegisterTileSetDefinitionFactoryMethod(Version, Func<ITileSetDefinition>) Registers the Tile Set Definition factory method Declaration public static void RegisterTileSetDefinitionFactoryMethod(Version version, Func<ITileSetDefinition> func) Parameters Type Name Description Version version Func < ITileSetDefinition > func RegisterWatermarkDefinitionFactoryMethod(Version, Func<SymbolDefinitionType, IWatermarkDefinition>) Registers the Watermark Definition factory method Declaration public static void RegisterWatermarkDefinitionFactoryMethod(Version version, Func<SymbolDefinitionType, IWatermarkDefinition> method) Parameters Type Name Description Version version Func < SymbolDefinitionType , IWatermarkDefinition > method RegisterWebLayoutFactoryMethod(Version, Func<String, IWebLayout>) Registers the web layout factory method. Declaration public static void RegisterWebLayoutFactoryMethod(Version version, Func<string, IWebLayout> method) Parameters Type Name Description Version version The version. Func < System.String , IWebLayout > method The method. Reset() Resets the object factory by clearing all registered factories Declaration public static void Reset() Serialize(IResource) Serializes the specified resource. Declaration public static Stream Serialize(IResource resource) Parameters Type Name Description IResource resource The resource. Returns Type Description Stream SerializeAsString(IResource) Serializes the specified resource. Declaration public static string SerializeAsString(IResource resource) Parameters Type Name Description IResource resource Returns Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.PrintLayout.IFont.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.PrintLayout.IFont.html",
    "title": "Interface IFont | MapGuide Maestro",
    "keywords": "Interface IFont Represents a font Namespace : OSGeo.MapGuide.ObjectModels.PrintLayout Assembly : cs.temp.dll.dll Syntax public interface IFont : INotifyPropertyChanged Properties Height Gets or sets the height. Declaration float Height { get; set; } Property Value Type Description System.Single The height. Name Gets or sets the name. Declaration string Name { get; set; } Property Value Type Description System.String The name. Units Gets or sets the units. Declaration string Units { get; set; } Property Value Type Description System.String The units."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ImageType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ImageType.html",
    "title": "Enum ImageType | MapGuide Maestro",
    "keywords": "Enum ImageType The type of image Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum ImageType Fields Name Description Inline Inline content Reference A reference to an image"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IParameter.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IParameter.html",
    "title": "Interface IParameter | MapGuide Maestro",
    "keywords": "Interface IParameter Defines a parameter Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface IParameter : IExpressionPropertySource Properties DataType Gets or sets the type of the data. Declaration string DataType { get; set; } Property Value Type Description System.String The type of the data. DefaultValue Gets or sets the default value. Declaration string DefaultValue { get; set; } Property Value Type Description System.String The default value. Description Gets or sets the description. Declaration string Description { get; set; } Property Value Type Description System.String The description. DisplayName Gets or sets the display name. Declaration string DisplayName { get; set; } Property Value Type Description System.String The display name. Identifier Gets or sets the identifier. Declaration string Identifier { get; set; } Property Value Type Description System.String The identifier."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IParameterDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IParameterDefinition.html",
    "title": "Interface IParameterDefinition | MapGuide Maestro",
    "keywords": "Interface IParameterDefinition Represents a set of parameter definitions Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface IParameterDefinition Properties Parameter Gets the parameters in this collection Declaration IEnumerable<IParameter> Parameter { get; } Property Value Type Description IEnumerable < IParameter > The parameters. Methods AddParameter(IParameter) Adds a parameter to this collection Declaration void AddParameter(IParameter param) Parameters Type Name Description IParameter param The parameter. RemoveParameter(IParameter) Removes the given parameter from this collection Declaration void RemoveParameter(IParameter param) Parameters Type Name Description IParameter param The parameter."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IPathGraphic.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IPathGraphic.html",
    "title": "Interface IPathGraphic | MapGuide Maestro",
    "keywords": "Interface IPathGraphic A path Inherited Members IGraphicBase.ResizeControl IGraphicBase.Type Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface IPathGraphic : IGraphicBase Properties FillColor Gets or sets the color of the fill. Declaration string FillColor { get; set; } Property Value Type Description System.String The color of the fill. Geometry Gets or sets the geometry. Declaration string Geometry { get; set; } Property Value Type Description System.String The geometry. LineCap Gets or sets the line cap. Declaration string LineCap { get; set; } Property Value Type Description System.String The line cap. LineColor Gets or sets the color of the line. Declaration string LineColor { get; set; } Property Value Type Description System.String The color of the line. LineJoin Gets or sets the line join. Declaration string LineJoin { get; set; } Property Value Type Description System.String The line join. LineMiterLimit Gets or sets the line miter limit. Declaration string LineMiterLimit { get; set; } Property Value Type Description System.String The line miter limit. LineWeight Gets or sets the line weight. Declaration string LineWeight { get; set; } Property Value Type Description System.String The line weight. LineWeightScalable Gets or sets the line weight scalable. Declaration string LineWeightScalable { get; set; } Property Value Type Description System.String The line weight scalable."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IPathGraphic2.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IPathGraphic2.html",
    "title": "Interface IPathGraphic2 | MapGuide Maestro",
    "keywords": "Interface IPathGraphic2 Path with support for scaling. Only applicable for Symbol Definition schema 2.4.0 and higher Inherited Members IPathGraphic.Geometry IPathGraphic.FillColor IPathGraphic.LineColor IPathGraphic.LineWeight IPathGraphic.LineWeightScalable IPathGraphic.LineCap IPathGraphic.LineJoin IPathGraphic.LineMiterLimit IGraphicBase.ResizeControl IGraphicBase.Type Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface IPathGraphic2 : IPathGraphic, IGraphicBase Properties ScaleX The amount to scale the path geometry in the horizontal direction. This is only applied to the Geometry element. Defaults to 1 if not specified. Declaration string ScaleX { get; set; } Property Value Type Description System.String ScaleY The amount to scale the path geometry in the vertical direction. This is only applied to the Geometry element. Defaults to 1 if not specified Declaration string ScaleY { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IPointUsage.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IPointUsage.html",
    "title": "Interface IPointUsage | MapGuide Maestro",
    "keywords": "Interface IPointUsage Specifies how a symbol is used in the context of point features Inherited Members IUsageBase.AngleControl IUsageBase.Angle Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface IPointUsage : IUsageBase Properties OriginOffsetX Specifies the horizontal offset to apply to the symbol origin, in mm. This offset is applied before the symbol is scaled and rotated. Defaults to 0 Declaration string OriginOffsetX { get; set; } Property Value Type Description System.String OriginOffsetY Specifies the vertical offset to apply to the symbol origin, in mm. This offset is applied before the symbol is scaled and rotated. Defaults to 0 Declaration string OriginOffsetY { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IResizeBox.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IResizeBox.html",
    "title": "Interface IResizeBox | MapGuide Maestro",
    "keywords": "Interface IResizeBox Defines a resize box used with SimpleSymbolDefinitions Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface IResizeBox Properties GrowControl Gets or sets how the resize box grows in size. This must evaluate to one of: GrowInX, GrowInY, GrowInXY, or GrowInXYMaintainAspect (default). Declaration string GrowControl { get; set; } Property Value Type Description System.String PositionX Gets or sets initial x-coordinate of the resize box center, in mm Declaration string PositionX { get; set; } Property Value Type Description System.String PositionY Gets or sets initial y-coordinate of the resize box center, in mm Declaration string PositionY { get; set; } Property Value Type Description System.String SizeX Gets or sets initial width of the resize box, in mm. This must be greater than or equal to zero Declaration string SizeX { get; set; } Property Value Type Description System.String SizeY Gets or sets initial height of the resize box, in mm. This must be greater than or equal to zero Declaration string SizeY { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ISimpleSymbolDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ISimpleSymbolDefinition.html",
    "title": "Interface ISimpleSymbolDefinition | MapGuide Maestro",
    "keywords": "Interface ISimpleSymbolDefinition Represents a simple symbol definition Inherited Members ISymbolDefinitionBase.Name ISymbolDefinitionBase.Description ISymbolDefinitionBase.Type ISymbolDefinitionBase.RemoveSchemaAttributes() ISymbolDefinitionBase.SetSchemaAttributes() IResource.ValidatingSchema IResource.ResourceID IResource.ResourceType IResource.Serialize() IResource.IsStronglyTyped IVersionedEntity.ResourceVersion Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface ISimpleSymbolDefinition : ISymbolDefinitionBase, IResource, IVersionedEntity, ICloneable, INotifyPropertyChanged Properties AreaUsage Gets or sets the area usage. Declaration IAreaUsage AreaUsage { get; set; } Property Value Type Description IAreaUsage The area usage. Graphics Gets the graphics. Declaration IEnumerable<IGraphicBase> Graphics { get; } Property Value Type Description IEnumerable < IGraphicBase > The graphics. LineUsage Gets or sets the line usage. Declaration ILineUsage LineUsage { get; set; } Property Value Type Description ILineUsage The line usage. ParameterDefinition Gets the parameter definition. Declaration IParameterDefinition ParameterDefinition { get; } Property Value Type Description IParameterDefinition The parameter definition. PointUsage Gets or sets the point usage. Declaration IPointUsage PointUsage { get; set; } Property Value Type Description IPointUsage The point usage. ResizeBox Gets or sets the resize box. Declaration IResizeBox ResizeBox { get; set; } Property Value Type Description IResizeBox The resize box. Methods AddGraphics(IGraphicBase) Adds the graphics. Declaration void AddGraphics(IGraphicBase graphics) Parameters Type Name Description IGraphicBase graphics The graphics. ClearGraphics() Removes all graphic elements Declaration void ClearGraphics() CreateAreaUsage() Creates an area usage context Declaration IAreaUsage CreateAreaUsage() Returns Type Description IAreaUsage CreateFrame() Creates the frame. Declaration ITextFrame CreateFrame() Returns Type Description ITextFrame CreateImageGraphics() Creates the image graphics. Declaration IImageGraphic CreateImageGraphics() Returns Type Description IImageGraphic CreateImageReference(String, String) Creates an image reference Declaration IImageReference CreateImageReference(string resourceId, string dataName) Parameters Type Name Description System.String resourceId System.String dataName Returns Type Description IImageReference CreateInlineImage(Byte[]) Creates an inline image Declaration IInlineImage CreateInlineImage(byte[] content) Parameters Type Name Description System.Byte [] content Returns Type Description IInlineImage CreateLineUsage() Creates a line usage context Declaration ILineUsage CreateLineUsage() Returns Type Description ILineUsage CreateParameter() Creates the parameter. Declaration IParameter CreateParameter() Returns Type Description IParameter CreatePathGraphics() Creates the path graphics. Declaration IPathGraphic CreatePathGraphics() Returns Type Description IPathGraphic CreatePointUsage() Creates a point usage context Declaration IPointUsage CreatePointUsage() Returns Type Description IPointUsage CreateResizeBox() Creates a resize box Declaration IResizeBox CreateResizeBox() Returns Type Description IResizeBox CreateTextGraphics() Creates the text graphics. Declaration ITextGraphic CreateTextGraphics() Returns Type Description ITextGraphic RemoveGraphics(IGraphicBase) Removes the graphics. Declaration void RemoveGraphics(IGraphicBase graphics) Parameters Type Name Description IGraphicBase graphics The graphics."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ISimpleSymbolInlineReference.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ISimpleSymbolInlineReference.html",
    "title": "Interface ISimpleSymbolInlineReference | MapGuide Maestro",
    "keywords": "Interface ISimpleSymbolInlineReference Represents a simple symbol reference by inline definition Inherited Members ISimpleSymbolReferenceBase.Type ISimpleSymbolReferenceBase.RenderingPass Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface ISimpleSymbolInlineReference : ISimpleSymbolReferenceBase Properties SimpleSymbolDefinition Gets or sets the simple symbol definition. Declaration ISimpleSymbolDefinition SimpleSymbolDefinition { get; set; } Property Value Type Description ISimpleSymbolDefinition The simple symbol definition."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ISimpleSymbolLibraryReference.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ISimpleSymbolLibraryReference.html",
    "title": "Interface ISimpleSymbolLibraryReference | MapGuide Maestro",
    "keywords": "Interface ISimpleSymbolLibraryReference Represents a simple symbol reference by resource id Inherited Members ISimpleSymbolReferenceBase.Type ISimpleSymbolReferenceBase.RenderingPass Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface ISimpleSymbolLibraryReference : ISimpleSymbolReferenceBase, IResourceIdReference"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ISimpleSymbolReferenceBase.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ISimpleSymbolReferenceBase.html",
    "title": "Interface ISimpleSymbolReferenceBase | MapGuide Maestro",
    "keywords": "Interface ISimpleSymbolReferenceBase Represents a simple symbol reference Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface ISimpleSymbolReferenceBase Properties RenderingPass Gets or sets the rendering pass. Declaration string RenderingPass { get; set; } Property Value Type Description System.String The rendering pass. Type Gets the type. Declaration SimpleSymbolReferenceType Type { get; } Property Value Type Description SimpleSymbolReferenceType The type."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ISymbolDefinitionBase.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ISymbolDefinitionBase.html",
    "title": "Interface ISymbolDefinitionBase | MapGuide Maestro",
    "keywords": "Interface ISymbolDefinitionBase Base interface of all symbol definitions Inherited Members IResource.ValidatingSchema IResource.ResourceID IResource.ResourceType IResource.Serialize() IResource.IsStronglyTyped IVersionedEntity.ResourceVersion Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface ISymbolDefinitionBase : IResource, IVersionedEntity, ICloneable, INotifyPropertyChanged Properties Description Gets or sets the description. Declaration string Description { get; set; } Property Value Type Description System.String The description. Name Gets or sets the name. Declaration string Name { get; set; } Property Value Type Description System.String The name. Type Gets the type of symbol definition Declaration SymbolDefinitionType Type { get; } Property Value Type Description SymbolDefinitionType Methods RemoveSchemaAttributes() Purges the schema and version attributes when serializing back to XML Declaration void RemoveSchemaAttributes() SetSchemaAttributes() Sets the schema and version attributes Declaration void SetSchemaAttributes()"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ISymbolInstance.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ISymbolInstance.html",
    "title": "Interface ISymbolInstance | MapGuide Maestro",
    "keywords": "Interface ISymbolInstance Represents a symbol instance used for advanced cartographic stylization Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface ISymbolInstance Properties AddToExclusionRegion Gets or sets whether to add this instance to the exclusion region Declaration string AddToExclusionRegion { get; set; } Property Value Type Description System.String CheckExclusionRegion Gets or sets whether to check the exclusion region Declaration string CheckExclusionRegion { get; set; } Property Value Type Description System.String DrawLast Gets or sets whether to draw this instance last Declaration string DrawLast { get; set; } Property Value Type Description System.String InsertionOffsetX Gets or sets the X insertion offset Declaration string InsertionOffsetX { get; set; } Property Value Type Description System.String InsertionOffsetY Gets or sets the Y insertion offset Declaration string InsertionOffsetY { get; set; } Property Value Type Description System.String ParameterOverrides Gets the parameter overrides for this symbol Declaration IParameterOverrideCollection ParameterOverrides { get; } Property Value Type Description IParameterOverrideCollection PositioningAlgorithm Gets or sets the position algorithm Declaration string PositioningAlgorithm { get; set; } Property Value Type Description System.String Reference Gets or sets the symbol reference Declaration ISymbolInstanceReference Reference { get; set; } Property Value Type Description ISymbolInstanceReference ScaleX Gets or sets the X scale Declaration string ScaleX { get; set; } Property Value Type Description System.String ScaleY Gets or sets the Y scale Declaration string ScaleY { get; set; } Property Value Type Description System.String SizeContext Gets or sets the size context Declaration SizeContextType SizeContext { get; set; } Property Value Type Description SizeContextType"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ISymbolInstanceReference.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ISymbolInstanceReference.html",
    "title": "Interface ISymbolInstanceReference | MapGuide Maestro",
    "keywords": "Interface ISymbolInstanceReference Represents a symbol instance reference Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface ISymbolInstanceReference Properties Type Gets the type Declaration SymbolInstanceType Type { get; } Property Value Type Description SymbolInstanceType"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ISymbolInstanceReferenceInline.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ISymbolInstanceReferenceInline.html",
    "title": "Interface ISymbolInstanceReferenceInline | MapGuide Maestro",
    "keywords": "Interface ISymbolInstanceReferenceInline Represents a symbol instance reference by a inline definition Inherited Members ISymbolInstanceReference.Type Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface ISymbolInstanceReferenceInline : ISymbolInstanceReference Properties SymbolDefinition Gets or sets the inline definition Declaration ISymbolDefinitionBase SymbolDefinition { get; set; } Property Value Type Description ISymbolDefinitionBase"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ISymbolInstanceReferenceLibrary.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ISymbolInstanceReferenceLibrary.html",
    "title": "Interface ISymbolInstanceReferenceLibrary | MapGuide Maestro",
    "keywords": "Interface ISymbolInstanceReferenceLibrary Represents a symbol instance reference by a resource id Inherited Members ISymbolInstanceReference.Type Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface ISymbolInstanceReferenceLibrary : ISymbolInstanceReference, IResourceIdReference"
  },
  "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.IHorizontalPosition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.IHorizontalPosition.html",
    "title": "Interface IHorizontalPosition | MapGuide Maestro",
    "keywords": "Interface IHorizontalPosition Represents the horizontal position of a watermark Namespace : OSGeo.MapGuide.ObjectModels.WatermarkDefinition Assembly : cs.temp.dll.dll Syntax public interface IHorizontalPosition : INotifyPropertyChanged Properties Alignment Gets or sets the horizontal alignment for the position Declaration HorizontalAlignmentType Alignment { get; set; } Property Value Type Description HorizontalAlignmentType Offset Gets or sets the horizontal offset for the position Declaration double Offset { get; set; } Property Value Type Description System.Double Unit Gets or sets the unit of the offset Declaration UnitType Unit { get; set; } Property Value Type Description UnitType"
  },
  "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.IPosition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.IPosition.html",
    "title": "Interface IPosition | MapGuide Maestro",
    "keywords": "Interface IPosition Abstract base type used with all watermark positions Namespace : OSGeo.MapGuide.ObjectModels.WatermarkDefinition Assembly : cs.temp.dll.dll Syntax public interface IPosition : INotifyPropertyChanged Properties Type Gets the type of watermark position Declaration PositionType Type { get; } Property Value Type Description PositionType"
  },
  "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.ITilePosition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.ITilePosition.html",
    "title": "Interface ITilePosition | MapGuide Maestro",
    "keywords": "Interface ITilePosition Positions a watermark according to a regular grid Inherited Members IPosition.Type Namespace : OSGeo.MapGuide.ObjectModels.WatermarkDefinition Assembly : cs.temp.dll.dll Syntax public interface ITilePosition : IPosition, INotifyPropertyChanged Properties HorizontalPosition Gets or sets the horizontal position of the watermark within a tile Declaration IHorizontalPosition HorizontalPosition { get; set; } Property Value Type Description IHorizontalPosition TileHeight Gets or sets the height of each tile in the grid Declaration double TileHeight { get; set; } Property Value Type Description System.Double TileWidth Gets or sets the width of each tile in the grid Declaration double TileWidth { get; set; } Property Value Type Description System.Double VerticalPosition Gets or sets the vertical position of the watermark within a tile Declaration IVerticalPosition VerticalPosition { get; set; } Property Value Type Description IVerticalPosition"
  },
  "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.IVerticalPosition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.IVerticalPosition.html",
    "title": "Interface IVerticalPosition | MapGuide Maestro",
    "keywords": "Interface IVerticalPosition Defines the vertical position of a watermark Namespace : OSGeo.MapGuide.ObjectModels.WatermarkDefinition Assembly : cs.temp.dll.dll Syntax public interface IVerticalPosition : INotifyPropertyChanged Properties Alignment Gets or sets the vertical alignment for the position Declaration VerticalAlignmentType Alignment { get; set; } Property Value Type Description VerticalAlignmentType Offset Gets or sets the vertical offset for the position Declaration double Offset { get; set; } Property Value Type Description System.Double Unit Gets or sets the unit of the offset Declaration UnitType Unit { get; set; } Property Value Type Description UnitType"
  },
  "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.IWatermark.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.IWatermark.html",
    "title": "Interface IWatermark | MapGuide Maestro",
    "keywords": "Interface IWatermark A watermark instance used in a map definition or layer definition Namespace : OSGeo.MapGuide.ObjectModels.WatermarkDefinition Assembly : cs.temp.dll.dll Syntax public interface IWatermark Properties AppearanceOverride If specified, overrides the appearance of the watermark definition Declaration IWatermarkAppearance AppearanceOverride { get; set; } Property Value Type Description IWatermarkAppearance Name Gets or sets the name of the watermark Declaration string Name { get; set; } Property Value Type Description System.String PositionOverride If specified, overrides the position of the watermark definition Declaration IPosition PositionOverride { get; set; } Property Value Type Description IPosition ResourceId Gets or sets a library reference to an existing WatermarkDefinition Declaration string ResourceId { get; set; } Property Value Type Description System.String Usage Gets or sets the context in which the watermark is displayed. Declaration UsageType Usage { get; set; } Property Value Type Description UsageType Methods CreateDefaultAppearance() Creates the default appearance. Declaration IWatermarkAppearance CreateDefaultAppearance() Returns Type Description IWatermarkAppearance CreateDefaultTilePosition() Creates the default tile position. Declaration ITilePosition CreateDefaultTilePosition() Returns Type Description ITilePosition CreateDefaultXYPosition() Creates the default XY position. Declaration IXYPosition CreateDefaultXYPosition() Returns Type Description IXYPosition"
  },
  "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.IWatermarkAppearance.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.IWatermarkAppearance.html",
    "title": "Interface IWatermarkAppearance | MapGuide Maestro",
    "keywords": "Interface IWatermarkAppearance Defines the appearance of a watermark. Namespace : OSGeo.MapGuide.ObjectModels.WatermarkDefinition Assembly : cs.temp.dll.dll Syntax public interface IWatermarkAppearance : INotifyPropertyChanged Properties Rotation Gets or sets the rotation of the watermark, in degrees, in the range 0-360. The default value is 0 Declaration double Rotation { get; set; } Property Value Type Description System.Double Transparency Gets or sets the transparency of the watermark in the range 0-100. The default value is 0 (opaque) Declaration double Transparency { get; set; } Property Value Type Description System.Double"
  },
  "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.IWatermarkCollection.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.IWatermarkCollection.html",
    "title": "Interface IWatermarkCollection | MapGuide Maestro",
    "keywords": "Interface IWatermarkCollection Defines a collection of IWatermark instances Namespace : OSGeo.MapGuide.ObjectModels.WatermarkDefinition Assembly : cs.temp.dll.dll Syntax public interface IWatermarkCollection Properties WatermarkCount Gets the number of watermarks used by this map definition Declaration int WatermarkCount { get; } Property Value Type Description System.Int32 Watermarks Gets the watermarks used by this map definition Declaration IEnumerable<IWatermark> Watermarks { get; } Property Value Type Description IEnumerable < IWatermark > Methods AddWatermark(IWatermarkDefinition) Adds a watermark Declaration IWatermark AddWatermark(IWatermarkDefinition watermarkDef) Parameters Type Name Description IWatermarkDefinition watermarkDef The watermark definition to add Returns Type Description IWatermark The added watermark instance. RemoveWatermark(IWatermark) Removes the specified watermark Declaration void RemoveWatermark(IWatermark watermark) Parameters Type Name Description IWatermark watermark"
  },
  "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.IWatermarkDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.IWatermarkDefinition.html",
    "title": "Interface IWatermarkDefinition | MapGuide Maestro",
    "keywords": "Interface IWatermarkDefinition A watermark definition containing content, appearance and position information Inherited Members IResource.ValidatingSchema IResource.ResourceID IResource.ResourceType IResource.Serialize() IResource.IsStronglyTyped IVersionedEntity.ResourceVersion Namespace : OSGeo.MapGuide.ObjectModels.WatermarkDefinition Assembly : cs.temp.dll.dll Syntax public interface IWatermarkDefinition : IResource, IVersionedEntity, ICloneable, INotifyPropertyChanged Properties Appearance Gets or sets the appearance of the watermark Declaration IWatermarkAppearance Appearance { get; set; } Property Value Type Description IWatermarkAppearance Content Gets or sets a symbol definition defining the content of the watermark Declaration ISymbolDefinitionBase Content { get; set; } Property Value Type Description ISymbolDefinitionBase Position Gets or sets the position of the watermark Declaration IPosition Position { get; set; } Property Value Type Description IPosition SupportedLayerDefinitionVersion Gets the version of the Layer Definition that can take this watermark Declaration Version SupportedLayerDefinitionVersion { get; } Property Value Type Description Version SupportedMapDefinitionVersion Gets the version of the Map Definition that can take this watermark Declaration Version SupportedMapDefinitionVersion { get; } Property Value Type Description Version Methods CreateTilePosition() Creates the tile position. Declaration ITilePosition CreateTilePosition() Returns Type Description ITilePosition CreateXYPosition() Creates the XY position. Declaration IXYPosition CreateXYPosition() Returns Type Description IXYPosition"
  },
  "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.IXYPosition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.IXYPosition.html",
    "title": "Interface IXYPosition | MapGuide Maestro",
    "keywords": "Interface IXYPosition Positions a watermark at a single X/Y location Inherited Members IPosition.Type Namespace : OSGeo.MapGuide.ObjectModels.WatermarkDefinition Assembly : cs.temp.dll.dll Syntax public interface IXYPosition : IPosition, INotifyPropertyChanged Properties XPosition Gets or sets the position along the X-axis Declaration IHorizontalPosition XPosition { get; set; } Property Value Type Description IHorizontalPosition YPosition Gets or sets the position along the Y-axis Declaration IVerticalPosition YPosition { get; set; } Property Value Type Description IVerticalPosition"
  },
  "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.PositionType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.PositionType.html",
    "title": "Enum PositionType | MapGuide Maestro",
    "keywords": "Enum PositionType Defines the type of watermark position Namespace : OSGeo.MapGuide.ObjectModels.WatermarkDefinition Assembly : cs.temp.dll.dll Syntax public enum PositionType Fields Name Description Tile Tile-based position XY X/Y based position"
  },
  "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.UnitType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.UnitType.html",
    "title": "Enum UnitType | MapGuide Maestro",
    "keywords": "Enum UnitType The allowed length units for a watermark position Namespace : OSGeo.MapGuide.ObjectModels.WatermarkDefinition Assembly : cs.temp.dll.dll Syntax public enum UnitType Fields Name Description Centimeters Inches Millimeters Pixels Points"
  },
  "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.UsageType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.UsageType.html",
    "title": "Enum UsageType | MapGuide Maestro",
    "keywords": "Enum UsageType The context in which the watermark is displayed Namespace : OSGeo.MapGuide.ObjectModels.WatermarkDefinition Assembly : cs.temp.dll.dll Syntax public enum UsageType Fields Name Description All Viewer WMS"
  },
  "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.VerticalAlignmentType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.VerticalAlignmentType.html",
    "title": "Enum VerticalAlignmentType | MapGuide Maestro",
    "keywords": "Enum VerticalAlignmentType The allowed vertical alignments for a watermark position Namespace : OSGeo.MapGuide.ObjectModels.WatermarkDefinition Assembly : cs.temp.dll.dll Syntax public enum VerticalAlignmentType Fields Name Description Bottom Center Top"
  },
  "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.html",
    "title": "Namespace OSGeo.MapGuide.ObjectModels.WatermarkDefinition | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.ObjectModels.WatermarkDefinition Interfaces IHorizontalPosition Represents the horizontal position of a watermark IPosition Abstract base type used with all watermark positions ITilePosition Positions a watermark according to a regular grid IVerticalPosition Defines the vertical position of a watermark IWatermark A watermark instance used in a map definition or layer definition IWatermarkAppearance Defines the appearance of a watermark. IWatermarkCollection Defines a collection of IWatermark instances IWatermarkDefinition A watermark definition containing content, appearance and position information IXYPosition Positions a watermark at a single X/Y location Enums HorizontalAlignmentType The allowed horizontal alignment values for a watermark position PositionType Defines the type of watermark position UnitType The allowed length units for a watermark position UsageType The context in which the watermark is displayed VerticalAlignmentType The allowed vertical alignments for a watermark position"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.BasicCommandActionType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.BasicCommandActionType.html",
    "title": "Enum BasicCommandActionType | MapGuide Maestro",
    "keywords": "Enum BasicCommandActionType Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public enum BasicCommandActionType Fields Name Description About ClearSelection CopyMap FitToWindow MapTip NextView Pan PanDown PanLeft PanRight PanUp PreviousView Refresh RestoreView Select SelectPolygon SelectRadius Zoom ZoomIn ZoomOut ZoomRectangle ZoomToSelection"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.BuiltInCommandType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.BuiltInCommandType.html",
    "title": "Enum BuiltInCommandType | MapGuide Maestro",
    "keywords": "Enum BuiltInCommandType Encompasses all built-in commands usable by the web layout (AJAX and DWF) Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public enum BuiltInCommandType Fields Name Description About Buffer ClearSelection CopyMap FitToWindow GetPrintablePage Help Measure NextView Pan PanDown PanLeft PanRight PanUp PreviousView Print Refresh RestoreView Select SelectPolygon SelectRadius SelectWithin ViewOptions Zoom ZoomIn ZoomOut ZoomRectangle ZoomToSelection"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.WebLayoutRegion.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.WebLayoutRegion.html",
    "title": "Enum WebLayoutRegion | MapGuide Maestro",
    "keywords": "Enum WebLayoutRegion Defines a region of the web layout where UI items can reside Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public enum WebLayoutRegion Fields Name Description ContextMenu The context menu TaskBar The task bar Toolbar The toolbar"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.html",
    "title": "Namespace OSGeo.MapGuide.ObjectModels.WebLayout | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.ObjectModels.WebLayout Classes CommandEventArgs Event args for a command ImportedCommandResult Represents a result of a command import MenuExtensions Extension method class Interfaces IBasicCommand A built-in basic command IBufferCommand Buffer command ICommand Base viewer command ICommandItem A menu item that invokes a command ICommandSet The master list of viewer commands IContextMenu The viewer context menu ICustomCommand A custom command IFlyoutItem A flyout menu item IGetPrintablePageCommand Get printable page command IHelpCommand A help command IInformationPane The legend and property pane IInvokeScriptCommand An invoke script command IInvokeUrlCommand Invoke URL command ILayerSet A set of layers ILocalizable A UI element with localizable features IMap The map referenced in this web layout IMapView The initial view of the map IMeasureCommand Measure command IMenu Represents a UI element that can have any number of child UI elements IParameterPair A key value pair IPrintCommand Print command IResourceReference A resource reference IResultColumn A search command result column IResultColumnSet A search command result specification ISearchCommand Search command ISelectWithinCommand Select within command ISeparatorItem A separator item IStatusBar The status bar ITargetedCommand A command that operates in a certain viewer frame ITaskBar The task bar ITaskButton A button on the task pane ITaskPane The task pane IToolbar The viewer toolbar IUIItem A UI element IViewOptionsCommand View options command IWebLayout The Web Layout IWebLayout2 Web Layout from v1.1.0 schema IWebLayout3 Web Layout from v2.6.0 schema IWebLayoutControl A web layout element IWebLayoutResizableControl A resizable web layout element IZoomControl The zoom slider Enums BasicCommandActionType BuiltInCommandType Encompasses all built-in commands usable by the web layout (AJAX and DWF) TargetType TargetViewerType UIItemFunctionType WebLayoutRegion Defines a region of the web layout where UI items can reside Delegates CommandEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.XmlNamespaces.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.XmlNamespaces.html",
    "title": "Class XmlNamespaces | MapGuide Maestro",
    "keywords": "Class XmlNamespaces A set of XML namespaces commonly used in FDO XML documents Inheritance System.Object XmlNamespaces Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels Assembly : cs.temp.dll.dll Syntax public static class XmlNamespaces Fields FDO FDO (Feature Data Objects) namespace Declaration public const string FDO = \"http://fdo.osgeo.org/schemas\" Field Value Type Description System.String FDS FDS namespace Declaration public const string FDS = \"http://fdo.osgeo.org/schemas/fds\" Field Value Type Description System.String GML GML (Geography Markup Language) namespace Declaration public const string GML = \"http://www.opengis.net/gml\" Field Value Type Description System.String XLINK XLink namespace Declaration public const string XLINK = \"http://www.w3.org/1999/xlink\" Field Value Type Description System.String XS XML Schema namespace Declaration public const string XS = \"http://www.w3.org/2001/XMLSchema\" Field Value Type Description System.String XSI XML Schema Instance namespace Declaration public const string XSI = \"http://www.w3.org/2001/XMLSchema-instance\" Field Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.html",
    "title": "Namespace OSGeo.MapGuide.ObjectModels | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.ObjectModels Classes BaseSerializable The base class of all serializable resource types BaseSerializableMapDefinition The base class of all serializable map definition types Check Pre-condition verifier utility class ExtensionMethods Extension Methods MemoryStreamPool Provides System.IO.MemoryStream instances with pooled buffers to reduce heap fragmentation and GC pressure ObjectFactory Factory class to create MapGuide resource objects with either pre-defined or sensible default values. This is recommended over creating the objects directly as this ensures that there are no null child properties where the XML schema forbids it. By default this class will only create known versions of any top-level resource (as of writing, up to MapGuide Open Source 2.6 / AIMS 2015). In order to be able to create newer versions where support has not yet been added to this library, you will need to register the appropriate methods that can create resources of this version: RegisterLayerFactoryMethod(Version, Func<LayerType, ILayerDefinition>) for Layer Definitions This registration needs to be done as part of your application's startup/initialization phase. ResourceContentVersionChecker Inspects a resource content stream to determine the version of the resource content within The stream to be inspected is copied and the inspection is made on the copy ResourceExtensions Extension method class ResourceIdentifier This class contains all the required code for maintaining resource identifiers. It has implicit conversions to and from a string, which makes it much easier to use. It has both static methods that operate on strings, as well as a class that can be manipulated. ResourceSerializer A resource serializer ResourceTypeDescriptor Represents a unique resource type / version pair UntypedResource Represents resource content that could not be deserialized into a corresponding strongly-typed resource class. This is just a container of arbitrary xml content. XmlNamespaces A set of XML namespaces commonly used in FDO XML documents Structs FontInfo Font information Interfaces IResource Represents a MapGuide Resource IVersionedEntity An entity with an attached version Enums ResourceTypes Represents the common resource types in MapGuide"
  },
  "api/System.Xml.ExtensionMethods.html": {
    "href": "api/System.Xml.ExtensionMethods.html",
    "title": "Class ExtensionMethods | MapGuide Maestro",
    "keywords": "Class ExtensionMethods XML Document extension methods Inheritance System.Object ExtensionMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : System.Xml Assembly : cs.temp.dll.dll Syntax public static class ExtensionMethods Methods ToXmlString(XmlDocument, Boolean) Gets the XML string of this document Declaration public static string ToXmlString(this XmlDocument doc, bool indent = false) Parameters Type Name Description XmlDocument doc The XML document System.Boolean indent If true, will indent the XML content, false otherwise Returns Type Description System.String The XML string"
  },
  "api/System.Xml.html": {
    "href": "api/System.Xml.html",
    "title": "Namespace System.Xml | MapGuide Maestro",
    "keywords": "Namespace System.Xml Classes ExtensionMethods XML Document extension methods"
  },
  "api/OSGeo.FDO.Expressions.BinaryOperator.html": {
    "href": "api/OSGeo.FDO.Expressions.BinaryOperator.html",
    "title": "Enum BinaryOperator | MapGuide Maestro",
    "keywords": "Enum BinaryOperator The binary operator Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public enum BinaryOperator Fields Name Description Add Addition Divide Division Multiply Multiplication Subtract Subtraction"
  },
  "api/OSGeo.FDO.Expressions.DistanceOperations.html": {
    "href": "api/OSGeo.FDO.Expressions.DistanceOperations.html",
    "title": "Enum DistanceOperations | MapGuide Maestro",
    "keywords": "Enum DistanceOperations The distance operator Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public enum DistanceOperations Fields Name Description Beyond Beyond WithinDistance Within distance"
  },
  "api/OSGeo.FDO.Expressions.FdoBooleanValue.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoBooleanValue.html",
    "title": "Class FdoBooleanValue | MapGuide Maestro",
    "keywords": "Class FdoBooleanValue An FDO boolean value Inheritance System.Object FdoParseable FdoExpression FdoValueExpression FdoLiteralValue FdoDataValue FdoBooleanValue Inherited Members FdoDataValue.DataType FdoLiteralValue.LiteralValueType FdoExpression.ParseableType FdoExpression.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoBooleanValue : FdoDataValue Properties ExpressionType The expression type Declaration public override ExpressionType ExpressionType { get; } Property Value Type Description ExpressionType Overrides FdoExpression.ExpressionType Value The boolean value Declaration public bool Value { get; } Property Value Type Description System.Boolean"
  },
  "api/OSGeo.FDO.Expressions.FdoDateTimeValue.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoDateTimeValue.html",
    "title": "Class FdoDateTimeValue | MapGuide Maestro",
    "keywords": "Class FdoDateTimeValue An FDO datetime value Inheritance System.Object FdoParseable FdoExpression FdoValueExpression FdoLiteralValue FdoDataValue FdoDateTimeValue Inherited Members FdoDataValue.DataType FdoLiteralValue.LiteralValueType FdoExpression.ParseableType FdoExpression.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoDateTimeValue : FdoDataValue Properties DateTime The datetime value Declaration public DateTime? DateTime { get; } Property Value Type Description System.Nullable < DateTime > ExpressionType The expression type Declaration public override ExpressionType ExpressionType { get; } Property Value Type Description ExpressionType Overrides FdoExpression.ExpressionType Time The time span value Declaration public TimeSpan? Time { get; } Property Value Type Description System.Nullable < TimeSpan >"
  },
  "api/OSGeo.FDO.Expressions.FdoExpression.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoExpression.html",
    "title": "Class FdoExpression | MapGuide Maestro",
    "keywords": "Class FdoExpression The base class of all FDO expressions Inheritance System.Object FdoParseable FdoExpression FdoBinaryExpression FdoFunction FdoIdentifier FdoUnaryExpression FdoValueExpression Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public abstract class FdoExpression : FdoParseable Properties ExpressionType The expression type Declaration public abstract ExpressionType ExpressionType { get; } Property Value Type Description ExpressionType ParseableType The parseable type Declaration public override FdoParseableType ParseableType { get; } Property Value Type Description FdoParseableType Overrides FdoParseable.ParseableType Methods Parse(String) Parses the given FDO expression string Declaration public static FdoExpression Parse(string str) Parameters Type Name Description System.String str Returns Type Description FdoExpression"
  },
  "api/OSGeo.FDO.Expressions.FdoGeometricCondition.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoGeometricCondition.html",
    "title": "Class FdoGeometricCondition | MapGuide Maestro",
    "keywords": "Class FdoGeometricCondition An FDO geometric condition expression Inheritance System.Object FdoParseable FdoFilter FdoSearchCondition FdoGeometricCondition FdoDistanceCondition FdoSpatialCondition Inherited Members FdoFilter.ParseableType FdoFilter.FilterType FdoFilter.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public abstract class FdoGeometricCondition : FdoSearchCondition"
  },
  "api/OSGeo.FDO.Expressions.FdoInCondition.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoInCondition.html",
    "title": "Class FdoInCondition | MapGuide Maestro",
    "keywords": "Class FdoInCondition An FDO IN condition Inheritance System.Object FdoParseable FdoFilter FdoSearchCondition FdoInCondition Inherited Members FdoFilter.ParseableType FdoFilter.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoInCondition : FdoSearchCondition Properties FilterType The filter type Declaration public override FilterType FilterType { get; } Property Value Type Description FilterType Overrides FdoFilter.FilterType Identifier The identifier Declaration public FdoIdentifier Identifier { get; } Property Value Type Description FdoIdentifier ValueList The list of values to compare against Declaration public List<FdoValueExpression> ValueList { get; } Property Value Type Description List < FdoValueExpression >"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Schema.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Schema.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.Schema | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.Schema Classes ClassDefinition Represents a FDO class definition. A Class Definition defines the structure of features that originate from it in feature queries. Class Definitions usually contain a Geometry property for spatial features. Class Definitions belong to a Feature Schema DataPropertyDefinition Derives from PropertyDefinition and represents simple values or collections of simple values. This can take on any of the data types listed in the DataPropertyType enumeration. FeatureSchema Contains all of the classes and relationships that make up a particular data model. This class is used to represent the internal logical structure of a Feature Source FeatureSourceDescription Class that represents a the layout of a feature source GeometricPropertyDefinition A geometric property PropertyDefinition Base class of all property definitions RasterPropertyDefinition Has the information needed to create or completely describe a raster property. This class encapsulates the information necessary to insert a 'new' raster, in the absence of any other information, for the properties defined using this schema element. SchemaElement Base class of all FDO schema elements UnmappedDataType Dummy class that represents an unknown data type Enums DataPropertyType Defines the valid data types of data properties FeatureGeometricType Defines the valid types of geometric storage in a geometric property PropertyDefinitionType Defines the types of properties in a FDO class definition PropertyValueType Defines the valid types of property values SpecificGeometryType Defines the valid specific geometry types for geometric storage"
  },
  "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.ConfigurationDocument.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.ConfigurationDocument.html",
    "title": "Class ConfigurationDocument | MapGuide Maestro",
    "keywords": "Class ConfigurationDocument The base class of all configuration documents Inheritance System.Object ConfigurationDocument GdalConfigurationDocument GenericConfigurationDocument OdbcConfigurationDocument WmsConfigurationDocument Namespace : OSGeo.MapGuide.MaestroAPI.SchemaOverrides Assembly : cs.temp.dll.dll Syntax public abstract class ConfigurationDocument : IFdoSerializable Constructors ConfigurationDocument() Initializes a new instance of the ConfigurationDocument class. Declaration protected ConfigurationDocument() Fields _schemas The list of logical schemas Declaration protected List<FeatureSchema> _schemas Field Value Type Description List < FeatureSchema > _spatialContexts The list of spatial contexts Declaration protected List<IFdoSpatialContext> _spatialContexts Field Value Type Description List < IFdoSpatialContext > Properties Schemas Gets the array of logical schemas. Declaration public FeatureSchema[] Schemas { get; } Property Value Type Description FeatureSchema [] SpatialContexts Gets the array of spatial contexts. Declaration public IFdoSpatialContext[] SpatialContexts { get; } Property Value Type Description IFdoSpatialContext [] Methods AddSchema(FeatureSchema) Adds the logical schema. Declaration public void AddSchema(FeatureSchema schema) Parameters Type Name Description FeatureSchema schema The schema. AddSpatialContext(IFdoSpatialContext) Adds the spatial context. Declaration public void AddSpatialContext(IFdoSpatialContext context) Parameters Type Name Description IFdoSpatialContext context The context. GetClass(String, String) Gets the class definition by schema and class names Declaration public ClassDefinition GetClass(string schemaName, string className) Parameters Type Name Description System.String schemaName Name of the schema. System.String className Name of the class. Returns Type Description ClassDefinition GetSchema(String) Gets the schema by name. Declaration public FeatureSchema GetSchema(string name) Parameters Type Name Description System.String name The name. Returns Type Description FeatureSchema GetSpatialContext(String) Gets the spatial context by name Declaration public IFdoSpatialContext GetSpatialContext(string name) Parameters Type Name Description System.String name The name. Returns Type Description IFdoSpatialContext GetSpatialContextNames() Gets the array spatial context names. Declaration public string[] GetSpatialContextNames() Returns Type Description System.String [] Load(Stream) Creates a configuration document from the specified stream. Declaration public static ConfigurationDocument Load(Stream stream) Parameters Type Name Description System.IO.Stream stream The stream. Returns Type Description ConfigurationDocument The configuration document LoadXml(String) Creates a configuration document from XML. Declaration public static ConfigurationDocument LoadXml(string xml) Parameters Type Name Description System.String xml The XML. Returns Type Description ConfigurationDocument The configuration document ReadSchemaMappings(XmlNode, XmlNamespaceManager) Write this document's schema mappings from the given XML document Declaration protected abstract void ReadSchemaMappings(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description XmlNode node The node. XmlNamespaceManager mgr The namespace manager. ReadXml(XmlNode, XmlNamespaceManager) Set the current element's content from the current XML node Declaration public void ReadXml(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description XmlNode node XmlNamespaceManager mgr RemoveSchema(FeatureSchema) Removes the logical schema. Declaration public void RemoveSchema(FeatureSchema schema) Parameters Type Name Description FeatureSchema schema The schema. RemoveSpatialContext(IFdoSpatialContext) Removes the spatial context. Declaration public void RemoveSpatialContext(IFdoSpatialContext context) Parameters Type Name Description IFdoSpatialContext context The context. ToXml() Returns the XML form of this document Declaration public string ToXml() Returns Type Description System.String WriteSchemaMappings(XmlDocument, XmlNode) Write this document's schema mappings to the given XML document Declaration protected abstract void WriteSchemaMappings(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description XmlDocument doc XmlNode currentNode WriteXml(XmlDocument, XmlNode) Writes the current element's content Declaration public virtual void WriteXml(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description XmlDocument doc XmlNode currentNode"
  },
  "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.GdalConfigurationDocument.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.GdalConfigurationDocument.html",
    "title": "Class GdalConfigurationDocument | MapGuide Maestro",
    "keywords": "Class GdalConfigurationDocument A configuration document for the GDAL raster provider. A GDAL configuration document serves as a raster image catalog. Allowing the GDAL provider to optimally select the correct raster images to return for the given queried extents. Inheritance System.Object ConfigurationDocument GdalConfigurationDocument Inherited Members ConfigurationDocument._spatialContexts ConfigurationDocument._schemas ConfigurationDocument.SpatialContexts ConfigurationDocument.Schemas ConfigurationDocument.AddSpatialContext(IFdoSpatialContext) ConfigurationDocument.RemoveSpatialContext(IFdoSpatialContext) ConfigurationDocument.GetSpatialContext(String) ConfigurationDocument.GetSpatialContextNames() ConfigurationDocument.AddSchema(FeatureSchema) ConfigurationDocument.RemoveSchema(FeatureSchema) ConfigurationDocument.GetSchema(String) ConfigurationDocument.GetClass(String, String) ConfigurationDocument.WriteXml(XmlDocument, XmlNode) ConfigurationDocument.ReadSchemaMappings(XmlNode, XmlNamespaceManager) ConfigurationDocument.ReadXml(XmlNode, XmlNamespaceManager) ConfigurationDocument.ToXml() ConfigurationDocument.LoadXml(String) ConfigurationDocument.Load(Stream) Namespace : OSGeo.MapGuide.MaestroAPI.SchemaOverrides Assembly : cs.temp.dll.dll Syntax public class GdalConfigurationDocument : ConfigurationDocument Properties RasterLocations Gets an array of all the raster locations for this document Declaration public GdalRasterLocationItem[] RasterLocations { get; } Property Value Type Description GdalRasterLocationItem [] Methods AddLocation(GdalRasterLocationItem) Adds the specified raster location to this document Declaration public GdalRasterLocationItem AddLocation(GdalRasterLocationItem item) Parameters Type Name Description GdalRasterLocationItem item Returns Type Description GdalRasterLocationItem AddLocation(String) Adds the specified directory to this document Declaration public GdalRasterLocationItem AddLocation(string directory) Parameters Type Name Description System.String directory Returns Type Description GdalRasterLocationItem CalculateExtent() Calculates the combined extent that encompasses all the raster images in this document. Declaration public IEnvelope CalculateExtent() Returns Type Description IEnvelope ReadSchemaMappings(XmlNode, XmlNamespaceManager) Write this document's schema mappings from the given XML document Declaration protected override void ReadSchemaMappings(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description System.Xml.XmlNode node The node. System.Xml.XmlNamespaceManager mgr The namespace manager. RemoveLocation(GdalRasterLocationItem) Removes the specified raster location from this document Declaration public bool RemoveLocation(GdalRasterLocationItem item) Parameters Type Name Description GdalRasterLocationItem item Returns Type Description System.Boolean WriteSchemaMappings(XmlDocument, XmlNode) Write this document's schema mappings to the given XML document Declaration protected override void WriteSchemaMappings(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description XmlDocument doc XmlNode currentNode Overrides ConfigurationDocument.WriteSchemaMappings(XmlDocument, XmlNode)"
  },
  "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.GdalRasterItem.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.GdalRasterItem.html",
    "title": "Class GdalRasterItem | MapGuide Maestro",
    "keywords": "Class GdalRasterItem Represents a raster image location and its extents. Inheritance System.Object GdalRasterItem Namespace : OSGeo.MapGuide.MaestroAPI.SchemaOverrides Assembly : cs.temp.dll.dll Syntax public class GdalRasterItem : IFdoSerializable Properties FileName Gets or sets the raster image file name Declaration public string FileName { get; set; } Property Value Type Description System.String MaxX Gets or sets the maximum X value of this raster extent Declaration public double MaxX { get; set; } Property Value Type Description System.Double MaxY Gets or sets the maximum Y value of this raster extent Declaration public double MaxY { get; set; } Property Value Type Description System.Double MinX Gets or sets the minimum X value of this raster extent Declaration public double MinX { get; set; } Property Value Type Description System.Double MinY Gets or sets the minimum Y value of this raster extent Declaration public double MinY { get; set; } Property Value Type Description System.Double Methods ReadXml(XmlNode, XmlNamespaceManager) Set the current element's content from the current XML node Declaration public void ReadXml(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description System.Xml.XmlNode node System.Xml.XmlNamespaceManager mgr WriteXml(XmlDocument, XmlNode) Writes the current element's content Declaration public void WriteXml(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description System.Xml.XmlDocument doc System.Xml.XmlNode currentNode"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Services.IMappingService.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Services.IMappingService.html",
    "title": "Interface IMappingService | MapGuide Maestro",
    "keywords": "Interface IMappingService Provides services for interaction with the runtime map Namespace : OSGeo.MapGuide.MaestroAPI.Services Assembly : cs.temp.dll.dll Syntax public interface IMappingService : IService Examples This example shows how to obtain a mapping service instance. Note that you should check if this service type is supported through its capabilities. IServerConnection conn; ... IMappingService mappingSvc = (IMappingService)conn.GetService((int)ServiceType.Mapping); Methods CreateMap(IMapDefinition) Creates a new runtime map instance from an existing map definition. Declaration RuntimeMap CreateMap(IMapDefinition mapDef) Parameters Type Name Description IMapDefinition mapDef Returns Type Description RuntimeMap Remarks Calculation of meters-per-unit may differ between implementations. This may have an adverse effect on things such as rendering and measuring depending on the underlying implementation If you are certain of the meters-per-unit value required, use the overloaded method that accepts a metersPerUnit parameter. Examples This example shows how to create a new runtime map instance IServerConnection conn; ... IMappingService mappingSvc = (IMappingService)conn.GetService((int)ServiceType.Mapping); IMapDefinition mapDef = (IMapDefinition)conn.ResourceService.GetResource(\"Library://Path/To/My.MapDefinition\"); RuntimeMap map = mappingSvc.CreateMap(mapDef); CreateMap(IMapDefinition, Boolean) Creates a new runtime map instance from an existing map definition. Declaration RuntimeMap CreateMap(IMapDefinition mapDef, bool suppressErrors) Parameters Type Name Description IMapDefinition mapDef System.Boolean suppressErrors If false, this method will throw an exception on the first layer that cannot be initialized. Otherwise, any exceptions that occur during layer initialization are suppressed Returns Type Description RuntimeMap Remarks Calculation of meters-per-unit may differ between implementations. This may have an adverse effect on things such as rendering and measuring depending on the underlying implementation If you are certain of the meters-per-unit value required, use the overloaded method that accepts a metersPerUnit parameter. Examples This example shows how to create a new runtime map instance IServerConnection conn; ... IMappingService mappingSvc = (IMappingService)conn.GetService((int)ServiceType.Mapping); IMapDefinition mapDef = (IMapDefinition)conn.ResourceService.GetResource(\"Library://Path/To/My.MapDefinition\"); bool suppressErrors = true; RuntimeMap map = mappingSvc.CreateMap(mapDef, suppressErrors); CreateMap(IMapDefinition, Double) Creates a new runtime map instance from an existing map definition. Meters per unit is calculated from the Coordinate System WKT of the map definition. Declaration RuntimeMap CreateMap(IMapDefinition mapDef, double metersPerUnit) Parameters Type Name Description IMapDefinition mapDef System.Double metersPerUnit Returns Type Description RuntimeMap Examples This example shows how to create a new runtime map instance IServerConnection conn; ... IMappingService mappingSvc = (IMappingService)conn.GetService((int)ServiceType.Mapping); IMapDefinition mapDef = (IMapDefinition)conn.ResourceService.GetResource(\"Library://Path/To/My.MapDefinition\"); double metersPerUnit = 1.0; RuntimeMap map = mappingSvc.CreateMap(mapDef, metersPerUnit); CreateMap(IMapDefinition, Double, Boolean) Creates a new runtime map instance from an existing map definition. Meters per unit is calculated from the Coordinate System WKT of the map definition. Declaration RuntimeMap CreateMap(IMapDefinition mapDef, double metersPerUnit, bool suppressErrors) Parameters Type Name Description IMapDefinition mapDef System.Double metersPerUnit System.Boolean suppressErrors If false, this method will throw an exception on the first layer that cannot be initialized. Otherwise, any exceptions that occur during layer initialization are suppressed Returns Type Description RuntimeMap Examples This example shows how to create a new runtime map instance IServerConnection conn; ... IMappingService mappingSvc = (IMappingService)conn.GetService((int)ServiceType.Mapping); IMapDefinition mapDef = (IMapDefinition)conn.ResourceService.GetResource(\"Library://Path/To/My.MapDefinition\"); double metersPerUnit = 1.0; bool suppressErrors = true; RuntimeMap map = mappingSvc.CreateMap(mapDef, metersPerUnit, suppressErrors); CreateMap(String, IMapDefinition) Creates a new runtime map instance from an existing map definition. Meters per unit is calculated from the Coordinate System WKT of the map definition. Declaration RuntimeMap CreateMap(string runtimeMapResourceId, IMapDefinition mdf) Parameters Type Name Description System.String runtimeMapResourceId IMapDefinition mdf Returns Type Description RuntimeMap Remarks Calculation of meters-per-unit may differ between implementations. This may have an adverse effect on things such as rendering and measuring depending on the underlying implementation If you are certain of the meters-per-unit value required, use the overloaded method that accepts a metersPerUnit parameter. Examples This example shows how to create a new runtime map instance IServerConnection conn; ... IMappingService mappingSvc = (IMappingService)conn.GetService((int)ServiceType.Mapping); string mapName = \"MyMap\"; string rtMapId = \"Session:\" + conn.SessionID + \"//\" + mapName + \".Map\"; IMapDefinition mdf = (IMapDefinition)conn.ResourceService.GetResource(\"Library://Path/To/My.MapDefinition\"); RuntimeMap map = mappingSvc.CreateMap(rtMapId, mdf); CreateMap(String, IMapDefinition, Boolean) Creates a new runtime map instance from an existing map definition. Meters per unit is calculated from the Coordinate System WKT of the map definition. Declaration RuntimeMap CreateMap(string runtimeMapResourceId, IMapDefinition mdf, bool suppressErrors) Parameters Type Name Description System.String runtimeMapResourceId IMapDefinition mdf System.Boolean suppressErrors If false, this method will throw an exception on the first layer that cannot be initialized. Otherwise, any exceptions that occur during layer initialization are suppressed Returns Type Description RuntimeMap Remarks Calculation of meters-per-unit may differ between implementations. This may have an adverse effect on things such as rendering and measuring depending on the underlying implementation If you are certain of the meters-per-unit value required, use the overloaded method that accepts a metersPerUnit parameter. Examples This example shows how to create a new runtime map instance IServerConnection conn; ... IMappingService mappingSvc = (IMappingService)conn.GetService((int)ServiceType.Mapping); string mapName = \"MyMap\"; string rtMapId = \"Session:\" + conn.SessionID + \"//\" + mapName + \".Map\"; IMapDefinition mdf = (IMapDefinition)conn.ResourceService.GetResource(\"Library://Path/To/My.MapDefinition\"); bool suppressErrors = true; RuntimeMap map = mappingSvc.CreateMap(rtMapId, mdf, suppressErrors); CreateMap(String, IMapDefinition, Double) Creates a new runtime map instance from an existing map definition Declaration RuntimeMap CreateMap(string runtimeMapResourceId, IMapDefinition mdf, double metersPerUnit) Parameters Type Name Description System.String runtimeMapResourceId IMapDefinition mdf System.Double metersPerUnit Returns Type Description RuntimeMap Examples This example shows how to create a new runtime map instance IServerConnection conn; ... IMappingService mappingSvc = (IMappingService)conn.GetService((int)ServiceType.Mapping); double metersPerUnit = 1.0; string mapName = \"MyMap\"; string rtMapId = \"Session:\" + conn.SessionID + \"//\" + mapName + \".Map\"; IMapDefinition mdf = (IMapDefinition)conn.ResourceService.GetResource(\"Library://Path/To/My.MapDefinition\"); RuntimeMap map = mappingSvc.CreateMap(rtMapId, mdf, metersPerUnit); CreateMap(String, IMapDefinition, Double, Boolean) Creates a new runtime map instance from an existing map definition Declaration RuntimeMap CreateMap(string runtimeMapResourceId, IMapDefinition mdf, double metersPerUnit, bool suppressErrors) Parameters Type Name Description System.String runtimeMapResourceId IMapDefinition mdf System.Double metersPerUnit System.Boolean suppressErrors If false, this method will throw an exception on the first layer that cannot be initialized. Otherwise, any exceptions that occur during layer initialization are suppressed Returns Type Description RuntimeMap Examples This example shows how to create a new runtime map instance IServerConnection conn; ... IMappingService mappingSvc = (IMappingService)conn.GetService((int)ServiceType.Mapping); double metersPerUnit = 1.0; string mapName = \"MyMap\"; string rtMapId = \"Session:\" + conn.SessionID + \"//\" + mapName + \".Map\"; IMapDefinition mdf = (IMapDefinition)conn.ResourceService.GetResource(\"Library://Path/To/My.MapDefinition\"); bool suppressErrors = true; RuntimeMap map = mappingSvc.CreateMap(rtMapId, mdf, metersPerUnit, suppressErrors); CreateMap(String, String) Creates a new runtime map instance from an existing map definition. Meters per unit is calculated from the Coordinate System WKT of the map definition. Declaration RuntimeMap CreateMap(string runtimeMapResourceId, string baseMapDefinitionId) Parameters Type Name Description System.String runtimeMapResourceId System.String baseMapDefinitionId Returns Type Description RuntimeMap Remarks Calculation of meters-per-unit may differ between implementations. This may have an adverse effect on things such as rendering and measuring depending on the underlying implementation If you are certain of the meters-per-unit value required, use the overloaded method that accepts a metersPerUnit parameter. Examples This example shows how to create a new runtime map instance IServerConnection conn; ... IMappingService mappingSvc = (IMappingService)conn.GetService((int)ServiceType.Mapping); string mapName = \"MyMap\"; string rtMapId = \"Session:\" + conn.SessionID + \"//\" + mapName + \".Map\"; string baseMapDefId = \"Library://Path/To/My.MapDefinition\"; RuntimeMap map = mappingSvc.CreateMap(rtMapId, baseMapDefId); CreateMap(String, String, Boolean) Creates a new runtime map instance from an existing map definition. Meters per unit is calculated from the Coordinate System WKT of the map definition. Declaration RuntimeMap CreateMap(string runtimeMapResourceId, string baseMapDefinitionId, bool suppressErrors) Parameters Type Name Description System.String runtimeMapResourceId System.String baseMapDefinitionId System.Boolean suppressErrors If false, this method will throw an exception on the first layer that cannot be initialized. Otherwise, any exceptions that occur during layer initialization are suppressed Returns Type Description RuntimeMap Remarks Calculation of meters-per-unit may differ between implementations. This may have an adverse effect on things such as rendering and measuring depending on the underlying implementation If you are certain of the meters-per-unit value required, use the overloaded method that accepts a metersPerUnit parameter. Examples This example shows how to create a new runtime map instance IServerConnection conn; ... IMappingService mappingSvc = (IMappingService)conn.GetService((int)ServiceType.Mapping); string mapName = \"MyMap\"; string rtMapId = \"Session:\" + conn.SessionID + \"//\" + mapName + \".Map\"; string baseMapDefId = \"Library://Path/To/My.MapDefinition\"; bool suppressErrors = true; RuntimeMap map = mappingSvc.CreateMap(rtMapId, baseMapDefId, suppressErrors); CreateMap(String, String, Double) Creates a new runtime map instance from an existing map definition Declaration RuntimeMap CreateMap(string runtimeMapResourceId, string baseMapDefinitionId, double metersPerUnit) Parameters Type Name Description System.String runtimeMapResourceId System.String baseMapDefinitionId System.Double metersPerUnit Returns Type Description RuntimeMap Examples This example shows how to create a new runtime map instance IServerConnection conn; ... IMappingService mappingSvc = (IMappingService)conn.GetService((int)ServiceType.Mapping); string mapName = \"MyMap\"; string rtMapId = \"Session:\" + conn.SessionID + \"//\" + mapName + \".Map\"; string baseMapDefId = \"Library://Path/To/My.MapDefinition\"; double metersPerUnit = 1.0; RuntimeMap map = mappingSvc.CreateMap(rtMapId, baseMapDefId, metersPerUnit); CreateMap(String, String, Double, Boolean) Creates a new runtime map instance from an existing map definition Declaration RuntimeMap CreateMap(string runtimeMapResourceId, string baseMapDefinitionId, double metersPerUnit, bool suppressErrors) Parameters Type Name Description System.String runtimeMapResourceId System.String baseMapDefinitionId System.Double metersPerUnit System.Boolean suppressErrors If false, this method will throw an exception on the first layer that cannot be initialized. Otherwise, any exceptions that occur during layer initialization are suppressed Returns Type Description RuntimeMap Examples This example shows how to create a new runtime map instance IServerConnection conn; ... IMappingService mappingSvc = (IMappingService)conn.GetService((int)ServiceType.Mapping); string mapName = \"MyMap\"; string rtMapId = \"Session:\" + conn.SessionID + \"//\" + mapName + \".Map\"; string baseMapDefId = \"Library://Path/To/My.MapDefinition\"; double metersPerUnit = 1.0; bool suppressErrors = true; RuntimeMap map = mappingSvc.CreateMap(rtMapId, baseMapDefId, metersPerUnit, suppressErrors); CreateMapGroup(RuntimeMap, IBaseMapGroup) Creates a new runtime map group Declaration RuntimeMapGroup CreateMapGroup(RuntimeMap parent, IBaseMapGroup group) Parameters Type Name Description RuntimeMap parent The parent runtime map. The runtime map must have been created or opened from this same service instance IBaseMapGroup group The group. Returns Type Description RuntimeMapGroup CreateMapGroup(RuntimeMap, IMapLayerGroup) Creates a new runtime map group Declaration RuntimeMapGroup CreateMapGroup(RuntimeMap parent, IMapLayerGroup group) Parameters Type Name Description RuntimeMap parent The parent runtime map. The runtime map must have been created or opened from this same service instance IMapLayerGroup group The group. Returns Type Description RuntimeMapGroup CreateMapGroup(RuntimeMap, String) Creates the map group. Declaration RuntimeMapGroup CreateMapGroup(RuntimeMap parent, string name) Parameters Type Name Description RuntimeMap parent The parent runtime map. The runtime map must have been created or opened from this same service instance System.String name The name. Returns Type Description RuntimeMapGroup CreateMapLayer(RuntimeMap, IBaseMapLayer) Creates a new runtime map layer from the specified IBaseMapLayer instance Declaration RuntimeMapLayer CreateMapLayer(RuntimeMap parent, IBaseMapLayer source) Parameters Type Name Description RuntimeMap parent The parent runtime map. The runtime map must have been created or opened from this same service instance IBaseMapLayer source The map definition layer Returns Type Description RuntimeMapLayer CreateMapLayer(RuntimeMap, IBaseMapLayer, Boolean) Creates a new runtime map layer from the specified IBaseMapLayer instance Declaration RuntimeMapLayer CreateMapLayer(RuntimeMap parent, IBaseMapLayer source, bool suppressErrors) Parameters Type Name Description RuntimeMap parent The parent runtime map. The runtime map must have been created or opened from this same service instance IBaseMapLayer source The map definition layer System.Boolean suppressErrors If false, this method will throw an exception if the layer cannot be initialized. Otherwise, any exceptions that occur during layer initialization are suppressed Returns Type Description RuntimeMapLayer CreateMapLayer(RuntimeMap, ILayerDefinition) Creates a new runtime map layer from the specified Layer Definition Declaration RuntimeMapLayer CreateMapLayer(RuntimeMap parent, ILayerDefinition ldf) Parameters Type Name Description RuntimeMap parent The parent runtime map. The runtime map must have been created or opened from this same service instance ILayerDefinition ldf The layer definition Returns Type Description RuntimeMapLayer CreateMapLayer(RuntimeMap, ILayerDefinition, Boolean) Creates a new runtime map layer from the specified Layer Definition Declaration RuntimeMapLayer CreateMapLayer(RuntimeMap parent, ILayerDefinition ldf, bool suppressErrors) Parameters Type Name Description RuntimeMap parent The parent runtime map. The runtime map must have been created or opened from this same service instance ILayerDefinition ldf The layer definition System.Boolean suppressErrors If false, this method will throw an exception if the layer cannot be initialized. Otherwise, any exceptions that occur during layer initialization are suppressed Returns Type Description RuntimeMapLayer CreateMapLayer(RuntimeMap, IMapLayer) Creates a new runtime map layer from the specified IMapLayer instance Declaration RuntimeMapLayer CreateMapLayer(RuntimeMap parent, IMapLayer source) Parameters Type Name Description RuntimeMap parent The parent runtime map. The runtime map must have been created or opened from this same service instance IMapLayer source The map definition layer Returns Type Description RuntimeMapLayer CreateMapLayer(RuntimeMap, IMapLayer, Boolean) Creates a new runtime map layer from the specified IMapLayer instance Declaration RuntimeMapLayer CreateMapLayer(RuntimeMap parent, IMapLayer source, bool suppressErrors) Parameters Type Name Description RuntimeMap parent The parent runtime map. The runtime map must have been created or opened from this same service instance IMapLayer source The map definition layer System.Boolean suppressErrors If false, this method will throw an exception if the layer cannot be initialized. Otherwise, any exceptions that occur during layer initialization are suppressed Returns Type Description RuntimeMapLayer GetLegendImageStream(Double, String, Int32, Int32) Renders a minature bitmap of the layers style Declaration Stream GetLegendImageStream(double scale, string layerdefinition, int themeIndex, int type) Parameters Type Name Description System.Double scale The scale for the bitmap to match System.String layerdefinition The layer definition resource id System.Int32 themeIndex If the layer is themed, this gives the theme index, otherwise set to 0 System.Int32 type The geometry type, 1 for point, 2 for line, 3 for area, 4 for composite Returns Type Description System.IO.Stream The legend image stream GetLegendImageStream(Double, String, Int32, Int32, Int32, Int32, String) Renders a minature bitmap of the layers style Declaration Stream GetLegendImageStream(double scale, string layerdefinition, int themeIndex, int type, int width, int height, string format) Parameters Type Name Description System.Double scale The scale for the bitmap to match System.String layerdefinition The layer definition resource id System.Int32 themeIndex If the layer is themed, this gives the theme index, otherwise set to 0 System.Int32 type The geometry type, 1 for point, 2 for line, 3 for area, 4 for composite System.Int32 width The width of the image to request. System.Int32 height The height of the image to request. System.String format The image format (PNG, JPG or GIF). Returns Type Description System.IO.Stream The legend image stream OpenMap(String) Opens an existing runtime map instance Declaration RuntimeMap OpenMap(string runtimeMapResourceId) Parameters Type Name Description System.String runtimeMapResourceId Returns Type Description RuntimeMap Examples This example shows how to open a RuntimeMap instance from a resource id IServerConnection conn; ... IMappingService mappingSvc = (IMappingService)conn.GetService((int)ServiceType.Mapping); string mapName = \"MyMap\"; string rtMapId = \"Session:\" + conn.SessionID + \"//\" + mapName + \".Map\"; RuntimeMap map = mappingSvc.OpenMap(rtMapId); QueryMapFeatures(RuntimeMap, Int32, String, Boolean, String, QueryMapOptions) Identifies features that meet the specified spatial selection criteria. These features can be persisted as selected features in a map. This operation is generally used to implement selection/tooltip functionality for a client-side map viewer. QueryMapFeatures returns an XML document describing the set of selected features. If a single feature is selected, the XML contains the tooltip, hyperlink, and properties of the feature. Declaration string QueryMapFeatures(RuntimeMap map, int maxFeatures, string wkt, bool persist, string selectionVariant, QueryMapOptions extraOptions) Parameters Type Name Description RuntimeMap map The RuntimeMap instance System.Int32 maxFeatures The maximum number of features to return System.String wkt The WKT of the filter geometry, specifying the selection area System.Boolean persist Indicates whether the selection should be persisted as part of the map System.String selectionVariant The spatial operator to use against the selection geometry QueryMapOptions extraOptions Extra options for controlling selection criteria Returns Type Description System.String RenderDynamicOverlay(RuntimeMap, MapSelection, String) Renders a dynamic overlay image of the map Declaration Stream RenderDynamicOverlay(RuntimeMap map, MapSelection selection, string format) Parameters Type Name Description RuntimeMap map MapSelection selection System.String format Returns Type Description System.IO.Stream RenderDynamicOverlay(RuntimeMap, MapSelection, String, Color, Int32) Renders a dynamic overlay image of the map Declaration Stream RenderDynamicOverlay(RuntimeMap map, MapSelection selection, string format, Color selectionColor, int behaviour) Parameters Type Name Description RuntimeMap map The runtime map instance MapSelection selection The map selection System.String format The image format Color selectionColor The color of the selection System.Int32 behaviour A bitmask for the rendering behaviour (1 = Render Selection, 2 = Render Layers, 4 = Keep Selection, 8 = Render Base Layers) Returns Type Description System.IO.Stream Remarks The render base layers bitmask behaviour (8) is only supported from MapGuide Open Source 2.5 onwards Examples This example shows how to create a render a dynamic overlay image from a map and load it into a System.Drawing.Image IServerConnection conn; ... IMappingService mappingSvc = (IMappingService)conn.GetService((int)ServiceType.Mapping); string mapName = \"MyMap\"; string rtMapId = \"Session:\" + conn.SessionID + \"//\" + mapName + \".Map\"; RuntimeMap map = mappingSvc.OpenMap(rtMapId); string format = \"PNG\"; Color selectionColor = Color.Blue; int behaviour = 1 | 2 | 4; using(Stream stream = mappingSvc.RenderDynamicOverlay(map, map.Selection, format, selectionColor, behaviour)) { Image img = Image.FromStream(stream); } Exceptions Type Condition System.NotSupportedException Thrown if the service is too old to be able to support this API RenderDynamicOverlay(RuntimeMap, MapSelection, String, Boolean) Renders a dynamic overlay image of the map Declaration Stream RenderDynamicOverlay(RuntimeMap map, MapSelection selection, string format, bool keepSelection) Parameters Type Name Description RuntimeMap map MapSelection selection System.String format System.Boolean keepSelection Returns Type Description System.IO.Stream RenderMapLegend(RuntimeMap, Int32, Int32, Color, String) Renders the legend for the specified RuntimeMap to the requested size and format Declaration Stream RenderMapLegend(RuntimeMap map, int width, int height, Color backgroundColor, string format) Parameters Type Name Description RuntimeMap map System.Int32 width System.Int32 height Color backgroundColor System.String format Returns Type Description System.IO.Stream RenderRuntimeMap(RuntimeMap, Double, Double, Double, Double, Int32, Int32, Int32) Renders the runtime map. Declaration Stream RenderRuntimeMap(RuntimeMap map, double x1, double y1, double x2, double y2, int width, int height, int dpi) Parameters Type Name Description RuntimeMap map The runtime map instance. System.Double x1 The x1. System.Double y1 The y1. System.Double x2 The x2. System.Double y2 The y2. System.Int32 width The width. System.Int32 height The height. System.Int32 dpi The dpi. Returns Type Description System.IO.Stream RenderRuntimeMap(RuntimeMap, Double, Double, Double, Double, Int32, Int32, Int32, String) Renders the runtime map. Declaration Stream RenderRuntimeMap(RuntimeMap map, double x1, double y1, double x2, double y2, int width, int height, int dpi, string format) Parameters Type Name Description RuntimeMap map The runtime map instance. System.Double x1 The x1. System.Double y1 The y1. System.Double x2 The x2. System.Double y2 The y2. System.Int32 width The width. System.Int32 height The height. System.Int32 dpi The dpi. System.String format The format. Returns Type Description System.IO.Stream RenderRuntimeMap(RuntimeMap, Double, Double, Double, Double, Int32, Int32, Int32, String, Boolean) Renders the runtime map. Declaration Stream RenderRuntimeMap(RuntimeMap map, double x1, double y1, double x2, double y2, int width, int height, int dpi, string format, bool clip) Parameters Type Name Description RuntimeMap map The runtime map System.Double x1 The x1. System.Double y1 The y1. System.Double x2 The x2. System.Double y2 The y2. System.Int32 width The width. System.Int32 height The height. System.Int32 dpi The dpi. System.String format The format. System.Boolean clip if set to true [clip]. Returns Type Description System.IO.Stream RenderRuntimeMap(RuntimeMap, Double, Double, Double, Int32, Int32, Int32) Renders the runtime map. Declaration Stream RenderRuntimeMap(RuntimeMap map, double x, double y, double scale, int width, int height, int dpi) Parameters Type Name Description RuntimeMap map The runtime map instance System.Double x The x. System.Double y The y. System.Double scale The scale. System.Int32 width The width. System.Int32 height The height. System.Int32 dpi The dpi. Returns Type Description System.IO.Stream RenderRuntimeMap(RuntimeMap, Double, Double, Double, Int32, Int32, Int32, String) Renders the runtime map. Declaration Stream RenderRuntimeMap(RuntimeMap map, double x, double y, double scale, int width, int height, int dpi, string format) Parameters Type Name Description RuntimeMap map The runtime map instance. System.Double x The x. System.Double y The y. System.Double scale The scale. System.Int32 width The width. System.Int32 height The height. System.Int32 dpi The dpi. System.String format The format. Returns Type Description System.IO.Stream RenderRuntimeMap(RuntimeMap, Double, Double, Double, Int32, Int32, Int32, String, Boolean) Renders the runtime map. Declaration Stream RenderRuntimeMap(RuntimeMap map, double x, double y, double scale, int width, int height, int dpi, string format, bool clip) Parameters Type Name Description RuntimeMap map The runtime map instance. System.Double x The x. System.Double y The y. System.Double scale The scale. System.Int32 width The width. System.Int32 height The height. System.Int32 dpi The dpi. System.String format The format. System.Boolean clip if set to true [clip]. Returns Type Description System.IO.Stream"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Services.IResourceService.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Services.IResourceService.html",
    "title": "Interface IResourceService | MapGuide Maestro",
    "keywords": "Interface IResourceService Provides services for accessing resources in a repository Namespace : OSGeo.MapGuide.MaestroAPI.Services Assembly : cs.temp.dll.dll Syntax public interface IResourceService : IService Remarks Note that IServerConnection provides built-in access to resource and feature services. Using the OSGeo.MapGuide.MaestroAPI.IServerConnection.GetService method is not necessary Methods CopyFolderWithReferences(String, String, LengthyOperationCallBack, LengthyOperationProgressCallBack) Copies the specified folder to the specified path. Any resources referencing this folder are updated to reference the resources's new location Declaration bool CopyFolderWithReferences(string oldResourceID, string newResourceID, LengthyOperationCallBack callback, LengthyOperationProgressCallBack progress) Parameters Type Name Description System.String oldResourceID System.String newResourceID LengthyOperationCallBack callback LengthyOperationProgressCallBack progress Returns Type Description System.Boolean CopyResource(String, String, Boolean) Copies the specified resource to the specified path Declaration void CopyResource(string oldResourceID, string newResourceID, bool overwrite) Parameters Type Name Description System.String oldResourceID System.String newResourceID System.Boolean overwrite DeleteResource(String) Delete the specified resource. For folders, ensure the resource ID has a trailing slash \"/\" Declaration void DeleteResource(string resourceID) Parameters Type Name Description System.String resourceID DeleteResourceData(String, String) Deletes the specified attached resource data Declaration void DeleteResourceData(string resourceID, string dataname) Parameters Type Name Description System.String resourceID System.String dataname DeserializeObject<T>(Stream) Converts the specified XML stream to a strongly typed object Declaration T DeserializeObject<T>(Stream data) Parameters Type Name Description System.IO.Stream data Returns Type Description T Type Parameters Name Description T EnumerateResourceData(String) Gets a listing of all resource data attached to the specified resource Declaration ObjCommon.ResourceDataList EnumerateResourceData(string resourceID) Parameters Type Name Description System.String resourceID Returns Type Description ObjCommon.ResourceDataList EnumerateResourceReferences(String) Gets a listing of all resources dependent on the specified resource Declaration ObjCommon.ResourceReferenceList EnumerateResourceReferences(string resourceID) Parameters Type Name Description System.String resourceID Returns Type Description ObjCommon.ResourceReferenceList EnumerateUnmanagedData(String, String, Boolean, UnmanagedDataTypes) Enumerates all unmanaged folders, meaning alias'ed folders Declaration ObjCommon.UnmanagedDataList EnumerateUnmanagedData(string startpath, string filter, bool recursive, UnmanagedDataTypes type) Parameters Type Name Description System.String startpath The path to retrieve the data from System.String filter A filter applied to the items System.Boolean recursive True if the list should contains recursive results UnmanagedDataTypes type The type of data to return Returns Type Description ObjCommon.UnmanagedDataList A list of unmanaged data GetFolderHeader(String) Gets the folder header of the specified resource Declaration ObjCommon.ResourceFolderHeaderType GetFolderHeader(string resourceID) Parameters Type Name Description System.String resourceID Returns Type Description ObjCommon.ResourceFolderHeaderType GetRepositoryResources() Gets a listing of resources in this repository. This performs a full listing Declaration ObjCommon.ResourceList GetRepositoryResources() Returns Type Description ObjCommon.ResourceList GetRepositoryResources(Int32) Gets a listing of resources in this repository Declaration ObjCommon.ResourceList GetRepositoryResources(int depth) Parameters Type Name Description System.Int32 depth Returns Type Description ObjCommon.ResourceList GetRepositoryResources(String) Gets a listing of resources in this repository Declaration ObjCommon.ResourceList GetRepositoryResources(string startingpoint) Parameters Type Name Description System.String startingpoint Returns Type Description ObjCommon.ResourceList GetRepositoryResources(String, Int32) Gets a listing of resources in this repository Declaration ObjCommon.ResourceList GetRepositoryResources(string startingpoint, int depth) Parameters Type Name Description System.String startingpoint System.Int32 depth Returns Type Description ObjCommon.ResourceList GetRepositoryResources(String, String) Gets a listing of resources in this repository Declaration ObjCommon.ResourceList GetRepositoryResources(string startingpoint, string type) Parameters Type Name Description System.String startingpoint System.String type Returns Type Description ObjCommon.ResourceList GetRepositoryResources(String, String, Int32) Gets a listing of resources in this repository Declaration ObjCommon.ResourceList GetRepositoryResources(string startingpoint, string type, int depth) Parameters Type Name Description System.String startingpoint System.String type System.Int32 depth Returns Type Description ObjCommon.ResourceList GetRepositoryResources(String, String, Int32, Boolean) Gets a listing of resources in this repository Declaration ObjCommon.ResourceList GetRepositoryResources(string startingpoint, string type, int depth, bool computeChildren) Parameters Type Name Description System.String startingpoint System.String type System.Int32 depth System.Boolean computeChildren Returns Type Description ObjCommon.ResourceList GetResource(String) Gets a typed resource object from the specified resource id Declaration IResource GetResource(string resourceID) Parameters Type Name Description System.String resourceID Returns Type Description IResource GetResourceData(String, String) Gets the stream of the attached data of the specified resource Declaration Stream GetResourceData(string resourceID, string dataname) Parameters Type Name Description System.String resourceID System.String dataname Returns Type Description System.IO.Stream GetResourceHeader(String) Gets the document header of the specified resource Declaration ObjCommon.ResourceDocumentHeaderType GetResourceHeader(string resourceID) Parameters Type Name Description System.String resourceID Returns Type Description ObjCommon.ResourceDocumentHeaderType GetResourceXmlData(String) Gets the raw XML stream of the specified resource id Declaration Stream GetResourceXmlData(string resourceID) Parameters Type Name Description System.String resourceID Returns Type Description Stream MoveResource(String, String, Boolean) Moves the specified resources to the specified path Declaration void MoveResource(string oldResourceID, string newResourceID, bool overwrite) Parameters Type Name Description System.String oldResourceID System.String newResourceID System.Boolean overwrite MoveResourceWithReferences(String, String, LengthyOperationCallBack, LengthyOperationProgressCallBack) Moves the specified resources to the specified path. Any resources referencing this resource are updated to reference the resource's new location Declaration bool MoveResourceWithReferences(string oldResourceID, string newResourceID, LengthyOperationCallBack callback, LengthyOperationProgressCallBack progress) Parameters Type Name Description System.String oldResourceID System.String newResourceID LengthyOperationCallBack callback LengthyOperationProgressCallBack progress Returns Type Description System.Boolean ResourceExists(String) Gets whether the specified resource id exists Declaration bool ResourceExists(string resourceID) Parameters Type Name Description System.String resourceID Returns Type Description System.Boolean SaveResource(IResource) Saves an object into the repository Declaration void SaveResource(IResource resource) Parameters Type Name Description IResource resource SaveResourceAs(IResource, String) Saves an object into the repository using the specified resource id. Declaration void SaveResourceAs(IResource resource, string resourceID) Parameters Type Name Description IResource resource The object to save System.String resourceID The resourceId to save the object as Remarks The resourceID parameter only instructs this method where to save the resource to. It does not modify the IResource.ResourceID property of the input resource does not get updated as a result of this operation. SerializeObject(Object, Stream) Serializes the specified object to the specified stream Declaration void SerializeObject(object o, Stream stream) Parameters Type Name Description System.Object o System.IO.Stream stream SetFolderHeader(String, ObjCommon.ResourceFolderHeaderType) Sets the header for the specified folder Declaration void SetFolderHeader(string resourceID, ObjCommon.ResourceFolderHeaderType header) Parameters Type Name Description System.String resourceID ObjCommon.ResourceFolderHeaderType header SetResourceData(String, String, ObjCommon.ResourceDataType, Stream) Sets the resource data of a specified resource Declaration void SetResourceData(string resourceid, string dataname, ObjCommon.ResourceDataType datatype, Stream stream) Parameters Type Name Description System.String resourceid System.String dataname ObjCommon.ResourceDataType datatype System.IO.Stream stream Remarks For the HTTP implementation of this API, the input stream must be seekable SetResourceData(String, String, ObjCommon.ResourceDataType, Stream, Utility.StreamCopyProgressDelegate) Sets the resource data of a specified resource Declaration void SetResourceData(string resourceID, string dataName, ObjCommon.ResourceDataType dataType, Stream stream, Utility.StreamCopyProgressDelegate callback) Parameters Type Name Description System.String resourceID System.String dataName ObjCommon.ResourceDataType dataType System.IO.Stream stream Utility.StreamCopyProgressDelegate callback Remarks For the HTTP implementation of this API, the input stream must be seekable SetResourceHeader(String, ObjCommon.ResourceDocumentHeaderType) Sets the header for the specified resource Declaration void SetResourceHeader(string resourceID, ObjCommon.ResourceDocumentHeaderType header) Parameters Type Name Description System.String resourceID ObjCommon.ResourceDocumentHeaderType header SetResourceXmlData(String, Stream) Sets the raw XML data of the specified resource Declaration void SetResourceXmlData(string resourceID, Stream stream) Parameters Type Name Description System.String resourceID System.IO.Stream stream Touch(String) Forces a timestamp update of the specified resource. This is akin to setting the resource's content using its existing content. Declaration void Touch(string resourceID) Parameters Type Name Description System.String resourceID UpdateRepository(String, ObjCommon.ResourceFolderHeaderType) Updates the repository Declaration void UpdateRepository(string resourceID, ObjCommon.ResourceFolderHeaderType header) Parameters Type Name Description System.String resourceID ObjCommon.ResourceFolderHeaderType header UploadPackage(String, Utility.StreamCopyProgressDelegate) Upload a MapGuide Package file to the server Declaration void UploadPackage(string fileName, Utility.StreamCopyProgressDelegate callback) Parameters Type Name Description System.String fileName Name of the file to upload Utility.StreamCopyProgressDelegate callback A callback argument used to display progress. May be null. Events ResourceAdded Raised when a resource is added Declaration event ResourceEventHandler ResourceAdded Event Type Type Description ResourceEventHandler ResourceDeleted Raised when a resource is deleted. Note if a folder is deleted, this will only be raised for the folder and not its children. Also note that this is raised on any move operations as the original source is for all intents and purposes, deleted. Declaration event ResourceEventHandler ResourceDeleted Event Type Type Description ResourceEventHandler ResourceUpdated Raised when a resource is updated Declaration event ResourceEventHandler ResourceUpdated Event Type Type Description ResourceEventHandler"
  },
  "api/OSGeo.MapGuide.MaestroAPI.StringConstants.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.StringConstants.html",
    "title": "Class StringConstants | MapGuide Maestro",
    "keywords": "Class StringConstants Commonly used string constants for MapGuide Inheritance System.Object StringConstants Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public static class StringConstants Fields MgDataFilePath The placeholder token that resolves to the path containing resource data Declaration public const string MgDataFilePath = \"%MG_DATA_FILE_PATH%\" Field Value Type Description System.String MgPasswordPlaceholder The password login placeholder token Declaration public const string MgPasswordPlaceholder = \"%MG_PASSWORD%\" Field Value Type Description System.String MgUserCredentialsResourceData The name of the resource data item containing the secured Feature Source credentials Declaration public const string MgUserCredentialsResourceData = \"MG_USER_CREDENTIALS\" Field Value Type Description System.String MgUsernamePlaceholder The username login placeholder token Declaration public const string MgUsernamePlaceholder = \"%MG_USERNAME%\" Field Value Type Description System.String RootIdentifier The root resource identifier Declaration public const string RootIdentifier = \"Library://\" Field Value Type Description System.String Thumbnail A thumbnail dwf resource role Declaration public const string Thumbnail = \"Thumbnail\" Field Value Type Description System.String Properties AllFilesFilter The file picker filter for all files Declaration public static string AllFilesFilter { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Strings.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Strings.html",
    "title": "Class Strings | MapGuide Maestro",
    "keywords": "Class Strings A strongly-typed resource class, for looking up localized strings, etc. Inheritance System.Object Strings Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public class Strings Properties ADF_BingMapsHybridLayerNoLongerAvailable Looks up a localized string similar to The \"Hybrid\" base layer type no longer exists in the current version of the Bing Maps API. The closes equivalent layer type is \"AerialsWithLabels\". Declaration public static string ADF_BingMapsHybridLayerNoLongerAvailable { get; } Property Value Type Description System.String ADF_BingMapsMissingApiKey Looks up a localized string similar to The Bing Maps v6/7 API was deprecated on June 30th 2017. To use the current Bing Maps API, an API key is required. Declaration public static string ADF_BingMapsMissingApiKey { get; } Property Value Type Description System.String ADF_InvalidWidgetReferenceInContainer Looks up a localized string similar to A non-existent widget by the id of {0} is being referenced from a menu/container : {1}. Declaration public static string ADF_InvalidWidgetReferenceInContainer { get; } Property Value Type Description System.String ADF_MapInvalidError Looks up a localized string similar to Map with ID {0} does not point to a valid map. Declaration public static string ADF_MapInvalidError { get; } Property Value Type Description System.String ADF_MapMissingError Looks up a localized string similar to Fusion application does not specify a map. Declaration public static string ADF_MapMissingError { get; } Property Value Type Description System.String ADF_MapValidationError Looks up a localized string similar to Error validating MapDefinition {0}, message: {1}. Declaration public static string ADF_MapValidationError { get; } Property Value Type Description System.String ADF_MapWithIncompatibleCommericalCs Looks up a localized string similar to The Map Definition {0} has a coordinate system that is not EPSG:3857. This map is in a group containing one or more commerical base layers. The specified Map Definition may not correctly display or line up with the commerical base layers.. Declaration public static string ADF_MapWithIncompatibleCommericalCs { get; } Property Value Type Description System.String ADF_NonUiWidgetAttachedToContainer Looks up a localized string similar to A non-UI widget by the id of {0} is residing in the menu/container ({1}). Being a non-UI widget, this may cause rendering problems for that particular container. Declaration public static string ADF_NonUiWidgetAttachedToContainer { get; } Property Value Type Description System.String ADF_ReferencedWidgetInMenuHasNoLabel Looks up a localized string similar to A widget by the id of {0} has no label. This may cause display problems in the menu/container ({1}) if there is no icon specified. Declaration public static string ADF_ReferencedWidgetInMenuHasNoLabel { get; } Property Value Type Description System.String ADF_ViewOutsideMapExtents Looks up a localized string similar to Fusion application specifies a start view that is outside the map's initial extents. Declaration public static string ADF_ViewOutsideMapExtents { get; } Property Value Type Description System.String CannotCreateLoadProcedureSubType Looks up a localized string similar to Could not create load procedure of type: . Declaration public static string CannotCreateLoadProcedureSubType { get; } Property Value Type Description System.String CompositeStyleDisplayString Looks up a localized string similar to [Composite Style]. Declaration public static string CompositeStyleDisplayString { get; } Property Value Type Description System.String CopiedResource Looks up a localized string similar to Copied resource: {0}. Declaration public static string CopiedResource { get; } Property Value Type Description System.String CopiedResourceToTarget Looks up a localized string similar to Copied: {0} => {1}. Declaration public static string CopiedResourceToTarget { get; } Property Value Type Description System.String Culture Overrides the current thread's CurrentUICulture property for all resource lookups using this strongly typed resource class. Declaration public static CultureInfo Culture { get; set; } Property Value Type Description System.Globalization.CultureInfo DebugWatermarkMessage Looks up a localized string similar to MapGuide Debugging Information\\n==============================\\n\\nMap Extents Min: ({0}, {1})\\nMap Extents Max: ({2}, {3})\\nMap Coordinate System: \\n{4}. Declaration public static string DebugWatermarkMessage { get; } Property Value Type Description System.String DebugWatermarkMessageLayer Looks up a localized string similar to MapGuide Debugging Information\\n==============================\\n\\nMap Extents Min: ({0}, {1})\\nMap Extents Max: ({2}, {3})\\nMap Coordinate System: \\n{4}\\nLayer Spatial Context: {5}. Declaration public static string DebugWatermarkMessageLayer { get; } Property Value Type Description System.String Desc_GetExtents Looks up a localized string similar to Displays the current map extents. Declaration public static string Desc_GetExtents { get; } Property Value Type Description System.String Desc_GetMapKml Looks up a localized string similar to Gets the current map as a KML document. Declaration public static string Desc_GetMapKml { get; } Property Value Type Description System.String Desc_ZoomToScale Looks up a localized string similar to Zoom to a specified scale. Declaration public static string Desc_ZoomToScale { get; } Property Value Type Description System.String DowngradedResource Looks up a localized string similar to Resource {0} downgraded to version {1}. Declaration public static string DowngradedResource { get; } Property Value Type Description System.String DS_NoCoordinateSpace Looks up a localized string similar to No coordinate system specified. The coordinate system if not specified will default to LL84. Declaration public static string DS_NoCoordinateSpace { get; } Property Value Type Description System.String DS_NoSourceSpecified Looks up a localized string similar to No source DWF file specified. Declaration public static string DS_NoSourceSpecified { get; } Property Value Type Description System.String DuplicateKeyExceptionMessage Looks up a localized string similar to An item with the key value ({0}) already exists in the collection. Declaration public static string DuplicateKeyExceptionMessage { get; } Property Value Type Description System.String ERR_BAD_DOCUMENT_NO_ROOT_ATTRIBUTES Looks up a localized string similar to Bad Document: Expected attributes at the root level node. Declaration public static string ERR_BAD_DOCUMENT_NO_ROOT_ATTRIBUTES { get; } Property Value Type Description System.String ERR_CANNOT_DOWNGRADE_OLDER_RESOURCE Looks up a localized string similar to Resource cannot be downgraded. It is already older than the version this converter can downgrade to. Declaration public static string ERR_CANNOT_DOWNGRADE_OLDER_RESOURCE { get; } Property Value Type Description System.String ERR_CANNOT_UPGRADE_NEWER_RESOURCE Looks up a localized string similar to Resource cannot be upgraded. It is already newer than what this converter can upgrade to. Declaration public static string ERR_CANNOT_UPGRADE_NEWER_RESOURCE { get; } Property Value Type Description System.String ERR_CLASS_NOT_FOUND Looks up a localized string similar to Class not found: {0}. Declaration public static string ERR_CLASS_NOT_FOUND { get; } Property Value Type Description System.String ERR_CONVERTER_ALREADY_REGISTERED Looks up a localized string similar to A resource converter for {0} is already registered. Declaration public static string ERR_CONVERTER_ALREADY_REGISTERED { get; } Property Value Type Description System.String ERR_INIT_IDENTITY_PROPS Looks up a localized string similar to Could fetch and initialize identity properties for {1} This is likely a bug in MapGuide {0}{2}. Declaration public static string ERR_INIT_IDENTITY_PROPS { get; } Property Value Type Description System.String ERR_NO_DOWNGRADE_PATH Looks up a localized string similar to There is no downgrade path to the desired resource version. Declaration public static string ERR_NO_DOWNGRADE_PATH { get; } Property Value Type Description System.String ERR_NO_REGISTERED_VALIDATOR Looks up a localized string similar to There is no registered validator for {0} v{1}. Validation cannot be performed. Declaration public static string ERR_NO_REGISTERED_VALIDATOR { get; } Property Value Type Description System.String ERR_NO_UPGRADE_PATH Looks up a localized string similar to There is no upgrade path to the desired resource version. Declaration public static string ERR_NO_UPGRADE_PATH { get; } Property Value Type Description System.String ERR_PROPERTY_VALUE_NOT_OF_TYPE Looks up a localized string similar to The specified property {0} is not of type: {1}. Declaration public static string ERR_PROPERTY_VALUE_NOT_OF_TYPE { get; } Property Value Type Description System.String ERR_RESOURCE_NOT_ATTACHED Looks up a localized string similar to No connection attached to this resource. Declaration public static string ERR_RESOURCE_NOT_ATTACHED { get; } Property Value Type Description System.String ERR_SERVICE_NOT_SUPPORTED Looks up a localized string similar to Service Type not supported: {0}. Declaration public static string ERR_SERVICE_NOT_SUPPORTED { get; } Property Value Type Description System.String ErrorArgContainsReservedCharacters Looks up a localized string similar to {0} contains reserved characters. Declaration public static string ErrorArgContainsReservedCharacters { get; } Property Value Type Description System.String ErrorBadDocumentExpectedAttribute Looks up a localized string similar to Bad document. Expected attribute: {0}. Declaration public static string ErrorBadDocumentExpectedAttribute { get; } Property Value Type Description System.String ErrorBadDocumentExpectedElement Looks up a localized string similar to Bad document. Expected element {0}. Declaration public static string ErrorBadDocumentExpectedElement { get; } Property Value Type Description System.String ErrorBadDocumentInvalidBbox Looks up a localized string similar to Bad document. Invalid bounding box. Declaration public static string ErrorBadDocumentInvalidBbox { get; } Property Value Type Description System.String ErrorBadHtmlColor Looks up a localized string similar to Bad HTML color: {0}. Declaration public static string ErrorBadHtmlColor { get; } Property Value Type Description System.String ErrorBadNullEncodedString Looks up a localized string similar to Bad null encoded string. Declaration public static string ErrorBadNullEncodedString { get; } Property Value Type Description System.String ErrorBinarySerializerBufferTooSmall Looks up a localized string similar to Buffer too small. Declaration public static string ErrorBinarySerializerBufferTooSmall { get; } Property Value Type Description System.String ErrorBinarySerializerCoordinateUnexpectedType Looks up a localized string similar to Coordinate expected, but got object: {0}. Declaration public static string ErrorBinarySerializerCoordinateUnexpectedType { get; } Property Value Type Description System.String ErrorBinarySerializerExpectedEndOfStream Looks up a localized string similar to The read value was: {0} while <end of stream> was expected. Declaration public static string ErrorBinarySerializerExpectedEndOfStream { get; } Property Value Type Description System.String ErrorBinarySerializerGetCharWidth Looks up a localized string similar to Failed to get valid string char width. Declaration public static string ErrorBinarySerializerGetCharWidth { get; } Property Value Type Description System.String ErrorBinarySerializerInvalidAmountOfCoordinates Looks up a localized string similar to Invalid amount of coordinates. Declaration public static string ErrorBinarySerializerInvalidAmountOfCoordinates { get; } Property Value Type Description System.String ErrorBinarySerializerInvalidCoordinateDimensionCount Looks up a localized string similar to Coordinate count reported: {0}, for a single coordinate. Declaration public static string ErrorBinarySerializerInvalidCoordinateDimensionCount { get; } Property Value Type Description System.String ErrorBinarySerializerPrematureEndOfStream Looks up a localized string similar to Stream ended prematurely. Declaration public static string ErrorBinarySerializerPrematureEndOfStream { get; } Property Value Type Description System.String ErrorBinarySerializerStreamExhausted Looks up a localized string similar to Stream exhausted while reading {0} bytes. Declaration public static string ErrorBinarySerializerStreamExhausted { get; } Property Value Type Description System.String ErrorBinarySerializerUnexpectedType Looks up a localized string similar to Data in stream had type: {0} but type '{1}' was expected. Declaration public static string ErrorBinarySerializerUnexpectedType { get; } Property Value Type Description System.String ErrorBinarySerializerUnknownObjectType Looks up a localized string similar to Unknown object type: {0}. Declaration public static string ErrorBinarySerializerUnknownObjectType { get; } Property Value Type Description System.String ErrorBoundingBoxDoesNotHave2Dimensions Looks up a localized string similar to Bounding box for map had {0} dimensions. Expected 2 dimensions. Declaration public static string ErrorBoundingBoxDoesNotHave2Dimensions { get; } Property Value Type Description System.String ErrorConnectionCannotAutoRestartSession Looks up a localized string similar to This connection cannot auto-restart sessions. Most likely because this connection was just initialized with a session id and not with the credentials required to rebuild a new session. Declaration public static string ErrorConnectionCannotAutoRestartSession { get; } Property Value Type Description System.String ErrorCurrentRecordIsEmpty Looks up a localized string similar to Current record is empty. Declaration public static string ErrorCurrentRecordIsEmpty { get; } Property Value Type Description System.String ErrorEmptyFeatureSourceId Looks up a localized string similar to Empty feature source id. Declaration public static string ErrorEmptyFeatureSourceId { get; } Property Value Type Description System.String ErrorExprCurrentRowIsEmpty Looks up a localized string similar to Unable to evaluate. Current row is empty. Declaration public static string ErrorExprCurrentRowIsEmpty { get; } Property Value Type Description System.String ErrorFailedToFindTypeForClrType Looks up a localized string similar to Failed to find type for: {0}. Declaration public static string ErrorFailedToFindTypeForClrType { get; } Property Value Type Description System.String ErrorFailedValueConversion Looks up a localized string similar to Failed to convert value for {0} from {1} to {2}. Declaration public static string ErrorFailedValueConversion { get; } Property Value Type Description System.String ErrorInvalidClassIdentifierBox2d Looks up a localized string similar to Invalid class identifier. Expected Box2D. Declaration public static string ErrorInvalidClassIdentifierBox2d { get; } Property Value Type Description System.String ErrorInvalidGroupObjectId Looks up a localized string similar to Group must have object id 12001, but had: {0}. Declaration public static string ErrorInvalidGroupObjectId { get; } Property Value Type Description System.String ErrorInvalidMapVersion Looks up a localized string similar to Invalid or unsupported map version. Declaration public static string ErrorInvalidMapVersion { get; } Property Value Type Description System.String ErrorInvalidResourceHeaderRootElement Looks up a localized string similar to Header must be either ResourceFolderHeaderType or ResourceDocumentHeaderType. Declaration public static string ErrorInvalidResourceHeaderRootElement { get; } Property Value Type Description System.String ErrorInvalidResourceIdentifier Looks up a localized string similar to Invalid resource identifier. Declaration public static string ErrorInvalidResourceIdentifier { get; } Property Value Type Description System.String ErrorInvalidResourceIdentifierType Looks up a localized string similar to Invalid resource identifier type. Must be Library or Session. Declaration public static string ErrorInvalidResourceIdentifierType { get; } Property Value Type Description System.String ErrorJaggedResultSet Looks up a localized string similar to Incoming record must be structurally identical. Declaration public static string ErrorJaggedResultSet { get; } Property Value Type Description System.String ErrorKeyAlreadyExists Looks up a localized string similar to Key {0} already exists. Declaration public static string ErrorKeyAlreadyExists { get; } Property Value Type Description System.String ErrorLayerHasNoPk Looks up a localized string similar to The layer does not have a primary key, and cannot be used for selection. Declaration public static string ErrorLayerHasNoPk { get; } Property Value Type Description System.String ErrorLayerKeyMismatch Looks up a localized string similar to The layers key consists of {0} columns, but only {1} columns were given. Declaration public static string ErrorLayerKeyMismatch { get; } Property Value Type Description System.String ErrorNoClassNameSpecified Looks up a localized string similar to No class name specified. Declaration public static string ErrorNoClassNameSpecified { get; } Property Value Type Description System.String ErrorNoCoordinateSystemWktSpecified Looks up a localized string similar to No coordinate system WKT specified. Declaration public static string ErrorNoCoordinateSystemWktSpecified { get; } Property Value Type Description System.String ErrorNoDataInResource Looks up a localized string similar to No data found in resource: {0}. Declaration public static string ErrorNoDataInResource { get; } Property Value Type Description System.String ErrorNoExtentSpecifiedForStaticType Looks up a localized string similar to No extent specified for static extent type. Declaration public static string ErrorNoExtentSpecifiedForStaticType { get; } Property Value Type Description System.String ErrorNoFeatureSourceIdSpecified Looks up a localized string similar to No feature source id specified. Declaration public static string ErrorNoFeatureSourceIdSpecified { get; } Property Value Type Description System.String ErrorNoFileNameSpecified Looks up a localized string similar to No file name specified. Declaration public static string ErrorNoFileNameSpecified { get; } Property Value Type Description System.String ErrorNoProviderSpecified Looks up a localized string similar to No provider specified. Declaration public static string ErrorNoProviderSpecified { get; } Property Value Type Description System.String ErrorNoResourceIdAttached Looks up a localized string similar to Resource has no resource id attached. Declaration public static string ErrorNoResourceIdAttached { get; } Property Value Type Description System.String ErrorNoSchemaSpecified Looks up a localized string similar to No schema specified. Declaration public static string ErrorNoSchemaSpecified { get; } Property Value Type Description System.String ErrorNoSchemaSpecifiedToApply Looks up a localized string similar to No schema specified to apply. Declaration public static string ErrorNoSchemaSpecifiedToApply { get; } Property Value Type Description System.String ErrorNoServerConnectionAttached Looks up a localized string similar to No server connection set for object. Declaration public static string ErrorNoServerConnectionAttached { get; } Property Value Type Description System.String ErrorNoSpatialContextNameSpecified Looks up a localized string similar to No spatial context name specified. This is the name that should be referred to by any spatial context associations in your feature schema. Declaration public static string ErrorNoSpatialContextNameSpecified { get; } Property Value Type Description System.String ErrorNotAQualifiedClassName Looks up a localized string similar to Not a qualified class name: {0}. Declaration public static string ErrorNotAQualifiedClassName { get; } Property Value Type Description System.String ErrorNothingToInsert Looks up a localized string similar to Nothing to insert. Declaration public static string ErrorNothingToInsert { get; } Property Value Type Description System.String ErrorNoValuesSpecifiedForUpdating Looks up a localized string similar to No values specified for updating. Declaration public static string ErrorNoValuesSpecifiedForUpdating { get; } Property Value Type Description System.String ErrorNullKeyValue Looks up a localized string similar to The value for {0} is null, which is not supported as a key. Declaration public static string ErrorNullKeyValue { get; } Property Value Type Description System.String ErrorNullNotAccepted Looks up a localized string similar to Null values not accepted. Declaration public static string ErrorNullNotAccepted { get; } Property Value Type Description System.String ErrorNullValue Looks up a localized string similar to Null Value. Declaration public static string ErrorNullValue { get; } Property Value Type Description System.String ErrorObjectNotICompositeTypeStyle Looks up a localized string similar to Value does not implement ICompositeTypeStyle. Declaration public static string ErrorObjectNotICompositeTypeStyle { get; } Property Value Type Description System.String ErrorObjectSetNullValuesNotPermitted Looks up a localized string similar to null values are not permitted. Use SetNull() if you need to specify null values. Declaration public static string ErrorObjectSetNullValuesNotPermitted { get; } Property Value Type Description System.String ErrorOverlayOptionsOnNonMapGuideMap Looks up a localized string similar to Overlay options are only applicable to MapGuide maps. Declaration public static string ErrorOverlayOptionsOnNonMapGuideMap { get; } Property Value Type Description System.String ErrorParseExpectedCloser Looks up a localized string similar to Expected ')' but encountered '{0}'. Declaration public static string ErrorParseExpectedCloser { get; } Property Value Type Description System.String ErrorParseExpectedCloserOrComma Looks up a localized string similar to Expected ')' or ',' but encountered '{0}'. Declaration public static string ErrorParseExpectedCloserOrComma { get; } Property Value Type Description System.String ErrorParseExpectedEmpty Looks up a localized string similar to Expected 'EMPTY' or '(' but encountered '{0}'. Declaration public static string ErrorParseExpectedEmpty { get; } Property Value Type Description System.String ErrorParseExpectedNumber Looks up a localized string similar to Expected number but encountered {0}. Declaration public static string ErrorParseExpectedNumber { get; } Property Value Type Description System.String ErrorParseExpectedNumberEol Looks up a localized string similar to Expected number but encountered end of line. Declaration public static string ErrorParseExpectedNumberEol { get; } Property Value Type Description System.String ErrorParseExpectedNumberEos Looks up a localized string similar to Expected number but encountered end of stream. Declaration public static string ErrorParseExpectedNumberEos { get; } Property Value Type Description System.String ErrorParseExpectedNumberGotWord Looks up a localized string similar to Expected number but encountered word {0}. Declaration public static string ErrorParseExpectedNumberGotWord { get; } Property Value Type Description System.String ErrorParseExpectedWord Looks up a localized string similar to Expected word but encountered number: {0}. Declaration public static string ErrorParseExpectedWord { get; } Property Value Type Description System.String ErrorParseGeometryRead Looks up a localized string similar to Error reading geometry. Declaration public static string ErrorParseGeometryRead { get; } Property Value Type Description System.String ErrorParseUnknownType Looks up a localized string similar to Unknown type: {0}. Declaration public static string ErrorParseUnknownType { get; } Property Value Type Description System.String ErrorPropertyNotFound Looks up a localized string similar to Property not found: {0}. Declaration public static string ErrorPropertyNotFound { get; } Property Value Type Description System.String ErrorProviderAlreadyRegistered Looks up a localized string similar to Provider already registered: {0}. Declaration public static string ErrorProviderAlreadyRegistered { get; } Property Value Type Description System.String ErrorProviderNotRegistered Looks up a localized string similar to Provider not registered: {0}. Declaration public static string ErrorProviderNotRegistered { get; } Property Value Type Description System.String ErrorProviderNotUsableForYourPlatform Looks up a localized string similar to The specified provider is not usable in your operating system: {0}. Declaration public static string ErrorProviderNotUsableForYourPlatform { get; } Property Value Type Description System.String ErrorResourceIdCannotChangeExtensionForFolder Looks up a localized string similar to Cannot change extension for a folder. Declaration public static string ErrorResourceIdCannotChangeExtensionForFolder { get; } Property Value Type Description System.String ErrorResourceIdentifierClassIdNotFound Looks up a localized string similar to Resource Identifier class id expected, but got: {0}. Declaration public static string ErrorResourceIdentifierClassIdNotFound { get; } Property Value Type Description System.String ErrorResourceIdentifierInvalidChars Looks up a localized string similar to The resource name must not contain ':', &quot;//&quot; or '.'. Declaration public static string ErrorResourceIdentifierInvalidChars { get; } Property Value Type Description System.String ErrorResourceIdentifierNameInvalidChars Looks up a localized string similar to The new name must not contain the &quot;/&quot; character. Declaration public static string ErrorResourceIdentifierNameInvalidChars { get; } Property Value Type Description System.String ErrorResourceIdInvalidExtension Looks up a localized string similar to The supplied extension is invalid. Declaration public static string ErrorResourceIdInvalidExtension { get; } Property Value Type Description System.String ErrorResourceMustBeUpdatedWithFolderHeader Looks up a localized string similar to The resourceId: {0} must be updated with a folder header. Declaration public static string ErrorResourceMustBeUpdatedWithFolderHeader { get; } Property Value Type Description System.String ErrorRuntimeMapNotInSessionRepo Looks up a localized string similar to Runtime maps must be in the session repository. Declaration public static string ErrorRuntimeMapNotInSessionRepo { get; } Property Value Type Description System.String ErrorSelectedLayerHasNoId Looks up a localized string similar to A layer in selection had no id. Declaration public static string ErrorSelectedLayerHasNoId { get; } Property Value Type Description System.String ErrorSettingVisibilityOfTiledLayer Looks up a localized string similar to Setting visibility of tiled map layers is not permitted. Declaration public static string ErrorSettingVisibilityOfTiledLayer { get; } Property Value Type Description System.String ErrorShouldHaveNoLayerDataInMap Looks up a localized string similar to On new versions, there should be no layer data in map. Declaration public static string ErrorShouldHaveNoLayerDataInMap { get; } Property Value Type Description System.String ErrorTokenListContainsNullValue Looks up a localized string similar to Token list contains a null value. Declaration public static string ErrorTokenListContainsNullValue { get; } Property Value Type Description System.String ErrorTypeHasNoSchemaInfo Looks up a localized string similar to Type {0} does not contain schema info. Declaration public static string ErrorTypeHasNoSchemaInfo { get; } Property Value Type Description System.String ErrorUnexpectedResourceType Looks up a localized string similar to Unexpected resource type for {0}. Expected {1}. Declaration public static string ErrorUnexpectedResourceType { get; } Property Value Type Description System.String ErrorUnknownResourceType Looks up a localized string similar to The given type is not a known resource type. Declaration public static string ErrorUnknownResourceType { get; } Property Value Type Description System.String ErrorUnsupportedPkType Looks up a localized string similar to The type {0} is not supported for primary keys. Declaration public static string ErrorUnsupportedPkType { get; } Property Value Type Description System.String ErrorUnsupporteFdoSchemaXml Looks up a localized string similar to Unrecognized element. Only a subset of the FDO logical schema is supported here. Declaration public static string ErrorUnsupporteFdoSchemaXml { get; } Property Value Type Description System.String ErrorValidationGeneric Looks up a localized string similar to Failed in validator: {0}. Declaration public static string ErrorValidationGeneric { get; } Property Value Type Description System.String ErrorValueNotComparable Looks up a localized string similar to Value is not comparable. Declaration public static string ErrorValueNotComparable { get; } Property Value Type Description System.String ErrorValueOutOfRange Looks up a localized string similar to Value falls outside the range of {0} and {1}. Declaration public static string ErrorValueOutOfRange { get; } Property Value Type Description System.String ErrorWriteClassXmlNeedToBeAttachedToParent Looks up a localized string similar to Cannot write XML for a Class Definition that is not attached to a parent schema. Declaration public static string ErrorWriteClassXmlNeedToBeAttachedToParent { get; } Property Value Type Description System.String FailedToCalculateFeatureSourceExtents Looks up a localized string similar to Could not calculate the extents of the Feature Source. Preview is not possible. Declaration public static string FailedToCalculateFeatureSourceExtents { get; } Property Value Type Description System.String FS_CannotPackageSecuredCredentials Looks up a localized string similar to Due to a limitation in the public APIs provided by MapGuide. This Feature Source cannot be packaged by Maestro's packager without discarding the MG_USER_CREDENTIALS element. The workaround is to either re-secure these Feature Sources after loading the Maestro-created package, or to use the official packaging method which will preserve MG_USER_CREDENTIALS in its encrypted state. Declaration public static string FS_CannotPackageSecuredCredentials { get; } Property Value Type Description System.String FS_ConnectionTestFailed Looks up a localized string similar to Connection test failed: {0}. Declaration public static string FS_ConnectionTestFailed { get; } Property Value Type Description System.String FS_DefaultSpatialContextWarning Looks up a localized string similar to Spatial context extent appears to be invalid (or is the default extent returned by FDO provider. Meaning it very likely does not truly represent the extent of your data). Declaration public static string FS_DefaultSpatialContextWarning { get; } Property Value Type Description System.String FS_EmptyJoinPrefix Looks up a localized string similar to The Extended Feature Class ({0}) is using an empty Join Prefix. A join prefix is used to prevent collisions between property names which may exist in both the primary and joined feature classes.. Declaration public static string FS_EmptyJoinPrefix { get; } Property Value Type Description System.String FS_EmptySpatialContextWarning Looks up a localized string similar to Empty spatial context extent detected. Declaration public static string FS_EmptySpatialContextWarning { get; } Property Value Type Description System.String FS_NoPrimaryKeyOrView Looks up a localized string similar to Could not obtain identity properties for {0}. This class either has no identity properties and/or is derived from a view with no uniquely identifiable columns. Attempting to create feature joins from this class may produce unexpected results.. Declaration public static string FS_NoPrimaryKeyOrView { get; } Property Value Type Description System.String FS_NoSpatialContextWarning Looks up a localized string similar to No spatial contexts found. If this feature source is strictly used for Feature Joins, this warning can be safely ignored. Declaration public static string FS_NoSpatialContextWarning { get; } Property Value Type Description System.String FS_PlaintextCredentials Looks up a localized string similar to This Feature Source uses plaintext credentials. This would happen if you are using an old version of Maestro (4.0.2 or older). This is not secure as such Feature Sources can be accessed by the Anonymous MapGuide user account. It is strongly advised that such Feature Sources can be re-secured with MapGuide/Infrastructure Studio or with Maestro 4.0.3 (or newer). Declaration public static string FS_PlaintextCredentials { get; } Property Value Type Description System.String FS_PotentialBadJoinPerformance Looks up a localized string similar to The Extended Feature Class ({0}) does not satisfy the required parameters for optimal Feature Join performance (both sides sortable, on a single property). Join Performance may not be optimal. Left-side sortable: {1}, Right-side sortable: {2}. Declaration public static string FS_PotentialBadJoinPerformance { get; } Property Value Type Description System.String FS_PotentialBadJoinPerformance2 Looks up a localized string similar to The Extended Feature Class ({0}) does not satisfy the required parameters for optimal Feature Join performance (both sides sortable, on a single property). Join Performance may not be optimal.. Declaration public static string FS_PotentialBadJoinPerformance2 { get; } Property Value Type Description System.String FS_PrimaryKeyMissingInformation Looks up a localized string similar to No primary key defined for class: {0}, features will not be selectable and feature joins on this class may produce unexpected results. Declaration public static string FS_PrimaryKeyMissingInformation { get; } Property Value Type Description System.String FS_PrimaryKeyReadError Looks up a localized string similar to Failed to read identity properties: {0}. Declaration public static string FS_PrimaryKeyReadError { get; } Property Value Type Description System.String FS_SchemaReadError Looks up a localized string similar to Failed to read schema description: {0}. Declaration public static string FS_SchemaReadError { get; } Property Value Type Description System.String FS_SchemasMissingWarning Looks up a localized string similar to No schemas found in datasource. Declaration public static string FS_SchemasMissingWarning { get; } Property Value Type Description System.String FS_SecuredCredentialTokensWithoutSecuredCredentialData Looks up a localized string similar to Feature source content has the %MG_USERNAME% and %MG_PASSWORD% tokens, but does not have the MG_USER_CREDENTIALS resource data item. Declaration public static string FS_SecuredCredentialTokensWithoutSecuredCredentialData { get; } Property Value Type Description System.String FS_SpatialContextReadError Looks up a localized string similar to Failed to read spatial context: {0}. Declaration public static string FS_SpatialContextReadError { get; } Property Value Type Description System.String FS_ValidationTimeout Looks up a localized string similar to Maestro could not fully validate the feature source due to a a mapagent error. Assuming it is because of timeout: {0}. Declaration public static string FS_ValidationTimeout { get; } Property Value Type Description System.String Func_ARGB_AValueDescription Looks up a localized string similar to Alpha value. Declaration public static string Func_ARGB_AValueDescription { get; } Property Value Type Description System.String Func_ARGB_BValueDescription Looks up a localized string similar to Blue value. Declaration public static string Func_ARGB_BValueDescription { get; } Property Value Type Description System.String Func_ARGB_Description Looks up a localized string similar to Color generation function. Declaration public static string Func_ARGB_Description { get; } Property Value Type Description System.String Func_ARGB_GValueDescription Looks up a localized string similar to Green value. Declaration public static string Func_ARGB_GValueDescription { get; } Property Value Type Description System.String Func_ARGB_RValueDescription Looks up a localized string similar to Red value. Declaration public static string Func_ARGB_RValueDescription { get; } Property Value Type Description System.String Func_DECAP_Description Looks up a localized string similar to String formatting function. Declaration public static string Func_DECAP_Description { get; } Property Value Type Description System.String Func_DECAP_StringValueDescription Looks up a localized string similar to String to format. Declaration public static string Func_DECAP_StringValueDescription { get; } Property Value Type Description System.String Func_FEATURECLASS_Description Looks up a localized string similar to Returns the active feature class name. Declaration public static string Func_FEATURECLASS_Description { get; } Property Value Type Description System.String Func_FEATUREID_Description Looks up a localized string similar to Returns the active feature Id. Declaration public static string Func_FEATUREID_Description { get; } Property Value Type Description System.String Func_IF_ConditionDescription Looks up a localized string similar to Boolean expression (filter) encapsulated in a string. Declaration public static string Func_IF_ConditionDescription { get; } Property Value Type Description System.String Func_IF_Description Looks up a localized string similar to If evaluator for style theming. Declaration public static string Func_IF_Description { get; } Property Value Type Description System.String Func_IF_FalseValueDescription Looks up a localized string similar to Returned if condition is false. Declaration public static string Func_IF_FalseValueDescription { get; } Property Value Type Description System.String Func_IF_TrueValueDescription Looks up a localized string similar to Returned if condition is true. Declaration public static string Func_IF_TrueValueDescription { get; } Property Value Type Description System.String Func_LAYERID_Description Looks up a localized string similar to Returns the active layer Id. Declaration public static string Func_LAYERID_Description { get; } Property Value Type Description System.String Func_LOOKUP_DefaultValueDescription Looks up a localized string similar to Default value returned if expression does not evaluate to any of the keys. Declaration public static string Func_LOOKUP_DefaultValueDescription { get; } Property Value Type Description System.String Func_LOOKUP_Description Looks up a localized string similar to Lookup table for style theming. Declaration public static string Func_LOOKUP_Description { get; } Property Value Type Description System.String Func_LOOKUP_ExpressionDescription Looks up a localized string similar to Key expression. Declaration public static string Func_LOOKUP_ExpressionDescription { get; } Property Value Type Description System.String Func_LOOKUP_IndexDescription Looks up a localized string similar to Lookup index that can be matched by the key expression. Declaration public static string Func_LOOKUP_IndexDescription { get; } Property Value Type Description System.String Func_LOOKUP_ValueDescription Looks up a localized string similar to Value that is returned when the key expression matches the associated index. Declaration public static string Func_LOOKUP_ValueDescription { get; } Property Value Type Description System.String Func_MAPNAME_Description Looks up a localized string similar to Returns the active map name. Declaration public static string Func_MAPNAME_Description { get; } Property Value Type Description System.String Func_RANGE_DefaultValueDescription Looks up a localized string similar to Default value returned if expression does not fall into any of the ranges. Declaration public static string Func_RANGE_DefaultValueDescription { get; } Property Value Type Description System.String Func_RANGE_Description Looks up a localized string similar to Range table for style theming. Declaration public static string Func_RANGE_Description { get; } Property Value Type Description System.String Func_RANGE_ExpressionDescription Looks up a localized string similar to Key expression. Declaration public static string Func_RANGE_ExpressionDescription { get; } Property Value Type Description System.String Func_RANGE_MaxDescription Looks up a localized string similar to Exclusive maximum of range that can be matched by the key expression. Declaration public static string Func_RANGE_MaxDescription { get; } Property Value Type Description System.String Func_RANGE_MinDescription Looks up a localized string similar to Inclusive minimum of range that can be matched by the key expression. Declaration public static string Func_RANGE_MinDescription { get; } Property Value Type Description System.String Func_RANGE_ValueDescription Looks up a localized string similar to Value that is returned when the key expression matches the associated range. Declaration public static string Func_RANGE_ValueDescription { get; } Property Value Type Description System.String Func_SESSION_Description Looks up a localized string similar to Returns the active session. Declaration public static string Func_SESSION_Description { get; } Property Value Type Description System.String Func_URLENCODE_Description Looks up a localized string similar to String encoding function. Declaration public static string Func_URLENCODE_Description { get; } Property Value Type Description System.String Func_URLENCODE_StringValueDescription Looks up a localized string similar to String to URL encode. Declaration public static string Func_URLENCODE_StringValueDescription { get; } Property Value Type Description System.String GenericFilter Looks up a localized string similar to {0} ( .{1})| .{1}. Declaration public static string GenericFilter { get; } Property Value Type Description System.String Infinity Looks up a localized string similar to Infinity. Declaration public static string Infinity { get; } Property Value Type Description System.String Label_ExtraTools Looks up a localized string similar to Extra Tools. Declaration public static string Label_ExtraTools { get; } Property Value Type Description System.String Label_GetExtents Looks up a localized string similar to Get Extents. Declaration public static string Label_GetExtents { get; } Property Value Type Description System.String Label_GetMapKml Looks up a localized string similar to Get KML. Declaration public static string Label_GetMapKml { get; } Property Value Type Description System.String Label_Tools Looks up a localized string similar to Tools. Declaration public static string Label_Tools { get; } Property Value Type Description System.String Label_ZoomToScale Looks up a localized string similar to Zoom to Scale. Declaration public static string Label_ZoomToScale { get; } Property Value Type Description System.String LDF_CompositeStyleDefinedAlongsideBasicStyle Looks up a localized string similar to The scale range {0} to {1} contains a composite style defined alongside a area/point/line style. The composite style takes precedence in such cases meaning the area/point/line style is always ignored. Declaration public static string LDF_CompositeStyleDefinedAlongsideBasicStyle { get; } Property Value Type Description System.String LDF_DrawingSourceError Looks up a localized string similar to Failed to load specified Drawing Source. Declaration public static string LDF_DrawingSourceError { get; } Property Value Type Description System.String LDF_FeatureSourceLoadError Looks up a localized string similar to Failed to load specified Feature Source. Declaration public static string LDF_FeatureSourceLoadError { get; } Property Value Type Description System.String LDF_GeometryMissingError Looks up a localized string similar to Failed to find geometry column {0} in schema {1} on featuresource {2}. Declaration public static string LDF_GeometryMissingError { get; } Property Value Type Description System.String LDF_InvalidPropertyMapping Looks up a localized string similar to Layer has property mapping for non-existent property ({0}) in class ({1}). Declaration public static string LDF_InvalidPropertyMapping { get; } Property Value Type Description System.String LDF_IrrelevantUsageContext Looks up a localized string similar to Referenced Symbol Definition {0} has an irrelevant usage context for this layer because this layer does not have features of type: {1}. Declaration public static string LDF_IrrelevantUsageContext { get; } Property Value Type Description System.String LDF_LayerNullError Looks up a localized string similar to Layer is missing core information. Declaration public static string LDF_LayerNullError { get; } Property Value Type Description System.String LDF_MinAndMaxScaleSwappedError Looks up a localized string similar to The minimum scale ({0}) is larger than the maximum scale ({1}). Declaration public static string LDF_MinAndMaxScaleSwappedError { get; } Property Value Type Description System.String LDF_MissingFeatureName Looks up a localized string similar to Layer Definition does not specify a class name. Declaration public static string LDF_MissingFeatureName { get; } Property Value Type Description System.String LDF_MissingFeatureSourceError Looks up a localized string similar to No FeatureSource is assigned to the layer. Declaration public static string LDF_MissingFeatureSourceError { get; } Property Value Type Description System.String LDF_MissingGeometryError Looks up a localized string similar to No Geometry is assigned to the layer. Declaration public static string LDF_MissingGeometryError { get; } Property Value Type Description System.String LDF_MissingScaleRangesError Looks up a localized string similar to No scale ranges are defined, no data can be displayed. Declaration public static string LDF_MissingScaleRangesError { get; } Property Value Type Description System.String LDF_MultipleScaleRangesWarning Looks up a localized string similar to More than one scale ranges is defined, this is valid, but unsupported by Maestro. Declaration public static string LDF_MultipleScaleRangesWarning { get; } Property Value Type Description System.String LDF_ScaleRangesOverlapInformation Looks up a localized string similar to The scale range {0}-{1} overlaps the range {2}-{3}. Declaration public static string LDF_ScaleRangesOverlapInformation { get; } Property Value Type Description System.String LDF_SchemaAndColumnReadFailedError Looks up a localized string similar to Failed to validate column and schema: {0}. Declaration public static string LDF_SchemaAndColumnReadFailedError { get; } Property Value Type Description System.String LDF_SchemaMissingError Looks up a localized string similar to Failed to find schema {0} in featuresource {1}. Declaration public static string LDF_SchemaMissingError { get; } Property Value Type Description System.String LDF_SheetLayerNotFound Looks up a localized string similar to Referenced sheet layer {0} not found in sheet {1} of referenced Drawing Source. Declaration public static string LDF_SheetLayerNotFound { get; } Property Value Type Description System.String LDF_SheetNotFound Looks up a localized string similar to Referenced sheet {0} not found in referenced Drawing Source. Declaration public static string LDF_SheetNotFound { get; } Property Value Type Description System.String LDF_SymbolDefintionReferenceNotFound Looks up a localized string similar to The Layer Definition contains a Composite Rule pointing to a non-existent Symbol Definition: {0}. Declaration public static string LDF_SymbolDefintionReferenceNotFound { get; } Property Value Type Description System.String LDF_SymbolParameterOverrideToNonExistentParameter Looks up a localized string similar to The Layer Definition specifies a parameter override for {0} that does not exist ({1}). Declaration public static string LDF_SymbolParameterOverrideToNonExistentParameter { get; } Property Value Type Description System.String LDF_UnsupportedLayerTypeWarning Looks up a localized string similar to The layer has no type, or the type is unsupported by Maestro. Declaration public static string LDF_UnsupportedLayerTypeWarning { get; } Property Value Type Description System.String LDF_WmsPublishedLayerMissingBounds Looks up a localized string similar to The layer is marked as published for WMS, but is missing required bounds information in its metadata.. Declaration public static string LDF_WmsPublishedLayerMissingBounds { get; } Property Value Type Description System.String LDF_WmsQueryableLayerNoPropertyMappings Looks up a localized string similar to The layer is marked as queryable for WMS, but has no property mappings defined. Add one or more property mappings to this layer, otherwise WMS GetFeatureInfo requests against this layer will return nothing.. Declaration public static string LDF_WmsQueryableLayerNoPropertyMappings { get; } Property Value Type Description System.String LPROC_ConvertToSdf3NotSupported Looks up a localized string similar to Convert to SDF option is not supported by Maestro. Declaration public static string LPROC_ConvertToSdf3NotSupported { get; } Property Value Type Description System.String LPROC_DWFNotSupported Looks up a localized string similar to DWF Load Procedures cannot be executed by Maestro. Declaration public static string LPROC_DWFNotSupported { get; } Property Value Type Description System.String LPROC_DWGNotSupported Looks up a localized string similar to DWG Load Procedures cannot be executed by Maestro. Declaration public static string LPROC_DWGNotSupported { get; } Property Value Type Description System.String LPROC_GeneralizationNotSupported Looks up a localized string similar to Generalization of source data is not supported by Maestro. Declaration public static string LPROC_GeneralizationNotSupported { get; } Property Value Type Description System.String LPROC_RasterNotSupported Looks up a localized string similar to Raster Load Procedures cannot be executed by Maestro. Declaration public static string LPROC_RasterNotSupported { get; } Property Value Type Description System.String LPROC_Sdf2OptionsNotSupported Looks up a localized string similar to SDF 2 Migration options are not supported by Maestro. Ensure your source files are SDF3 files.. Declaration public static string LPROC_Sdf2OptionsNotSupported { get; } Property Value Type Description System.String LPROC_SourceFileNotFound Looks up a localized string similar to Source file not found: {0}. Declaration public static string LPROC_SourceFileNotFound { get; } Property Value Type Description System.String MDF_DataOutsideMapWarning Looks up a localized string similar to Data from {0} is not visible in the map's start extent. Declaration public static string MDF_DataOutsideMapWarning { get; } Property Value Type Description System.String MDF_DataReprojectionWarning Looks up a localized string similar to {0} has a different coordinate system than the map, this will impact performance as the coordinates are transformed while rendering the map. Maestro cannot validate the extent of the data.. Declaration public static string MDF_DataReprojectionWarning { get; } Property Value Type Description System.String MDF_FeatureSourceReadError Looks up a localized string similar to Layer {0}'s FeatureSource could not be read: {1}. Declaration public static string MDF_FeatureSourceReadError { get; } Property Value Type Description System.String MDF_GroupHasDefaultLabelInformation Looks up a localized string similar to Group {0} has the default legend label. Declaration public static string MDF_GroupHasDefaultLabelInformation { get; } Property Value Type Description System.String MDF_GroupMissingLabelInformation Looks up a localized string similar to Group {0} does not have a legend label. Declaration public static string MDF_GroupMissingLabelInformation { get; } Property Value Type Description System.String MDF_GroupWithNonExistentGroup Looks up a localized string similar to Layer Group ({0}) belongs to a non-existent Layer Group ({1}). Declaration public static string MDF_GroupWithNonExistentGroup { get; } Property Value Type Description System.String MDF_LayerMissingLabelInformation Looks up a localized string similar to Layer {0} does not have a legend label. Declaration public static string MDF_LayerMissingLabelInformation { get; } Property Value Type Description System.String MDF_LayerNameDuplicateWarning Looks up a localized string similar to The layer name {0} is used for both \"{1}\" and \"{2}\". Declaration public static string MDF_LayerNameDuplicateWarning { get; } Property Value Type Description System.String MDF_LayerReadError Looks up a localized string similar to Layer {0} could not be read: {1}. Declaration public static string MDF_LayerReadError { get; } Property Value Type Description System.String MDF_LayerWithNonExistentGroup Looks up a localized string similar to Layer ({0}) belongs to a non-existent Layer Group ({1}). Declaration public static string MDF_LayerWithNonExistentGroup { get; } Property Value Type Description System.String MDF_LayerWithNullExtent Looks up a localized string similar to Map Definition references feature source {0} which has a null extent. Most likely caused by feature source having no actual data inside it. Declaration public static string MDF_LayerWithNullExtent { get; } Property Value Type Description System.String MDF_MissingLayerGeometryColumnError Looks up a localized string similar to Layer {0} has no geometry column. Declaration public static string MDF_MissingLayerGeometryColumnError { get; } Property Value Type Description System.String MDF_MissingLayerSchemaError Looks up a localized string similar to Layer {0} has an invalid Schema. Declaration public static string MDF_MissingLayerSchemaError { get; } Property Value Type Description System.String MDF_MissingSpatialContextWarning Looks up a localized string similar to {0} has no spatial context (eg. no coordinate system). Declaration public static string MDF_MissingSpatialContextWarning { get; } Property Value Type Description System.String MDF_MultipleSpatialContextsInformation Looks up a localized string similar to {0} has more than one spatial context, the following test results may be inacurate. Declaration public static string MDF_MultipleSpatialContextsInformation { get; } Property Value Type Description System.String MDF_NoCoordinateSystem Looks up a localized string similar to Map Definition has no coordinate system. Declaration public static string MDF_NoCoordinateSystem { get; } Property Value Type Description System.String MDF_NoFiniteDisplayScalesSpecified Looks up a localized string similar to The Map Definition contains tiled layers but has no finite display scales defined. Declaration public static string MDF_NoFiniteDisplayScalesSpecified { get; } Property Value Type Description System.String MDF_RasterReprojectionError Looks up a localized string similar to {0} is a raster layer, and in another coordinate system than the map. No data will be displayed by the layer. Declaration public static string MDF_RasterReprojectionError { get; } Property Value Type Description System.String MDF_ResourceReadError Looks up a localized string similar to {0} could not be processed for spatial info: {1}. Declaration public static string MDF_ResourceReadError { get; } Property Value Type Description System.String MDF_UnselectableLayer Looks up a localized string similar to Layer {0} is marked as selectable but its feature class {1} in ({2}) has no identity properties. This layer will not be selectable.. Declaration public static string MDF_UnselectableLayer { get; } Property Value Type Description System.String MDF_UnsupportedLayerTypeWarning Looks up a localized string similar to Layer {0} is a type that is unsupported by Maestro. Declaration public static string MDF_UnsupportedLayerTypeWarning { get; } Property Value Type Description System.String MovedResource Looks up a localized string similar to Moved resource: {0}. Declaration public static string MovedResource { get; } Property Value Type Description System.String MovingResource Looks up a localized string similar to Moving resource .... Declaration public static string MovingResource { get; } Property Value Type Description System.String NullString Looks up a localized string similar to (null). Declaration public static string NullString { get; } Property Value Type Description System.String ODBC_IncompleteXYZColumnMapping Looks up a localized string similar to Table mapping for Feature class ({0}) has an incomplete column mapping. Either the X or Y or both columns are not specified. Declaration public static string ODBC_IncompleteXYZColumnMapping { get; } Property Value Type Description System.String ODBC_InvalidGeometryProperty Looks up a localized string similar to Feature class ({0}) has a logical geometry property ({1}) that is not of the Point geometry type. Declaration public static string ODBC_InvalidGeometryProperty { get; } Property Value Type Description System.String ODBC_NoSuchTableOverrideForFeatureClass Looks up a localized string similar to Feature class ({0}) has no corresponding ODBC table override item. Declaration public static string ODBC_NoSuchTableOverrideForFeatureClass { get; } Property Value Type Description System.String PickAll Looks up a localized string similar to All Files. Declaration public static string PickAll { get; } Property Value Type Description System.String PickBat Looks up a localized string similar to Batch Files. Declaration public static string PickBat { get; } Property Value Type Description System.String PickDwf Looks up a localized string similar to Autodesk DWF. Declaration public static string PickDwf { get; } Property Value Type Description System.String PickExe Looks up a localized string similar to Executables. Declaration public static string PickExe { get; } Property Value Type Description System.String PickIni Looks up a localized string similar to INI Files. Declaration public static string PickIni { get; } Property Value Type Description System.String PickLog Looks up a localized string similar to Log Files. Declaration public static string PickLog { get; } Property Value Type Description System.String PickMgp Looks up a localized string similar to MapGuide Package File. Declaration public static string PickMgp { get; } Property Value Type Description System.String PickPng Looks up a localized string similar to Portable Network Graphics. Declaration public static string PickPng { get; } Property Value Type Description System.String PickPy Looks up a localized string similar to Python Scripts. Declaration public static string PickPy { get; } Property Value Type Description System.String PickSdf Looks up a localized string similar to Autodesk Spatial Data File. Declaration public static string PickSdf { get; } Property Value Type Description System.String PickShp Looks up a localized string similar to ESRI Shapefile. Declaration public static string PickShp { get; } Property Value Type Description System.String PickSqlite Looks up a localized string similar to SQLite Databases. Declaration public static string PickSqlite { get; } Property Value Type Description System.String PickTxt Looks up a localized string similar to Text Files. Declaration public static string PickTxt { get; } Property Value Type Description System.String PickXml Looks up a localized string similar to XML Files. Declaration public static string PickXml { get; } Property Value Type Description System.String PickZip Looks up a localized string similar to Zip Files. Declaration public static string PickZip { get; } Property Value Type Description System.String PreviewMap Looks up a localized string similar to Preview Map. Declaration public static string PreviewMap { get; } Property Value Type Description System.String ProgressCopyingFolder Looks up a localized string similar to Copying Folder .... Declaration public static string ProgressCopyingFolder { get; } Property Value Type Description System.String ProgressFindingFolderRefs Looks up a localized string similar to Finding Folder References .... Declaration public static string ProgressFindingFolderRefs { get; } Property Value Type Description System.String ProgressMovingFolder Looks up a localized string similar to Moving Folder .... Declaration public static string ProgressMovingFolder { get; } Property Value Type Description System.String RequiredServiceNotSupported Looks up a localized string similar to This connection does not support required service: . Declaration public static string RequiredServiceNotSupported { get; } Property Value Type Description System.String ResourceManager Returns the cached ResourceManager instance used by this class. Declaration public static ResourceManager ResourceManager { get; } Property Value Type Description System.Resources.ResourceManager SiteVersionDoesntSupportWatermarks Looks up a localized string similar to The site version of this current connection is not known to support watermarks. Declaration public static string SiteVersionDoesntSupportWatermarks { get; } Property Value Type Description System.String SSDF_ImageGraphicReferenceResourceDataNotFound Looks up a localized string similar to The simple symbol definition contains an image graphic that references a resource id {0} with a non-existent resource data {1}. Declaration public static string SSDF_ImageGraphicReferenceResourceDataNotFound { get; } Property Value Type Description System.String SSDF_ImageGraphicReferenceResourceIdNotFound Looks up a localized string similar to The simple symbol definition contains an image graphic that references a non-existent resource id. Declaration public static string SSDF_ImageGraphicReferenceResourceIdNotFound { get; } Property Value Type Description System.String SSDF_NoGeometryUsageContext Looks up a localized string similar to The Simple Symbol Definition has no geometry usage contexts specified.. Declaration public static string SSDF_NoGeometryUsageContext { get; } Property Value Type Description System.String SSDF_SymbolParameterNotUsed Looks up a localized string similar to The simple symbol definition contains a symbol parameter {0} that is not referenced anywhere within the definition. Declaration public static string SSDF_SymbolParameterNotUsed { get; } Property Value Type Description System.String TemplateCreated Looks up a localized string similar to Created: {0}. Declaration public static string TemplateCreated { get; } Property Value Type Description System.String TemplateFileNotFound Looks up a localized string similar to File not found: {0}. Declaration public static string TemplateFileNotFound { get; } Property Value Type Description System.String TemplateFileProcessed Looks up a localized string similar to File processed: {0}. Declaration public static string TemplateFileProcessed { get; } Property Value Type Description System.String TemplateLoaded Looks up a localized string similar to Loaded: {0}. Declaration public static string TemplateLoaded { get; } Property Value Type Description System.String TemplateSetSpatialContext Looks up a localized string similar to Set default spatial context for: {0}. Declaration public static string TemplateSetSpatialContext { get; } Property Value Type Description System.String TemplateSuccess Looks up a localized string similar to Success: {0}. Declaration public static string TemplateSuccess { get; } Property Value Type Description System.String TemplateUploadedPrj Looks up a localized string similar to Uploaded: {0}.prj. Declaration public static string TemplateUploadedPrj { get; } Property Value Type Description System.String TemplateUrlNotFound Looks up a localized string similar to Could not find template url for template: . Declaration public static string TemplateUrlNotFound { get; } Property Value Type Description System.String TextWatermark Looks up a localized string similar to <?xml version=\"1.0\"?> <WatermarkDefinition xmlns:xsi=\" http://www.w3.org/2001/XMLSchema-instance&quot ; xmlns:xsd=\" http://www.w3.org/2001/XMLSchema&quot ; version=\"2.4.0\" xsi:noNamespaceSchemaLocation=\"WatermarkDefinition-2.4.0.xsd\"> <Content> <SimpleSymbolDefinition> <Name /> <Description /> <Graphics> <Text> <Content>'{0}'</Content> <FontName>'Arial'</FontName> <Height>3</Height> <Justification>'Left'</Justification> <TextCol [rest of string was truncated]\";. Declaration public static string TextWatermark { get; } Property Value Type Description System.String TitlePreview Looks up a localized string similar to Preview. Declaration public static string TitlePreview { get; } Property Value Type Description System.String TS_ThreadFailureError Looks up a localized string similar to All threads crashed, and the tile set was only partially created. Declaration public static string TS_ThreadFailureError { get; } Property Value Type Description System.String UnpreviewableResourceType Looks up a localized string similar to The resource type cannot be previewed. Declaration public static string UnpreviewableResourceType { get; } Property Value Type Description System.String UnseedableTileSet Looks up a localized string similar to The given Map Definition or Tile Set Definition cannot be seeded. Declaration public static string UnseedableTileSet { get; } Property Value Type Description System.String UnsupportedLoadProcedureType Looks up a localized string similar to Unsupported Load Procedure Type. Declaration public static string UnsupportedLoadProcedureType { get; } Property Value Type Description System.String WL_DuplicateCommandName Looks up a localized string similar to There web layout has more than one command named: {0}. Declaration public static string WL_DuplicateCommandName { get; } Property Value Type Description System.String WL_DuplicateSearchResultColumn Looks up a localized string similar to The search command {0} references more than one property named {1}. Declaration public static string WL_DuplicateSearchResultColumn { get; } Property Value Type Description System.String WL_MapValidationError Looks up a localized string similar to Error validating MapDefinition {0}, message: {1}. Declaration public static string WL_MapValidationError { get; } Property Value Type Description System.String WL_MissingMapError Looks up a localized string similar to Layout does not specify a map. Declaration public static string WL_MissingMapError { get; } Property Value Type Description System.String WL_NonExistentMenuCommandReference Looks up a localized string similar to Context Menu contains a reference to a command that doesn't exist: {0}. Declaration public static string WL_NonExistentMenuCommandReference { get; } Property Value Type Description System.String WL_NonExistentTaskPaneCommandReference Looks up a localized string similar to Task Pane contains a reference to a command that does not exist: {0}. Declaration public static string WL_NonExistentTaskPaneCommandReference { get; } Property Value Type Description System.String WL_NonExistentToolbarCommandReference Looks up a localized string similar to Toolbar contains a reference to a command that does not exist: {0}. Declaration public static string WL_NonExistentToolbarCommandReference { get; } Property Value Type Description System.String WL_StartViewOutsideExtentsWarning Looks up a localized string similar to Layout specifies a start view that is outside the map's initial extents. Declaration public static string WL_StartViewOutsideExtentsWarning { get; } Property Value Type Description System.String XmlValidationIssueTemplate Looks up a localized string similar to Line {0}, Char {1}: {2}. Declaration public static string XmlValidationIssueTemplate { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.CallbackStates.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.CallbackStates.html",
    "title": "Enum CallbackStates | MapGuide Maestro",
    "keywords": "Enum CallbackStates These are the avalible states for callbacks Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public enum CallbackStates Fields Name Description FailedRenderingTile A tile has failed to render FinishRenderAllMaps All maps have been rendered FinishRenderGroup A group has been rendered FinishRenderMap A map has been rendered FinishRenderScale A scale has been rendered FinishRenderTile A tile has been rendered StartRenderAllMaps All maps are being rendered StartRenderGroup A group is being rendered StartRenderMap A map is being rendered StartRenderScale A scale is being rendered StartRenderTile A tile is being rendered"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.DefaultTileWalker.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.DefaultTileWalker.html",
    "title": "Class DefaultTileWalker | MapGuide Maestro",
    "keywords": "Class DefaultTileWalker The default tile walking strategy Inheritance System.Object DefaultTileWalker Implements ITileWalker Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public class DefaultTileWalker : ITileWalker Constructors DefaultTileWalker(DefaultTileWalkOptions) Constructs a new instance Declaration public DefaultTileWalker(DefaultTileWalkOptions options) Parameters Type Name Description DefaultTileWalkOptions options Properties ResourceID Gets the resource ID of the map definition or tile set being walked Declaration public string ResourceID { get; } Property Value Type Description System.String Methods GetTileList() Computes the list of all possible tiles to request Declaration public TileRef[] GetTileList() Returns Type Description TileRef [] Implements ITileWalker"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.DefaultTileWalkOptions.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.DefaultTileWalkOptions.html",
    "title": "Class DefaultTileWalkOptions | MapGuide Maestro",
    "keywords": "Class DefaultTileWalkOptions Defines options that control how the tile set is to be walked to obtain the full list of tiles to be requested Inheritance System.Object DefaultTileWalkOptions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public class DefaultTileWalkOptions Constructors DefaultTileWalkOptions(IMapDefinition, String[]) Constructs a new instance from a Map Definition Declaration public DefaultTileWalkOptions(IMapDefinition mdf, string[] groupNames = null) Parameters Type Name Description IMapDefinition mdf System.String [] groupNames DefaultTileWalkOptions(ITileSetDefinition, String[]) Constructs a new instance from a Tile Set Definition Declaration public DefaultTileWalkOptions(ITileSetDefinition tsd, string[] groupNames = null) Parameters Type Name Description ITileSetDefinition tsd System.String [] groupNames Properties DPI The display DPI Declaration public int DPI { get; set; } Property Value Type Description System.Int32 Extents The default extents of the tile set or map definition being walked Declaration public IEnvelope Extents { get; } Property Value Type Description IEnvelope GroupNames The array of group names to walk across Declaration public string[] GroupNames { get; } Property Value Type Description System.String [] MetersPerUnit The meters per unit value Declaration public double MetersPerUnit { get; set; } Property Value Type Description System.Double OverrideExtents If specified, will instruct the tile walker to generate a tile walk list based on these extents instead of the default Declaration public IEnvelope OverrideExtents { get; set; } Property Value Type Description IEnvelope ResourceID The resource id of the map definition or tile set to walk Declaration public string ResourceID { get; } Property Value Type Description System.String TileHeight The tile height Declaration public int TileHeight { get; set; } Property Value Type Description System.Int32 TileSet The map definition or tile set to walk Declaration public ITileSetAbstract TileSet { get; } Property Value Type Description ITileSetAbstract TileWidth The tile width Declaration public int TileWidth { get; set; } Property Value Type Description System.Int32"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.ITileWalker.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.ITileWalker.html",
    "title": "Interface ITileWalker | MapGuide Maestro",
    "keywords": "Interface ITileWalker Defines a strategy for walking through all the possible tiles for a given tiled map or tile set Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public interface ITileWalker Properties ResourceID The resource id of the map definition or tile set Declaration string ResourceID { get; } Property Value Type Description System.String Methods GetTileList() Computes the list of all possible tiles to request Declaration TileRef[] GetTileList() Returns Type Description TileRef []"
  },
  "api/OSGeo.MapGuide.MaestroAPI.UnmanagedDataTypes.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.UnmanagedDataTypes.html",
    "title": "Enum UnmanagedDataTypes | MapGuide Maestro",
    "keywords": "Enum UnmanagedDataTypes Defines the types of unmananged data Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public enum UnmanagedDataTypes Fields Name Description Both Files and Folders Files Files Folders Folders"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Utility.StreamCopyProgressDelegate.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Utility.StreamCopyProgressDelegate.html",
    "title": "Delegate Utility.StreamCopyProgressDelegate | MapGuide Maestro",
    "keywords": "Delegate Utility.StreamCopyProgressDelegate A delegate used to update a progress bar while copying a stream. Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public delegate void StreamCopyProgressDelegate(long copied, long remaining, long total); Parameters Type Name Description System.Int64 copied The number of bytes copied so far System.Int64 remaining The number of bytes left in the stream. -1 if the stream length is not known System.Int64 total The total number of bytes in the source stream. -1 if the stream length is unknown"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IApplicationDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IApplicationDefinition.html",
    "title": "Interface IApplicationDefinition | MapGuide Maestro",
    "keywords": "Interface IApplicationDefinition Represents a fusion flexible layout (aka. An Application Definition document) Inherited Members IResource.ValidatingSchema IResource.ResourceID IResource.ResourceType IResource.Serialize() IResource.IsStronglyTyped IVersionedEntity.ResourceVersion IExtensibleElement.Extension Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IApplicationDefinition : IResource, IVersionedEntity, ICloneable, INotifyPropertyChanged, IExtensibleElement Properties MapSet Gets the map set Declaration IMapSet MapSet { get; } Property Value Type Description IMapSet TemplateUrl Gets or sets the template url Declaration string TemplateUrl { get; set; } Property Value Type Description System.String Title Gets or sets the title Declaration string Title { get; set; } Property Value Type Description System.String WidgetSets Gets the widget sets Declaration IEnumerable<IWidgetSet> WidgetSets { get; } Property Value Type Description IEnumerable < IWidgetSet > Methods AddMapGroup(String, Boolean, String) Adds the new map group to the current map set with a default MapGuide child map Declaration IMapGroup AddMapGroup(string id, bool singleTile, string mapDefinitionId) Parameters Type Name Description System.String id System.Boolean singleTile System.String mapDefinitionId Returns Type Description IMapGroup AddMapGroup(String, Boolean, String, Double, Double, Double) Adds a new map group to the specified map set with a default MapGuide child map Declaration IMapGroup AddMapGroup(string id, bool singleTile, string mapDefinitionId, double centerX, double centerY, double scale) Parameters Type Name Description System.String id System.Boolean singleTile System.String mapDefinitionId System.Double centerX System.Double centerY System.Double scale Returns Type Description IMapGroup AddWidgetSet(IWidgetSet) Adds the specified widget set Declaration void AddWidgetSet(IWidgetSet set) Parameters Type Name Description IWidgetSet set CreateContainer(String, IApplicationDefinitionContainerInfo) Creates a widget reference UI container Declaration IUIItemContainer CreateContainer(string name, IApplicationDefinitionContainerInfo containerInfo) Parameters Type Name Description System.String name IApplicationDefinitionContainerInfo containerInfo Returns Type Description IUIItemContainer CreateFlyout(String) Create a flyout menu Declaration IFlyoutItem CreateFlyout(string label) Parameters Type Name Description System.String label Returns Type Description IFlyoutItem CreateMapWidget(String, String) Creates a map widget Declaration IMapWidget CreateMapWidget(string mapId, string contextMenuId) Parameters Type Name Description System.String mapId System.String contextMenuId Returns Type Description IMapWidget CreateSeparator() Creates a separator Declaration ISeparator CreateSeparator() Returns Type Description ISeparator CreateWidget(String, IWidgetInfo) Create a widget from the specified widget information Declaration IWidget CreateWidget(string name, IWidgetInfo widgetInfo) Parameters Type Name Description System.String name IWidgetInfo widgetInfo Returns Type Description IWidget CreateWidgetReference(String) Creates a widget reference Declaration IWidgetItem CreateWidgetReference(string name) Parameters Type Name Description System.String name Returns Type Description IWidgetItem CreateWidgetSet(IMapWidget) Creates a widget set Declaration IWidgetSet CreateWidgetSet(IMapWidget mapWidget) Parameters Type Name Description IMapWidget mapWidget Returns Type Description IWidgetSet RemoveWidgetSet(IWidgetSet) Removes the specified widget set Declaration void RemoveWidgetSet(IWidgetSet set) Parameters Type Name Description IWidgetSet set"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IApplicationDefinitionContainerInfo.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IApplicationDefinitionContainerInfo.html",
    "title": "Interface IApplicationDefinitionContainerInfo | MapGuide Maestro",
    "keywords": "Interface IApplicationDefinitionContainerInfo Describes a fusion container Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IApplicationDefinitionContainerInfo Properties Description Gets the description of this container Declaration string Description { get; } Property Value Type Description System.String LocalizedType Gets the localized type of container Declaration string LocalizedType { get; } Property Value Type Description System.String PreviewImageUrl Gets the preview image url of this container Declaration string PreviewImageUrl { get; } Property Value Type Description System.String Type Gets the type of container Declaration string Type { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IApplicationDefinitionContainerInfoSet.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IApplicationDefinitionContainerInfoSet.html",
    "title": "Interface IApplicationDefinitionContainerInfoSet | MapGuide Maestro",
    "keywords": "Interface IApplicationDefinitionContainerInfoSet Describes all available containers Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IApplicationDefinitionContainerInfoSet Properties ContainerInfo Gets the containers Declaration IEnumerable<IApplicationDefinitionContainerInfo> ContainerInfo { get; } Property Value Type Description IEnumerable < IApplicationDefinitionContainerInfo >"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IApplicationDefinitionPanel.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IApplicationDefinitionPanel.html",
    "title": "Interface IApplicationDefinitionPanel | MapGuide Maestro",
    "keywords": "Interface IApplicationDefinitionPanel Describes a fusion template panel Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IApplicationDefinitionPanel Properties Description Gets the description of this panel Declaration string Description { get; } Property Value Type Description System.String Label Gets the label of this panel Declaration string Label { get; } Property Value Type Description System.String Name Gets the name of this panel Declaration string Name { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IApplicationDefinitionTemplateInfo.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IApplicationDefinitionTemplateInfo.html",
    "title": "Interface IApplicationDefinitionTemplateInfo | MapGuide Maestro",
    "keywords": "Interface IApplicationDefinitionTemplateInfo Describes a fusion template Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IApplicationDefinitionTemplateInfo Properties Description Gets the template description Declaration string Description { get; } Property Value Type Description System.String LocationUrl Gets the url location of this template Declaration string LocationUrl { get; } Property Value Type Description System.String Name Gets the name of this template Declaration string Name { get; } Property Value Type Description System.String Panels Gets the panels applicable for this template Declaration IEnumerable<IApplicationDefinitionPanel> Panels { get; } Property Value Type Description IEnumerable < IApplicationDefinitionPanel > PreviewImageUrl Gets the preview image url of this template Declaration string PreviewImageUrl { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IApplicationDefinitionTemplateInfoSet.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IApplicationDefinitionTemplateInfoSet.html",
    "title": "Interface IApplicationDefinitionTemplateInfoSet | MapGuide Maestro",
    "keywords": "Interface IApplicationDefinitionTemplateInfoSet Describes all available templates Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IApplicationDefinitionTemplateInfoSet Properties TemplateInfo Gets the templates Declaration IEnumerable<IApplicationDefinitionTemplateInfo> TemplateInfo { get; } Property Value Type Description IEnumerable < IApplicationDefinitionTemplateInfo >"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IMapSet.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IMapSet.html",
    "title": "Interface IMapSet | MapGuide Maestro",
    "keywords": "Interface IMapSet Describes the map set of the Flexible Layout Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IMapSet Properties MapGroupCount The number of map groups Declaration int MapGroupCount { get; } Property Value Type Description System.Int32 MapGroups The map groups Declaration IEnumerable<IMapGroup> MapGroups { get; } Property Value Type Description IEnumerable < IMapGroup > Methods AddGroup(IMapGroup) Adds a map group Declaration void AddGroup(IMapGroup group) Parameters Type Name Description IMapGroup group GetGroupAt(Int32) Gets the map group at the given index Declaration IMapGroup GetGroupAt(int index) Parameters Type Name Description System.Int32 index Returns Type Description IMapGroup RemoveGroup(IMapGroup) Removes the given map group Declaration void RemoveGroup(IMapGroup group) Parameters Type Name Description IMapGroup group"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IMapView.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IMapView.html",
    "title": "Interface IMapView | MapGuide Maestro",
    "keywords": "Interface IMapView The initial view of the map Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IMapView : INotifyPropertyChanged Properties CenterX Gets or sets the center X. Declaration double CenterX { get; set; } Property Value Type Description System.Double The center X. CenterY Gets or sets the center Y. Declaration double CenterY { get; set; } Property Value Type Description System.Double The center Y. Scale Gets or sets the scale. Declaration double Scale { get; set; } Property Value Type Description System.Double The scale."
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IMapWidget.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IMapWidget.html",
    "title": "Interface IMapWidget | MapGuide Maestro",
    "keywords": "Interface IMapWidget Represents a map widget Inherited Members IWidget.Name IWidget.Type IWidget.Location IWidget.ToXml() IExtensibleElement.Extension Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IMapWidget : IWidget, INotifyPropertyChanged, IExtensibleElement Properties MapId The map group id Declaration string MapId { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IMenu.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IMenu.html",
    "title": "Interface IMenu | MapGuide Maestro",
    "keywords": "Interface IMenu A interface for widgets and components with menu-like characteristics Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IMenu Properties ItemCount Gets the item count. Declaration int ItemCount { get; } Property Value Type Description System.Int32 The item count. Items Gets the items. Declaration IEnumerable<IUIItem> Items { get; } Property Value Type Description IEnumerable < IUIItem > The items. Methods AddItem(IUIItem) Adds the item. Declaration void AddItem(IUIItem item) Parameters Type Name Description IUIItem item The item. GetIndex(IUIItem) Gets the index of the specified item. Declaration int GetIndex(IUIItem item) Parameters Type Name Description IUIItem item The item. Returns Type Description System.Int32 Insert(IUIItem, Int32) Inserts the specified item at the specified index. Declaration void Insert(IUIItem item, int index) Parameters Type Name Description IUIItem item The item. System.Int32 index The index. MoveDown(IUIItem) Moves the specified item down. Declaration bool MoveDown(IUIItem item) Parameters Type Name Description IUIItem item The item. Returns Type Description System.Boolean MoveUp(IUIItem) Moves the specified item up. Declaration bool MoveUp(IUIItem item) Parameters Type Name Description IUIItem item The item. Returns Type Description System.Boolean RemoveItem(IUIItem) Removes the item. Declaration void RemoveItem(IUIItem item) Parameters Type Name Description IUIItem item The item."
  },
  "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoCommandCapabilities.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoCommandCapabilities.html",
    "title": "Interface IFdoCommandCapabilities | MapGuide Maestro",
    "keywords": "Interface IFdoCommandCapabilities Describes command capabilities for an FDO provider Namespace : OSGeo.MapGuide.ObjectModels.Capabilities Assembly : cs.temp.dll.dll Syntax public interface IFdoCommandCapabilities Properties SupportedCommands The array of supported commands Declaration string[] SupportedCommands { get; } Property Value Type Description System.String [] SupportsParameters Indicates if parameters are supported Declaration bool SupportsParameters { get; } Property Value Type Description System.Boolean SupportsTimeout Indicates if timeout is supported Declaration bool SupportsTimeout { get; } Property Value Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoConnectionCapabilities.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoConnectionCapabilities.html",
    "title": "Interface IFdoConnectionCapabilities | MapGuide Maestro",
    "keywords": "Interface IFdoConnectionCapabilities Describes connection capabilities for an FDO provider Namespace : OSGeo.MapGuide.ObjectModels.Capabilities Assembly : cs.temp.dll.dll Syntax public interface IFdoConnectionCapabilities Properties SupportedSpatialContextExtentTypes The array of supported spatial context extent types Declaration string[] SupportedSpatialContextExtentTypes { get; } Property Value Type Description System.String [] SupportsConfiguration Indicates if XML configuration documents are supported Declaration bool SupportsConfiguration { get; } Property Value Type Description System.Boolean SupportsLocking Indicates if locking is supported Declaration bool SupportsLocking { get; } Property Value Type Description System.Boolean SupportsLongTransactions Indicates if long transactions are supported Declaration bool SupportsLongTransactions { get; } Property Value Type Description System.Boolean SupportsSQL Indicates if SQL commands are supported Declaration bool SupportsSQL { get; } Property Value Type Description System.Boolean SupportsTimeout Indicates if timeout is supported Declaration bool SupportsTimeout { get; } Property Value Type Description System.Boolean SupportsTransactions Indicates if transactions are supported Declaration bool SupportsTransactions { get; } Property Value Type Description System.Boolean ThreadCapability Gets the thread capability of this connection Declaration string ThreadCapability { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoExpressionCapabilities.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoExpressionCapabilities.html",
    "title": "Interface IFdoExpressionCapabilities | MapGuide Maestro",
    "keywords": "Interface IFdoExpressionCapabilities Describes the FDO expression capabilities of the FDO provider Namespace : OSGeo.MapGuide.ObjectModels.Capabilities Assembly : cs.temp.dll.dll Syntax public interface IFdoExpressionCapabilities Properties ExpressionTypes Gets an array of supported FDO expression types Declaration string[] ExpressionTypes { get; } Property Value Type Description System.String [] SupportedFunctions Gets an array of supported FDO functions Declaration IFdoFunctionDefintion[] SupportedFunctions { get; } Property Value Type Description IFdoFunctionDefintion []"
  },
  "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoFilterCapabilities.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Capabilities.IFdoFilterCapabilities.html",
    "title": "Interface IFdoFilterCapabilities | MapGuide Maestro",
    "keywords": "Interface IFdoFilterCapabilities Describes the filter capabilities of the FDO provider Namespace : OSGeo.MapGuide.ObjectModels.Capabilities Assembly : cs.temp.dll.dll Syntax public interface IFdoFilterCapabilities Properties ConditionTypes The array of supported condition types Declaration string[] ConditionTypes { get; } Property Value Type Description System.String [] DistanceOperations The array of supported distance operations Declaration string[] DistanceOperations { get; } Property Value Type Description System.String [] SpatialOperations The array of supported spatial operations Declaration string[] SpatialOperations { get; } Property Value Type Description System.String [] SupportsGeodesicDistance Indicates if geodesic distances are supported Declaration bool SupportsGeodesicDistance { get; } Property Value Type Description System.Boolean SupportsNonLiteralGeometricOperations Indicates if non-literal geometric operations are supported Declaration bool SupportsNonLiteralGeometricOperations { get; } Property Value Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.ObjectModels.Check.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Check.html",
    "title": "Class Check | MapGuide Maestro",
    "keywords": "Class Check Pre-condition verifier utility class Inheritance System.Object Check Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels Assembly : cs.temp.dll.dll Syntax public static class Check Methods ArgumentNotEmpty(String, String) Check that string value is not null or empty Declaration public static void ArgumentNotEmpty(string value, string arg) Parameters Type Name Description System.String value System.String arg ArgumentNotNull<T>(T, String) Check that the argument value is not null Declaration public static void ArgumentNotNull<T>(T obj, string arg)where T : class Parameters Type Name Description T obj System.String arg Type Parameters Name Description T ThatArgumentIsBetweenRange<T>(T, T, T, Boolean, String) Check that the given integer is between the specified range Declaration public static void ThatArgumentIsBetweenRange<T>(T value, T min, T max, bool bInclusive, string msg)where T : IComparable Parameters Type Name Description T value The value to check T min The lower bound T max The upper bound System.Boolean bInclusive Determines whether the range is inclusive. If false, the range is exclusive System.String msg The message to include for precondition failure Type Parameters Name Description T ThatArgumentIsFolder(String, String) Check that the given argument is a folder resource id Declaration public static void ThatArgumentIsFolder(string folderid, string name) Parameters Type Name Description System.String folderid The folder resource id to check System.String name The argument name ThatPreconditionIsMet(Boolean, String) Check that the specified condition is true Declaration public static void ThatPreconditionIsMet(bool condition, string msg) Parameters Type Name Description System.Boolean condition System.String msg"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.DataStoreList.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.DataStoreList.html",
    "title": "Class DataStoreList | MapGuide Maestro",
    "keywords": "Class DataStoreList The list of datastores from a EnumerateDataStores request Inheritance System.Object DataStoreList Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class DataStoreList : ComponentModel.INotifyPropertyChanged Properties DataStore A data store entry. Declaration public BindingList<DataStoreListDataStore> DataStore { get; set; } Property Value Type Description BindingList < DataStoreListDataStore > Methods Clone() Create a clone of this DataStoreList object Declaration public virtual DataStoreList Clone() Returns Type Description DataStoreList Deserialize(String) Declaration public static DataStoreList Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description DataStoreList Deserialize(String, out DataStoreList) Declaration public static bool Deserialize(string xml, out DataStoreList obj) Parameters Type Name Description System.String xml DataStoreList obj Returns Type Description System.Boolean Deserialize(String, out DataStoreList, out Exception) Deserializes workflow markup into an DataStoreList object Declaration public static bool Deserialize(string xml, out DataStoreList obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize DataStoreList obj Output DataStoreList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static DataStoreList LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description DataStoreList LoadFromFile(String, out DataStoreList) Declaration public static bool LoadFromFile(string fileName, out DataStoreList obj) Parameters Type Name Description System.String fileName DataStoreList obj Returns Type Description System.Boolean LoadFromFile(String, out DataStoreList, out Exception) Deserializes xml markup from file into an DataStoreList object Declaration public static bool LoadFromFile(string fileName, out DataStoreList obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize DataStoreList obj Output DataStoreList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current DataStoreList object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current DataStoreList object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.DataStoreListDataStore.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.DataStoreListDataStore.html",
    "title": "Class DataStoreListDataStore | MapGuide Maestro",
    "keywords": "Class DataStoreListDataStore A data store entry. Inheritance System.Object DataStoreListDataStore Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class DataStoreListDataStore : ComponentModel.INotifyPropertyChanged Properties FdoEnabled If false this data store does not have a logical to physical schema mapping. Declaration public bool FdoEnabled { get; set; } Property Value Type Description System.Boolean Name The name of the data store. Declaration public string Name { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this DataStoreListDataStore object Declaration public virtual DataStoreListDataStore Clone() Returns Type Description DataStoreListDataStore Deserialize(String) Declaration public static DataStoreListDataStore Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description DataStoreListDataStore Deserialize(String, out DataStoreListDataStore) Declaration public static bool Deserialize(string xml, out DataStoreListDataStore obj) Parameters Type Name Description System.String xml DataStoreListDataStore obj Returns Type Description System.Boolean Deserialize(String, out DataStoreListDataStore, out Exception) Deserializes workflow markup into an DataStoreListDataStore object Declaration public static bool Deserialize(string xml, out DataStoreListDataStore obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize DataStoreListDataStore obj Output DataStoreListDataStore object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static DataStoreListDataStore LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description DataStoreListDataStore LoadFromFile(String, out DataStoreListDataStore) Declaration public static bool LoadFromFile(string fileName, out DataStoreListDataStore obj) Parameters Type Name Description System.String fileName DataStoreListDataStore obj Returns Type Description System.Boolean LoadFromFile(String, out DataStoreListDataStore, out Exception) Deserializes xml markup from file into an DataStoreListDataStore object Declaration public static bool LoadFromFile(string fileName, out DataStoreListDataStore obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize DataStoreListDataStore obj Output DataStoreListDataStore object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current DataStoreListDataStore object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current DataStoreListDataStore object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.DrawingSectionList.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.DrawingSectionList.html",
    "title": "Class DrawingSectionList | MapGuide Maestro",
    "keywords": "Class DrawingSectionList Drawing Section list Inheritance System.Object DrawingSectionList Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class DrawingSectionList : ComponentModel.INotifyPropertyChanged Properties Section Declaration public BindingList<DrawingSectionListSection> Section { get; set; } Property Value Type Description BindingList < DrawingSectionListSection > Methods Clone() Create a clone of this DrawingSectionList object Declaration public virtual DrawingSectionList Clone() Returns Type Description DrawingSectionList Deserialize(String) Declaration public static DrawingSectionList Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description DrawingSectionList Deserialize(String, out DrawingSectionList) Declaration public static bool Deserialize(string xml, out DrawingSectionList obj) Parameters Type Name Description System.String xml DrawingSectionList obj Returns Type Description System.Boolean Deserialize(String, out DrawingSectionList, out Exception) Deserializes workflow markup into an DrawingSectionList object Declaration public static bool Deserialize(string xml, out DrawingSectionList obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize DrawingSectionList obj Output DrawingSectionList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static DrawingSectionList LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description DrawingSectionList LoadFromFile(String, out DrawingSectionList) Declaration public static bool LoadFromFile(string fileName, out DrawingSectionList obj) Parameters Type Name Description System.String fileName DrawingSectionList obj Returns Type Description System.Boolean LoadFromFile(String, out DrawingSectionList, out Exception) Deserializes xml markup from file into an DrawingSectionList object Declaration public static bool LoadFromFile(string fileName, out DrawingSectionList obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize DrawingSectionList obj Output DrawingSectionList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current DrawingSectionList object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current DrawingSectionList object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.FdoSpatialContextListSpatialContextExtentUpperRightCoordinate.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.FdoSpatialContextListSpatialContextExtentUpperRightCoordinate.html",
    "title": "Class FdoSpatialContextListSpatialContextExtentUpperRightCoordinate | MapGuide Maestro",
    "keywords": "Class FdoSpatialContextListSpatialContextExtentUpperRightCoordinate Inheritance System.Object FdoSpatialContextListSpatialContextExtentUpperRightCoordinate Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class FdoSpatialContextListSpatialContextExtentUpperRightCoordinate : ComponentModel.INotifyPropertyChanged Properties M Declaration public string M { get; set; } Property Value Type Description System.String X Declaration public string X { get; set; } Property Value Type Description System.String Y Declaration public string Y { get; set; } Property Value Type Description System.String Z Declaration public string Z { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this FdoSpatialContextListSpatialContextExtentUpperRightCoordinate object Declaration public virtual FdoSpatialContextListSpatialContextExtentUpperRightCoordinate Clone() Returns Type Description FdoSpatialContextListSpatialContextExtentUpperRightCoordinate Deserialize(String) Declaration public static FdoSpatialContextListSpatialContextExtentUpperRightCoordinate Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description FdoSpatialContextListSpatialContextExtentUpperRightCoordinate Deserialize(String, out FdoSpatialContextListSpatialContextExtentUpperRightCoordinate) Declaration public static bool Deserialize(string xml, out FdoSpatialContextListSpatialContextExtentUpperRightCoordinate obj) Parameters Type Name Description System.String xml FdoSpatialContextListSpatialContextExtentUpperRightCoordinate obj Returns Type Description System.Boolean Deserialize(String, out FdoSpatialContextListSpatialContextExtentUpperRightCoordinate, out Exception) Deserializes workflow markup into an FdoSpatialContextListSpatialContextExtentUpperRightCoordinate object Declaration public static bool Deserialize(string xml, out FdoSpatialContextListSpatialContextExtentUpperRightCoordinate obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize FdoSpatialContextListSpatialContextExtentUpperRightCoordinate obj Output FdoSpatialContextListSpatialContextExtentUpperRightCoordinate object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static FdoSpatialContextListSpatialContextExtentUpperRightCoordinate LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description FdoSpatialContextListSpatialContextExtentUpperRightCoordinate LoadFromFile(String, out FdoSpatialContextListSpatialContextExtentUpperRightCoordinate) Declaration public static bool LoadFromFile(string fileName, out FdoSpatialContextListSpatialContextExtentUpperRightCoordinate obj) Parameters Type Name Description System.String fileName FdoSpatialContextListSpatialContextExtentUpperRightCoordinate obj Returns Type Description System.Boolean LoadFromFile(String, out FdoSpatialContextListSpatialContextExtentUpperRightCoordinate, out Exception) Deserializes xml markup from file into an FdoSpatialContextListSpatialContextExtentUpperRightCoordinate object Declaration public static bool LoadFromFile(string fileName, out FdoSpatialContextListSpatialContextExtentUpperRightCoordinate obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize FdoSpatialContextListSpatialContextExtentUpperRightCoordinate obj Output FdoSpatialContextListSpatialContextExtentUpperRightCoordinate object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current FdoSpatialContextListSpatialContextExtentUpperRightCoordinate object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current FdoSpatialContextListSpatialContextExtentUpperRightCoordinate object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.FeatureProviderRegistry.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.FeatureProviderRegistry.html",
    "title": "Class FeatureProviderRegistry | MapGuide Maestro",
    "keywords": "Class FeatureProviderRegistry Root element that contains a collection of FeatureProvider elements. Inheritance System.Object FeatureProviderRegistry Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class FeatureProviderRegistry : ComponentModel.INotifyPropertyChanged Properties FeatureProvider Describes an installed feature provider. Declaration public BindingList<FeatureProviderRegistryFeatureProvider> FeatureProvider { get; set; } Property Value Type Description BindingList < FeatureProviderRegistryFeatureProvider > Methods Clone() Create a clone of this FeatureProviderRegistry object Declaration public virtual FeatureProviderRegistry Clone() Returns Type Description FeatureProviderRegistry Deserialize(String) Declaration public static FeatureProviderRegistry Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description FeatureProviderRegistry Deserialize(String, out FeatureProviderRegistry) Declaration public static bool Deserialize(string xml, out FeatureProviderRegistry obj) Parameters Type Name Description System.String xml FeatureProviderRegistry obj Returns Type Description System.Boolean Deserialize(String, out FeatureProviderRegistry, out Exception) Deserializes workflow markup into an FeatureProviderRegistry object Declaration public static bool Deserialize(string xml, out FeatureProviderRegistry obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize FeatureProviderRegistry obj Output FeatureProviderRegistry object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static FeatureProviderRegistry LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description FeatureProviderRegistry LoadFromFile(String, out FeatureProviderRegistry) Declaration public static bool LoadFromFile(string fileName, out FeatureProviderRegistry obj) Parameters Type Name Description System.String fileName FeatureProviderRegistry obj Returns Type Description System.Boolean LoadFromFile(String, out FeatureProviderRegistry, out Exception) Deserializes xml markup from file into an FeatureProviderRegistry object Declaration public static bool LoadFromFile(string fileName, out FeatureProviderRegistry obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize FeatureProviderRegistry obj Output FeatureProviderRegistry object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current FeatureProviderRegistry object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current FeatureProviderRegistry object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.FeatureProviderRegistryFeatureProvider.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.FeatureProviderRegistryFeatureProvider.html",
    "title": "Class FeatureProviderRegistryFeatureProvider | MapGuide Maestro",
    "keywords": "Class FeatureProviderRegistryFeatureProvider Describes an installed feature provider. Inheritance System.Object FeatureProviderRegistryFeatureProvider Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class FeatureProviderRegistryFeatureProvider : ComponentModel.INotifyPropertyChanged Properties ConnectionProperties Connection properties for each provider with default values will be listed here. Declaration public BindingList<FeatureProviderRegistryFeatureProviderConnectionProperty> ConnectionProperties { get; set; } Property Value Type Description BindingList < FeatureProviderRegistryFeatureProviderConnectionProperty > Description A brief description of the feature provider. Declaration public string Description { get; set; } Property Value Type Description System.String DisplayName A user friendly display name of the feature provider. Declaration public string DisplayName { get; set; } Property Value Type Description System.String FeatureDataObjectsVersion The version of the feature data objects specification the feature provider conforms to. The version number string has the form <VersionMajor>.<VersionMinor>.<BuildMajor>.<BuildMinor>. Declaration public string FeatureDataObjectsVersion { get; set; } Property Value Type Description System.String Name Unique name of the feature provider. This name should be of the form <Company>.<Provider>.<Version>. Declaration public string Name { get; set; } Property Value Type Description System.String Version The version of the feature provider. The version number string has the form <VersionMajor>.<VersionMinor>.<BuildMajor>.<BuildMinor>. Declaration public string Version { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this FeatureProviderRegistryFeatureProvider object Declaration public virtual FeatureProviderRegistryFeatureProvider Clone() Returns Type Description FeatureProviderRegistryFeatureProvider Deserialize(String) Declaration public static FeatureProviderRegistryFeatureProvider Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description FeatureProviderRegistryFeatureProvider Deserialize(String, out FeatureProviderRegistryFeatureProvider) Declaration public static bool Deserialize(string xml, out FeatureProviderRegistryFeatureProvider obj) Parameters Type Name Description System.String xml FeatureProviderRegistryFeatureProvider obj Returns Type Description System.Boolean Deserialize(String, out FeatureProviderRegistryFeatureProvider, out Exception) Deserializes workflow markup into an FeatureProviderRegistryFeatureProvider object Declaration public static bool Deserialize(string xml, out FeatureProviderRegistryFeatureProvider obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize FeatureProviderRegistryFeatureProvider obj Output FeatureProviderRegistryFeatureProvider object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static FeatureProviderRegistryFeatureProvider LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description FeatureProviderRegistryFeatureProvider LoadFromFile(String, out FeatureProviderRegistryFeatureProvider) Declaration public static bool LoadFromFile(string fileName, out FeatureProviderRegistryFeatureProvider obj) Parameters Type Name Description System.String fileName FeatureProviderRegistryFeatureProvider obj Returns Type Description System.Boolean LoadFromFile(String, out FeatureProviderRegistryFeatureProvider, out Exception) Deserializes xml markup from file into an FeatureProviderRegistryFeatureProvider object Declaration public static bool LoadFromFile(string fileName, out FeatureProviderRegistryFeatureProvider obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize FeatureProviderRegistryFeatureProvider obj Output FeatureProviderRegistryFeatureProvider object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current FeatureProviderRegistryFeatureProvider object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current FeatureProviderRegistryFeatureProvider object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.FeatureProviderRegistryFeatureProviderConnectionProperty.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.FeatureProviderRegistryFeatureProviderConnectionProperty.html",
    "title": "Class FeatureProviderRegistryFeatureProviderConnectionProperty | MapGuide Maestro",
    "keywords": "Class FeatureProviderRegistryFeatureProviderConnectionProperty Inheritance System.Object FeatureProviderRegistryFeatureProviderConnectionProperty Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class FeatureProviderRegistryFeatureProviderConnectionProperty : ComponentModel.INotifyPropertyChanged Properties DefaultValue Declaration public string DefaultValue { get; set; } Property Value Type Description System.String Enumerable Declaration public bool Enumerable { get; set; } Property Value Type Description System.Boolean LocalizedName Declaration public string LocalizedName { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; set; } Property Value Type Description System.String Protected Declaration public bool Protected { get; set; } Property Value Type Description System.Boolean Required Declaration public bool Required { get; set; } Property Value Type Description System.Boolean Value Declaration public BindingList<string> Value { get; set; } Property Value Type Description BindingList < System.String > Methods Clone() Create a clone of this FeatureProviderRegistryFeatureProviderConnectionProperty object Declaration public virtual FeatureProviderRegistryFeatureProviderConnectionProperty Clone() Returns Type Description FeatureProviderRegistryFeatureProviderConnectionProperty Deserialize(String) Declaration public static FeatureProviderRegistryFeatureProviderConnectionProperty Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description FeatureProviderRegistryFeatureProviderConnectionProperty Deserialize(String, out FeatureProviderRegistryFeatureProviderConnectionProperty) Declaration public static bool Deserialize(string xml, out FeatureProviderRegistryFeatureProviderConnectionProperty obj) Parameters Type Name Description System.String xml FeatureProviderRegistryFeatureProviderConnectionProperty obj Returns Type Description System.Boolean Deserialize(String, out FeatureProviderRegistryFeatureProviderConnectionProperty, out Exception) Deserializes workflow markup into an FeatureProviderRegistryFeatureProviderConnectionProperty object Declaration public static bool Deserialize(string xml, out FeatureProviderRegistryFeatureProviderConnectionProperty obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize FeatureProviderRegistryFeatureProviderConnectionProperty obj Output FeatureProviderRegistryFeatureProviderConnectionProperty object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static FeatureProviderRegistryFeatureProviderConnectionProperty LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description FeatureProviderRegistryFeatureProviderConnectionProperty LoadFromFile(String, out FeatureProviderRegistryFeatureProviderConnectionProperty) Declaration public static bool LoadFromFile(string fileName, out FeatureProviderRegistryFeatureProviderConnectionProperty obj) Parameters Type Name Description System.String fileName FeatureProviderRegistryFeatureProviderConnectionProperty obj Returns Type Description System.Boolean LoadFromFile(String, out FeatureProviderRegistryFeatureProviderConnectionProperty, out Exception) Deserializes xml markup from file into an FeatureProviderRegistryFeatureProviderConnectionProperty object Declaration public static bool LoadFromFile(string fileName, out FeatureProviderRegistryFeatureProviderConnectionProperty obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize FeatureProviderRegistryFeatureProviderConnectionProperty obj Output FeatureProviderRegistryFeatureProviderConnectionProperty object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current FeatureProviderRegistryFeatureProviderConnectionProperty object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current FeatureProviderRegistryFeatureProviderConnectionProperty object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.IPoint2D.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.IPoint2D.html",
    "title": "Interface IPoint2D | MapGuide Maestro",
    "keywords": "Interface IPoint2D Represents a point in 2 dimensional space Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax public interface IPoint2D Properties X Gets or sets the X coordinate Declaration double X { get; set; } Property Value Type Description System.Double Y Gets or sets the Y coordinate Declaration double Y { get; set; } Property Value Type Description System.Double"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.IPoint3D.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.IPoint3D.html",
    "title": "Interface IPoint3D | MapGuide Maestro",
    "keywords": "Interface IPoint3D Represents a point in 3 dimensional space Inherited Members IPoint2D.X IPoint2D.Y Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax public interface IPoint3D : IPoint2D Properties Z Gets or sets the Z coordinate Declaration double Z { get; set; } Property Value Type Description System.Double"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.IRepositoryItem.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.IRepositoryItem.html",
    "title": "Interface IRepositoryItem | MapGuide Maestro",
    "keywords": "Interface IRepositoryItem Represents an item in the repository Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax public interface IRepositoryItem Properties CreatedDate Gets the created date. Declaration DateTime CreatedDate { get; } Property Value Type Description DateTime The created date. HasChildren Gets a value indicating whether this instance has children. Declaration bool HasChildren { get; } Property Value Type Description System.Boolean true if this instance has children; otherwise, false . IsFolder Gets a value indicating whether this instance is folder. Declaration bool IsFolder { get; } Property Value Type Description System.Boolean true if this instance is folder; otherwise, false . ModifiedDate Gets the modified date. Declaration DateTime ModifiedDate { get; } Property Value Type Description DateTime The modified date. Name Gets the name. Declaration string Name { get; } Property Value Type Description System.String The name. Owner Gets the owner. Declaration string Owner { get; } Property Value Type Description System.String The owner. ResourceId Gets the resource id. Declaration string ResourceId { get; } Property Value Type Description System.String The resource id. ResourceType Gets the type of the resource. Declaration string ResourceType { get; } Property Value Type Description System.String The type of the resource."
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.IResourceIdReference.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.IResourceIdReference.html",
    "title": "Interface IResourceIdReference | MapGuide Maestro",
    "keywords": "Interface IResourceIdReference Represents a resource id reference Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax public interface IResourceIdReference : INotifyPropertyChanged Properties ResourceId Gets or sets the resource id. Declaration string ResourceId { get; set; } Property Value Type Description System.String The resource id."
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourcePackageManifest.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourcePackageManifest.html",
    "title": "Class ResourcePackageManifest | MapGuide Maestro",
    "keywords": "Class ResourcePackageManifest Resource Package manifest Inheritance System.Object ResourcePackageManifest Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourcePackageManifest : ComponentModel.INotifyPropertyChanged Properties Description Optional description of the resource package Declaration public string Description { get; set; } Property Value Type Description System.String Operations List of operations Declaration public ResourcePackageManifestOperations Operations { get; set; } Property Value Type Description ResourcePackageManifestOperations Methods Clone() Create a clone of this ResourcePackageManifest object Declaration public virtual ResourcePackageManifest Clone() Returns Type Description ResourcePackageManifest Deserialize(String) Declaration public static ResourcePackageManifest Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourcePackageManifest Deserialize(String, out ResourcePackageManifest) Declaration public static bool Deserialize(string xml, out ResourcePackageManifest obj) Parameters Type Name Description System.String xml ResourcePackageManifest obj Returns Type Description System.Boolean Deserialize(String, out ResourcePackageManifest, out Exception) Deserializes workflow markup into an ResourcePackageManifest object Declaration public static bool Deserialize(string xml, out ResourcePackageManifest obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourcePackageManifest obj Output ResourcePackageManifest object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourcePackageManifest LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourcePackageManifest LoadFromFile(String, out ResourcePackageManifest) Declaration public static bool LoadFromFile(string fileName, out ResourcePackageManifest obj) Parameters Type Name Description System.String fileName ResourcePackageManifest obj Returns Type Description System.Boolean LoadFromFile(String, out ResourcePackageManifest, out Exception) Deserializes xml markup from file into an ResourcePackageManifest object Declaration public static bool LoadFromFile(string fileName, out ResourcePackageManifest obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourcePackageManifest obj Output ResourcePackageManifest object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourcePackageManifest object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourcePackageManifest object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourcePackageManifestOperations.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourcePackageManifestOperations.html",
    "title": "Class ResourcePackageManifestOperations | MapGuide Maestro",
    "keywords": "Class ResourcePackageManifestOperations List of operations Inheritance System.Object ResourcePackageManifestOperations Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourcePackageManifestOperations : ComponentModel.INotifyPropertyChanged Properties Operation Declaration public BindingList<ResourcePackageManifestOperationsOperation> Operation { get; set; } Property Value Type Description BindingList < ResourcePackageManifestOperationsOperation > Methods Clone() Create a clone of this ResourcePackageManifestOperations object Declaration public virtual ResourcePackageManifestOperations Clone() Returns Type Description ResourcePackageManifestOperations Deserialize(String) Declaration public static ResourcePackageManifestOperations Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourcePackageManifestOperations Deserialize(String, out ResourcePackageManifestOperations) Declaration public static bool Deserialize(string xml, out ResourcePackageManifestOperations obj) Parameters Type Name Description System.String xml ResourcePackageManifestOperations obj Returns Type Description System.Boolean Deserialize(String, out ResourcePackageManifestOperations, out Exception) Deserializes workflow markup into an ResourcePackageManifestOperations object Declaration public static bool Deserialize(string xml, out ResourcePackageManifestOperations obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourcePackageManifestOperations obj Output ResourcePackageManifestOperations object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourcePackageManifestOperations LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourcePackageManifestOperations LoadFromFile(String, out ResourcePackageManifestOperations) Declaration public static bool LoadFromFile(string fileName, out ResourcePackageManifestOperations obj) Parameters Type Name Description System.String fileName ResourcePackageManifestOperations obj Returns Type Description System.Boolean LoadFromFile(String, out ResourcePackageManifestOperations, out Exception) Deserializes xml markup from file into an ResourcePackageManifestOperations object Declaration public static bool LoadFromFile(string fileName, out ResourcePackageManifestOperations obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourcePackageManifestOperations obj Output ResourcePackageManifestOperations object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourcePackageManifestOperations object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourcePackageManifestOperations object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourcePackageManifestOperationsOperation.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourcePackageManifestOperationsOperation.html",
    "title": "Class ResourcePackageManifestOperationsOperation | MapGuide Maestro",
    "keywords": "Class ResourcePackageManifestOperationsOperation Inheritance System.Object ResourcePackageManifestOperationsOperation Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourcePackageManifestOperationsOperation : ComponentModel.INotifyPropertyChanged Properties Name Name of the operation Declaration public string Name { get; set; } Property Value Type Description System.String Parameters List of operarion parameters Declaration public ResourcePackageManifestOperationsOperationParameters Parameters { get; set; } Property Value Type Description ResourcePackageManifestOperationsOperationParameters Version Version of the operation Declaration public string Version { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this ResourcePackageManifestOperationsOperation object Declaration public virtual ResourcePackageManifestOperationsOperation Clone() Returns Type Description ResourcePackageManifestOperationsOperation Deserialize(String) Declaration public static ResourcePackageManifestOperationsOperation Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourcePackageManifestOperationsOperation Deserialize(String, out ResourcePackageManifestOperationsOperation) Declaration public static bool Deserialize(string xml, out ResourcePackageManifestOperationsOperation obj) Parameters Type Name Description System.String xml ResourcePackageManifestOperationsOperation obj Returns Type Description System.Boolean Deserialize(String, out ResourcePackageManifestOperationsOperation, out Exception) Deserializes workflow markup into an ResourcePackageManifestOperationsOperation object Declaration public static bool Deserialize(string xml, out ResourcePackageManifestOperationsOperation obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourcePackageManifestOperationsOperation obj Output ResourcePackageManifestOperationsOperation object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourcePackageManifestOperationsOperation LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourcePackageManifestOperationsOperation LoadFromFile(String, out ResourcePackageManifestOperationsOperation) Declaration public static bool LoadFromFile(string fileName, out ResourcePackageManifestOperationsOperation obj) Parameters Type Name Description System.String fileName ResourcePackageManifestOperationsOperation obj Returns Type Description System.Boolean LoadFromFile(String, out ResourcePackageManifestOperationsOperation, out Exception) Deserializes xml markup from file into an ResourcePackageManifestOperationsOperation object Declaration public static bool LoadFromFile(string fileName, out ResourcePackageManifestOperationsOperation obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourcePackageManifestOperationsOperation obj Output ResourcePackageManifestOperationsOperation object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourcePackageManifestOperationsOperation object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourcePackageManifestOperationsOperation object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourcePackageManifestOperationsOperationParameters.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourcePackageManifestOperationsOperationParameters.html",
    "title": "Class ResourcePackageManifestOperationsOperationParameters | MapGuide Maestro",
    "keywords": "Class ResourcePackageManifestOperationsOperationParameters List of operarion parameters Inheritance System.Object ResourcePackageManifestOperationsOperationParameters Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourcePackageManifestOperationsOperationParameters : ComponentModel.INotifyPropertyChanged Properties Parameter operation parameter Declaration public BindingList<ResourcePackageManifestOperationsOperationParametersParameter> Parameter { get; set; } Property Value Type Description BindingList < ResourcePackageManifestOperationsOperationParametersParameter > Methods Clone() Create a clone of this ResourcePackageManifestOperationsOperationParameters object Declaration public virtual ResourcePackageManifestOperationsOperationParameters Clone() Returns Type Description ResourcePackageManifestOperationsOperationParameters Deserialize(String) Declaration public static ResourcePackageManifestOperationsOperationParameters Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourcePackageManifestOperationsOperationParameters Deserialize(String, out ResourcePackageManifestOperationsOperationParameters) Declaration public static bool Deserialize(string xml, out ResourcePackageManifestOperationsOperationParameters obj) Parameters Type Name Description System.String xml ResourcePackageManifestOperationsOperationParameters obj Returns Type Description System.Boolean Deserialize(String, out ResourcePackageManifestOperationsOperationParameters, out Exception) Deserializes workflow markup into an ResourcePackageManifestOperationsOperationParameters object Declaration public static bool Deserialize(string xml, out ResourcePackageManifestOperationsOperationParameters obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourcePackageManifestOperationsOperationParameters obj Output ResourcePackageManifestOperationsOperationParameters object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false GetParameterValue(String) Gets the value of the specified parameter Declaration public string GetParameterValue(string name) Parameters Type Name Description System.String name Returns Type Description System.String LoadFromFile(String) Declaration public static ResourcePackageManifestOperationsOperationParameters LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourcePackageManifestOperationsOperationParameters LoadFromFile(String, out ResourcePackageManifestOperationsOperationParameters) Declaration public static bool LoadFromFile(string fileName, out ResourcePackageManifestOperationsOperationParameters obj) Parameters Type Name Description System.String fileName ResourcePackageManifestOperationsOperationParameters obj Returns Type Description System.Boolean LoadFromFile(String, out ResourcePackageManifestOperationsOperationParameters, out Exception) Deserializes xml markup from file into an ResourcePackageManifestOperationsOperationParameters object Declaration public static bool LoadFromFile(string fileName, out ResourcePackageManifestOperationsOperationParameters obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourcePackageManifestOperationsOperationParameters obj Output ResourcePackageManifestOperationsOperationParameters object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourcePackageManifestOperationsOperationParameters object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourcePackageManifestOperationsOperationParameters object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value SetParameterValue(String, String) Sets the value of the specified parameter Declaration public void SetParameterValue(string name, string value) Parameters Type Name Description System.String name System.String value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.SiteInformationSiteServer.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.SiteInformationSiteServer.html",
    "title": "Class SiteInformationSiteServer | MapGuide Maestro",
    "keywords": "Class SiteInformationSiteServer Inheritance System.Object SiteInformationSiteServer Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class SiteInformationSiteServer : ComponentModel.INotifyPropertyChanged Properties DisplayName Declaration public string DisplayName { get; set; } Property Value Type Description System.String OperatingSystem Declaration public SiteInformationSiteServerOperatingSystem OperatingSystem { get; set; } Property Value Type Description SiteInformationSiteServerOperatingSystem Status Declaration public string Status { get; set; } Property Value Type Description System.String Version Declaration public string Version { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this SiteInformationSiteServer object Declaration public virtual SiteInformationSiteServer Clone() Returns Type Description SiteInformationSiteServer Deserialize(String) Declaration public static SiteInformationSiteServer Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description SiteInformationSiteServer Deserialize(String, out SiteInformationSiteServer) Declaration public static bool Deserialize(string xml, out SiteInformationSiteServer obj) Parameters Type Name Description System.String xml SiteInformationSiteServer obj Returns Type Description System.Boolean Deserialize(String, out SiteInformationSiteServer, out Exception) Deserializes workflow markup into an SiteInformationSiteServer object Declaration public static bool Deserialize(string xml, out SiteInformationSiteServer obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize SiteInformationSiteServer obj Output SiteInformationSiteServer object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static SiteInformationSiteServer LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description SiteInformationSiteServer LoadFromFile(String, out SiteInformationSiteServer) Declaration public static bool LoadFromFile(string fileName, out SiteInformationSiteServer obj) Parameters Type Name Description System.String fileName SiteInformationSiteServer obj Returns Type Description System.Boolean LoadFromFile(String, out SiteInformationSiteServer, out Exception) Deserializes xml markup from file into an SiteInformationSiteServer object Declaration public static bool LoadFromFile(string fileName, out SiteInformationSiteServer obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize SiteInformationSiteServer obj Output SiteInformationSiteServer object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current SiteInformationSiteServer object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current SiteInformationSiteServer object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.SiteInformationSiteServerOperatingSystem.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.SiteInformationSiteServerOperatingSystem.html",
    "title": "Class SiteInformationSiteServerOperatingSystem | MapGuide Maestro",
    "keywords": "Class SiteInformationSiteServerOperatingSystem Inheritance System.Object SiteInformationSiteServerOperatingSystem Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class SiteInformationSiteServerOperatingSystem : ComponentModel.INotifyPropertyChanged Properties AvailablePhysicalMemory Declaration public string AvailablePhysicalMemory { get; set; } Property Value Type Description System.String AvailableVirtualMemory Declaration public string AvailableVirtualMemory { get; set; } Property Value Type Description System.String TotalPhysicalMemory Declaration public string TotalPhysicalMemory { get; set; } Property Value Type Description System.String TotalVirtualMemory Declaration public string TotalVirtualMemory { get; set; } Property Value Type Description System.String Version Declaration public string Version { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this SiteInformationSiteServerOperatingSystem object Declaration public virtual SiteInformationSiteServerOperatingSystem Clone() Returns Type Description SiteInformationSiteServerOperatingSystem Deserialize(String) Declaration public static SiteInformationSiteServerOperatingSystem Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description SiteInformationSiteServerOperatingSystem Deserialize(String, out SiteInformationSiteServerOperatingSystem) Declaration public static bool Deserialize(string xml, out SiteInformationSiteServerOperatingSystem obj) Parameters Type Name Description System.String xml SiteInformationSiteServerOperatingSystem obj Returns Type Description System.Boolean Deserialize(String, out SiteInformationSiteServerOperatingSystem, out Exception) Deserializes workflow markup into an SiteInformationSiteServerOperatingSystem object Declaration public static bool Deserialize(string xml, out SiteInformationSiteServerOperatingSystem obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize SiteInformationSiteServerOperatingSystem obj Output SiteInformationSiteServerOperatingSystem object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static SiteInformationSiteServerOperatingSystem LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description SiteInformationSiteServerOperatingSystem LoadFromFile(String, out SiteInformationSiteServerOperatingSystem) Declaration public static bool LoadFromFile(string fileName, out SiteInformationSiteServerOperatingSystem obj) Parameters Type Name Description System.String fileName SiteInformationSiteServerOperatingSystem obj Returns Type Description System.Boolean LoadFromFile(String, out SiteInformationSiteServerOperatingSystem, out Exception) Deserializes xml markup from file into an SiteInformationSiteServerOperatingSystem object Declaration public static bool LoadFromFile(string fileName, out SiteInformationSiteServerOperatingSystem obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize SiteInformationSiteServerOperatingSystem obj Output SiteInformationSiteServerOperatingSystem object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current SiteInformationSiteServerOperatingSystem object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current SiteInformationSiteServerOperatingSystem object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.SiteInformationStatistics.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.SiteInformationStatistics.html",
    "title": "Class SiteInformationStatistics | MapGuide Maestro",
    "keywords": "Class SiteInformationStatistics Inheritance System.Object SiteInformationStatistics Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class SiteInformationStatistics : ComponentModel.INotifyPropertyChanged Properties ActiveConnections Declaration public string ActiveConnections { get; set; } Property Value Type Description System.String AdminOperationsQueueCount Declaration public string AdminOperationsQueueCount { get; set; } Property Value Type Description System.String AverageOperationTime Declaration public string AverageOperationTime { get; set; } Property Value Type Description System.String ClientOperationsQueueCount Declaration public string ClientOperationsQueueCount { get; set; } Property Value Type Description System.String CpuUtilization Declaration public string CpuUtilization { get; set; } Property Value Type Description System.String SiteOperationsQueueCount Declaration public string SiteOperationsQueueCount { get; set; } Property Value Type Description System.String TotalConnections Declaration public string TotalConnections { get; set; } Property Value Type Description System.String TotalOperationsProcessed Declaration public string TotalOperationsProcessed { get; set; } Property Value Type Description System.String TotalOperationsReceived Declaration public string TotalOperationsReceived { get; set; } Property Value Type Description System.String TotalOperationTime Declaration public string TotalOperationTime { get; set; } Property Value Type Description System.String Uptime Declaration public string Uptime { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this SiteInformationStatistics object Declaration public virtual SiteInformationStatistics Clone() Returns Type Description SiteInformationStatistics Deserialize(String) Declaration public static SiteInformationStatistics Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description SiteInformationStatistics Deserialize(String, out SiteInformationStatistics) Declaration public static bool Deserialize(string xml, out SiteInformationStatistics obj) Parameters Type Name Description System.String xml SiteInformationStatistics obj Returns Type Description System.Boolean Deserialize(String, out SiteInformationStatistics, out Exception) Deserializes workflow markup into an SiteInformationStatistics object Declaration public static bool Deserialize(string xml, out SiteInformationStatistics obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize SiteInformationStatistics obj Output SiteInformationStatistics object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static SiteInformationStatistics LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description SiteInformationStatistics LoadFromFile(String, out SiteInformationStatistics) Declaration public static bool LoadFromFile(string fileName, out SiteInformationStatistics obj) Parameters Type Name Description System.String fileName SiteInformationStatistics obj Returns Type Description System.Boolean LoadFromFile(String, out SiteInformationStatistics, out Exception) Deserializes xml markup from file into an SiteInformationStatistics object Declaration public static bool LoadFromFile(string fileName, out SiteInformationStatistics obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize SiteInformationStatistics obj Output SiteInformationStatistics object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current SiteInformationStatistics object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current SiteInformationStatistics object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.SiteVersion.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.SiteVersion.html",
    "title": "Class SiteVersion | MapGuide Maestro",
    "keywords": "Class SiteVersion Site Version Inheritance System.Object SiteVersion Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class SiteVersion : ComponentModel.INotifyPropertyChanged Properties Version Declaration public string Version { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this SiteVersion object Declaration public virtual SiteVersion Clone() Returns Type Description SiteVersion Deserialize(String) Declaration public static SiteVersion Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description SiteVersion Deserialize(String, out SiteVersion) Declaration public static bool Deserialize(string xml, out SiteVersion obj) Parameters Type Name Description System.String xml SiteVersion obj Returns Type Description System.Boolean Deserialize(String, out SiteVersion, out Exception) Deserializes workflow markup into an SiteVersion object Declaration public static bool Deserialize(string xml, out SiteVersion obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize SiteVersion obj Output SiteVersion object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static SiteVersion LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description SiteVersion LoadFromFile(String, out SiteVersion) Declaration public static bool LoadFromFile(string fileName, out SiteVersion obj) Parameters Type Name Description System.String fileName SiteVersion obj Returns Type Description System.Boolean LoadFromFile(String, out SiteVersion, out Exception) Deserializes xml markup from file into an SiteVersion object Declaration public static bool LoadFromFile(string fileName, out SiteVersion obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize SiteVersion obj Output SiteVersion object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current SiteVersion object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current SiteVersion object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IRuleCollection.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IRuleCollection.html",
    "title": "Interface IRuleCollection | MapGuide Maestro",
    "keywords": "Interface IRuleCollection Defines a collection of style rules Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IRuleCollection Methods GetRuleAt(Int32) Gets the rule at the specified index Declaration IVectorRule GetRuleAt(int index) Parameters Type Name Description System.Int32 index Returns Type Description IVectorRule IndexOfRule(IVectorRule) Gets the index of the specified rule Declaration int IndexOfRule(IVectorRule rule) Parameters Type Name Description IVectorRule rule The rule. Returns Type Description System.Int32 MoveDown(IVectorRule) Moves the specified rule down the list Declaration bool MoveDown(IVectorRule rule) Parameters Type Name Description IVectorRule rule The rule. Returns Type Description System.Boolean MoveUp(IVectorRule) Moves the specified rule up the list Declaration bool MoveUp(IVectorRule rule) Parameters Type Name Description IVectorRule rule The rule. Returns Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IStroke.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IStroke.html",
    "title": "Interface IStroke | MapGuide Maestro",
    "keywords": "Interface IStroke Encapsulates the stylization of a line Inherited Members ICloneableLayerElement<IStroke>.Clone() Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IStroke : ICloneableLayerElement<IStroke> Properties Color Gets or sets the color Declaration string Color { get; set; } Property Value Type Description System.String LineStyle Gets or sets the line style Declaration string LineStyle { get; set; } Property Value Type Description System.String Thickness Gets or sets the thickness Declaration string Thickness { get; set; } Property Value Type Description System.String Unit Gets or sets the thickness unit Declaration LengthUnitType Unit { get; set; } Property Value Type Description LengthUnitType"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IStroke2.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IStroke2.html",
    "title": "Interface IStroke2 | MapGuide Maestro",
    "keywords": "Interface IStroke2 Encapsulates the stylization of a line. Supported in Layer Definition schema 1.1.0 and newer Inherited Members IStroke.LineStyle IStroke.Thickness IStroke.Color IStroke.Unit ICloneableLayerElement<IStroke>.Clone() Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IStroke2 : IStroke, ICloneableLayerElement<IStroke>, ICloneableLayerElement<IStroke2> Properties SizeContext Gets or sets the size context of the thickness units Declaration SizeContextType SizeContext { get; set; } Property Value Type Description SizeContextType"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ISubLayerDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ISubLayerDefinition.html",
    "title": "Interface ISubLayerDefinition | MapGuide Maestro",
    "keywords": "Interface ISubLayerDefinition Represents the base of all layer definitions Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface ISubLayerDefinition : INotifyPropertyChanged Properties LayerType Gets the type of layer definition Declaration LayerType LayerType { get; } Property Value Type Description LayerType ResourceId Gets or sets the resource id which is the data source for this layer Declaration string ResourceId { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ISubLayerDefinition2.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ISubLayerDefinition2.html",
    "title": "Interface ISubLayerDefinition2 | MapGuide Maestro",
    "keywords": "Interface ISubLayerDefinition2 Represents the base of all layer definitions. Based on Layer Definition schema version 2.3.0 Inherited Members ISubLayerDefinition.LayerType ISubLayerDefinition.ResourceId Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface ISubLayerDefinition2 : ISubLayerDefinition, INotifyPropertyChanged, IWatermarkCollection"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ISymbol.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ISymbol.html",
    "title": "Interface ISymbol | MapGuide Maestro",
    "keywords": "Interface ISymbol Defines common properties for all symbols Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface ISymbol Properties InsertionPointX Gets or sets the X offset for the symbol specified in symbol space. This is a double FDO expression. Does not apply to labels. Declaration string InsertionPointX { get; set; } Property Value Type Description System.String InsertionPointY Gets or sets the Y offset for the symbol specified in symbol space. This is a double FDO expression. Does not apply to labels. Declaration string InsertionPointY { get; set; } Property Value Type Description System.String MaintainAspect Hint for the UI only. When the user enters a constant size for the width or height, the other dimension should be adjusted accordingly. Does not apply to font symbols or labels. Declaration bool MaintainAspect { get; set; } Property Value Type Description System.Boolean Rotation Gets or sets the amount to rotate the symbol in degrees. This is a double FDO expression. Does not apply to line labels Declaration string Rotation { get; set; } Property Value Type Description System.String SizeContext Gets or sets whether the sizes are with respect to the earth or the user's display device Declaration SizeContextType SizeContext { get; set; } Property Value Type Description SizeContextType SizeX Gets or sets the width of the symbol. This is a double FDO expression. Does not apply to font symbols Declaration string SizeX { get; set; } Property Value Type Description System.String SizeY Gets or sets the height of the symbol. This is a double FDO expression. Declaration string SizeY { get; set; } Property Value Type Description System.String Type Gets the type of symbol Declaration PointSymbolType Type { get; } Property Value Type Description PointSymbolType Unit Gets or sets the units that the sizes are specified in Declaration LengthUnitType Unit { get; set; } Property Value Type Description LengthUnitType"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ISymbolInstance2.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ISymbolInstance2.html",
    "title": "Interface ISymbolInstance2 | MapGuide Maestro",
    "keywords": "Interface ISymbolInstance2 Version 2 of symbol instance that supports rendering passes and specific contexts. Applies to v1.2.0 of the Layer Definition schema Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface ISymbolInstance2 : ISymbolInstance Properties GeometryContext Gets or sets the geometry context. Declaration GeometryContextType GeometryContext { get; set; } Property Value Type Description GeometryContextType The geometry context. RenderingPass Gets or sets the rendering pass. Declaration string RenderingPass { get; set; } Property Value Type Description System.String The rendering pass. UsageContext Gets or sets the usage context. Declaration UsageContextType UsageContext { get; set; } Property Value Type Description UsageContextType The usage context."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ISymbolReference.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ISymbolReference.html",
    "title": "Interface ISymbolReference | MapGuide Maestro",
    "keywords": "Interface ISymbolReference Represents a reference to a symbol library item image Inherited Members IBaseImageSymbol.Type ICloneableLayerElement<ISymbolReference>.Clone() Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface ISymbolReference : IBaseImageSymbol, ICloneableLayerElement<ISymbolReference> Properties LibraryItemName Gets or sets the name of the library item. Declaration string LibraryItemName { get; set; } Property Value Type Description System.String The name of the library item. ResourceId Gets or sets the resource id. Declaration string ResourceId { get; set; } Property Value Type Description System.String The resource id."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ItemChoiceType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ItemChoiceType.html",
    "title": "Enum ItemChoiceType | MapGuide Maestro",
    "keywords": "Enum ItemChoiceType The type of explicit color Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public enum ItemChoiceType Fields Name Description Band Bands ExplicitColor"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ITextSymbol.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ITextSymbol.html",
    "title": "Interface ITextSymbol | MapGuide Maestro",
    "keywords": "Interface ITextSymbol Represents a text symbol Inherited Members ISymbol.Type ISymbol.Unit ISymbol.SizeContext ISymbol.SizeX ISymbol.SizeY ISymbol.Rotation ISymbol.MaintainAspect ISymbol.InsertionPointX ISymbol.InsertionPointY ICloneableLayerElement<ITextSymbol>.Clone() Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface ITextSymbol : ISymbol, ICloneableLayerElement<ITextSymbol> Properties AdvancedPlacement Gets or sets the advanced placement settings Declaration IAdvancedPlacement AdvancedPlacement { get; set; } Property Value Type Description IAdvancedPlacement BackgroundColor Gets or sets the background color Declaration string BackgroundColor { get; set; } Property Value Type Description System.String BackgroundStyle Gets or sets the background style Declaration BackgroundStyleType BackgroundStyle { get; set; } Property Value Type Description BackgroundStyleType Bold Gets or sets whether to bold the text Declaration string Bold { get; set; } Property Value Type Description System.String FontName Gets or sets the name of the font Declaration string FontName { get; set; } Property Value Type Description System.String ForegroundColor Gets or sets the foreground color Declaration string ForegroundColor { get; set; } Property Value Type Description System.String HorizontalAlignment Gets or sets the horizontal alignment Declaration string HorizontalAlignment { get; set; } Property Value Type Description System.String Italic Gets or sets whether to italicize the text Declaration string Italic { get; set; } Property Value Type Description System.String Text Gets or sets the textual content Declaration string Text { get; set; } Property Value Type Description System.String Underlined Gets or sets whether to underline the text Declaration string Underlined { get; set; } Property Value Type Description System.String VerticalAlignment Gets or sets the vertical alignment Declaration string VerticalAlignment { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IBaseMapLayer.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IBaseMapLayer.html",
    "title": "Interface IBaseMapLayer | MapGuide Maestro",
    "keywords": "Interface IBaseMapLayer Base layer interface Inherited Members IMapLegendElementBase.Name IMapLegendElementBase.ShowInLegend IMapLegendElementBase.LegendLabel IMapLegendElementBase.ExpandInLegend Namespace : OSGeo.MapGuide.ObjectModels.MapDefinition Assembly : cs.temp.dll.dll Syntax public interface IBaseMapLayer : IMapLegendElementBase, INotifyPropertyChanged Properties ResourceId Gets or sets the resource id. Declaration string ResourceId { get; set; } Property Value Type Description System.String The resource id. Selectable Gets or sets a value indicating whether this IBaseMapLayer is selectable. Declaration bool Selectable { get; set; } Property Value Type Description System.Boolean true if selectable; otherwise, false ."
  },
  "api/OSGeo.MapGuide.ObjectModels.MapDefinition.ILayerExtentCalculator.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.MapDefinition.ILayerExtentCalculator.html",
    "title": "Interface ILayerExtentCalculator | MapGuide Maestro",
    "keywords": "Interface ILayerExtentCalculator Computes the extent for a given layer definition Namespace : OSGeo.MapGuide.ObjectModels.MapDefinition Assembly : cs.temp.dll.dll Syntax public interface ILayerExtentCalculator Methods GetLayerExtent(String, String) Gets the extent of the given layer definition Declaration LayerExtent GetLayerExtent(string resourceID, string mapCoordSys) Parameters Type Name Description System.String resourceID System.String mapCoordSys Returns Type Description LayerExtent"
  },
  "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IMapDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IMapDefinition.html",
    "title": "Interface IMapDefinition | MapGuide Maestro",
    "keywords": "Interface IMapDefinition Represents a Map Definition Inherited Members IResource.ValidatingSchema IResource.ResourceID IResource.ResourceType IResource.Serialize() IResource.IsStronglyTyped IVersionedEntity.ResourceVersion IMapDefinitionBase.BackgroundColor Namespace : OSGeo.MapGuide.ObjectModels.MapDefinition Assembly : cs.temp.dll.dll Syntax public interface IMapDefinition : IResource, IVersionedEntity, ICloneable, IMapDefinitionBase, INotifyPropertyChanged Properties BaseMap Returns the base map section of this map definition. Ensure InitBaseMap() is called first before accessing this property Declaration IBaseMapDefinition BaseMap { get; } Property Value Type Description IBaseMapDefinition CoordinateSystem Gets or sets the coordinate system. Layers whose coordinate system does not match will be re-projected to this coordinate system when rendering Declaration string CoordinateSystem { get; set; } Property Value Type Description System.String The coordinate system. ExtentCalculator Gets or sets a layer extent calculator Declaration ILayerExtentCalculator ExtentCalculator { get; set; } Property Value Type Description ILayerExtentCalculator Extents Gets or sets the extents. Declaration IEnvelope Extents { get; set; } Property Value Type Description IEnvelope The extents. MapLayer Gets the map layers. Declaration IEnumerable<IMapLayer> MapLayer { get; } Property Value Type Description IEnumerable < IMapLayer > The map layers. MapLayerGroup Gets the map layer groups. Declaration IEnumerable<IMapLayerGroup> MapLayerGroup { get; } Property Value Type Description IEnumerable < IMapLayerGroup > The map layer groups. Metadata Gets or sets the metadata. Declaration string Metadata { get; set; } Property Value Type Description System.String The metadata. Name Gets or sets the name. Declaration string Name { get; set; } Property Value Type Description System.String The name. Methods AddGroup(String) Adds the group. The group will be added to the end of the list Declaration IMapLayerGroup AddGroup(string groupName) Parameters Type Name Description System.String groupName Name of the group. Returns Type Description IMapLayerGroup AddLayer(IMapLayer, String, String, String) Adds a layer to this map. If this is the first layer to be added, the coordinate system of this map and its extents will be set to the coordinate system and extents of this layer if this has not been set already. Declaration IMapLayer AddLayer(IMapLayer layerToInsertAbove, string groupName, string layerName, string resourceId) Parameters Type Name Description IMapLayer layerToInsertAbove The layer to insert above in the draw order System.String groupName The name of the group this layer belongs to. If null or empty, this layer will not belong to any group System.String layerName The name of this layer. This must be unique System.String resourceId The layer definition id Returns Type Description IMapLayer The added layer AddLayer(String, String, String) Adds a layer to this map. If this is the first layer to be added, the coordinate system of this map and its extents will be set to the coordinate system and extents of this layer if this has not been set already. Declaration IMapLayer AddLayer(string groupName, string layerName, string resourceId) Parameters Type Name Description System.String groupName System.String layerName System.String resourceId Returns Type Description IMapLayer Remarks The layer is added to the beginning of the list. That is, if you called GetIndex(IMapLayer) on your newly added layer, it will return 0. From a display perspective, your newly added layer will be at the top of the map's draw order when you create a runtime map from this map definition AttachBaseMap(IBaseMapDefinition) Attaches the given base map section to this map definition. If an existing base map section exists, it is replaced Declaration void AttachBaseMap(IBaseMapDefinition baseMap) Parameters Type Name Description IBaseMapDefinition baseMap GetIndex(IMapLayer) Gets the index of the specified layer Declaration int GetIndex(IMapLayer layer) Parameters Type Name Description IMapLayer layer The layer. Returns Type Description System.Int32 GetIndex(IMapLayerGroup) Gets the index of the specified group Declaration int GetIndex(IMapLayerGroup group) Parameters Type Name Description IMapLayerGroup group Returns Type Description System.Int32 InitBaseMap() Initializes the base map section of this map definition. Subsequent calls do nothing, unless you have cleared the section via RemoveBaseMap() Declaration void InitBaseMap() InsertLayer(Int32, IMapLayer) Inserts the layer at the specified index Declaration void InsertLayer(int idx, IMapLayer layer) Parameters Type Name Description System.Int32 idx IMapLayer layer InsertLayer(Int32, String, String, String) Inserts a layer into this map at the specified index in the map's layer collection Declaration IMapLayer InsertLayer(int index, string groupName, string layerName, string layerDefinitionId) Parameters Type Name Description System.Int32 index System.String groupName System.String layerName System.String layerDefinitionId Returns Type Description IMapLayer MoveDown(IMapLayer) Moves the layer down the draw order. Declaration int MoveDown(IMapLayer layer) Parameters Type Name Description IMapLayer layer The layer. Returns Type Description System.Int32 The new index of the moved layer. -1 is returned if the layer does not belong to the map MoveDownGroup(IMapLayerGroup) Moves a Map Group down the presentation order Declaration int MoveDownGroup(IMapLayerGroup group) Parameters Type Name Description IMapLayerGroup group Returns Type Description System.Int32 The new index of the moved group. -1 is returned if the group does not belong to the map MoveUp(IMapLayer) Moves the layer up the draw order Declaration int MoveUp(IMapLayer layer) Parameters Type Name Description IMapLayer layer The layer. Returns Type Description System.Int32 The new index of the moved layer. -1 is returned if the layer does not belong to the map MoveUpGroup(IMapLayerGroup) Moves a Map Group up the presentation order Declaration int MoveUpGroup(IMapLayerGroup group) Parameters Type Name Description IMapLayerGroup group Returns Type Description System.Int32 The new index of the moved group. -1 is returned if the group does not belong to the map RemoveAllGroups() Removes all dynamic groups from this Map Definition Declaration void RemoveAllGroups() RemoveAllLayers() Removes all dynamic layers from this Map Definition Declaration void RemoveAllLayers() RemoveBaseMap() Clears the base map section of this map definition. If you want to rebuild this section, ensure InitBaseMap() is called Declaration void RemoveBaseMap() RemoveGroup(IMapLayerGroup) Removes the group Declaration void RemoveGroup(IMapLayerGroup group) Parameters Type Name Description IMapLayerGroup group RemoveLayer(IMapLayer) Removes the layer. Declaration void RemoveLayer(IMapLayer layer) Parameters Type Name Description IMapLayer layer The layer. SetBottomDrawOrder(IMapLayer) Moves the specified layer to the bottom of the draw order Declaration void SetBottomDrawOrder(IMapLayer layer) Parameters Type Name Description IMapLayer layer SetExtents(Double, Double, Double, Double) Sets the extents. Declaration void SetExtents(double minx, double miny, double maxx, double maxy) Parameters Type Name Description System.Double minx The minx. System.Double miny The miny. System.Double maxx The maxx. System.Double maxy The maxy. SetTopDrawOrder(IMapLayer) Moves the specified layer to the top of the draw order Declaration void SetTopDrawOrder(IMapLayer layer) Parameters Type Name Description IMapLayer layer"
  },
  "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IMapDefinition2.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IMapDefinition2.html",
    "title": "Interface IMapDefinition2 | MapGuide Maestro",
    "keywords": "Interface IMapDefinition2 Represents a Map Definition with support for watermarks. Corresponds to schema version 2.3.0 Inherited Members IMapDefinition.Name IMapDefinition.CoordinateSystem IMapDefinition.Extents IMapDefinition.SetExtents(Double, Double, Double, Double) IMapDefinition.Metadata IMapDefinition.BaseMap IMapDefinition.AttachBaseMap(IBaseMapDefinition) IMapDefinition.InitBaseMap() IMapDefinition.RemoveBaseMap() IMapDefinition.MapLayer IMapDefinition.ExtentCalculator IMapDefinition.InsertLayer(Int32, String, String, String) IMapDefinition.AddLayer(String, String, String) IMapDefinition.AddLayer(IMapLayer, String, String, String) IMapDefinition.RemoveLayer(IMapLayer) IMapDefinition.GetIndex(IMapLayer) IMapDefinition.MoveUp(IMapLayer) IMapDefinition.MoveDown(IMapLayer) IMapDefinition.MapLayerGroup IMapDefinition.AddGroup(String) IMapDefinition.RemoveGroup(IMapLayerGroup) IMapDefinition.GetIndex(IMapLayerGroup) IMapDefinition.SetTopDrawOrder(IMapLayer) IMapDefinition.SetBottomDrawOrder(IMapLayer) IMapDefinition.InsertLayer(Int32, IMapLayer) IMapDefinition.MoveDownGroup(IMapLayerGroup) IMapDefinition.MoveUpGroup(IMapLayerGroup) IMapDefinition.RemoveAllGroups() IMapDefinition.RemoveAllLayers() IResource.ValidatingSchema IResource.ResourceID IResource.ResourceType IResource.Serialize() IResource.IsStronglyTyped IVersionedEntity.ResourceVersion IMapDefinitionBase.BackgroundColor Namespace : OSGeo.MapGuide.ObjectModels.MapDefinition Assembly : cs.temp.dll.dll Syntax public interface IMapDefinition2 : IMapDefinition, IResource, IVersionedEntity, ICloneable, IMapDefinitionBase, INotifyPropertyChanged, IWatermarkCollection"
  },
  "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IMapDefinition3.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IMapDefinition3.html",
    "title": "Interface IMapDefinition3 | MapGuide Maestro",
    "keywords": "Interface IMapDefinition3 Represents a Map Definition with support for linking to tile sets. Corresponds to schema version 3.0.0 Inherited Members IMapDefinition.Name IMapDefinition.CoordinateSystem IMapDefinition.Extents IMapDefinition.SetExtents(Double, Double, Double, Double) IMapDefinition.Metadata IMapDefinition.BaseMap IMapDefinition.AttachBaseMap(IBaseMapDefinition) IMapDefinition.InitBaseMap() IMapDefinition.RemoveBaseMap() IMapDefinition.MapLayer IMapDefinition.ExtentCalculator IMapDefinition.InsertLayer(Int32, String, String, String) IMapDefinition.AddLayer(String, String, String) IMapDefinition.AddLayer(IMapLayer, String, String, String) IMapDefinition.RemoveLayer(IMapLayer) IMapDefinition.GetIndex(IMapLayer) IMapDefinition.MoveUp(IMapLayer) IMapDefinition.MoveDown(IMapLayer) IMapDefinition.MapLayerGroup IMapDefinition.AddGroup(String) IMapDefinition.RemoveGroup(IMapLayerGroup) IMapDefinition.GetIndex(IMapLayerGroup) IMapDefinition.SetTopDrawOrder(IMapLayer) IMapDefinition.SetBottomDrawOrder(IMapLayer) IMapDefinition.InsertLayer(Int32, IMapLayer) IMapDefinition.MoveDownGroup(IMapLayerGroup) IMapDefinition.MoveUpGroup(IMapLayerGroup) IMapDefinition.RemoveAllGroups() IMapDefinition.RemoveAllLayers() IResource.ValidatingSchema IResource.ResourceID IResource.ResourceType IResource.Serialize() IResource.IsStronglyTyped IVersionedEntity.ResourceVersion IMapDefinitionBase.BackgroundColor Namespace : OSGeo.MapGuide.ObjectModels.MapDefinition Assembly : cs.temp.dll.dll Syntax public interface IMapDefinition3 : IMapDefinition2, IMapDefinition, IResource, IVersionedEntity, ICloneable, IMapDefinitionBase, INotifyPropertyChanged, IWatermarkCollection Properties TileSetDefinitionID Gets or sets the Tile Set Definition. When setting a tile set, any existing base map settings are removed Declaration string TileSetDefinitionID { get; set; } Property Value Type Description System.String TileSourceType Gets or sets the type of tile source Declaration TileSourceType TileSourceType { get; set; } Property Value Type Description TileSourceType"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IInformationPane.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IInformationPane.html",
    "title": "Interface IInformationPane | MapGuide Maestro",
    "keywords": "Interface IInformationPane The legend and property pane Inherited Members IWebLayoutResizableControl.Width Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IInformationPane : IWebLayoutResizableControl, INotifyPropertyChanged Properties LegendVisible Gets or sets a value indicating whether [legend visible]. Declaration bool LegendVisible { get; set; } Property Value Type Description System.Boolean true if [legend visible]; otherwise, false . PropertiesVisible Gets or sets a value indicating whether [properties visible]. Declaration bool PropertiesVisible { get; set; } Property Value Type Description System.Boolean true if [properties visible]; otherwise, false ."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IInvokeScriptCommand.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IInvokeScriptCommand.html",
    "title": "Interface IInvokeScriptCommand | MapGuide Maestro",
    "keywords": "Interface IInvokeScriptCommand An invoke script command Inherited Members ICommand.Name ICommand.Label ICommand.TargetViewer ILocalizable.Tooltip ILocalizable.Description ILocalizable.ImageURL ILocalizable.DisabledImageURL Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IInvokeScriptCommand : ICustomCommand, ICommand, ILocalizable, INotifyPropertyChanged Properties Script Gets or sets the script. Declaration string Script { get; set; } Property Value Type Description System.String The script."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IInvokeUrlCommand.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IInvokeUrlCommand.html",
    "title": "Interface IInvokeUrlCommand | MapGuide Maestro",
    "keywords": "Interface IInvokeUrlCommand Invoke URL command Inherited Members ITargetedCommand.Target ITargetedCommand.TargetFrame ICommand.Name ICommand.Label ICommand.TargetViewer ILocalizable.Tooltip ILocalizable.Description ILocalizable.ImageURL ILocalizable.DisabledImageURL Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IInvokeUrlCommand : ITargetedCommand, ICustomCommand, ICommand, ILocalizable, INotifyPropertyChanged Properties AdditionalParameter Gets the additional parameters. Declaration IEnumerable<IParameterPair> AdditionalParameter { get; } Property Value Type Description IEnumerable < IParameterPair > The additional parameters. DisableIfSelectionEmpty Gets or sets a value indicating whether [disable if selection empty]. Declaration bool DisableIfSelectionEmpty { get; set; } Property Value Type Description System.Boolean true if [disable if selection empty]; otherwise, false . LayerSet Gets the layer set that this layer applies to Declaration ILayerSet LayerSet { get; } Property Value Type Description ILayerSet The layer set. URL Gets or sets the URL. Declaration string URL { get; set; } Property Value Type Description System.String The URL. Methods AddParameter(IParameterPair) Adds the parameter. Declaration void AddParameter(IParameterPair param) Parameters Type Name Description IParameterPair param The param. CreateParameter(String, String) Creates the parameter. Declaration IParameterPair CreateParameter(string name, string value) Parameters Type Name Description System.String name The name. System.String value The value. Returns Type Description IParameterPair RemoveParameter(IParameterPair) Removes the parameter. Declaration void RemoveParameter(IParameterPair param) Parameters Type Name Description IParameterPair param The param."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.ILayerSet.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.ILayerSet.html",
    "title": "Interface ILayerSet | MapGuide Maestro",
    "keywords": "Interface ILayerSet A set of layers Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface ILayerSet Properties Layer Gets the layers. Declaration BindingList<string> Layer { get; } Property Value Type Description BindingList < System.String > The layers."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.ITaskBar.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.ITaskBar.html",
    "title": "Interface ITaskBar | MapGuide Maestro",
    "keywords": "Interface ITaskBar The task bar Inherited Members IWebLayoutControl.Visible IMenu.ItemCount IMenu.Items IMenu.MoveUp(IUIItem) IMenu.MoveDown(IUIItem) IMenu.GetIndex(IUIItem) IMenu.Insert(IUIItem, Int32) IMenu.AddItem(IUIItem) IMenu.RemoveItem(IUIItem) Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface ITaskBar : IWebLayoutControl, IMenu, INotifyPropertyChanged Properties Back Gets the back button. Declaration ITaskButton Back { get; } Property Value Type Description ITaskButton The back. Forward Gets the forward button. Declaration ITaskButton Forward { get; } Property Value Type Description ITaskButton The forward. Home Gets the home button. Declaration ITaskButton Home { get; } Property Value Type Description ITaskButton The home. Tasks Gets the tasks button. Declaration ITaskButton Tasks { get; } Property Value Type Description ITaskButton The tasks."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.ITaskButton.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.ITaskButton.html",
    "title": "Interface ITaskButton | MapGuide Maestro",
    "keywords": "Interface ITaskButton A button on the task pane Inherited Members ILocalizable.Tooltip ILocalizable.Description ILocalizable.ImageURL ILocalizable.DisabledImageURL Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface ITaskButton : ILocalizable, INotifyPropertyChanged"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.ITaskPane.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.ITaskPane.html",
    "title": "Interface ITaskPane | MapGuide Maestro",
    "keywords": "Interface ITaskPane The task pane Inherited Members IWebLayoutResizableControl.Width Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface ITaskPane : IWebLayoutResizableControl, INotifyPropertyChanged Properties InitialTask Gets or sets the url of the initial task. Declaration string InitialTask { get; set; } Property Value Type Description System.String The url of the initial task. TaskBar Gets the task bar. Declaration ITaskBar TaskBar { get; } Property Value Type Description ITaskBar The task bar. Visible Gets or sets whether this control is visible Declaration bool Visible { get; set; } Property Value Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IToolbar.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IToolbar.html",
    "title": "Interface IToolbar | MapGuide Maestro",
    "keywords": "Interface IToolbar The viewer toolbar Inherited Members IMenu.ItemCount IMenu.Items IMenu.MoveUp(IUIItem) IMenu.MoveDown(IUIItem) IMenu.GetIndex(IUIItem) IMenu.Insert(IUIItem, Int32) IMenu.AddItem(IUIItem) IMenu.RemoveItem(IUIItem) IWebLayoutControl.Visible Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IToolbar : IMenu, IWebLayoutControl, INotifyPropertyChanged"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IUIItem.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IUIItem.html",
    "title": "Interface IUIItem | MapGuide Maestro",
    "keywords": "Interface IUIItem A UI element Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IUIItem Properties Function Gets or sets the function. Declaration UIItemFunctionType Function { get; set; } Property Value Type Description UIItemFunctionType The function. Parent Gets the parent menu. Declaration IMenu Parent { get; } Property Value Type Description IMenu The parent menu."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IViewOptionsCommand.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IViewOptionsCommand.html",
    "title": "Interface IViewOptionsCommand | MapGuide Maestro",
    "keywords": "Interface IViewOptionsCommand View options command Inherited Members ITargetedCommand.Target ITargetedCommand.TargetFrame ICommand.Name ICommand.Label ICommand.TargetViewer ILocalizable.Tooltip ILocalizable.Description ILocalizable.ImageURL ILocalizable.DisabledImageURL Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IViewOptionsCommand : ITargetedCommand, ICustomCommand, ICommand, ILocalizable, INotifyPropertyChanged"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IWebLayout.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IWebLayout.html",
    "title": "Interface IWebLayout | MapGuide Maestro",
    "keywords": "Interface IWebLayout The Web Layout Inherited Members IResource.ValidatingSchema IResource.ResourceID IResource.ResourceType IResource.Serialize() IResource.IsStronglyTyped IVersionedEntity.ResourceVersion Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IWebLayout : IResource, IVersionedEntity, ICloneable, INotifyPropertyChanged Properties CommandSet Gets the command set. Declaration ICommandSet CommandSet { get; } Property Value Type Description ICommandSet The command set. ContextMenu Gets the context menu. Declaration IContextMenu ContextMenu { get; } Property Value Type Description IContextMenu The context menu. InformationPane Gets the information pane. Declaration IInformationPane InformationPane { get; } Property Value Type Description IInformationPane The information pane. Map Gets the map. Declaration IMap Map { get; } Property Value Type Description IMap The map. StatusBar Gets the status bar. Declaration IStatusBar StatusBar { get; } Property Value Type Description IStatusBar The status bar. TaskPane Gets the task pane. Declaration ITaskPane TaskPane { get; } Property Value Type Description ITaskPane The task pane. Title Gets or sets the title. Declaration string Title { get; set; } Property Value Type Description System.String The title. ToolBar Gets the tool bar. Declaration IToolbar ToolBar { get; } Property Value Type Description IToolbar The tool bar. ZoomControl Gets the zoom control. Declaration IZoomControl ZoomControl { get; } Property Value Type Description IZoomControl The zoom control. Methods CreateBasicCommand(String, String, String, String, TargetViewerType, BasicCommandActionType) Creates the basic command. Declaration IBasicCommand CreateBasicCommand(string label, string tooltip, string description, string iconName, TargetViewerType targets, BasicCommandActionType action) Parameters Type Name Description System.String label The label. System.String tooltip The tooltip. System.String description The description. System.String iconName Name of the icon. TargetViewerType targets The targets. BasicCommandActionType action The action. Returns Type Description IBasicCommand The basic command CreateCommandItem(String) Creates the command item. Declaration ICommandItem CreateCommandItem(string cmdName) Parameters Type Name Description System.String cmdName Name of the command. Returns Type Description ICommandItem The command item CreateDefaultView() Creates the default view. Declaration IMapView CreateDefaultView() Returns Type Description IMapView The default view CreateFlyout(String, String, String, String, String, IUIItem[]) Creates the flyout. Declaration IFlyoutItem CreateFlyout(string label, string tooltip, string description, string imageUrl, string disabledImageUrl, params IUIItem[] subItems) Parameters Type Name Description System.String label The label. System.String tooltip The tooltip. System.String description The description. System.String imageUrl The image URL. System.String disabledImageUrl The disabled image URL. IUIItem [] subItems The sub items. Returns Type Description IFlyoutItem The flyout CreateInvokeScriptCommand() Creates the invoke script command. Declaration IInvokeScriptCommand CreateInvokeScriptCommand() Returns Type Description IInvokeScriptCommand The invoke script command CreateInvokeUrlCommand() Creates the invoke URL command. Declaration IInvokeUrlCommand CreateInvokeUrlCommand() Returns Type Description IInvokeUrlCommand The invoke URL command CreateSearchCommand() Creates the search command. Declaration ISearchCommand CreateSearchCommand() Returns Type Description ISearchCommand The search command CreateSeparator() Creates the separator. Declaration ISeparatorItem CreateSeparator() Returns Type Description ISeparatorItem The separator CreateTargetedCommand<T>(String, String, String, String, String, TargetViewerType, TargetType, String) Creates the targeted command. Declaration T CreateTargetedCommand<T>(string name, string label, string tooltip, string description, string iconName, TargetViewerType targets, TargetType target, string targetFrame)where T : ITargetedCommand, new () Parameters Type Name Description System.String name The name. System.String label The label. System.String tooltip The tooltip. System.String description The description. System.String iconName Name of the icon. TargetViewerType targets The targets. TargetType target The target. System.String targetFrame The target frame. Returns Type Description T The targeted command Type Parameters Name Description T ExportCustomCommands(String, String[]) Exports the specified commands to the specified file Declaration void ExportCustomCommands(string file, string[] cmdNames) Parameters Type Name Description System.String file The file to export to System.String [] cmdNames The specified commands FindCommand(String, IMenu) Finds the command by its name in the specified menu. Declaration bool FindCommand(string name, IMenu menu) Parameters Type Name Description System.String name The name. IMenu menu The menu. Returns Type Description System.Boolean True if found. False otherwise GetCommandByName(String) Gets a command by its name Declaration ICommand GetCommandByName(string cmdName) Parameters Type Name Description System.String cmdName Name of the command. Returns Type Description ICommand The command GetCustomCommands() Gets the custom commands. Declaration IEnumerable<ICommand> GetCustomCommands() Returns Type Description IEnumerable < ICommand > The enumerable of commands ImportCustomCommands(String) Imports commands from the specified file Declaration ImportedCommandResult[] ImportCustomCommands(string file) Parameters Type Name Description System.String file The file to import from Returns Type Description ImportedCommandResult [] The imported commands IsCommandReferenced(String, out WebLayoutRegion[]) Determines whether the specified command name is referenced in any regions Declaration bool IsCommandReferenced(string name, out WebLayoutRegion[] region) Parameters Type Name Description System.String name The name. WebLayoutRegion [] region The region. Returns Type Description System.Boolean True if referenced. False otherwise RemoveAllReferences(String) Removes all references to the specified command name Declaration int RemoveAllReferences(string cmdName) Parameters Type Name Description System.String cmdName Name of the command. Returns Type Description System.Int32 The number removed"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IWebLayout2.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IWebLayout2.html",
    "title": "Interface IWebLayout2 | MapGuide Maestro",
    "keywords": "Interface IWebLayout2 Web Layout from v1.1.0 schema Inherited Members IWebLayout.ExportCustomCommands(String, String[]) IWebLayout.ImportCustomCommands(String) IWebLayout.IsCommandReferenced(String, WebLayoutRegion[]) IWebLayout.RemoveAllReferences(String) IWebLayout.GetCommandByName(String) IWebLayout.GetCustomCommands() IWebLayout.FindCommand(String, IMenu) IWebLayout.Title IWebLayout.CreateDefaultView() IWebLayout.Map IWebLayout.TaskPane IWebLayout.ToolBar IWebLayout.InformationPane IWebLayout.ContextMenu IWebLayout.StatusBar IWebLayout.ZoomControl IWebLayout.CommandSet IWebLayout.CreateBasicCommand(String, String, String, String, TargetViewerType, BasicCommandActionType) IWebLayout.CreateFlyout(String, String, String, String, String, IUIItem[]) IWebLayout.CreateTargetedCommand<T>(String, String, String, String, String, TargetViewerType, TargetType, String) IWebLayout.CreateCommandItem(String) IWebLayout.CreateInvokeUrlCommand() IWebLayout.CreateSearchCommand() IWebLayout.CreateInvokeScriptCommand() IWebLayout.CreateSeparator() IResource.ValidatingSchema IResource.ResourceID IResource.ResourceType IResource.Serialize() IResource.IsStronglyTyped IVersionedEntity.ResourceVersion Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IWebLayout2 : IWebLayout, IResource, IVersionedEntity, ICloneable, INotifyPropertyChanged Properties EnablePingServer Gets or sets a value indicating whether [enable ping server]. Declaration bool EnablePingServer { get; set; } Property Value Type Description System.Boolean true if [enable ping server]; otherwise, false ."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IWebLayout3.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IWebLayout3.html",
    "title": "Interface IWebLayout3 | MapGuide Maestro",
    "keywords": "Interface IWebLayout3 Web Layout from v2.6.0 schema Inherited Members IWebLayout2.EnablePingServer IWebLayout.ExportCustomCommands(String, String[]) IWebLayout.ImportCustomCommands(String) IWebLayout.IsCommandReferenced(String, WebLayoutRegion[]) IWebLayout.RemoveAllReferences(String) IWebLayout.GetCommandByName(String) IWebLayout.GetCustomCommands() IWebLayout.FindCommand(String, IMenu) IWebLayout.Title IWebLayout.CreateDefaultView() IWebLayout.Map IWebLayout.TaskPane IWebLayout.ToolBar IWebLayout.InformationPane IWebLayout.ContextMenu IWebLayout.StatusBar IWebLayout.ZoomControl IWebLayout.CommandSet IWebLayout.CreateBasicCommand(String, String, String, String, TargetViewerType, BasicCommandActionType) IWebLayout.CreateFlyout(String, String, String, String, String, IUIItem[]) IWebLayout.CreateTargetedCommand<T>(String, String, String, String, String, TargetViewerType, TargetType, String) IWebLayout.CreateCommandItem(String) IWebLayout.CreateInvokeUrlCommand() IWebLayout.CreateSearchCommand() IWebLayout.CreateInvokeScriptCommand() IWebLayout.CreateSeparator() IResource.ValidatingSchema IResource.ResourceID IResource.ResourceType IResource.Serialize() IResource.IsStronglyTyped IVersionedEntity.ResourceVersion Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IWebLayout3 : IWebLayout2, IWebLayout, IResource, IVersionedEntity, ICloneable, INotifyPropertyChanged Properties MapImageFormat Gets or sets the map image format Declaration string MapImageFormat { get; set; } Property Value Type Description System.String PointSelectionBuffer Gets or sets the point selection buffer pixel tolerance Declaration int PointSelectionBuffer { get; set; } Property Value Type Description System.Int32 SelectionColor Gets or sets the selection color Declaration string SelectionColor { get; set; } Property Value Type Description System.String SelectionImageFormat Gets or sets the selection image format Declaration string SelectionImageFormat { get; set; } Property Value Type Description System.String StartupScript Gets or sets the startup script code Declaration string StartupScript { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IWebLayoutControl.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IWebLayoutControl.html",
    "title": "Interface IWebLayoutControl | MapGuide Maestro",
    "keywords": "Interface IWebLayoutControl A web layout element Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IWebLayoutControl : INotifyPropertyChanged Properties Visible Gets or sets a value indicating whether this IWebLayoutControl is visible. Declaration bool Visible { get; set; } Property Value Type Description System.Boolean true if visible; otherwise, false ."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IWebLayoutResizableControl.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IWebLayoutResizableControl.html",
    "title": "Interface IWebLayoutResizableControl | MapGuide Maestro",
    "keywords": "Interface IWebLayoutResizableControl A resizable web layout element Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IWebLayoutResizableControl Properties Width Gets or sets the width. Declaration int Width { get; set; } Property Value Type Description System.Int32 The width."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IZoomControl.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IZoomControl.html",
    "title": "Interface IZoomControl | MapGuide Maestro",
    "keywords": "Interface IZoomControl The zoom slider Inherited Members IWebLayoutControl.Visible Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IZoomControl : IWebLayoutControl, INotifyPropertyChanged"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.MenuExtensions.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.MenuExtensions.html",
    "title": "Class MenuExtensions | MapGuide Maestro",
    "keywords": "Class MenuExtensions Extension method class Inheritance System.Object MenuExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public static class MenuExtensions Methods AddItems(IMenu, IUIItem[]) Adds items to the menu Declaration public static void AddItems(this IMenu mnu, params IUIItem[] items) Parameters Type Name Description IMenu mnu The menu IUIItem [] items The items to add"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.TargetType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.TargetType.html",
    "title": "Enum TargetType | MapGuide Maestro",
    "keywords": "Enum TargetType Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public enum TargetType Fields Name Description NewWindow SpecifiedFrame TaskPane"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.TargetViewerType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.TargetViewerType.html",
    "title": "Enum TargetViewerType | MapGuide Maestro",
    "keywords": "Enum TargetViewerType Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public enum TargetViewerType Fields Name Description Ajax All Dwf"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.UIItemFunctionType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.UIItemFunctionType.html",
    "title": "Enum UIItemFunctionType | MapGuide Maestro",
    "keywords": "Enum UIItemFunctionType Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public enum UIItemFunctionType Fields Name Description Command Flyout Separator"
  },
  "api/OSGeo.FDO.Expressions.DataType.html": {
    "href": "api/OSGeo.FDO.Expressions.DataType.html",
    "title": "Enum DataType | MapGuide Maestro",
    "keywords": "Enum DataType Data value types Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public enum DataType Fields Name Description Boolean Boolean DateTime DateTime Double Double Int32 Int32 String String"
  },
  "api/OSGeo.FDO.Expressions.FdoBinaryExpression.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoBinaryExpression.html",
    "title": "Class FdoBinaryExpression | MapGuide Maestro",
    "keywords": "Class FdoBinaryExpression A binary expression that consists of a left and right hand side expression and binary operator Inheritance System.Object FdoParseable FdoExpression FdoBinaryExpression Inherited Members FdoExpression.ParseableType FdoExpression.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoBinaryExpression : FdoExpression Properties ExpressionType The epxression type Declaration public override ExpressionType ExpressionType { get; } Property Value Type Description ExpressionType Overrides FdoExpression.ExpressionType Left The left hand expression Declaration public FdoExpression Left { get; } Property Value Type Description FdoExpression Operator The binary operator Declaration public BinaryOperator Operator { get; } Property Value Type Description BinaryOperator Right The right hand expression Declaration public FdoExpression Right { get; } Property Value Type Description FdoExpression"
  },
  "api/OSGeo.FDO.Expressions.FdoComparisonCondition.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoComparisonCondition.html",
    "title": "Class FdoComparisonCondition | MapGuide Maestro",
    "keywords": "Class FdoComparisonCondition A comparison condition Inheritance System.Object FdoParseable FdoFilter FdoSearchCondition FdoComparisonCondition Inherited Members FdoFilter.ParseableType FdoFilter.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoComparisonCondition : FdoSearchCondition Properties FilterType The filter type Declaration public override FilterType FilterType { get; } Property Value Type Description FilterType Overrides FdoFilter.FilterType Left The left-hand expression Declaration public FdoExpression Left { get; } Property Value Type Description FdoExpression Operator The comparison operator Declaration public ComparisonOperations Operator { get; } Property Value Type Description ComparisonOperations Right The right-hand expression Declaration public FdoExpression Right { get; } Property Value Type Description FdoExpression"
  },
  "api/OSGeo.FDO.Expressions.FdoDistanceCondition.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoDistanceCondition.html",
    "title": "Class FdoDistanceCondition | MapGuide Maestro",
    "keywords": "Class FdoDistanceCondition An FDO distance condition Inheritance System.Object FdoParseable FdoFilter FdoSearchCondition FdoGeometricCondition FdoDistanceCondition Inherited Members FdoFilter.ParseableType FdoFilter.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoDistanceCondition : FdoGeometricCondition Properties Distance The distance value Declaration public FdoDataValue Distance { get; } Property Value Type Description FdoDataValue Expression The target expression Declaration public FdoExpression Expression { get; } Property Value Type Description FdoExpression FilterType The filter type Declaration public override FilterType FilterType { get; } Property Value Type Description FilterType Overrides FdoFilter.FilterType Identifier The geometry identifier Declaration public FdoIdentifier Identifier { get; } Property Value Type Description FdoIdentifier Operator The distance operator Declaration public DistanceOperations Operator { get; } Property Value Type Description DistanceOperations"
  },
  "api/OSGeo.FDO.Expressions.FdoFilter.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoFilter.html",
    "title": "Class FdoFilter | MapGuide Maestro",
    "keywords": "Class FdoFilter The base class of all FDO filter expressions Inheritance System.Object FdoParseable FdoFilter FdoLogicalOperator FdoSearchCondition Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public abstract class FdoFilter : FdoParseable Properties FilterType The filter type Declaration public abstract FilterType FilterType { get; } Property Value Type Description FilterType ParseableType The parseable type Declaration public override FdoParseableType ParseableType { get; } Property Value Type Description FdoParseableType Overrides FdoParseable.ParseableType Methods Parse(String) Parses the given FDO filter string Declaration public static FdoFilter Parse(string str) Parameters Type Name Description System.String str Returns Type Description FdoFilter"
  },
  "api/OSGeo.FDO.Expressions.FdoGeometryValue.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoGeometryValue.html",
    "title": "Class FdoGeometryValue | MapGuide Maestro",
    "keywords": "Class FdoGeometryValue An FDO geometry value Inheritance System.Object FdoParseable FdoExpression FdoValueExpression FdoLiteralValue FdoGeometryValue Inherited Members FdoLiteralValue.LiteralValueType FdoExpression.ParseableType FdoExpression.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoGeometryValue : FdoLiteralValue Properties ExpressionType The expression type Declaration public override ExpressionType ExpressionType { get; } Property Value Type Description ExpressionType Overrides FdoExpression.ExpressionType GeometryWkt The goemetry WKT Declaration public string GeometryWkt { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.FDO.Expressions.FdoInt32Value.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoInt32Value.html",
    "title": "Class FdoInt32Value | MapGuide Maestro",
    "keywords": "Class FdoInt32Value An FDO int32 value Inheritance System.Object FdoParseable FdoExpression FdoValueExpression FdoLiteralValue FdoDataValue FdoInt32Value Inherited Members FdoDataValue.DataType FdoLiteralValue.LiteralValueType FdoExpression.ParseableType FdoExpression.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoInt32Value : FdoDataValue Properties ExpressionType The expression type Declaration public override ExpressionType ExpressionType { get; } Property Value Type Description ExpressionType Overrides FdoExpression.ExpressionType Value The int32 value Declaration public int Value { get; } Property Value Type Description System.Int32"
  },
  "api/OSGeo.FDO.Expressions.FdoMalformedExpressionException.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoMalformedExpressionException.html",
    "title": "Class FdoMalformedExpressionException | MapGuide Maestro",
    "keywords": "Class FdoMalformedExpressionException Thrown when a malformed FDO expression is encountered Inheritance System.Object FdoParseException FdoMalformedExpressionException Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoMalformedExpressionException : FdoParseException Constructors FdoMalformedExpressionException(String, List<FdoParseErrorMessage>) Constructor Declaration public FdoMalformedExpressionException(string message, List<FdoParseErrorMessage> parserErrorMessages) Parameters Type Name Description System.String message List < FdoParseErrorMessage > parserErrorMessages Properties Messages The list of parser errors Declaration public List<FdoParseErrorMessage> Messages { get; } Property Value Type Description List < FdoParseErrorMessage >"
  },
  "api/OSGeo.FDO.Expressions.FdoNullCondition.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoNullCondition.html",
    "title": "Class FdoNullCondition | MapGuide Maestro",
    "keywords": "Class FdoNullCondition An FDO null condition Inheritance System.Object FdoParseable FdoFilter FdoSearchCondition FdoNullCondition Inherited Members FdoFilter.ParseableType FdoFilter.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoNullCondition : FdoSearchCondition Properties FilterType The filter type Declaration public override FilterType FilterType { get; } Property Value Type Description FilterType Overrides FdoFilter.FilterType Identifier The identifier Declaration public FdoIdentifier Identifier { get; } Property Value Type Description FdoIdentifier"
  },
  "api/OSGeo.FDO.Expressions.FdoParseErrorMessage.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoParseErrorMessage.html",
    "title": "Class FdoParseErrorMessage | MapGuide Maestro",
    "keywords": "Class FdoParseErrorMessage A parse error message Inheritance System.Object FdoParseErrorMessage Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoParseErrorMessage Properties Column The column number of the source of the offending parse error Declaration public int Column { get; } Property Value Type Description System.Int32 LineNumber The line number of the source of the offending parse error Declaration public int LineNumber { get; } Property Value Type Description System.Int32 Message The parse error message Declaration public string Message { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.FDO.Expressions.FdoParseException.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoParseException.html",
    "title": "Class FdoParseException | MapGuide Maestro",
    "keywords": "Class FdoParseException Thrown when an exception occurs parsing an FDO expression or filter Inheritance System.Object FdoParseException FdoMalformedExpressionException Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoParseException : Exception Constructors FdoParseException() Constructor Declaration public FdoParseException() FdoParseException(String) Constructor Declaration public FdoParseException(string message) Parameters Type Name Description System.String message FdoParseException(String, Exception) Constructor Declaration public FdoParseException(string message, Exception inner) Parameters Type Name Description System.String message Exception inner"
  },
  "api/OSGeo.FDO.Expressions.FdoUnaryLogicalOperator.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoUnaryLogicalOperator.html",
    "title": "Class FdoUnaryLogicalOperator | MapGuide Maestro",
    "keywords": "Class FdoUnaryLogicalOperator An FDO unary logical operator Inheritance System.Object FdoParseable FdoFilter FdoLogicalOperator FdoUnaryLogicalOperator Inherited Members FdoFilter.ParseableType FdoFilter.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoUnaryLogicalOperator : FdoLogicalOperator Properties FilterType The filter type Declaration public override FilterType FilterType { get; } Property Value Type Description FilterType Overrides FdoFilter.FilterType NegatedFilter The negated filter Declaration public FdoFilter NegatedFilter { get; } Property Value Type Description FdoFilter"
  },
  "api/OSGeo.FDO.Expressions.FdoValueExpression.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoValueExpression.html",
    "title": "Class FdoValueExpression | MapGuide Maestro",
    "keywords": "Class FdoValueExpression The base class of all value expressions Inheritance System.Object FdoParseable FdoExpression FdoValueExpression FdoLiteralValue FdoParameter Inherited Members FdoExpression.ParseableType FdoExpression.ExpressionType FdoExpression.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public abstract class FdoValueExpression : FdoExpression"
  },
  "api/OSGeo.FDO.Expressions.SpatialOperations.html": {
    "href": "api/OSGeo.FDO.Expressions.SpatialOperations.html",
    "title": "Enum SpatialOperations | MapGuide Maestro",
    "keywords": "Enum SpatialOperations Spatial operators Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public enum SpatialOperations Fields Name Description Contains Contains CoveredBy Covered by Crosses Crosses Disjoint Disjoint Equals Equals Inside Inside Intersects Intersects Overlaps Overlaps Touches Touches Within Within"
  },
  "api/OSGeo.FDO.Expressions.html": {
    "href": "api/OSGeo.FDO.Expressions.html",
    "title": "Namespace OSGeo.FDO.Expressions | MapGuide Maestro",
    "keywords": "Namespace OSGeo.FDO.Expressions Classes FdoBinaryExpression A binary expression that consists of a left and right hand side expression and binary operator FdoBinaryLogicalOperator A binary logical operator FdoBooleanValue An FDO boolean value FdoComparisonCondition A comparison condition FdoDataValue A data value FdoDateTimeValue An FDO datetime value FdoDistanceCondition An FDO distance condition FdoDoubleValue An FDO double value FdoExpression The base class of all FDO expressions FdoFilter The base class of all FDO filter expressions FdoFunction An FDO function expression FdoGeometricCondition An FDO geometric condition expression FdoGeometryValue An FDO geometry value FdoIdentifier An FDO identifier FdoInCondition An FDO IN condition FdoInt32Value An FDO int32 value FdoLiteralValue An FDO literal value FdoLogicalOperator An FDO logical operator FdoMalformedExpressionException Thrown when a malformed FDO expression is encountered FdoNullCondition An FDO null condition FdoParameter An FDO parameter FdoParseable The base class of all parseable FDO expressions FdoParseErrorMessage A parse error message FdoParseException Thrown when an exception occurs parsing an FDO expression or filter FdoSearchCondition An FDO search condition FdoSpatialCondition An FDO spatial condition FdoStringValue An FDO string value FdoUnaryExpression An FDO unary expression FdoUnaryLogicalOperator An FDO unary logical operator FdoValueExpression The base class of all value expressions Enums BinaryLogicalOperations The binary logical operator BinaryOperator The binary operator ComparisonOperations Comparison operator DataType Data value types DistanceOperations The distance operator ExpressionType FDO expression types FdoParseableType The parseable type FilterType Filter types LiteralValueType The literal value type SpatialOperations Spatial operators"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Capability.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Capability.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.Capability | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.Capability Classes ConnectionCapabilities Base connection capabilitiy class"
  },
  "api/OSGeo.MapGuide.MaestroAPI.CommandLineArguments.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.CommandLineArguments.html",
    "title": "Class CommandLineArguments | MapGuide Maestro",
    "keywords": "Class CommandLineArguments A set of common command-line arguments Inheritance System.Object CommandLineArguments Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public static class CommandLineArguments Fields Password The password Declaration public const string Password = \"Password\" Field Value Type Description System.String Provider The name of the API provider Declaration public const string Provider = \"Provider\" Field Value Type Description System.String Session The session id Declaration public const string Session = \"SessionId\" Field Value Type Description System.String Username The username Declaration public const string Username = \"Username\" Field Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.DefaultApplySchemaCommand-1.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.DefaultApplySchemaCommand-1.html",
    "title": "Class DefaultApplySchemaCommand<TConn> | MapGuide Maestro",
    "keywords": "Class DefaultApplySchemaCommand<TConn> A default implementation of IApplySchema . This class is reserved for connection provider use Inheritance System.Object DefaultCommand <TConn> DefaultFeatureCommand <TConn> DefaultApplySchemaCommand<TConn> Implements IFeatureCommand IApplySchema ICommand Inherited Members DefaultFeatureCommand<TConn>.FeatureSourceId DefaultFeatureCommand<TConn>.ClassName DefaultFeatureCommand<TConn>.ValidateParams() DefaultCommand<TConn>.ConnImpl DefaultCommand<TConn>.Parent DefaultCommand<TConn>.ValidateCoreParams() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public abstract class DefaultApplySchemaCommand<TConn> : DefaultFeatureCommand<TConn>, IFeatureCommand, IApplySchema, ICommand where TConn : IServerConnection Type Parameters Name Description TConn The type of the conn. Constructors DefaultApplySchemaCommand(TConn) Initializes a new instance of the DefaultApplySchemaCommand<TConn> class. Declaration protected DefaultApplySchemaCommand(TConn conn) Parameters Type Name Description TConn conn The conn. Properties Schema Gets or sets the schema. Declaration public FeatureSchema Schema { get; set; } Property Value Type Description FeatureSchema The schema. Methods Execute() Executes this instance. Declaration public void Execute() ExecuteInternal() Performs the actual command execution Declaration protected abstract void ExecuteInternal() Implements IFeatureCommand IApplySchema ICommand"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.DefaultCommand-1.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.DefaultCommand-1.html",
    "title": "Class DefaultCommand<TConn> | MapGuide Maestro",
    "keywords": "Class DefaultCommand<TConn> A default implementation of ICommand . This class is reserved for connection provider use Inheritance System.Object DefaultCommand<TConn> DefaultCreateDataStoreCommand<TConn> DefaultFeatureCommand<TConn> Implements ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public abstract class DefaultCommand<TConn> : ICommand where TConn : IServerConnection Type Parameters Name Description TConn The type of the conn. Constructors DefaultCommand(TConn) Initializes a new instance of the DefaultCommand<TConn> class. Declaration protected DefaultCommand(TConn conn) Parameters Type Name Description TConn conn The conn. Properties ConnImpl Gets the connection implementation. Declaration public TConn ConnImpl { get; } Property Value Type Description TConn Parent Gets the parent connection. Declaration public IServerConnection Parent { get; } Property Value Type Description IServerConnection The parent connection. Methods ValidateCoreParams() Validates the core commnad parameters. Declaration protected void ValidateCoreParams() Implements ICommand"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.DefaultUpdateCommand-1.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.DefaultUpdateCommand-1.html",
    "title": "Class DefaultUpdateCommand<TConn> | MapGuide Maestro",
    "keywords": "Class DefaultUpdateCommand<TConn> A default implementation of IUpdateFeatures . This class is reserved for connection provider use Inheritance System.Object DefaultCommand <TConn> DefaultFeatureCommand <TConn> DefaultUpdateCommand<TConn> Implements IUpdateFeatures IFeatureCommand ICommand Inherited Members DefaultFeatureCommand<TConn>.FeatureSourceId DefaultFeatureCommand<TConn>.ClassName DefaultFeatureCommand<TConn>.ValidateParams() DefaultCommand<TConn>.ConnImpl DefaultCommand<TConn>.Parent DefaultCommand<TConn>.ValidateCoreParams() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public abstract class DefaultUpdateCommand<TConn> : DefaultFeatureCommand<TConn>, IUpdateFeatures, IFeatureCommand, ICommand where TConn : IServerConnection Type Parameters Name Description TConn The type of the conn. Constructors DefaultUpdateCommand(TConn) Initializes a new instance of the DefaultUpdateCommand<TConn> class. Declaration protected DefaultUpdateCommand(TConn parent) Parameters Type Name Description TConn parent The parent. Properties Filter Gets or sets the filter. Declaration public string Filter { get; set; } Property Value Type Description System.String The filter. ValuesToUpdate Gets or sets the values to update. Declaration public IMutableRecord ValuesToUpdate { get; set; } Property Value Type Description IMutableRecord The values to update. Methods Execute() Executes this instance. Declaration public int Execute() Returns Type Description System.Int32 ExecuteInternal() Performs the actual execution of the command Declaration public abstract int ExecuteInternal() Returns Type Description System.Int32 Implements IUpdateFeatures IFeatureCommand ICommand"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.FdoCacheInfo.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.FdoCacheInfo.html",
    "title": "Class FdoCacheInfo | MapGuide Maestro",
    "keywords": "Class FdoCacheInfo Represents the cache status of FDO connections currently managed by the MapGuide Server Inheritance System.Object FdoCacheInfo Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public class FdoCacheInfo Properties Configuration Gets the configuration settings Declaration public ConfigurationSettings Configuration { get; set; } Property Value Type Description ConfigurationSettings The configuration. Providers Gets an array of cache status of connections for each provider Declaration public CachedProviderInfo[] Providers { get; set; } Property Value Type Description CachedProviderInfo [] Serializer Gets the serializer. Declaration public static XmlSerializer Serializer { get; } Property Value Type Description XmlSerializer TimeStamp Gets the timestamp Declaration public DateTime TimeStamp { get; set; } Property Value Type Description DateTime The time stamp."
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.ICreateRuntimeMap.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.ICreateRuntimeMap.html",
    "title": "Interface ICreateRuntimeMap | MapGuide Maestro",
    "keywords": "Interface ICreateRuntimeMap A command that creates a runtime map from the given Map Definition Inherited Members ICommand.Parent Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public interface ICreateRuntimeMap : ICommand Properties IconFormat The icon image format (default: PNG) Declaration string IconFormat { get; set; } Property Value Type Description System.String IconHeight The height of each inline icon that will be rendered (default: 16) Declaration int IconHeight { get; set; } Property Value Type Description System.Int32 IconsPerScaleRange The number of icons to render inline (as base64 images) per scale range in each layer of the map Declaration int IconsPerScaleRange { get; set; } Property Value Type Description System.Int32 IconWidth The width of each inline icon that will be rendered (default: 16) Declaration int IconWidth { get; set; } Property Value Type Description System.Int32 MapDefinition The resource id of the Map Definition to create a Runtime Map from Declaration string MapDefinition { get; set; } Property Value Type Description System.String RequestedFeatures A bitmask specifying what pieces of information to include in the CREATERUNTIMEMAP response. Use the OSGeo.MapGuide.MaestroAPI.Commands.RuntimeMapRequest to determine what valid values you can use. Declaration int RequestedFeatures { get; set; } Property Value Type Description System.Int32 TargetMapName The name to assign to the created runtime map. If null, then MapGuide will auto-generate one based on the Map Definition ID Declaration string TargetMapName { get; set; } Property Value Type Description System.String Methods Execute() Executes the request and returns the structure of the created runtime map Declaration IRuntimeMapInfo Execute() Returns Type Description IRuntimeMapInfo The structure of the runtime map"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.IDeleteFeatures.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.IDeleteFeatures.html",
    "title": "Interface IDeleteFeatures | MapGuide Maestro",
    "keywords": "Interface IDeleteFeatures Defines a command that deletes one or more features in a Feature Source based on some filtering criteria Inherited Members IFeatureCommand.FeatureSourceId IFeatureCommand.ClassName ICommand.Parent Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public interface IDeleteFeatures : IFeatureCommand, ICommand Remarks This command is only supported on certain implementations of IServerConnection You can find out if the connection supports this command through the Capabilities Examples How to update all features matching a given filter to the given value IServerConnection conn = ...; IDeleteFeatures deleteCmd = (IDeleteFeatures)conn.CreateCommand((int)CommandType.DeleteFeatures); deleteCmd.FeatureSourceId = \"Library://My.FeatureSource\"; deleteCmd.ClassName = \"MyFeatureClass\"; deleteCmd.Filter = \"Name = 'Bar'\"; int deleted = deleteCmd.Execute(); Properties Filter Gets or sets the filter that determines what features will be deleted. If empty, this will delete all features Declaration string Filter { get; set; } Property Value Type Description System.String Methods Execute() Executes the command. Declaration int Execute() Returns Type Description System.Int32 The number of features deleted"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.IGetTileProviders.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.IGetTileProviders.html",
    "title": "Interface IGetTileProviders | MapGuide Maestro",
    "keywords": "Interface IGetTileProviders A command that enumerates the list of registered tile set providers Inherited Members ICommand.Parent Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public interface IGetTileProviders : ICommand Methods Execute() Execute this command Declaration TileProviderList Execute() Returns Type Description TileProviderList"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.IInsertFeatures.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.IInsertFeatures.html",
    "title": "Interface IInsertFeatures | MapGuide Maestro",
    "keywords": "Interface IInsertFeatures Defines a command that inserts a feature into a Feature Source Inherited Members IFeatureCommand.FeatureSourceId IFeatureCommand.ClassName ICommand.Parent Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public interface IInsertFeatures : IFeatureCommand, ICommand Remarks This command is only supported on certain implementations of IServerConnection You can find out if the connection supports this command through the Capabilities Examples How to insert a feature that contains a string and geometry value IServerConnection conn = ...; IInsertFeatures insertCmd = (IInsertFeatures)conn.CreateCommand((int)CommandType.InsertFeatures); insertCmd.FeatureSourceId = \"Library://My.FeatureSource\"; insertCmd.ClassName = \"MyFeatureClass\"; MutableRecord insertRec = new MutableRecord(); FixedWKTReader wktReader = new FixedWKTReader(); insertRec.PutValue(\"Geometry\", new GeometryValue(wktReader.Read(\"POINT (10 10)\"))); insertRec.PutValue(\"Name\", new StringValue(\"Foo\")); insertCmd.RecordToInsert = insertRec; InsertResult res = insertCmd.Execute(); Properties RecordToInsert The feature to insert Declaration IMutableRecord RecordToInsert { get; set; } Property Value Type Description IMutableRecord Methods Execute() Executes the command. Any error during execution will be caught and stored in the Error property Declaration InsertResult Execute() Returns Type Description InsertResult The feature insert result"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.InsertResult.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.InsertResult.html",
    "title": "Class InsertResult | MapGuide Maestro",
    "keywords": "Class InsertResult The result of a Execute() operation Inheritance System.Object InsertResult Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public class InsertResult Properties Error Gets the System.Exception object. If there is no exception, the insert operation succeeded. Declaration public Exception Error { get; set; } Property Value Type Description Exception"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.IUpdateFeatures.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.IUpdateFeatures.html",
    "title": "Interface IUpdateFeatures | MapGuide Maestro",
    "keywords": "Interface IUpdateFeatures Defines a command that updates one or more features in a Feature Source based on some filtering criteria Inherited Members IFeatureCommand.FeatureSourceId IFeatureCommand.ClassName ICommand.Parent Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public interface IUpdateFeatures : IFeatureCommand, ICommand Remarks This command is only supported on certain implementations of IServerConnection You can find out if the connection supports this command through the Capabilities Examples How to update all features matching a given filter to the given value IServerConnection conn = ...; IUpdateFeatures updateCmd = (IUpdateFeatures)conn.CreateCommand((int)CommandType.UpdateFeatures); updateCmd.FeatureSourceId = \"Library://My.FeatureSource\"; updateCmd.ClassName = \"MyFeatureClass\"; updateCmd.Filter = \"Name = 'Bar'\"; updateCmd.ValuesToUpdate = new MutableRecord(); updateCmd.ValuesToUpdate.PutValue(\"Name\", new StringValue(\"Foo\")); int updated = updateCmd.Execute(); Properties Filter Gets or sets the filter that determines which features will be updated. If empty, will cause all features to be updated Declaration string Filter { get; set; } Property Value Type Description System.String ValuesToUpdate Gets or sets the collection of values to apply Declaration IMutableRecord ValuesToUpdate { get; set; } Property Value Type Description IMutableRecord Methods Execute() Executes the command Declaration int Execute() Returns Type Description System.Int32 The number of features updated by this command"
  },
  "api/OSGeo.MapGuide.MaestroAPI.CoordinateSystem.ICoordinateSystemCatalog.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.CoordinateSystem.ICoordinateSystemCatalog.html",
    "title": "Interface ICoordinateSystemCatalog | MapGuide Maestro",
    "keywords": "Interface ICoordinateSystemCatalog Defines a coordinate system catalog Namespace : OSGeo.MapGuide.MaestroAPI.CoordinateSystem Assembly : cs.temp.dll.dll Syntax public interface ICoordinateSystemCatalog Examples This example uses the ICoordinateSystemCatalog to create a simple coordinate system transformation to transform points. IServerConnection conn; ... ICoordinateSystemCatalog csCatalog = conn.CoordinateSystemCatalog; //Find the source and target coordinate system definitions CoordinateSystemDefinitionBase srcCs = csCatalog.FindCoordSys(\"LL84\"); CoordinateSystemDefinitionBase dstCs = csCatalog.FindCoordSys(\"WGS84.PseudoMercator\"); //Create the transform using the WKTs of the source and target coordinate system definitions ISimpleTransform trans = csCatalog.CreateTransform(srcCs.WKT, dstCs.WKT); double x = -71.061342; double y = 42.355892; double tx; double ty; trans.Transform(x, y, out tx, out ty); //tx and ty will contain the transformed coordinates Properties Categories Gets an array of coordinate system categories Declaration CoordinateSystemCategory[] Categories { get; } Property Value Type Description CoordinateSystemCategory [] Coordsys Gets an array of all coordinate systems in this catalog Declaration CoordinateSystemDefinitionBase[] Coordsys { get; } Property Value Type Description CoordinateSystemDefinitionBase [] IsLoaded Gets whether the coordinate system catalog has been loaded Declaration bool IsLoaded { get; } Property Value Type Description System.Boolean LibraryName Gets the name of the coordinate system library Declaration string LibraryName { get; } Property Value Type Description System.String Methods ConvertCoordinateSystemCodeToWkt(String) Convers the specified coordinate system code to WKT Declaration string ConvertCoordinateSystemCodeToWkt(string coordcode) Parameters Type Name Description System.String coordcode Returns Type Description System.String ConvertEpsgCodeToWkt(String) Converts the specified epsg code to WKT Declaration string ConvertEpsgCodeToWkt(string epsg) Parameters Type Name Description System.String epsg Returns Type Description System.String ConvertWktToCoordinateSystemCode(String) Converts the specified WKT into a coordinate system code Declaration string ConvertWktToCoordinateSystemCode(string wkt) Parameters Type Name Description System.String wkt Returns Type Description System.String ConvertWktToEpsgCode(String) Converts the specified WKT into an EPSG code Declaration string ConvertWktToEpsgCode(string wkt) Parameters Type Name Description System.String wkt Returns Type Description System.String CreateCoordinateSystem(String) Creates a coordiante system from the given WKT Declaration ICoordinateSystemRef CreateCoordinateSystem(string wkt) Parameters Type Name Description System.String wkt Returns Type Description ICoordinateSystemRef CreateEmptyCoordinateSystem() Gets an empty coordinate system Declaration CoordinateSystemDefinitionBase CreateEmptyCoordinateSystem() Returns Type Description CoordinateSystemDefinitionBase CreateTransform(String, String) Creates a simple coordinate system transformation from the source and target WKT strings Declaration ISimpleTransform CreateTransform(string sourceWkt, string targetWkt) Parameters Type Name Description System.String sourceWkt System.String targetWkt Returns Type Description ISimpleTransform EnumerateCoordinateSystems(String) Gets an array of all coordinate systems in the specified category Declaration CoordinateSystemDefinitionBase[] EnumerateCoordinateSystems(string category) Parameters Type Name Description System.String category Returns Type Description CoordinateSystemDefinitionBase [] FindCoordSys(String) Gets the coordinate system that matches the specified code Declaration CoordinateSystemDefinitionBase FindCoordSys(string coordcode) Parameters Type Name Description System.String coordcode Returns Type Description CoordinateSystemDefinitionBase IsValid(String) Checks if the specified WKT is valid Declaration bool IsValid(string wkt) Parameters Type Name Description System.String wkt Returns Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.MaestroAPI.CoordinateSystem.ICoordinateSystemRef.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.CoordinateSystem.ICoordinateSystemRef.html",
    "title": "Interface ICoordinateSystemRef | MapGuide Maestro",
    "keywords": "Interface ICoordinateSystemRef A coordinate system Namespace : OSGeo.MapGuide.MaestroAPI.CoordinateSystem Assembly : cs.temp.dll.dll Syntax public interface ICoordinateSystemRef Properties MetersPerUnit The meters per unit Declaration double MetersPerUnit { get; } Property Value Type Description System.Double"
  },
  "api/OSGeo.MapGuide.MaestroAPI.CoordinateSystem.ISimpleTransform.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.CoordinateSystem.ISimpleTransform.html",
    "title": "Interface ISimpleTransform | MapGuide Maestro",
    "keywords": "Interface ISimpleTransform A simple coordinate transformation interface Namespace : OSGeo.MapGuide.MaestroAPI.CoordinateSystem Assembly : cs.temp.dll.dll Syntax public interface ISimpleTransform : IDisposable Methods Transform(Double, Double, out Double, out Double) Transforms the specified point Declaration void Transform(double x, double y, out double tx, out double ty) Parameters Type Name Description System.Double x The X coordinate System.Double y The Y coordinate System.Double tx The transformed X coordinate System.Double ty The transformed Y coordinate"
  },
  "api/OSGeo.MapGuide.MaestroAPI.CoordinateSystem.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.CoordinateSystem.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.CoordinateSystem | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.CoordinateSystem Classes CoordinateSystemCatalog Base coordinate system catalog class CoordinateSystemCategory Represents a coordinate system category CoordinateSystemDefinitionBase Represents a coordinate system definition DefaultSimpleTransform A simple transform that wraps the NTS coordinate system transformation APIs Interfaces ICoordinateSystemCatalog Defines a coordinate system catalog ICoordinateSystemRef A coordinate system ISimpleTransform A simple coordinate transformation interface"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Exceptions.MaestroException.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Exceptions.MaestroException.html",
    "title": "Class MaestroException | MapGuide Maestro",
    "keywords": "Class MaestroException Represents the base class of all exceptions that can be thrown from the Maestro API Inheritance System.Object MaestroException CustomPropertyNotFoundException ExpressionException ResourceConversionException SerializationException UnsupportedResourceTypeException UnsupportedServiceTypeException Namespace : OSGeo.MapGuide.MaestroAPI.Exceptions Assembly : cs.temp.dll.dll Syntax [Serializable] public class MaestroException : Exception Constructors MaestroException() Initializes a new instance of the MaestroException class. Declaration public MaestroException() MaestroException(SerializationInfo, StreamingContext) Initializes a new instance of the MaestroException class. Declaration protected MaestroException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Exceptions Type Condition System.ArgumentNullException The info parameter is null. System.Runtime.Serialization.SerializationException The class name is null or System.Exception.HResult is zero (0). MaestroException(String) Initializes a new instance of the MaestroException class. Declaration public MaestroException(string message) Parameters Type Name Description System.String message The message. MaestroException(String, Exception) Initializes a new instance of the MaestroException class. Declaration public MaestroException(string message, Exception inner) Parameters Type Name Description System.String message The message. Exception inner The inner."
  },
  "api/OSGeo.MapGuide.MaestroAPI.Exceptions.NestedExceptionMessageProcessor.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Exceptions.NestedExceptionMessageProcessor.html",
    "title": "Class NestedExceptionMessageProcessor | MapGuide Maestro",
    "keywords": "Class NestedExceptionMessageProcessor Helper class to process exception messages for exceptions that may contain one or more nested inner exceptions Inheritance System.Object NestedExceptionMessageProcessor Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Exceptions Assembly : cs.temp.dll.dll Syntax public static class NestedExceptionMessageProcessor Methods GetFullMessage(Exception) Returns a formatted string containing the main exception message and all messages within the System.Exception.InnerException properties Declaration public static string GetFullMessage(Exception error) Parameters Type Name Description Exception error The error. Returns Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Exceptions.NullExtentException.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Exceptions.NullExtentException.html",
    "title": "Class NullExtentException | MapGuide Maestro",
    "keywords": "Class NullExtentException Thrown when no result exists for a extent query Inheritance System.Object NullExtentException Namespace : OSGeo.MapGuide.MaestroAPI.Exceptions Assembly : cs.temp.dll.dll Syntax [Serializable] public class NullExtentException : Exception Constructors NullExtentException() Creates a new instance Declaration public NullExtentException() NullExtentException(SerializationInfo, StreamingContext) Creates a new instance Declaration protected NullExtentException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info System.Runtime.Serialization.StreamingContext context NullExtentException(String) Creates a new instance Declaration public NullExtentException(string message) Parameters Type Name Description System.String message NullExtentException(String, Exception) Creates a new instance Declaration public NullExtentException(string message, Exception inner) Parameters Type Name Description System.String message Exception inner"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Exceptions.ResourceConversionException.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Exceptions.ResourceConversionException.html",
    "title": "Class ResourceConversionException | MapGuide Maestro",
    "keywords": "Class ResourceConversionException Used to indicate failures in resource upgrades/downgrades Inheritance System.Object MaestroException ResourceConversionException Namespace : OSGeo.MapGuide.MaestroAPI.Exceptions Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourceConversionException : MaestroException Constructors ResourceConversionException() Initializes a new instance of the ResourceConversionException class. Declaration public ResourceConversionException() ResourceConversionException(SerializationInfo, StreamingContext) Initializes a new instance of the ResourceConversionException class. Declaration protected ResourceConversionException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Exceptions Type Condition System.ArgumentNullException The info parameter is null. System.Runtime.Serialization.SerializationException The class name is null or System.Exception.HResult is zero (0). ResourceConversionException(String) Initializes a new instance of the ResourceConversionException class. Declaration public ResourceConversionException(string message) Parameters Type Name Description System.String message The message. ResourceConversionException(String, Exception) Initializes a new instance of the ResourceConversionException class. Declaration public ResourceConversionException(string message, Exception inner) Parameters Type Name Description System.String message The message. Exception inner The inner."
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.ByteValue.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.ByteValue.html",
    "title": "Class ByteValue | MapGuide Maestro",
    "keywords": "Class ByteValue Stores byte data Inheritance System.Object PropertyValue ValueTypePropertyValue < System.Byte > ByteValue Inherited Members ValueTypePropertyValue<Byte>.IsNull ValueTypePropertyValue<Byte>.Value ValueTypePropertyValue<Byte>.SetNull() ValueTypePropertyValue<Byte>.PropertyDefType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class ByteValue : ValueTypePropertyValue<byte> Constructors ByteValue() Initializes this instance Declaration public ByteValue() ByteValue(Byte) Initializes this instance Declaration public ByteValue(byte value) Parameters Type Name Description System.Byte value Properties Type Gets the type. Declaration public override PropertyValueType Type { get; } Property Value Type Description PropertyValueType Overrides PropertyValue.Type Methods ValueAsString() Gets the value as a string Declaration public override string ValueAsString() Returns Type Description System.String Overrides PropertyValue.ValueAsString()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.ClobValue.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.ClobValue.html",
    "title": "Class ClobValue | MapGuide Maestro",
    "keywords": "Class ClobValue Stores clob data Inheritance System.Object PropertyValue ReferenceTypePropertyValue < System.Char []> ClobValue Inherited Members ReferenceTypePropertyValue<Char[]>.Value PropertyValue.IsNull PropertyValue.SetNull() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class ClobValue : ReferenceTypePropertyValue<char[]> Constructors ClobValue() Initializes a new instance Declaration public ClobValue() ClobValue(Char[]) Initializes a new instance Declaration public ClobValue(char[] value) Parameters Type Name Description System.Char [] value Properties PropertyDefType Gets the suggsted property definition type for this value Declaration public override PropertyDefinitionType PropertyDefType { get; } Property Value Type Description PropertyDefinitionType The suggsted property definition type. Overrides PropertyValue.PropertyDefType Type Gets the type. Declaration public override PropertyValueType Type { get; } Property Value Type Description PropertyValueType Overrides PropertyValue.Type Methods ValueAsString() Gets the value as a string Declaration public override string ValueAsString() Returns Type Description System.String Overrides PropertyValue.ValueAsString()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.ClrFdoTypeMap.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.ClrFdoTypeMap.html",
    "title": "Class ClrFdoTypeMap | MapGuide Maestro",
    "keywords": "Class ClrFdoTypeMap Helper class to map MapGuide/FDO data/property types to CLR data types Inheritance System.Object ClrFdoTypeMap Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public static class ClrFdoTypeMap Methods GetClrType(DataPropertyType) Gets the CLR type for the specified data type Declaration public static Type GetClrType(DataPropertyType dataPropertyType) Parameters Type Name Description DataPropertyType dataPropertyType Returns Type Description Type GetClrType(PropertyDefinition) Gets the clr type for the specified property definition Declaration public static Type GetClrType(PropertyDefinition prop) Parameters Type Name Description PropertyDefinition prop Returns Type Description Type GetClrType(PropertyValueType) Gets the CLR type for the specified property value type Declaration public static Type GetClrType(PropertyValueType propertyValueType) Parameters Type Name Description PropertyValueType propertyValueType Returns Type Description Type"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.DateTimeValue.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.DateTimeValue.html",
    "title": "Class DateTimeValue | MapGuide Maestro",
    "keywords": "Class DateTimeValue Stores datetime data Inheritance System.Object PropertyValue ValueTypePropertyValue < DateTime > DateTimeValue Inherited Members ValueTypePropertyValue<DateTime>.IsNull ValueTypePropertyValue<DateTime>.Value ValueTypePropertyValue<DateTime>.SetNull() ValueTypePropertyValue<DateTime>.PropertyDefType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class DateTimeValue : ValueTypePropertyValue<DateTime> Constructors DateTimeValue() Initializes a new instance Declaration public DateTimeValue() DateTimeValue(DateTime) Initializes a new instance Declaration public DateTimeValue(DateTime value) Parameters Type Name Description DateTime value Properties Type Gets the type. Declaration public override PropertyValueType Type { get; } Property Value Type Description PropertyValueType Overrides PropertyValue.Type Methods ValueAsString() Gets the value as a string Declaration public override string ValueAsString() Returns Type Description System.String Overrides PropertyValue.ValueAsString()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.IMutableFeature.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.IMutableFeature.html",
    "title": "Interface IMutableFeature | MapGuide Maestro",
    "keywords": "Interface IMutableFeature Defines a mutable feature record Inherited Members IMutableRecord.Item[Int32] IMutableRecord.Item[String] IMutableRecord.SetNull(String) IMutableRecord.SetNull(Int32) IMutableRecord.SetBoolean(String, Boolean) IMutableRecord.SetByte(String, Byte) IMutableRecord.SetBlob(String, Byte[]) IMutableRecord.SetClob(String, Char[]) IMutableRecord.SetDouble(String, Double) IMutableRecord.SetDateTime(String, DateTime) IMutableRecord.SetInt16(String, Int16) IMutableRecord.SetInt32(String, Int32) IMutableRecord.SetInt64(String, Int64) IMutableRecord.SetSingle(String, Single) IMutableRecord.SetString(String, String) IMutableRecord.SetGeometry(String, IGeometryRef) IMutableRecord.SetBoolean(Int32, Boolean) IMutableRecord.SetByte(Int32, Byte) IMutableRecord.SetBlob(Int32, Byte[]) IMutableRecord.SetClob(Int32, Char[]) IMutableRecord.SetDouble(Int32, Double) IMutableRecord.SetDateTime(Int32, DateTime) IMutableRecord.SetInt16(Int32, Int16) IMutableRecord.SetInt32(Int32, Int32) IMutableRecord.SetInt64(Int32, Int64) IMutableRecord.SetSingle(Int32, Single) IMutableRecord.SetString(Int32, String) IMutableRecord.SetGeometry(Int32, IGeometryRef) IRecord.FieldCount IRecord.GetName(Int32) IRecord.GetFieldType(Int32) IRecord.IsNull(String) IRecord.IsNull(Int32) IRecord.GetBoolean(String) IRecord.GetByte(String) IRecord.GetBlob(String) IRecord.GetClob(String) IRecord.GetDouble(String) IRecord.GetDateTime(String) IRecord.GetInt16(String) IRecord.GetInt32(String) IRecord.GetInt64(String) IRecord.GetSingle(String) IRecord.GetString(String) IRecord.GetGeometry(String) IRecord.GetBoolean(Int32) IRecord.GetByte(Int32) IRecord.GetBlob(Int32) IRecord.GetClob(Int32) IRecord.GetDouble(Int32) IRecord.GetDateTime(Int32) IRecord.GetInt16(Int32) IRecord.GetInt32(Int32) IRecord.GetInt64(Int32) IRecord.GetSingle(Int32) IRecord.GetString(Int32) IRecord.GetGeometry(Int32) IRecord.GetPropertyType(String) IRecord.GetPropertyType(Int32) IRecordInitialize.PropertyNames IRecordInitialize.GetValue(String) IRecordInitialize.PutValue(String, PropertyValue) Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public interface IMutableFeature : IMutableRecord, IRecord, IRecordInitialize Properties ClassDefinition Gets the class definition of the object currently being read. If the user has requested only a subset of the class properties (as specified in the filter text), the class definition reflects what the user has requested, rather than the full class definition. Declaration ClassDefinition ClassDefinition { get; } Property Value Type Description ClassDefinition Methods GetFeatureObject(Int32) Gets a IFeatureReader containing all the nested features at the specified index Declaration IFeatureReader GetFeatureObject(int index) Parameters Type Name Description System.Int32 index Returns Type Description IFeatureReader GetFeatureObject(String) Gets a IFeatureReader containing all the nested features of the specified property Declaration IFeatureReader GetFeatureObject(string name) Parameters Type Name Description System.String name Returns Type Description IFeatureReader"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.IMutableRecord.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.IMutableRecord.html",
    "title": "Interface IMutableRecord | MapGuide Maestro",
    "keywords": "Interface IMutableRecord Defines a records whose properties can be modified Inherited Members IRecord.FieldCount IRecord.GetName(Int32) IRecord.GetFieldType(Int32) IRecord.IsNull(String) IRecord.IsNull(Int32) IRecord.GetBoolean(String) IRecord.GetByte(String) IRecord.GetBlob(String) IRecord.GetClob(String) IRecord.GetDouble(String) IRecord.GetDateTime(String) IRecord.GetInt16(String) IRecord.GetInt32(String) IRecord.GetInt64(String) IRecord.GetSingle(String) IRecord.GetString(String) IRecord.GetGeometry(String) IRecord.GetBoolean(Int32) IRecord.GetByte(Int32) IRecord.GetBlob(Int32) IRecord.GetClob(Int32) IRecord.GetDouble(Int32) IRecord.GetDateTime(Int32) IRecord.GetInt16(Int32) IRecord.GetInt32(Int32) IRecord.GetInt64(Int32) IRecord.GetSingle(Int32) IRecord.GetString(Int32) IRecord.GetGeometry(Int32) IRecord.GetPropertyType(String) IRecord.GetPropertyType(Int32) IRecordInitialize.PropertyNames IRecordInitialize.GetValue(String) IRecordInitialize.PutValue(String, PropertyValue) Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public interface IMutableRecord : IRecord, IRecordInitialize Remarks The default implementation of this interface is MutableRecord Properties Item[Int32] Gets or sets the object at the specified index Declaration object this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Object Item[String] Gets or sets the object value for the specified property Declaration object this[string name] { get; set; } Parameters Type Name Description System.String name Property Value Type Description System.Object Methods SetBlob(Int32, Byte[]) Sets the blob value at the specified index Declaration void SetBlob(int index, byte[] value) Parameters Type Name Description System.Int32 index System.Byte [] value SetBlob(String, Byte[]) Sets the blob value of the specified property Declaration void SetBlob(string name, byte[] value) Parameters Type Name Description System.String name System.Byte [] value SetBoolean(Int32, Boolean) Sets the boolean value at the specified index Declaration void SetBoolean(int index, bool value) Parameters Type Name Description System.Int32 index System.Boolean value SetBoolean(String, Boolean) Sets the boolean value of the specified property Declaration void SetBoolean(string name, bool value) Parameters Type Name Description System.String name System.Boolean value SetByte(Int32, Byte) Sets the byte value at the specified index Declaration void SetByte(int index, byte value) Parameters Type Name Description System.Int32 index System.Byte value SetByte(String, Byte) Sets the byte value of the specified property Declaration void SetByte(string name, byte value) Parameters Type Name Description System.String name System.Byte value SetClob(Int32, Char[]) Sets the clob value at the specified index Declaration void SetClob(int index, char[] value) Parameters Type Name Description System.Int32 index System.Char [] value SetClob(String, Char[]) Sets the clob value of the specified property Declaration void SetClob(string name, char[] value) Parameters Type Name Description System.String name System.Char [] value SetDateTime(Int32, DateTime) Sets the datetime value at the specified index Declaration void SetDateTime(int index, DateTime value) Parameters Type Name Description System.Int32 index DateTime value SetDateTime(String, DateTime) Sets the datetime value of the specified property Declaration void SetDateTime(string name, DateTime value) Parameters Type Name Description System.String name DateTime value SetDouble(Int32, Double) Sets the double value at the specified index Declaration void SetDouble(int index, double value) Parameters Type Name Description System.Int32 index System.Double value SetDouble(String, Double) Sets the double value of the specified property Declaration void SetDouble(string name, double value) Parameters Type Name Description System.String name System.Double value SetGeometry(Int32, IGeometryRef) Sets the geometry value at the specified index Declaration void SetGeometry(int index, IGeometryRef value) Parameters Type Name Description System.Int32 index IGeometryRef value SetGeometry(String, IGeometryRef) Sets the geometry value of the specified property Declaration void SetGeometry(string name, IGeometryRef value) Parameters Type Name Description System.String name IGeometryRef value SetInt16(Int32, Int16) Sets the int16 value at the specified index Declaration void SetInt16(int index, short value) Parameters Type Name Description System.Int32 index System.Int16 value SetInt16(String, Int16) Sets the int16 value of the specified property Declaration void SetInt16(string name, short value) Parameters Type Name Description System.String name System.Int16 value SetInt32(Int32, Int32) Sets the int32 value at the specified index Declaration void SetInt32(int index, int value) Parameters Type Name Description System.Int32 index System.Int32 value SetInt32(String, Int32) Sets the int32 value of the specified property Declaration void SetInt32(string name, int value) Parameters Type Name Description System.String name System.Int32 value SetInt64(Int32, Int64) Sets the int64 value at the specified index Declaration void SetInt64(int index, long value) Parameters Type Name Description System.Int32 index System.Int64 value SetInt64(String, Int64) Sets the int64 value of the specified property Declaration void SetInt64(string name, long value) Parameters Type Name Description System.String name System.Int64 value SetNull(Int32) Sets whether the property value at the specified index has a null property value. Declaration void SetNull(int index) Parameters Type Name Description System.Int32 index SetNull(String) Sets whether the specified property name has a null property value Declaration void SetNull(string name) Parameters Type Name Description System.String name SetSingle(Int32, Single) Sets the single value at the specified index Declaration void SetSingle(int index, float value) Parameters Type Name Description System.Int32 index System.Single value SetSingle(String, Single) Sets the single value of the specified property Declaration void SetSingle(string name, float value) Parameters Type Name Description System.String name System.Single value SetString(Int32, String) Sets the string value at the specified index Declaration void SetString(int index, string value) Parameters Type Name Description System.Int32 index System.String value SetString(String, String) Sets the string value of the specified property Declaration void SetString(string name, string value) Parameters Type Name Description System.String name System.String value"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.Int16Value.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.Int16Value.html",
    "title": "Class Int16Value | MapGuide Maestro",
    "keywords": "Class Int16Value Stores int16 data Inheritance System.Object PropertyValue ValueTypePropertyValue < System.Int16 > Int16Value Inherited Members ValueTypePropertyValue<Int16>.IsNull ValueTypePropertyValue<Int16>.Value ValueTypePropertyValue<Int16>.SetNull() ValueTypePropertyValue<Int16>.PropertyDefType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class Int16Value : ValueTypePropertyValue<short> Constructors Int16Value() Initializes a new instance Declaration public Int16Value() Int16Value(Int16) Initializes a new instance Declaration public Int16Value(short value) Parameters Type Name Description System.Int16 value Properties Type Gets the type. Declaration public override PropertyValueType Type { get; } Property Value Type Description PropertyValueType Overrides PropertyValue.Type Methods ValueAsString() Gets the value as a string Declaration public override string ValueAsString() Returns Type Description System.String Overrides PropertyValue.ValueAsString()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.Int32Value.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.Int32Value.html",
    "title": "Class Int32Value | MapGuide Maestro",
    "keywords": "Class Int32Value Stores int32 data Inheritance System.Object PropertyValue ValueTypePropertyValue < System.Int32 > Int32Value Inherited Members ValueTypePropertyValue<Int32>.IsNull ValueTypePropertyValue<Int32>.Value ValueTypePropertyValue<Int32>.SetNull() ValueTypePropertyValue<Int32>.PropertyDefType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class Int32Value : ValueTypePropertyValue<int> Constructors Int32Value() Initializes a new instance Declaration public Int32Value() Int32Value(Int32) Initializes a new instance Declaration public Int32Value(int value) Parameters Type Name Description System.Int32 value Properties Type Gets the type. Declaration public override PropertyValueType Type { get; } Property Value Type Description PropertyValueType Overrides PropertyValue.Type Methods ValueAsString() Gets the value as a string Declaration public override string ValueAsString() Returns Type Description System.String Overrides PropertyValue.ValueAsString()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.MutableRecordBase.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.MutableRecordBase.html",
    "title": "Class MutableRecordBase | MapGuide Maestro",
    "keywords": "Class MutableRecordBase A record whose properties can be modified Inheritance System.Object RecordBase MutableRecordBase MutableFeatureBase MutableRecord Implements IRecordReset IMutableRecord IRecord IRecordInitialize Inherited Members RecordBase._values RecordBase._ordinalMap RecordBase.GetValue(String) RecordBase.PropertyExists(String) RecordBase.PutValue(String, PropertyValue) RecordBase.IsNull(String) RecordBase.IsNull(Int32) RecordBase.GetBoolean(String) RecordBase.GetByte(String) RecordBase.GetBlob(String) RecordBase.GetClob(String) RecordBase.GetDouble(String) RecordBase.GetDateTime(String) RecordBase.GetFeatureObject(String) RecordBase.GetInt16(String) RecordBase.GetInt32(String) RecordBase.GetInt64(String) RecordBase.GetSingle(String) RecordBase.GetString(String) RecordBase.GetGeometry(String) RecordBase.GetBoolean(Int32) RecordBase.GetByte(Int32) RecordBase.GetBlob(Int32) RecordBase.GetClob(Int32) RecordBase.GetDouble(Int32) RecordBase.IRecord.GetDateTime(Int32) RecordBase.GetFeatureObject(Int32) RecordBase.GetInt16(Int32) RecordBase.GetInt32(Int32) RecordBase.GetInt64(Int32) RecordBase.GetSingle(Int32) RecordBase.GetString(Int32) RecordBase.GetGeometry(Int32) RecordBase.FieldCount RecordBase.GetName(Int32) RecordBase.GetFieldType(Int32) RecordBase.Update(IRecord) RecordBase.PropertyNames RecordBase.GetPropertyType(String) RecordBase.GetPropertyType(Int32) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class MutableRecordBase : RecordBase, IRecordReset, IMutableRecord, IRecord, IRecordInitialize Constructors MutableRecordBase(IRecordInitialize) Creates a new instance Declaration protected MutableRecordBase(IRecordInitialize prototype) Parameters Type Name Description IRecordInitialize prototype Properties Item[Int32] Gets or sets the System.Object at the specified index. Declaration public object this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Object Item[String] Gets or sets the System.Object with the specified name. Declaration public object this[string name] { get; set; } Parameters Type Name Description System.String name Property Value Type Description System.Object Methods ClonePropertyValue(PropertyValue) Creates a clone of the specified PropertyValue Declaration protected PropertyValue ClonePropertyValue(PropertyValue propertyValue) Parameters Type Name Description PropertyValue propertyValue The instance to clone Returns Type Description PropertyValue The cloned instance SetBlob(Int32, Byte[]) Sets the blob value at the specified index Declaration public void SetBlob(int index, byte[] value) Parameters Type Name Description System.Int32 index System.Byte [] value SetBlob(String, Byte[]) Sets the blob value of the specified property Declaration public void SetBlob(string name, byte[] value) Parameters Type Name Description System.String name System.Byte [] value SetBoolean(Int32, Boolean) Sets the boolean value at the specified index Declaration public void SetBoolean(int index, bool value) Parameters Type Name Description System.Int32 index System.Boolean value SetBoolean(String, Boolean) Sets the boolean value of the specified property Declaration public void SetBoolean(string name, bool value) Parameters Type Name Description System.String name System.Boolean value SetByte(Int32, Byte) Sets the byte value at the specified index Declaration public void SetByte(int index, byte value) Parameters Type Name Description System.Int32 index System.Byte value SetByte(String, Byte) Sets the byte value of the specified property Declaration public void SetByte(string name, byte value) Parameters Type Name Description System.String name System.Byte value SetClob(Int32, Char[]) Sets the clob value at the specified index Declaration public void SetClob(int index, char[] value) Parameters Type Name Description System.Int32 index System.Char [] value SetClob(String, Char[]) Sets the clob value of the specified property Declaration public void SetClob(string name, char[] value) Parameters Type Name Description System.String name System.Char [] value SetDateTime(Int32, DateTime) Sets the datetime value at the specified index Declaration public void SetDateTime(int index, DateTime value) Parameters Type Name Description System.Int32 index DateTime value SetDateTime(String, DateTime) Sets the datetime value of the specified property Declaration public void SetDateTime(string name, DateTime value) Parameters Type Name Description System.String name DateTime value SetDouble(Int32, Double) Sets the double value at the specified index Declaration public void SetDouble(int index, double value) Parameters Type Name Description System.Int32 index System.Double value SetDouble(String, Double) Sets the double value of the specified property Declaration public void SetDouble(string name, double value) Parameters Type Name Description System.String name System.Double value SetGeometry(Int32, IGeometryRef) Sets the geometry value at the specified index Declaration public void SetGeometry(int index, IGeometryRef value) Parameters Type Name Description System.Int32 index IGeometryRef value SetGeometry(String, IGeometryRef) Sets the geometry value of the specified property Declaration public void SetGeometry(string name, IGeometryRef value) Parameters Type Name Description System.String name IGeometryRef value SetInt16(Int32, Int16) Sets the int16 value at the specified index Declaration public void SetInt16(int index, short value) Parameters Type Name Description System.Int32 index System.Int16 value SetInt16(String, Int16) Sets the int16 value of the specified property Declaration public void SetInt16(string name, short value) Parameters Type Name Description System.String name System.Int16 value SetInt32(Int32, Int32) Sets the int32 value at the specified index Declaration public void SetInt32(int index, int value) Parameters Type Name Description System.Int32 index System.Int32 value SetInt32(String, Int32) Sets the int32 value of the specified property Declaration public void SetInt32(string name, int value) Parameters Type Name Description System.String name System.Int32 value SetInt64(Int32, Int64) Sets the int64 value at the specified index Declaration public void SetInt64(int index, long value) Parameters Type Name Description System.Int32 index System.Int64 value SetInt64(String, Int64) Sets the int64 value of the specified property Declaration public void SetInt64(string name, long value) Parameters Type Name Description System.String name System.Int64 value SetNull(Int32) Sets whether the property value at the specified index has a null property value. Declaration public void SetNull(int index) Parameters Type Name Description System.Int32 index SetNull(String) Sets whether the specified property name has a null property value Declaration public void SetNull(string name) Parameters Type Name Description System.String name SetSingle(Int32, Single) Sets the single value at the specified index Declaration public void SetSingle(int index, float value) Parameters Type Name Description System.Int32 index System.Single value SetSingle(String, Single) Sets the single value of the specified property Declaration public void SetSingle(string name, float value) Parameters Type Name Description System.String name System.Single value SetString(Int32, String) Sets the string value at the specified index Declaration public void SetString(int index, string value) Parameters Type Name Description System.Int32 index System.String value SetString(String, String) Sets the string value of the specified property Declaration public void SetString(string name, string value) Parameters Type Name Description System.String name System.String value Implements IRecordReset IMutableRecord IRecord IRecordInitialize"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.PropertyValue.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.PropertyValue.html",
    "title": "Class PropertyValue | MapGuide Maestro",
    "keywords": "Class PropertyValue Base class of all MapGuide property values. Functions as a nullable box type around an underlying data type Inheritance System.Object PropertyValue ReferenceTypePropertyValue<T> ValueTypePropertyValue<T> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public abstract class PropertyValue Constructors PropertyValue() Initializes a new instance of the PropertyValue class. Declaration protected PropertyValue() Properties IsNull Gets or sets a value indicating whether this instance is null. Declaration public virtual bool IsNull { get; protected set; } Property Value Type Description System.Boolean true if this instance is null; otherwise, false . PropertyDefType Gets the suggsted property definition type for this value Declaration public abstract PropertyDefinitionType PropertyDefType { get; } Property Value Type Description PropertyDefinitionType The suggsted property definition type. Type Gets the type. Declaration public abstract PropertyValueType Type { get; } Property Value Type Description PropertyValueType Methods SetNull() Sets the value to null. Declaration public virtual void SetNull() ValueAsString() Gets the value as a string Declaration public abstract string ValueAsString() Returns Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.RasterValue.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.RasterValue.html",
    "title": "Class RasterValue | MapGuide Maestro",
    "keywords": "Class RasterValue Stores raster data Inheritance System.Object PropertyValue ReferenceTypePropertyValue < System.Byte []> RasterValue Inherited Members ReferenceTypePropertyValue<Byte[]>.Value PropertyValue.IsNull PropertyValue.SetNull() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class RasterValue : ReferenceTypePropertyValue<byte[]> Constructors RasterValue() Initializes a new instance Declaration public RasterValue() RasterValue(Byte[]) Initializes a new instance Declaration public RasterValue(byte[] value) Parameters Type Name Description System.Byte [] value Properties PropertyDefType Gets the suggsted property definition type for this value Declaration public override PropertyDefinitionType PropertyDefType { get; } Property Value Type Description PropertyDefinitionType The suggsted property definition type. Overrides PropertyValue.PropertyDefType Type Gets the type. Declaration public override PropertyValueType Type { get; } Property Value Type Description PropertyValueType Overrides PropertyValue.Type Methods ValueAsString() Gets the value as a string Declaration public override string ValueAsString() Returns Type Description System.String Overrides PropertyValue.ValueAsString()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.ReaderBase.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.ReaderBase.html",
    "title": "Class ReaderBase | MapGuide Maestro",
    "keywords": "Class ReaderBase Base implementation of the IReader interface Inheritance System.Object ReaderBase FeatureReaderBase Implements IReader IDisposable IRecord Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public abstract class ReaderBase : IReader, IDisposable, IRecord Properties Current Gets the current iterated record Declaration public IRecord Current { get; } Property Value Type Description IRecord FieldCount Gets the number of fields in this record Declaration public int FieldCount { get; protected set; } Property Value Type Description System.Int32 Item[Int32] Gets the System.Object at the specified index. Declaration public object this[int index] { get; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Object Item[String] Gets the System.Object with the specified name. Declaration public object this[string name] { get; } Parameters Type Name Description System.String name Property Value Type Description System.Object ReaderType Gets the type of the reader. Declaration public abstract ReaderType ReaderType { get; } Property Value Type Description ReaderType The type of the reader. Methods Close() Closes the object, freeing any resources it may be holding. Declaration public virtual void Close() Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Dispose(Boolean) Dispose of this instance Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing Finalize() Finalizer Declaration protected void Finalize() GetBlob(Int32) Gets the blob value at the specified index Declaration public byte[] GetBlob(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Byte [] GetBlob(String) Gets the blob value of the specified property Declaration public byte[] GetBlob(string name) Parameters Type Name Description System.String name Returns Type Description System.Byte [] GetBoolean(Int32) Gets the boolean value at the specified index Declaration public bool GetBoolean(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Boolean GetBoolean(String) Gets the boolean value of the specified property Declaration public bool GetBoolean(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean GetByte(Int32) Gets the byte value at the specified index Declaration public byte GetByte(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Byte GetByte(String) Gets the byte value of the specified property Declaration public byte GetByte(string name) Parameters Type Name Description System.String name Returns Type Description System.Byte GetClob(Int32) Gets the clob value at the specified index Declaration public char[] GetClob(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Char [] GetClob(String) Gets the clob value of the specified property Declaration public char[] GetClob(string name) Parameters Type Name Description System.String name Returns Type Description System.Char [] GetDateTime(Int32) Gets the datetime value at the specified index Declaration public DateTime GetDateTime(int index) Parameters Type Name Description System.Int32 index Returns Type Description DateTime GetDateTime(String) Gets the datetime value of the specified property Declaration public DateTime GetDateTime(string name) Parameters Type Name Description System.String name Returns Type Description DateTime GetDouble(Int32) Gets the double value at the specified index Declaration public double GetDouble(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Double GetDouble(String) Gets the double value of the specified property Declaration public double GetDouble(string name) Parameters Type Name Description System.String name Returns Type Description System.Double GetFieldType(Int32) Gets the CLR type of the field at the specified index Declaration public abstract Type GetFieldType(int i) Parameters Type Name Description System.Int32 i Returns Type Description Type GetGeometry(Int32) Gets the geometry value at the specified index Declaration public IGeometryRef GetGeometry(int index) Parameters Type Name Description System.Int32 index Returns Type Description IGeometryRef GetGeometry(String) Gets the geometry value of the specified property Declaration public IGeometryRef GetGeometry(string name) Parameters Type Name Description System.String name Returns Type Description IGeometryRef GetInt16(Int32) Gets the int16 value at the specified index Declaration public short GetInt16(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Int16 GetInt16(String) Gets the int16 value of the specified property Declaration public short GetInt16(string name) Parameters Type Name Description System.String name Returns Type Description System.Int16 GetInt32(Int32) Gets the int32 value at the specified index Declaration public int GetInt32(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Int32 GetInt32(String) Gets the int32 value of the specified property Declaration public int GetInt32(string name) Parameters Type Name Description System.String name Returns Type Description System.Int32 GetInt64(Int32) Gets the int64 value at the specified index Declaration public long GetInt64(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Int64 GetInt64(String) Gets the int64 value of the specified property Declaration public long GetInt64(string name) Parameters Type Name Description System.String name Returns Type Description System.Int64 GetName(Int32) Gets the name of the field at the specified index Declaration public abstract string GetName(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.String GetPropertyType(Int32) Gets the type of the property at the specified index. Declaration public abstract PropertyValueType GetPropertyType(int index) Parameters Type Name Description System.Int32 index The index. Returns Type Description PropertyValueType GetPropertyType(String) Gets the type of the property. Declaration public abstract PropertyValueType GetPropertyType(string name) Parameters Type Name Description System.String name The name. Returns Type Description PropertyValueType GetSingle(Int32) Gets the single value at the specified index Declaration public float GetSingle(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Single GetSingle(String) Gets the single value of the specified property Declaration public float GetSingle(string name) Parameters Type Name Description System.String name Returns Type Description System.Single GetString(Int32) Gets the string value at the specified index Declaration public string GetString(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.String GetString(String) Gets the string value of the specified property Declaration public string GetString(string name) Parameters Type Name Description System.String name Returns Type Description System.String IsNull(Int32) Gets whether the property value at the specified index has a null property value. You must call this method first to determine if it is safe to call the corresponding GetXXX() methods Declaration public bool IsNull(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Boolean IsNull(String) Gets whether the specified property name has a null property value Declaration public bool IsNull(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean ReadNext() Advances the reader to the next item and determines whether there is another object to read. Declaration public bool ReadNext() Returns Type Description System.Boolean ReadNextRecord() Reads the next record. Declaration protected abstract IRecord ReadNextRecord() Returns Type Description IRecord Implements IReader IDisposable IRecord"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Geometry.IGeometryTextReader.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Geometry.IGeometryTextReader.html",
    "title": "Interface IGeometryTextReader | MapGuide Maestro",
    "keywords": "Interface IGeometryTextReader Creates geometry instances from well-known text strings Namespace : OSGeo.MapGuide.MaestroAPI.Geometry Assembly : cs.temp.dll.dll Syntax public interface IGeometryTextReader Methods Read(String) Creates a geometry instance from the given well-known text string Declaration IGeometryRef Read(string wellKnownText) Parameters Type Name Description System.String wellKnownText Returns Type Description IGeometryRef"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Geometry.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Geometry.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.Geometry | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.Geometry Interfaces IGeometryRef Defines a geometry instance IGeometryTextReader Creates geometry instances from well-known text strings"
  },
  "api/OSGeo.MapGuide.MaestroAPI.HttpCoordinateSystemDefinition.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.HttpCoordinateSystemDefinition.html",
    "title": "Class HttpCoordinateSystemDefinition | MapGuide Maestro",
    "keywords": "Class HttpCoordinateSystemDefinition Interface to MapGuide coordinate system functions. Only works with server > 1.2, since the coordinate mapping is not avalible through Http on older versions Inheritance System.Object CoordinateSystemDefinitionBase HttpCoordinateSystemDefinition Inherited Members CoordinateSystemDefinitionBase.m_parent CoordinateSystemDefinitionBase.m_code CoordinateSystemDefinitionBase.m_description CoordinateSystemDefinitionBase.m_projection CoordinateSystemDefinitionBase.m_projectionDescription CoordinateSystemDefinitionBase.m_datum CoordinateSystemDefinitionBase.m_datumDescription CoordinateSystemDefinitionBase.m_ellipsoid CoordinateSystemDefinitionBase.m_ellipsoidDescription CoordinateSystemDefinitionBase.m_wkt CoordinateSystemDefinitionBase.m_epsg CoordinateSystemDefinitionBase.Code CoordinateSystemDefinitionBase.Description CoordinateSystemDefinitionBase.Projection CoordinateSystemDefinitionBase.ProjectionDescription CoordinateSystemDefinitionBase.Datum CoordinateSystemDefinitionBase.DatumDescription CoordinateSystemDefinitionBase.Ellipsoid CoordinateSystemDefinitionBase.EllipsoidDescription CoordinateSystemDefinitionBase.WKT CoordinateSystemDefinitionBase.EPSG CoordinateSystemDefinitionBase.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public class HttpCoordinateSystemDefinition : CoordinateSystemDefinitionBase"
  },
  "api/OSGeo.MapGuide.MaestroAPI.HttpServerConnectionParams.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.HttpServerConnectionParams.html",
    "title": "Class HttpServerConnectionParams | MapGuide Maestro",
    "keywords": "Class HttpServerConnectionParams HTTP connection provider parameters Inheritance System.Object HttpServerConnectionParams Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public static class HttpServerConnectionParams Fields PARAM_LOCALE Locale Declaration public const string PARAM_LOCALE = \"Locale\" Field Value Type Description System.String PARAM_PASSWORD Password Declaration public const string PARAM_PASSWORD = \"Password\" Field Value Type Description System.String PARAM_SESSION Session ID Declaration public const string PARAM_SESSION = \"SessionId\" Field Value Type Description System.String PARAM_UNTESTED Allow untested versions Declaration public const string PARAM_UNTESTED = \"AllowUntestedVersion\" Field Value Type Description System.String PARAM_URL URL Declaration public const string PARAM_URL = \"Url\" Field Value Type Description System.String PARAM_USERNAME Username Declaration public const string PARAM_USERNAME = \"Username\" Field Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.LengthyOperationCallbackArgs.LengthyOperationItem.OperationStatus.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.LengthyOperationCallbackArgs.LengthyOperationItem.OperationStatus.html",
    "title": "Enum LengthyOperationCallbackArgs.LengthyOperationItem.OperationStatus | MapGuide Maestro",
    "keywords": "Enum LengthyOperationCallbackArgs.LengthyOperationItem.OperationStatus Defines the possible operation status values Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public enum OperationStatus Fields Name Description Failure Failure None None Pending Pending Success Success"
  },
  "api/OSGeo.MapGuide.MaestroAPI.LengthyOperationCallbackArgs.LengthyOperationItem.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.LengthyOperationCallbackArgs.LengthyOperationItem.html",
    "title": "Class LengthyOperationCallbackArgs.LengthyOperationItem | MapGuide Maestro",
    "keywords": "Class LengthyOperationCallbackArgs.LengthyOperationItem Inheritance System.Object LengthyOperationCallbackArgs.LengthyOperationItem Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public class LengthyOperationItem Constructors LengthyOperationItem(String) Initializes a new instance of the LengthyOperationCallbackArgs.LengthyOperationItem class. Declaration public LengthyOperationItem(string path) Parameters Type Name Description System.String path The path. Properties Itempath Gets the item path Declaration public string Itempath { get; } Property Value Type Description System.String Status Gets or sets the operation status Declaration public LengthyOperationCallbackArgs.LengthyOperationItem.OperationStatus Status { get; set; } Property Value Type Description LengthyOperationCallbackArgs.LengthyOperationItem.OperationStatus"
  },
  "api/OSGeo.MapGuide.MaestroAPI.LengthyOperationCallbackArgs.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.LengthyOperationCallbackArgs.html",
    "title": "Class LengthyOperationCallbackArgs | MapGuide Maestro",
    "keywords": "Class LengthyOperationCallbackArgs Represents progress of a lengthy operation Inheritance System.Object LengthyOperationCallbackArgs Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public class LengthyOperationCallbackArgs Constructors LengthyOperationCallbackArgs(LengthyOperationCallbackArgs.LengthyOperationItem[]) Initializes a new instance of the LengthyOperationCallbackArgs class. Declaration public LengthyOperationCallbackArgs(LengthyOperationCallbackArgs.LengthyOperationItem[] items) Parameters Type Name Description LengthyOperationCallbackArgs.LengthyOperationItem [] items The items. Properties Cancel Gets or sets whether this lengthy operation should be cancelled Declaration public bool Cancel { get; set; } Property Value Type Description System.Boolean Index Gets or sets the index Declaration public int Index { get; set; } Property Value Type Description System.Int32 Items Gets the operation items Declaration public LengthyOperationCallbackArgs.LengthyOperationItem[] Items { get; } Property Value Type Description LengthyOperationCallbackArgs.LengthyOperationItem []"
  },
  "api/OSGeo.MapGuide.MaestroAPI.LengthyOperationProgressArgs.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.LengthyOperationProgressArgs.html",
    "title": "Class LengthyOperationProgressArgs | MapGuide Maestro",
    "keywords": "Class LengthyOperationProgressArgs Represents progress of a lengthy operation Inheritance System.Object LengthyOperationProgressArgs Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public class LengthyOperationProgressArgs Constructors LengthyOperationProgressArgs(String, Int32) Initializes a new instance of the LengthyOperationProgressArgs class. Declaration public LengthyOperationProgressArgs(string message, int progress) Parameters Type Name Description System.String message The message. System.Int32 progress The progress. Fields Cancel Indicates whether a cancel request has been made Declaration public bool Cancel Field Value Type Description System.Boolean Progress The progress percentage Declaration public int Progress Field Value Type Description System.Int32 StatusMessage The message Declaration public string StatusMessage Field Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Mapping.PropertyInfo.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Mapping.PropertyInfo.html",
    "title": "Class PropertyInfo | MapGuide Maestro",
    "keywords": "Class PropertyInfo Describes a FDO property Inheritance System.Object PropertyInfo Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Mapping Assembly : cs.temp.dll.dll Syntax public class PropertyInfo Constructors PropertyInfo(String, Type) Initializes a new instance of the PropertyInfo class. Declaration public PropertyInfo(string name, Type type) Parameters Type Name Description System.String name The name. Type type The type. Properties Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description System.String The name. Type Gets or sets the type. Declaration public Type Type { get; set; } Property Value Type Description Type The type."
  },
  "api/OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMap.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMap.html",
    "title": "Class RuntimeMap | MapGuide Maestro",
    "keywords": "Class RuntimeMap Represents a runtime instance of a Map Definition Inheritance System.Object MapObservable RuntimeMap Inherited Members MapObservable._disableChangeTracking MapObservable.SetField<T>(T, T, String) MapObservable.ObservableSet<T>(T, T, Action<T>, String) MapObservable.PropertyChanged Namespace : OSGeo.MapGuide.MaestroAPI.Mapping Assembly : cs.temp.dll.dll Syntax public class RuntimeMap : MapObservable Remarks If you want to use this instance with the Rendering Service APIs, it is important to set the correct meters per unit value before calling the Save() method, as an incorrect meters per unit value will produce incorrect images. Also note that to improve the creation performance, certain implementations of IServerConnection offer a OSGeo.MapGuide.MaestroAPI.Mapping.IRuntimeMapSetup helper to return a series of layer definitions in a batch (fetching layer definitions one at a time is the main performance bottleneck for large maps), batching can improve creation times by: HTTP: 2x Local: 3x (if using MapGuide 2.2 APIs. As this takes advantage of the GetResourceContents() API introduced in 2.2). For older versions of MapGuide there is no batching. In particular, the HTTP implementation of OSGeo.MapGuide.MaestroAPI.IServerConection uses the System.Threading.ThreadPool class to fetch multiple layer definitions in parallel. If your code uses this implementation, be aware of this face and the performance implications involved, as an excessively large thread pool size may negatively affect stability of your MapGuide Server. Examples How to create a RuntimeMap with the correct meters per unit value using the MgCoordinateSystem API IServerConnection conn = ConnectionProviderRegistry.CreateConnection(\"Maestro.Http\", \"Username\", \"Administrator\", \"Password\", \"admin\", \"Url\", \"http://localhost/mapguide/mapagent/mapagent.fcgi\"); //Create the Mapping Service. Some implementations of IServerConnection may not support this service, so //its best to inspect the capability object of this connection to determine if this service type is supported IMappingService mapSvc = (IMappingService)conn.GetService((int)ServiceType.Mapping); //Get our map definition ResourceIdentifier resId = new ResourceIdentifier(\"Library://Samples/Sheboygan/Maps/Sheboygan.MapDefinition\"); IMapDefinition mdf = (IMapDefinition)conn.ResourceService.GetResource(resId.ToString()); //Calculate the meters per unit value, this requires the official MapGuide API. Otherwise, you need //to know this value up-front in order to render images with this instance double metersPerUnit = 1.0; if (!string.IsNullOrEmpty(mdf.CoordinateSystem)) { MgCoordinateSystemFactory factory = new MgCoordinateSystemFactory(); MgCoordinateSystem cs = factory.Create(mdf.CoordinateSystem); metersPerUnit = cs.ConvertCoordinateSystemUnitsToMeters(1.0); } //Generate our runtime map resource id. This must be session-based ResourceIdentifier rtMapId = new ResourceIdentifier(resId.Name, ResourceTypes.RuntimeMap, conn.SessionID); //Create the runtime map using our meters per unit value RuntimeMap map = mapSvc.CreateRuntimeMap(rtMapId, mdf, metersPerUnit); //Set some display parameters for this map map.ViewScale = 75000; map.DisplayWidth = 1024; map.DisplayHeight = 1024; map.DisplayDpi = 96; //We have to save it first before we can render from it or use any other API that requires this //current map state. Remember to call Save() everytime you change the state of the map map.Save(); //Now we can render a map using(Stream stream = mapSvc.RenderDynamicOverlay(map, null, \"PNG\")) { //Write this stream out to a file using (var fs = new FileStream(\"RenderMap.png\", FileMode.OpenOrCreate)) { int read = 0; do { read = source.Read(buf, 0, buf.Length); target.Write(buf, 0, read); } while (read > 0); } } Constructors RuntimeMap() Declaration protected RuntimeMap() RuntimeMap(IServerConnection) Initializes this instance Declaration protected RuntimeMap(IServerConnection conn) Parameters Type Name Description IServerConnection conn Fields _bgColor The background color of the map Declaration protected Color _bgColor Field Value Type Description Color _dataExtent The data extent Declaration protected IEnvelope _dataExtent Field Value Type Description IEnvelope _dispHeight The display height Declaration protected int _dispHeight Field Value Type Description System.Int32 _dispWidth The display width Declaration protected int _dispWidth Field Value Type Description System.Int32 _dpi The dpi Declaration protected int _dpi Field Value Type Description System.Int32 _getRes The GetResourceContents command Declaration protected IGetResourceContents _getRes Field Value Type Description IGetResourceContents _mapSrs The Coordinate System WKT of the map Declaration protected string _mapSrs Field Value Type Description System.String _mapSvc The mapping service Declaration protected IMappingService _mapSvc Field Value Type Description IMappingService _name The name of the map Declaration protected string _name Field Value Type Description System.String _viewCenter The view center Declaration protected IPoint2D _viewCenter Field Value Type Description IPoint2D _viewScale The view scale Declaration protected double _viewScale Field Value Type Description System.Double ClassId MapGuide internal class id Declaration protected const int ClassId = 11500 Field Value Type Description System.Int32 layerDefinitionCache A cache of Layer Definition objects. Used to reduce lookup time of the same layer definitions Declaration protected Dictionary<string, ILayerDefinition> layerDefinitionCache Field Value Type Description Dictionary < System.String , ILayerDefinition > MgBinaryVersion MapGuide internal value Declaration protected const int MgBinaryVersion = 262144 Field Value Type Description System.Int32 Z_ORDER_INCREMENT The amount to increment the Z order for successive layers being added Declaration public const double Z_ORDER_INCREMENT = 100 Field Value Type Description System.Double Z_ORDER_TOP The draw order of the topmost layer Declaration public const double Z_ORDER_TOP = 100 Field Value Type Description System.Double Properties BackgroundColor Gets or sets the color of the background. Check the SupportsMutableBackgroundColor to see if setting the background color is allowed. Declaration public virtual Color BackgroundColor { get; set; } Property Value Type Description Color The color of the background. Exceptions Type Condition System.NotSupportedException Thrown if the operation is not supported CoordinateSystem Gets or sets the coordinate system in WKT format. Check the SupportsMutableCoordinateSystem to see if setting the coordinate system WKT is allowed. Declaration public virtual string CoordinateSystem { get; set; } Property Value Type Description System.String The coordinate system in WKT format. Exceptions Type Condition System.NotSupportedException Thrown if the operation is not supported CurrentConnection Gets the IServerConnection that is attached to this instance Declaration public IServerConnection CurrentConnection { get; } Property Value Type Description IServerConnection DataExtent Gets or sets the data extent. Declaration public virtual IEnvelope DataExtent { get; set; } Property Value Type Description IEnvelope The data extent. DisplayDpi Gets or sets the display dpi. Declaration public virtual int DisplayDpi { get; set; } Property Value Type Description System.Int32 The display dpi. DisplayHeight Gets or sets the display height. Declaration public virtual int DisplayHeight { get; set; } Property Value Type Description System.Int32 The display height. DisplayWidth Gets or sets the display width. Declaration public virtual int DisplayWidth { get; set; } Property Value Type Description System.Int32 The display width. FiniteDisplayScaleCount Gets the number of finite display scales Declaration public int FiniteDisplayScaleCount { get; } Property Value Type Description System.Int32 Groups The collection of groups in this map Declaration public RuntimeMapGroupCollection Groups { get; } Property Value Type Description RuntimeMapGroupCollection IsDirty Gets whether this instance has state changes which require a call to Save() Declaration public virtual bool IsDirty { get; protected set; } Property Value Type Description System.Boolean true if this instance is dirty; otherwise, false . IsValidForRendering Gets whether this map is valid for rendering Declaration public bool IsValidForRendering { get; } Property Value Type Description System.Boolean LayerRefreshMode Gets the layer refresh mode. Declaration public virtual int LayerRefreshMode { get; } Property Value Type Description System.Int32 The layer refresh mode. Layers The collection of layers in this map Declaration public RuntimeMapLayerCollection Layers { get; } Property Value Type Description RuntimeMapLayerCollection MapDefinition Gets or sets the map definition resource id Declaration public virtual string MapDefinition { get; } Property Value Type Description System.String The map definition resource id. MapExtent Gets or sets the map extents. Inspect the OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMap.SupportsMutableMapExtents to determine if setting the map extents is allowed Declaration public virtual IEnvelope MapExtent { get; set; } Property Value Type Description IEnvelope The map extents. Exceptions Type Condition System.NotSupportedException Thrown if the operation is not supported MetersPerUnit Gets the meters per unit value. Check the SupportsMutableMetersPerUnit to see if setting the meters per unit value is allowed. Declaration public virtual double MetersPerUnit { get; set; } Property Value Type Description System.Double The meters per unit. Exceptions Type Condition System.NotSupportedException Thrown if the operation is not supported Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description System.String The name. ObjectId Gets or sets the object id. Declaration public virtual string ObjectId { get; } Property Value Type Description System.String The object id. ResourceID Gets or sets the resource ID. When setting, if the name of this map has not been specified already, the name will be set based on this resource id Declaration public string ResourceID { get; set; } Property Value Type Description System.String The resource ID. ResourceType Gets the type of the resource. Declaration public ResourceTypes ResourceType { get; } Property Value Type Description ResourceTypes The type of the resource. Selection Gets the selection set Declaration public virtual MapSelection Selection { get; } Property Value Type Description MapSelection The selection. SessionId Gets or sets the session id. Declaration public virtual string SessionId { get; } Property Value Type Description System.String The session id. StrictSelection If true, any selections made against this map are validated to ensure the layer(s) being selected have identity properties Declaration public bool StrictSelection { get; set; } Property Value Type Description System.Boolean SupportsMutableBackgroundColor Gets whether the background color of this map can be modified at runtime Declaration public virtual bool SupportsMutableBackgroundColor { get; } Property Value Type Description System.Boolean SupportsMutableCoordinateSystem Gets whether the coordinate system of this map can be modified at runtime Declaration public virtual bool SupportsMutableCoordinateSystem { get; } Property Value Type Description System.Boolean SupportsMutableExtents Gets whether extents of this map can be modified at runtime Declaration public virtual bool SupportsMutableExtents { get; } Property Value Type Description System.Boolean SupportsMutableMetersPerUnit Gets whether the meters-per-unit value of this map can be modified at runtime Declaration public virtual bool SupportsMutableMetersPerUnit { get; } Property Value Type Description System.Boolean TileSetDefinition Gets or sets the tile set definition resource id. Only applicable if the Map Definition used to create this map contains a reference to a tile set Declaration public virtual string TileSetDefinition { get; } Property Value Type Description System.String ViewCenter Gets or sets the view center. Declaration public virtual IPoint2D ViewCenter { get; } Property Value Type Description IPoint2D The view center. ViewScale Gets or sets the view scale. Declaration public virtual double ViewScale { get; set; } Property Value Type Description System.Double The view scale. WatermarkUsage Gets the watermark usage. Not applicable for version of MapGuide older than 2.3 Declaration public virtual int WatermarkUsage { get; } Property Value Type Description System.Int32 Methods ClearChanges() Clears all tracked changes Declaration protected void ClearChanges() ConvertTiledGroupsToNonTiled() Convers all tiled groups in this map to untiled groups. All layers within these groups are convered to dynamic layers Declaration public void ConvertTiledGroupsToNonTiled() Deserialize(MgBinaryDeserializer) Initializes this instance from the specified binary stream Declaration public virtual void Deserialize(MgBinaryDeserializer d) Parameters Type Name Description MgBinaryDeserializer d GetFiniteDisplayScaleAt(Int32) Gets the finite display scale at the specified index Declaration public double GetFiniteDisplayScaleAt(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Double GetGroupByName(String) Gets the group by its specified name Declaration public RuntimeMapGroup GetGroupByName(string name) Parameters Type Name Description System.String name The name. Returns Type Description RuntimeMapGroup GetGroupsOfGroup(String) Gets the groups of the specified group. Declaration public RuntimeMapGroup[] GetGroupsOfGroup(string groupName) Parameters Type Name Description System.String groupName Name of the group. Returns Type Description RuntimeMapGroup [] GetLayerByObjectId(String) Gets the layer by object id. Declaration public RuntimeMapLayer GetLayerByObjectId(string id) Parameters Type Name Description System.String id The id. Returns Type Description RuntimeMapLayer GetLayersOfGroup(String) Gets the layers of the specified group Declaration public RuntimeMapLayer[] GetLayersOfGroup(string groupName) Parameters Type Name Description System.String groupName Name of the group. Returns Type Description RuntimeMapLayer [] GetLegendImageStream(String, Double, Int32, Int32, String, Int32, Int32) Convenience method for rendering a layer style icon Declaration public Stream GetLegendImageStream(string layerDefinitionID, double scale, int width, int height, string format, int geomType, int themeCategory) Parameters Type Name Description System.String layerDefinitionID System.Double scale System.Int32 width System.Int32 height System.String format System.Int32 geomType System.Int32 themeCategory Returns Type Description System.IO.Stream IndexOfLayer(String) Gets the index of the first layer whose name matches the specified name Declaration public int IndexOfLayer(string layerName) Parameters Type Name Description System.String layerName Returns Type Description System.Int32 InitialiseDisplayParameters(Int32, Int32) Sets the width, height and initial view scale Declaration public void InitialiseDisplayParameters(int width, int height) Parameters Type Name Description System.Int32 width System.Int32 height OnPropertyChanged(String) Raises the OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMap.PropertyChanged event Declaration protected override void OnPropertyChanged(string propertyName) Parameters Type Name Description System.String propertyName Overrides MapObservable.OnPropertyChanged(String) QueryMapFeatures(String, Int32, Boolean, String, QueryMapOptions) Convenience method for performing selection based on the given geometry Declaration public virtual string QueryMapFeatures(string wkt, int maxFeatures, bool persist, string selectionVariant, QueryMapOptions extraOptions) Parameters Type Name Description System.String wkt System.Int32 maxFeatures System.Boolean persist System.String selectionVariant QueryMapOptions extraOptions Returns Type Description System.String Render(String) Convenience method for rendering a bitmap of the current map Declaration public Stream Render(string format) Parameters Type Name Description System.String format Returns Type Description System.IO.Stream RenderDynamicOverlay(MapSelection, String, Color, Int32) Convenience method for rendering a dynamic overlay of the current map Declaration public Stream RenderDynamicOverlay(MapSelection selection, string format, Color selectionColor, int behaviour) Parameters Type Name Description MapSelection selection System.String format Color selectionColor System.Int32 behaviour A bitmask for the rendering behaviour (1 = Render Selection, 2 = Render Layers, 4 = Keep Selection, 8 = Render Base Layers) Returns Type Description System.IO.Stream RenderDynamicOverlay(MapSelection, String, Boolean) Convenience method for rendering a dynamic overlay of the current map Declaration public Stream RenderDynamicOverlay(MapSelection sel, string format, bool keepSelection) Parameters Type Name Description MapSelection sel System.String format System.Boolean keepSelection Returns Type Description System.IO.Stream RenderDynamicOverlay(String, Boolean) Convenience method for rendering a dynamic overlay of the current map Declaration public Stream RenderDynamicOverlay(string format, bool keepSelection) Parameters Type Name Description System.String format System.Boolean keepSelection Returns Type Description System.IO.Stream RenderMapLegend(Int32, Int32, Color, String) Convenience method for rendering the legend for this map Declaration public Stream RenderMapLegend(int width, int height, Color color, string format) Parameters Type Name Description System.Int32 width System.Int32 height Color color System.String format Returns Type Description System.IO.Stream Save() Saves this instance. The changes are propagated back to the MapGuide Server Declaration public virtual void Save() Serialize(MgBinarySerializer) Serializes this instance to the specified binary stream Declaration public virtual void Serialize(MgBinarySerializer s) Parameters Type Name Description MgBinarySerializer s SerializeLayerData(MgBinarySerializer) Serializes the layer data to the specified binary stream Declaration protected void SerializeLayerData(MgBinarySerializer s) Parameters Type Name Description MgBinarySerializer s SetViewCenter(Double, Double) Sets the view center Declaration public virtual void SetViewCenter(double x, double y) Parameters Type Name Description System.Double x The center X coordinate System.Double y The center Y coordinate ToMapDefinition(Boolean) Converts this instance to an equivalent Map Definition Declaration public IMapDefinition ToMapDefinition(bool useOriginalAsTemplate) Parameters Type Name Description System.Boolean useOriginalAsTemplate If true, the converted Map Definition will use core settings from the original Map Definition used to create this instance Returns Type Description IMapDefinition UpdateMapDefinition(IMapDefinition) Updates and replaces the layer/group structure of the specified Map Definition with the layer/group structure of this Runtime Map Declaration public void UpdateMapDefinition(IMapDefinition newMdf) Parameters Type Name Description IMapDefinition newMdf Events LayerAdded Raise when a layer is added to the map Declaration public event LayerEventHandler LayerAdded Event Type Type Description LayerEventHandler"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapGroup.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapGroup.html",
    "title": "Class RuntimeMapGroup | MapGuide Maestro",
    "keywords": "Class RuntimeMapGroup Represents a group of layers in a runtime map. Use OSGeo.MapGuide.MaestroAPI.Services.IMappingService.CreateMapGroup(OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMap,OSGeo.MapGuide.ObjectModels.MapDefinition.IMapLayerGroup) to create instances of this class. Inheritance System.Object MapObservable RuntimeMapGroup Inherited Members MapObservable._disableChangeTracking MapObservable.SetField<T>(T, T, String) MapObservable.ObservableSet<T>(T, T, Action<T>, String) MapObservable.PropertyChanged Namespace : OSGeo.MapGuide.MaestroAPI.Mapping Assembly : cs.temp.dll.dll Syntax public class RuntimeMapGroup : MapObservable Constructors RuntimeMapGroup() Declaration protected RuntimeMapGroup() RuntimeMapGroup(RuntimeMap, IMapLayerGroup) Initializes a new instance of the RuntimeMapGroup class. Declaration protected RuntimeMapGroup(RuntimeMap map, IMapLayerGroup group) Parameters Type Name Description RuntimeMap map The map. IMapLayerGroup group The group. RuntimeMapGroup(RuntimeMap, String) Initializes a new instance of the RuntimeMapGroup class. Declaration protected RuntimeMapGroup(RuntimeMap map, string name) Parameters Type Name Description RuntimeMap map The map. System.String name The name. Properties ExpandInLegend Gets or sets whether this group is expanded in the legend Declaration public virtual bool ExpandInLegend { get; set; } Property Value Type Description System.Boolean Group Gets or sets the name of the parent group Declaration public virtual string Group { get; set; } Property Value Type Description System.String LegendLabel Gets or sets the legend label Declaration public virtual string LegendLabel { get; set; } Property Value Type Description System.String Name Gets or sets the name of this group Declaration public virtual string Name { get; set; } Property Value Type Description System.String ObjectId Gets the unique identifier for this group Declaration public virtual string ObjectId { get; } Property Value Type Description System.String Parent Gets the parent runtime map Declaration public RuntimeMap Parent { get; } Property Value Type Description RuntimeMap ShowInLegend Gets or sets whether this group is visible in the legend Declaration public virtual bool ShowInLegend { get; set; } Property Value Type Description System.Boolean Type Gets the group type Declaration public virtual int Type { get; } Property Value Type Description System.Int32 Visible Gets or sets whether this group is visible Declaration public virtual bool Visible { get; set; } Property Value Type Description System.Boolean Methods Deserialize(MgBinaryDeserializer) Initialize this instance using the specified binary stream Declaration public virtual void Deserialize(MgBinaryDeserializer d) Parameters Type Name Description MgBinaryDeserializer d OnPropertyChanged(String) Raises the System.ComponentModel.INotifyPropertyChanged.PropertyChanged event Declaration protected override void OnPropertyChanged(string propertyName) Parameters Type Name Description System.String propertyName Overrides MapObservable.OnPropertyChanged(String) Serialize(MgBinarySerializer) Serializes this instance Declaration public virtual void Serialize(MgBinarySerializer s) Parameters Type Name Description MgBinarySerializer s"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapGroupCollection.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapGroupCollection.html",
    "title": "Class RuntimeMapGroupCollection | MapGuide Maestro",
    "keywords": "Class RuntimeMapGroupCollection A collection of runtime map groups Inheritance System.Object KeyValueCollection < System.String , RuntimeMapGroup > RuntimeMapGroupCollection Implements IList Inherited Members KeyValueCollection<String, RuntimeMapGroup>._values KeyValueCollection<String, RuntimeMapGroup>._valuesByKey KeyValueCollection<String, RuntimeMapGroup>.IndexOf(RuntimeMapGroup) KeyValueCollection<String, RuntimeMapGroup>.IndexOf(String) KeyValueCollection<String, RuntimeMapGroup>.Insert(Int32, RuntimeMapGroup) KeyValueCollection<String, RuntimeMapGroup>.RemoveAt(Int32) KeyValueCollection<String, RuntimeMapGroup>.Item[Int32] KeyValueCollection<String, RuntimeMapGroup>.SetNewIndex(Int32, RuntimeMapGroup) KeyValueCollection<String, RuntimeMapGroup>.Add(RuntimeMapGroup) KeyValueCollection<String, RuntimeMapGroup>.Clear() KeyValueCollection<String, RuntimeMapGroup>.Contains(RuntimeMapGroup) KeyValueCollection<String, RuntimeMapGroup>.CopyTo(RuntimeMapGroup[], Int32) KeyValueCollection<String, RuntimeMapGroup>.Count KeyValueCollection<String, RuntimeMapGroup>.IsReadOnly KeyValueCollection<String, RuntimeMapGroup>.Remove(RuntimeMapGroup) KeyValueCollection<String, RuntimeMapGroup>.GetEnumerator() KeyValueCollection<String, RuntimeMapGroup>.Item[String] KeyValueCollection<String, RuntimeMapGroup>.CollectionChanged KeyValueCollection<String, RuntimeMapGroup>.OnCollectionChanged() KeyValueCollection<String, RuntimeMapGroup>.OnBeforeItemAdded(RuntimeMapGroup) KeyValueCollection<String, RuntimeMapGroup>.OnBeforeItemRemove(RuntimeMapGroup) KeyValueCollection<String, RuntimeMapGroup>.OnItemAdded(RuntimeMapGroup) KeyValueCollection<String, RuntimeMapGroup>.OnItemRemoved(RuntimeMapGroup) KeyValueCollection<String, RuntimeMapGroup>.SelectKey(RuntimeMapGroup) Namespace : OSGeo.MapGuide.MaestroAPI.Mapping Assembly : cs.temp.dll.dll Syntax public class RuntimeMapGroupCollection : KeyValueCollection<string, RuntimeMapGroup>, IList Methods OnItemAdded(RuntimeMapGroup) Called after an item has been added Declaration protected override void OnItemAdded(RuntimeMapGroup item) Parameters Type Name Description RuntimeMapGroup item The item. Overrides OSGeo.MapGuide.MaestroAPI.Mapping.KeyValueCollection<System.String, OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapGroup>.OnItemAdded(OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapGroup) OnItemRemoved(RuntimeMapGroup) Called after an item has been removed. Note this is only called if the remove operation removed the item in question Declaration protected override void OnItemRemoved(RuntimeMapGroup value) Parameters Type Name Description RuntimeMapGroup value The value. Overrides OSGeo.MapGuide.MaestroAPI.Mapping.KeyValueCollection<System.String, OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapGroup>.OnItemRemoved(OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapGroup) Remove(String) Removes the specified group by its name. Declaration public void Remove(string groupName) Parameters Type Name Description System.String groupName Name of the group. SelectKey(RuntimeMapGroup) Selects the key given the value. Declaration protected override string SelectKey(RuntimeMapGroup value) Parameters Type Name Description RuntimeMapGroup value The value. Returns Type Description System.String Overrides OSGeo.MapGuide.MaestroAPI.Mapping.KeyValueCollection<System.String, OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapGroup>.SelectKey(OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapGroup) Implements IList"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapGroupType.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapGroupType.html",
    "title": "Class RuntimeMapGroupType | MapGuide Maestro",
    "keywords": "Class RuntimeMapGroupType Defines the type of map layer group Inheritance System.Object RuntimeMapGroupType Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Mapping Assembly : cs.temp.dll.dll Syntax public static class RuntimeMapGroupType Fields BaseMap Base map (aka. Tiled) Declaration public const int BaseMap = 2 Field Value Type Description System.Int32 Normal Normal Declaration public const int Normal = 1 Field Value Type Description System.Int32"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayer.ScaleRange.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayer.ScaleRange.html",
    "title": "Class RuntimeMapLayer.ScaleRange | MapGuide Maestro",
    "keywords": "Class RuntimeMapLayer.ScaleRange Represents a scale range Inheritance System.Object RuntimeMapLayer.ScaleRange Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Mapping Assembly : cs.temp.dll.dll Syntax public class ScaleRange Properties MaxScale Gets the max scale. Declaration public double MaxScale { get; } Property Value Type Description System.Double MinScale Gets the min scale. Declaration public double MinScale { get; } Property Value Type Description System.Double"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayer.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayer.html",
    "title": "Class RuntimeMapLayer | MapGuide Maestro",
    "keywords": "Class RuntimeMapLayer Represents a runtime map layer. Use OSGeo.MapGuide.MaestroAPI.Services.IMappingService.CreateMapLayer(OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMap,OSGeo.MapGuide.ObjectModels.LayerDefinition.ILayerDefinition) to create instances of this class. Inheritance System.Object MapObservable RuntimeMapLayer Inherited Members MapObservable._disableChangeTracking MapObservable.SetField<T>(T, T, String) MapObservable.ObservableSet<T>(T, T, Action<T>, String) MapObservable.PropertyChanged Namespace : OSGeo.MapGuide.MaestroAPI.Mapping Assembly : cs.temp.dll.dll Syntax public class RuntimeMapLayer : MapObservable Constructors RuntimeMapLayer() Declaration protected RuntimeMapLayer() RuntimeMapLayer(RuntimeMap) Initializes this instance Declaration protected RuntimeMapLayer(RuntimeMap parent) Parameters Type Name Description RuntimeMap parent RuntimeMapLayer(RuntimeMap, IBaseMapLayer, ILayerDefinition, Boolean) Initializes a new instance Declaration protected RuntimeMapLayer(RuntimeMap parent, IBaseMapLayer source, ILayerDefinition ldf, bool suppressErrors) Parameters Type Name Description RuntimeMap parent IBaseMapLayer source ILayerDefinition ldf System.Boolean suppressErrors RuntimeMapLayer(RuntimeMap, ILayerDefinition, Boolean) Initializes a new instance of the RuntimeMapLayer class. Declaration protected RuntimeMapLayer(RuntimeMap parent, ILayerDefinition ldf, bool suppressErrors) Parameters Type Name Description RuntimeMap parent The parent. ILayerDefinition ldf The Layer Definition. System.Boolean suppressErrors If true, any errors while creating the layer are suppressed. The nature of the error may result in un-selectable layers RuntimeMapLayer(RuntimeMap, IMapLayer, ILayerDefinition, Boolean) Initializes a new instance Declaration protected RuntimeMapLayer(RuntimeMap parent, IMapLayer source, ILayerDefinition ldf, bool suppressErrors) Parameters Type Name Description RuntimeMap parent IMapLayer source ILayerDefinition ldf System.Boolean suppressErrors RuntimeMapLayer(RuntimeMap, IMapLayer, Boolean) Initializes a new instance of the RuntimeMapLayer class. Declaration protected RuntimeMapLayer(RuntimeMap parent, IMapLayer source, bool suppressErrors) Parameters Type Name Description RuntimeMap parent The parent. IMapLayer source The source. System.Boolean suppressErrors Properties DisplayOrder Gets the display order Declaration public virtual double DisplayOrder { get; } Property Value Type Description System.Double DisplayString Gets a display string for this layer for presentation purposes Declaration public string DisplayString { get; } Property Value Type Description System.String ExpandInLegend Gets or sets a value indicating whether [expand in legend]. Declaration public virtual bool ExpandInLegend { get; set; } Property Value Type Description System.Boolean true if [expand in legend]; otherwise, false . FeatureSourceID Gets or sets the feature source ID. Declaration public virtual string FeatureSourceID { get; } Property Value Type Description System.String The feature source ID. Filter Gets the filter. Declaration public virtual string Filter { get; } Property Value Type Description System.String The filter. GeometryPropertyName Gets the name of the geometry property. Declaration public virtual string GeometryPropertyName { get; } Property Value Type Description System.String The name of the geometry property. Group Gets or sets the group. Declaration public virtual string Group { get; set; } Property Value Type Description System.String The group. HasTooltips Gets whether this layer has tooltips Declaration public virtual bool HasTooltips { get; } Property Value Type Description System.Boolean IdentityProperties Gets the identity properties. Declaration public PropertyInfo[] IdentityProperties { get; } Property Value Type Description PropertyInfo [] The identity properties. LayerDefinitionID Gets the layer definition ID. Declaration public virtual string LayerDefinitionID { get; } Property Value Type Description System.String The layer definition ID. LegendLabel Gets or sets the legend label. Declaration public virtual string LegendLabel { get; set; } Property Value Type Description System.String The legend label. Name Gets or sets the name. Declaration public virtual string Name { get; set; } Property Value Type Description System.String The name. NeedsRefresh Gets whether this layer needs to be refreshed Declaration public virtual bool NeedsRefresh { get; } Property Value Type Description System.Boolean ObjectId Gets the object id. Declaration public virtual string ObjectId { get; } Property Value Type Description System.String The object id. Parent Gets the RuntimeMap that this layer belongs to Declaration public RuntimeMap Parent { get; } Property Value Type Description RuntimeMap QualifiedClassName Gets the name of the qualified name of the feature class. Declaration public virtual string QualifiedClassName { get; } Property Value Type Description System.String The name of the qualified name of the feature class. ScaleRanges Gets the applicable scale ranges for this layer Declaration public RuntimeMapLayer.ScaleRange[] ScaleRanges { get; } Property Value Type Description RuntimeMapLayer.ScaleRange [] SchemaName Gets the schema name Declaration public string SchemaName { get; } Property Value Type Description System.String Remarks For drawing layers, the schema name will always be empty Selectable Gets or sets a value indicating whether this RuntimeMapLayer is selectable. Declaration public virtual bool Selectable { get; set; } Property Value Type Description System.Boolean true if selectable; otherwise, false . ShowInLegend Gets or sets a value indicating whether [show in legend]. Declaration public virtual bool ShowInLegend { get; set; } Property Value Type Description System.Boolean true if [show in legend]; otherwise, false . Type Gets the type Declaration public virtual int Type { get; } Property Value Type Description System.Int32 Visible Gets or sets a value indicating whether this RuntimeMapLayer is visible. Declaration public virtual bool Visible { get; set; } Property Value Type Description System.Boolean true if visible; otherwise, false . Methods Deserialize(MgBinaryDeserializer) Initializes this instance with the specified binary stream Declaration public virtual void Deserialize(MgBinaryDeserializer d) Parameters Type Name Description MgBinaryDeserializer d ForceRefresh() Sets the refresh flag for this layer Declaration public virtual void ForceRefresh() GetClassDefinition() Convenience method to get the associated class definition Declaration public ClassDefinition GetClassDefinition() Returns Type Description ClassDefinition Initialize(ILayerDefinition, Boolean) Initializes this instances from the specified Layer Definition Declaration protected void Initialize(ILayerDefinition ldf, bool suppressErrors) Parameters Type Name Description ILayerDefinition ldf System.Boolean suppressErrors IsVisibleAtScale(Double) Determines whether this layer is potentially visible at the specified scale Declaration public bool IsVisibleAtScale(double scale) Parameters Type Name Description System.Double scale The scale to check for potential visibility Returns Type Description System.Boolean Remarks Current layer visibility does not factor into the final result OnPropertyChanged(String) Raises the System.ComponentModel.INotfiyPropertyChanged.PropertyChanged event Declaration protected override void OnPropertyChanged(string propertyName) Parameters Type Name Description System.String propertyName Overrides MapObservable.OnPropertyChanged(String) ParseSelectionValues(String) Parses encoded id string into an array of values Declaration public object[] ParseSelectionValues(string encodedId) Parameters Type Name Description System.String encodedId The encoded id string. Returns Type Description System.Object [] Serialize(MgBinarySerializer) Serializes this instance to a binary stream Declaration public virtual void Serialize(MgBinarySerializer s) Parameters Type Name Description MgBinarySerializer s"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayerCollection.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayerCollection.html",
    "title": "Class RuntimeMapLayerCollection | MapGuide Maestro",
    "keywords": "Class RuntimeMapLayerCollection A collection of runtime map layers Inheritance System.Object KeyValueCollection < System.String , RuntimeMapLayer > RuntimeMapLayerCollection Implements IList Inherited Members KeyValueCollection<String, RuntimeMapLayer>._values KeyValueCollection<String, RuntimeMapLayer>._valuesByKey KeyValueCollection<String, RuntimeMapLayer>.IndexOf(RuntimeMapLayer) KeyValueCollection<String, RuntimeMapLayer>.IndexOf(String) KeyValueCollection<String, RuntimeMapLayer>.Insert(Int32, RuntimeMapLayer) KeyValueCollection<String, RuntimeMapLayer>.RemoveAt(Int32) KeyValueCollection<String, RuntimeMapLayer>.Item[Int32] KeyValueCollection<String, RuntimeMapLayer>.SetNewIndex(Int32, RuntimeMapLayer) KeyValueCollection<String, RuntimeMapLayer>.Add(RuntimeMapLayer) KeyValueCollection<String, RuntimeMapLayer>.Clear() KeyValueCollection<String, RuntimeMapLayer>.Contains(RuntimeMapLayer) KeyValueCollection<String, RuntimeMapLayer>.CopyTo(RuntimeMapLayer[], Int32) KeyValueCollection<String, RuntimeMapLayer>.Count KeyValueCollection<String, RuntimeMapLayer>.IsReadOnly KeyValueCollection<String, RuntimeMapLayer>.Remove(RuntimeMapLayer) KeyValueCollection<String, RuntimeMapLayer>.GetEnumerator() KeyValueCollection<String, RuntimeMapLayer>.Item[String] KeyValueCollection<String, RuntimeMapLayer>.CollectionChanged KeyValueCollection<String, RuntimeMapLayer>.OnCollectionChanged() KeyValueCollection<String, RuntimeMapLayer>.OnBeforeItemAdded(RuntimeMapLayer) KeyValueCollection<String, RuntimeMapLayer>.OnBeforeItemRemove(RuntimeMapLayer) KeyValueCollection<String, RuntimeMapLayer>.OnItemAdded(RuntimeMapLayer) KeyValueCollection<String, RuntimeMapLayer>.OnItemRemoved(RuntimeMapLayer) KeyValueCollection<String, RuntimeMapLayer>.SelectKey(RuntimeMapLayer) Namespace : OSGeo.MapGuide.MaestroAPI.Mapping Assembly : cs.temp.dll.dll Syntax public class RuntimeMapLayerCollection : KeyValueCollection<string, RuntimeMapLayer>, IList Properties Item[Int32] Gets or sets the element at the specified index. Declaration public override RuntimeMapLayer this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description RuntimeMapLayer The element at the specified index. Overrides OSGeo.MapGuide.MaestroAPI.Mapping.KeyValueCollection<System.String, OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayer>.Item[System.Int32] Exceptions Type Condition System.ArgumentOutOfRangeException index is not a valid index in the System.Collections.Generic.IList`1 . System.NotSupportedException The property is set and the System.Collections.Generic.IList`1 is read-only. Methods Add(RuntimeMapLayer) Adds the specified layer. Declaration public override void Add(RuntimeMapLayer item) Parameters Type Name Description RuntimeMapLayer item The layer. Overrides OSGeo.MapGuide.MaestroAPI.Mapping.KeyValueCollection<System.String, OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayer>.Add(OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayer) GetByObjectId(String) Gets a runtime map layer by its object id. Declaration public RuntimeMapLayer GetByObjectId(string id) Parameters Type Name Description System.String id The object id. Returns Type Description RuntimeMapLayer Insert(Int32, RuntimeMapLayer) Inserts an item to the System.Collections.Generic.IList`1 at the specified index. Declaration public override void Insert(int index, RuntimeMapLayer item) Parameters Type Name Description System.Int32 index The zero-based index at which item should be inserted. RuntimeMapLayer item The object to insert into the System.Collections.Generic.IList`1 . Overrides OSGeo.MapGuide.MaestroAPI.Mapping.KeyValueCollection<System.String, OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayer>.Insert(System.Int32, OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayer) Exceptions Type Condition System.ArgumentOutOfRangeException index is not a valid index in the System.Collections.Generic.IList`1 . System.NotSupportedException The System.Collections.Generic.IList`1 is read-only. OnBeforeItemAdded(RuntimeMapLayer) Called when [before item added]. Declaration protected override void OnBeforeItemAdded(RuntimeMapLayer item) Parameters Type Name Description RuntimeMapLayer item The layer. Overrides OSGeo.MapGuide.MaestroAPI.Mapping.KeyValueCollection<System.String, OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayer>.OnBeforeItemAdded(OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayer) OnItemAdded(RuntimeMapLayer) Called when [item added]. Declaration protected override void OnItemAdded(RuntimeMapLayer item) Parameters Type Name Description RuntimeMapLayer item The layer. Overrides OSGeo.MapGuide.MaestroAPI.Mapping.KeyValueCollection<System.String, OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayer>.OnItemAdded(OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayer) OnItemRemoved(RuntimeMapLayer) Called when [item removed]. Declaration protected override void OnItemRemoved(RuntimeMapLayer value) Parameters Type Name Description RuntimeMapLayer value The layer. Overrides OSGeo.MapGuide.MaestroAPI.Mapping.KeyValueCollection<System.String, OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayer>.OnItemRemoved(OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayer) Remove(String) Removes the specified layer by its name. Declaration public void Remove(string name) Parameters Type Name Description System.String name The name. SelectKey(RuntimeMapLayer) Selects the key given the value. Declaration protected override string SelectKey(RuntimeMapLayer value) Parameters Type Name Description RuntimeMapLayer value The value. Returns Type Description System.String Overrides OSGeo.MapGuide.MaestroAPI.Mapping.KeyValueCollection<System.String, OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayer>.SelectKey(OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayer) Implements IList"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Conversion.IResourceConverter.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Conversion.IResourceConverter.html",
    "title": "Interface IResourceConverter | MapGuide Maestro",
    "keywords": "Interface IResourceConverter Performs schematic upgrades of resources Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Conversion Assembly : cs.temp.dll.dll Syntax public interface IResourceConverter Methods Convert(IResource, Version) Converts the resource to the specified version Declaration IResource Convert(IResource resource, Version targetVersion) Parameters Type Name Description IResource resource The resource. Version targetVersion The target version. Returns Type Description IResource"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Conversion.ResourceObjectConverter.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Conversion.ResourceObjectConverter.html",
    "title": "Class ResourceObjectConverter | MapGuide Maestro",
    "keywords": "Class ResourceObjectConverter Performs schematic upgrades of resources Inheritance System.Object ResourceObjectConverter Implements IResourceConverter Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Conversion Assembly : cs.temp.dll.dll Syntax public class ResourceObjectConverter : IResourceConverter Examples This example shows how to convert a given Layer Definition to a specific version ILayerDefinition layerDef; ... IResourceConverter converter = new ResourceObjectConverter(); ILayerDefinition converted = converter.Convert(layerDef, new Version(2, 3, 0)); Version convertedVersion = converted.ResourceVersion; // convertedVersion.Major == 2 // convertedVersion.Minor == 3 // convertedVersion.Build == 0 Methods Convert(IResource, Version) Converts the resource to the specified version Declaration public IResource Convert(IResource resource, Version targetVersion) Parameters Type Name Description IResource resource The resource. Version targetVersion The target version. Returns Type Description IResource Implements IResourceConverter"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Conversion.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Conversion.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.Resource.Conversion | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.Resource.Conversion Classes ResourceObjectConverter Performs schematic upgrades of resources Interfaces IResourceConverter Performs schematic upgrades of resources"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.IResourceValidator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.IResourceValidator.html",
    "title": "Interface IResourceValidator | MapGuide Maestro",
    "keywords": "Interface IResourceValidator Interface for validating specific resource types Namespace : OSGeo.MapGuide.MaestroAPI.Resource Assembly : cs.temp.dll.dll Syntax public interface IResourceValidator Properties Connection The server connection which validation will be performed against Declaration IServerConnection Connection { get; set; } Property Value Type Description IServerConnection SupportedResourceAndVersion Gets the resource type and version this validator supports Declaration ResourceTypeDescriptor SupportedResourceAndVersion { get; } Property Value Type Description ResourceTypeDescriptor Methods Validate(ResourceValidationContext, IResource, Boolean) Validats the specified resources for common issues associated with this resource type Declaration ValidationIssue[] Validate(ResourceValidationContext context, IResource resource, bool recurse) Parameters Type Name Description ResourceValidationContext context IResource resource The resource to be validated System.Boolean recurse Indicates whether to also validate resources this resource depends on Returns Type Description ValidationIssue []"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Preview.IResourcePreviewUrlGenerator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Preview.IResourcePreviewUrlGenerator.html",
    "title": "Interface IResourcePreviewUrlGenerator | MapGuide Maestro",
    "keywords": "Interface IResourcePreviewUrlGenerator Generates preview URLs for any given resource Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Preview Assembly : cs.temp.dll.dll Syntax public interface IResourcePreviewUrlGenerator Properties AddDebugWatermark Gets or sets whether to insert a debug watermark in the previewed resource Declaration bool AddDebugWatermark { get; set; } Property Value Type Description System.Boolean UseAjaxViewer Gets or sets whether to use the AJAX viewer for previewing Declaration bool UseAjaxViewer { get; set; } Property Value Type Description System.Boolean Methods GeneratePreviewUrl(IResource, String, Boolean, String) Generates a preview URL for the given resource Declaration string GeneratePreviewUrl(IResource res, string locale, bool isNew, string sessionID) Parameters Type Name Description IResource res System.String locale System.Boolean isNew System.String sessionID Returns Type Description System.String IsPreviewableType(String) Gets whether the given resource type is previewable Declaration bool IsPreviewableType(string resourceType) Parameters Type Name Description System.String resourceType Returns Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Preview.ResourcePreviewUrlGenerator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Preview.ResourcePreviewUrlGenerator.html",
    "title": "Class ResourcePreviewUrlGenerator | MapGuide Maestro",
    "keywords": "Class ResourcePreviewUrlGenerator Base class of any resource preview URL generator Inheritance System.Object ResourcePreviewUrlGenerator Implements IResourcePreviewUrlGenerator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Preview Assembly : cs.temp.dll.dll Syntax public abstract class ResourcePreviewUrlGenerator : IResourcePreviewUrlGenerator Constructors ResourcePreviewUrlGenerator() Constructor Declaration protected ResourcePreviewUrlGenerator() Properties AddDebugWatermark Gets or sets whether to insert a debugging watermark for generated previews Declaration public bool AddDebugWatermark { get; set; } Property Value Type Description System.Boolean UseAjaxViewer Gets or sets whether to use the AJAX viewer for previews Declaration public bool UseAjaxViewer { get; set; } Property Value Type Description System.Boolean Methods GenerateFeatureSourcePreviewUrl(IResource, String, Boolean, String) Generates a preview URL for Feature Sources Declaration protected abstract string GenerateFeatureSourcePreviewUrl(IResource res, string locale, bool isNew, string sessionID) Parameters Type Name Description IResource res System.String locale System.Boolean isNew System.String sessionID Returns Type Description System.String GenerateFlexLayoutPreviewUrl(IResource, String, Boolean, String) Generates a preview URL for Flexible Layouts Declaration protected abstract string GenerateFlexLayoutPreviewUrl(IResource res, string locale, bool isNew, string sessionID) Parameters Type Name Description IResource res System.String locale System.Boolean isNew System.String sessionID Returns Type Description System.String GenerateLayerPreviewUrl(IResource, String, Boolean, String) Generates a preview URL for layer definitions Declaration protected abstract string GenerateLayerPreviewUrl(IResource res, string locale, bool isNew, string sessionID) Parameters Type Name Description IResource res System.String locale System.Boolean isNew System.String sessionID Returns Type Description System.String GenerateMapPreviewUrl(IResource, String, Boolean, String) Generates a preview URL for Map Definitions Declaration protected abstract string GenerateMapPreviewUrl(IResource res, string locale, bool isNew, string sessionID) Parameters Type Name Description IResource res System.String locale System.Boolean isNew System.String sessionID Returns Type Description System.String GeneratePreviewUrl(IResource, String, Boolean, String) Generates the appropriate viewer URL to preview the given resource under the given locale Declaration public string GeneratePreviewUrl(IResource res, string locale, bool isNew, string sessionID) Parameters Type Name Description IResource res System.String locale System.Boolean isNew System.String sessionID Returns Type Description System.String GenerateWatermarkPreviewUrl(IWatermarkDefinition, String, Boolean, String) Generates a preview URL for watermarks Declaration protected abstract string GenerateWatermarkPreviewUrl(IWatermarkDefinition watermarkDefinition, string locale, bool isNew, string sessionID) Parameters Type Name Description IWatermarkDefinition watermarkDefinition System.String locale System.Boolean isNew System.String sessionID Returns Type Description System.String GenerateWebLayoutPreviewUrl(IResource, String, Boolean, String) Generates a preview URL for Web Layouts Declaration protected abstract string GenerateWebLayoutPreviewUrl(IResource res, string locale, bool isNew, string sessionID) Parameters Type Name Description IResource res System.String locale System.Boolean isNew System.String sessionID Returns Type Description System.String GetLocale(String) Gets the locale Declaration protected static string GetLocale(string locale) Parameters Type Name Description System.String locale Returns Type Description System.String IsPreviewableType(String) Indicates if the given resource type is previewable Declaration public abstract bool IsPreviewableType(string resourceType) Parameters Type Name Description System.String resourceType Returns Type Description System.Boolean Implements IResourcePreviewUrlGenerator"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Preview.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Preview.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.Resource.Preview | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.Resource.Preview Classes ResourcePreviewUrlGenerator Base class of any resource preview URL generator Interfaces IResourcePreviewUrlGenerator Generates preview URLs for any given resource"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.ResourceSchemaChain.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.ResourceSchemaChain.html",
    "title": "Class ResourceSchemaChain | MapGuide Maestro",
    "keywords": "Class ResourceSchemaChain Helper class to determine the full dependency chain for a given xml schema Inheritance System.Object ResourceSchemaChain Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource Assembly : cs.temp.dll.dll Syntax public static class ResourceSchemaChain Methods GetValidatingSchemas(String) Gets the validating schemas. Declaration public static string[] GetValidatingSchemas(string schema) Parameters Type Name Description System.String schema The schema. Returns Type Description System.String []"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.SymbolLibraryValidator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.SymbolLibraryValidator.html",
    "title": "Class SymbolLibraryValidator | MapGuide Maestro",
    "keywords": "Class SymbolLibraryValidator Resource validator for DWF symbol libraries Inheritance System.Object SymbolLibraryValidator Implements IResourceValidator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public class SymbolLibraryValidator : IResourceValidator Properties Connection The server connection which validation will be performed against Declaration public IServerConnection Connection { get; set; } Property Value Type Description IServerConnection SupportedResourceAndVersion Gets the resource type and version this validator supports Declaration public ResourceTypeDescriptor SupportedResourceAndVersion { get; } Property Value Type Description ResourceTypeDescriptor Methods Validate(ResourceValidationContext, IResource, Boolean) Validats the specified resources for common issues associated with this resource type Declaration public ValidationIssue[] Validate(ResourceValidationContext context, IResource resource, bool recurse) Parameters Type Name Description ResourceValidationContext context IResource resource System.Boolean recurse Returns Type Description ValidationIssue [] Implements IResourceValidator"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.ValidationResultSet.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.ValidationResultSet.html",
    "title": "Class ValidationResultSet | MapGuide Maestro",
    "keywords": "Class ValidationResultSet A \"bucket\" class that filters out redundant validation messages and allows for filtering the set of validation results by resource and specific validation status types Inheritance System.Object ValidationResultSet Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public class ValidationResultSet Examples This example shows how a ValidationResultSet is used IResource resource; IServerConnection conn; ... var context = new ResourceValidationContext(conn); var issues = ResourceValidatorSet.Validate(context, item, false); var results = new ValidationResultSet(issues); Constructors ValidationResultSet() Initializes a new instance of the ValidationResultSet class. Declaration public ValidationResultSet() ValidationResultSet(IEnumerable<ValidationIssue>) Initializes a new instance of the ValidationResultSet class. Declaration public ValidationResultSet(IEnumerable<ValidationIssue> issues) Parameters Type Name Description IEnumerable < ValidationIssue > issues The issues. Properties ResourceIDs Gets the resource IDs Declaration public string[] ResourceIDs { get; } Property Value Type Description System.String [] The resource IDs. Methods AddIssue(ValidationIssue) Adds the issue. Declaration public void AddIssue(ValidationIssue issue) Parameters Type Name Description ValidationIssue issue The issue. AddIssues(IEnumerable<ValidationIssue>) Adds the issues. Declaration public void AddIssues(IEnumerable<ValidationIssue> issues) Parameters Type Name Description IEnumerable < ValidationIssue > issues The issues. GetAllIssues() Gets all issues. Declaration public ValidationIssue[] GetAllIssues() Returns Type Description ValidationIssue [] GetAllIssues(ValidationStatus[]) Gets all issues filtered by the specified validation status types Declaration public ValidationIssue[] GetAllIssues(params ValidationStatus[] statTypes) Parameters Type Name Description ValidationStatus [] statTypes Returns Type Description ValidationIssue [] GetIssuesForResource(String) Gets the issues for resource. Declaration public ICollection<ValidationIssue> GetIssuesForResource(string resourceId) Parameters Type Name Description System.String resourceId The resource id. Returns Type Description ICollection < ValidationIssue > GetIssuesForResource(String, ValidationStatus) Gets the issues for resource. Declaration public ICollection<ValidationIssue> GetIssuesForResource(string resourceId, ValidationStatus statType) Parameters Type Name Description System.String resourceId The resource id. ValidationStatus statType Type of the stat. Returns Type Description ICollection < ValidationIssue >"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.ValidationStatusCode.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.ValidationStatusCode.html",
    "title": "Enum ValidationStatusCode | MapGuide Maestro",
    "keywords": "Enum ValidationStatusCode A validation status code that is attached to a specific validation issue, allowing for programmatic handling of certain validation issues should they occur Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public enum ValidationStatusCode Fields Name Description Dummy Placeholder Error_DrawingSource_NoSourceDwf Source DWF file not specified Error_FeatureSource_ConnectionTestFailed One or more connection parameters for the feature source are invalid. Error_FeatureSource_SchemaReadError Unclassified error when describing a schema Error_FeatureSource_SecuredCredentialTokensWithoutSecuredCredentialData The validator found the %MG_USERNAME% and %MG_PASSWORD% placeholder tokens in the Feature Source content, but could not find the matching MG_USER_CREDENTIALS resource data item that contains the encrypted credentials Error_FeatureSource_SpatialContextReadError Unclassified error when reading spatial contexts Error_Fusion_BingMapsHybridBaseLayerNoLongerAvailable The \"Hybrid\" base layer type no longer exists in the current version of the Bing Maps API. The closes equivalent layer type is \"AerialsWithLabels\" Error_Fusion_BingMapsMissingApiKey The Bing Maps v6/7 API was deprecated on June 30th 2017. To use the current Bing Maps API, an API key is required Error_Fusion_InvalidMap The referenced Map definition doesn't exist Error_Fusion_InvalidWidgetReference A toolbar or container contains a reference to a non-existent widget Error_Fusion_MapValidationError Unclassified error validating the referenced map definition Error_Fusion_MissingMap The Fusion Application Definition has no Maps or Map Groups Error_General_ValidationError General validation error that couldn't be categorized Error_LayerDefinition_ClassNotFound The specified feature class does not exist in the specified feature source Error_LayerDefinition_DrawingSourceError Unclassified error validating or loading the referenced Drawing Source Error_LayerDefinition_DrawingSourceSheetLayerNotFound A specified drawing source sheet layer does not exist in the specified sheet of the specified Drawing Source Error_LayerDefinition_DrawingSourceSheetNotFound The specified sheet does not exist in the specified Drawing Source. Error_LayerDefinition_FeatureSourceLoadError Unclassified error loading the referenced feature source Error_LayerDefinition_Generic Unclassifed validation error Error_LayerDefinition_GeometryNotFound The specified geometry property does not exist in the specified feature class Error_LayerDefinition_InvalidPropertyMapping The Layer Definition contains a property mapping for a non-existent property Error_LayerDefinition_LayerNull Cannot determine the layer sub-type Error_LayerDefinition_MinMaxScaleSwapped The min scale and max scale values are swapped. Error_LayerDefinition_MissingFeatureName The Layer Definition does not specify a class name Error_LayerDefinition_MissingFeatureSource There is no specified feature source (as opposed to a feature source specified, but doesn't exist) Error_LayerDefinition_MissingGeometry There is no specified geometry property (as opposed to a geometry property specified, but doesn't exist) Error_LayerDefinition_MissingScaleRanges The vector layer has no scale ranges. Error_LayerDefinition_NoGridScaleRanges No Grid scale ranges were found in this Raster Layer Error_LayerDefinition_SymbolDefintionReferenceNotFound The Layer Definition contains a composite rule pointing to a non-existent symbol definition Error_LayerDefinition_WmsPublishedLayerMissingBounds The Layer Definition is marked as published for WMS, but it has no bounds information applied Error_MapDefinition_DuplicateLayerName A layer with an already existing name was found. Layer names must be unique Error_MapDefinition_FeatureSourceRead Unclassified error when reading a feature source Error_MapDefinition_GroupWithNonExistentGroup A layer group belongs to a layer group that doesn't exist Error_MapDefinition_LayerRead Unclassified error when reading a layer definition Error_MapDefinition_LayerWithNonExistentGroup A layer belongs to a layer group that doesn't exist Error_MapDefinition_NoFiniteDisplayScales No finite display scales defined for a map definition that contains tiled layers. Error_MapDefinition_RasterReprojection A raster layer in a Map Definition has a different coordinate system from the one that is declared in the Map Definition and the MapGuide Server we're connecting to does not support the raster re-projection feature (MGOS 2.0 or earlier) Error_MapDefinition_ResourceRead Unclassified error when reading a resource Error_OdbcConfig_IncompleteXYZColumnMapping The ODBC configuration document contains a table override item with an incomplete X or Y column mapping Error_OdbcConfig_InvalidLogicalGeometryProperty The ODBC configuration document contains a logical feature class with a geometry property that is not of type Point (other geometry types are not mappable in ODBC) Error_OdbcConfig_NoTableOverrideForFeatureClass The ODBC configuration document has a Feature Class that has no corresponding ODBC table override definition (that would specify how its geometry property maps to X/Y/Z columns) Error_SymbolDefinition_ImageGraphicReferenceResourceDataNotFound The simple symbol definition contains an image graphic that references a non-existent resource data item Error_SymbolDefinition_ImageGraphicReferenceResourceIdNotFound The simple symbol definition contains an image graphic that references a non-existent resource id Error_SymbolDefinition_NoGeometryUsageContexts The simple symbol definition has no geometry usage contexts Error_WebLayout_DuplicateCommandName One or more commands have the same name Error_WebLayout_DuplicateSearchCommandResultColumn A search result column references the same feature property. Error_WebLayout_Generic Unclassified validation error Error_WebLayout_MissingMap No Map Definition specified. Error_WebLayout_NonExistentContextMenuCommandReference A context menu item references a command that doesn't exist Error_WebLayout_NonExistentTaskPaneCommandReference A task pane item references a command that doesn't exist Error_WebLayout_NonExistentToolbarCommandReference A toolbar item references a command that doesn't exist Info_DrawingSource_NoCoordinateSpace No coordinate system found in drawing source. Affects re-projection if referencing layer is housed in a Map Definition Info_FeatureSource_NoPrimaryKey No primary key found in feature source. Does affect layer selection if a layer is based on this feature source Info_LayerDefinition_IrrelevantUsageContext A referenced symbol definition contains irrelevant usage contexts for this particular layer Info_LayerDefinition_ScaleRangeOverlap One or more scale ranges overlap. Can affect presentation of data. Info_MapDefinition_GroupHasDefaultLabel A layer group has a default label assigned to it. Info_MapDefinition_GroupMissingLabelInformation A layer group has no label. Results in no text when displayed in the viewer legend Info_MapDefinition_MultipleSpatialContexts Warning_FeatureSource_Cannot_Package_Secured_Credentials Due to a limitation in the public APIs provided by MapGuide. Feature Sources with encrypted security credentials (MG_USER_CREDENTIALS) cannot be packaged by Maestro's packager without discarding the MG_USER_CREDENTIALS element. The workaround is to either re-secure these feature sources after loading the Maestro-created package, or to use the official packaging method which will preserve MG_USER_CREDENTIALS in its encrypted state Warning_FeatureSource_DefaultSpatialContext Feature Source has a spatial context with what appears to be system-generated bounds. This usually makes extent queries or operations that rely on a data store's extents (eg. Layer Previews) unreliable Warning_FeatureSource_EmptyJoinPrefix An Extended Feature Class does not specify a join prefix. This will cause collisions if the primary and secondary classes have one or more identical property names Warning_FeatureSource_EmptySpatialContext Feature Source has an empty spatial context Warning_FeatureSource_NoSchemasFound No feature schemas found in feature source. Layers referencing this feature source have nothing to show and style. Warning_FeatureSource_NoSpatialContext Feature Source has no spatial context. Affects re-projection if referencing layer is housed in a Map Definition Warning_FeatureSource_Plaintext_Credentials A Feature Source whose provider contains username/password connection parameters contains login credentials in plaintext. This is not secure as such Feature Sources can be accessed by the Anonymous MapGuide user account. It is strongly advised that such Feature Sources can be re-secured with MapGuide/Infrastructure Studio or with Maestro 4.0.3 (or newer) Warning_FeatureSource_Potential_Bad_Join_Performance An Extended Feature Class does not specify Warning_FeatureSource_Validation_Timeout A mapagent error occurred during Feature Source validation. Most likely because of timeout. As a result, the full validity of the Feature Source cannot be determined Warning_Fusion_InitialViewOutsideMapExtents The specified initial view parameters lie outside the referenced Map Definition's extents. Usually means you will see nothing when the Fusion viewer loads. Warning_Fusion_MapCoordSysIncompatibleWithCommericalLayers The specified map definition's coordinate system is not WGS84.PseudoMercator. This is a requirement for integrating with Google/Yahoo/Bing commerical layers Warning_Fusion_NoLabelOnWidget The referenced widget has no label, which may cause display problems if there is no icon specified Warning_Fusion_NonStandardUiWidgetAttachedToContainer A toolbar or container contains a reference to a non-UI widget Warning_General_NoRegisteredValidatorForResource No validation was found for the specified resource and/or version Warning_General_ValidationWarning Placeholder validation warning Warning_LayerDefinition_CompositeStyleDefinedAlongsideBasicStyle A scale range was found in a Layer Definition which has a composite style defined along side a point, line or area style. In such cases, the composite style will always take precedence and the point/line/area style will have no effect Warning_LayerDefinition_MultipleGridScaleRanges Multiple raster scale ranges were found Warning_LayerDefinition_NoPropertyMappingsForWmsQueryableLayer A layer definition has metadata that indicates it is a queryable WMS layer, but the layer has no property mappings defined. If a WMS GetFeatureInfo request is made against this layer, nothing will be returned. You should expose one or more properties in the property mappings. Warning_LayerDefinition_SymbolParameterOverrideToNonExistentParameter A parameter override has been specified for a parameter that does not exist Warning_LayerDefinition_UnsupportedLayerType Unrecognised layer type Warning_LoadProcedure_ConvertToSdf3NotSupported Convert to SDF (3.0) option not supported for file-based Load Procedures. This is a limitation of Maestro Warning_LoadProcedure_DwgNotSupported DWG Load Procedures not supported. This is a limitation of Maestro Warning_LoadProcedure_GeneralizationNotSupported Generalization options not supported for file-based Load Procedures. This is a limitation of Maestro Warning_LoadProcedure_RasterNotSupported Raster Load Procedures not supported. This is a limitation of Maestro Warning_LoadProcedure_Sdf2OptionsNotSupported SDF2 options not supported for a SDF Load Procedure. This is a limitation of Maestro Warning_LoadProcedure_SourceFileNotFound A source file referenced in a Load Procedure could not be found. This can happen if executing this Load Procedure on a different client machine. Warning_MapDefinition_DataOutsideMapBounds One or more layers in a Map Definition has data that lies outside of the extents in the Map Definition. This normally means the user would have to manually pan outside the extents to see this data. Warning_MapDefinition_FeatureSourceWithNullExtent The Map Definition contains a referenced feature source that has a null extent (usually caused by having no data in the feature source) Warning_MapDefinition_LayerMissingLegendLabel A layer in a Map Definition has no legend label. Results in not text displayed in the viewer legend. Warning_MapDefinition_LayerReprojection One or more layers in a Map Definition have different coordinate system than the one declared in the Map Definition. This will normally incur a minor performance penalty when rendering due to on-the-fly reprojection of data. In some cases, this is unavoidable. Warning_MapDefinition_MissingCoordinateSystem The Map Definition does not have a coordinate system Warning_MapDefinition_MissingSpatialContext Could not find a spatial context for a referenced layer definition in the map definition Warning_MapDefinition_UnselectableLayer The Map Definition contains an unselectable layer as that layer's class definition has no identity properties Warning_SymbolDefinition_SymbolParameterNotUsed The simple symbol definition contains a symbol parameter that is not referenced anywhere within the definition Warning_WebLayout_InitialViewOutsideMapExtents The web layout's initial view lies outside the referenced map definition's extents. Usually means you will see nothing when the AJAX viewer loads."
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.WebLayoutValidator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.WebLayoutValidator.html",
    "title": "Class WebLayoutValidator | MapGuide Maestro",
    "keywords": "Class WebLayoutValidator Resource validator for Web Layouts Inheritance System.Object BaseWebLayoutValidator WebLayoutValidator Implements IResourceValidator Inherited Members BaseWebLayoutValidator.Connection BaseWebLayoutValidator.Validate(ResourceValidationContext, IResource, Boolean) BaseWebLayoutValidator.ValidateBase(ResourceValidationContext, IResource, Boolean) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public class WebLayoutValidator : BaseWebLayoutValidator, IResourceValidator Properties SupportedResourceAndVersion Gets the resource type and version this validator supports Declaration public override ResourceTypeDescriptor SupportedResourceAndVersion { get; } Property Value Type Description ResourceTypeDescriptor Overrides BaseWebLayoutValidator.SupportedResourceAndVersion Implements IResourceValidator"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.Resource.Validation | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.Resource.Validation Classes ApplicationDefinitionValidator Resource validator for Fusion Flexible Layouts BaseLayerDefinitionValidator A base layer definition validator class the provides the common validation logic. Because this is working against the layer definition interfaces, this common logic can apply to all versions of the layer definition schema (that implement these interfaces) BaseLoadProcedureValidator Base class of all load procedure validations. Provides common load procedure validation logic. BaseMapDefinitionValidator Resource validator for Map Definitions BaseSymbolDefinitionValidator The base class of Symbol Definition validators BaseWebLayoutValidator Base class of all web layout validators. Provides common validation logic for web layouts DrawingSourceValidator Resource validator for Drawing Sources FeatureSourceValidator Resource validator for Feature Sources LayerDefinitionValidator Resource validator for Layer Definitions LoadProcedureValidator Resource validator for Load Procedures MapDefinitionValidator A Map Definition validator PrintLayoutValidator Resource validator for Print Layouts ResourceValidationContext Provides a context for the resource validation system. This improves performance of validation by skipping over already validated resources and re-using previously cached information where possible ResourceValidatorLoader Utility class that initializes the default set of resource validators ResourceValidatorSet A collection of resource validators. Use this to validate a given resource for common issues. SymbolDefinitionValidator Resource validator for Symbol Definitions SymbolLibraryValidator Resource validator for DWF symbol libraries ValidationResultSet A \"bucket\" class that filters out redundant validation messages and allows for filtering the set of validation results by resource and specific validation status types WebLayoutValidator Resource validator for Web Layouts Enums ValidationStatusCode A validation status code that is attached to a specific validation issue, allowing for programmatic handling of certain validation issues should they occur"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.ValidationIssue.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.ValidationIssue.html",
    "title": "Class ValidationIssue | MapGuide Maestro",
    "keywords": "Class ValidationIssue Represents a validation issue collected during validation Inheritance System.Object ValidationIssue Inherited Members System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource Assembly : cs.temp.dll.dll Syntax public class ValidationIssue Constructors ValidationIssue(IResource, ValidationStatus, ValidationStatusCode, String) Initializes a new instance of the ValidationIssue class. Declaration public ValidationIssue(IResource res, ValidationStatus stat, ValidationStatusCode code, string msg) Parameters Type Name Description IResource res The resource. ValidationStatus stat The validation status. ValidationStatusCode code The validation status code. System.String msg The message. Properties Message Gets the message for the validation issue Declaration public string Message { get; } Property Value Type Description System.String Resource Gets the resource this issue pertains to Declaration public IResource Resource { get; } Property Value Type Description IResource Status Gets the status of the validation issue Declaration public ValidationStatus Status { get; } Property Value Type Description ValidationStatus StatusCode Gets the validation status code Declaration public ValidationStatusCode StatusCode { get; } Property Value Type Description ValidationStatusCode Methods Equals(Object) Determines whether the specified System.Object is equal to this instance. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The System.Object to compare with this instance. Returns Type Description System.Boolean true if the specified System.Object is equal to this instance; otherwise, false . Overrides System.Object.Equals(System.Object) Exceptions Type Condition System.NullReferenceException The obj parameter is null. GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides System.Object.GetHashCode()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.ValidationStatus.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.ValidationStatus.html",
    "title": "Enum ValidationStatus | MapGuide Maestro",
    "keywords": "Enum ValidationStatus All possible states a validation issue may have Namespace : OSGeo.MapGuide.MaestroAPI.Resource Assembly : cs.temp.dll.dll Syntax public enum ValidationStatus Fields Name Description Error Indicates that the issue will prevent correct operation of the map Information Indicates that the issue is non-vital, eg. a performance problem Warning Indicates that the issue is likely to cause problems"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.Resource | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.Resource Classes ResourceSchemaChain Helper class to determine the full dependency chain for a given xml schema ValidationIssue Represents a validation issue collected during validation Interfaces IResourceValidator Interface for validating specific resource types Enums ValidationStatus All possible states a validation issue may have"
  },
  "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.SchemaOverrides.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.SchemaOverrides | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.SchemaOverrides Classes ConfigurationDocument The base class of all configuration documents GdalConfigurationDocument A configuration document for the GDAL raster provider. A GDAL configuration document serves as a raster image catalog. Allowing the GDAL provider to optimally select the correct raster images to return for the given queried extents. GdalRasterItem Represents a raster image location and its extents. GdalRasterLocationItem Represents a directory of raster images in a GDAL configuration document GenericConfigurationDocument Represents a generic configuration document. Customisation is done by manipulating the individual XML content. OdbcConfigurationDocument Represents a configuration document for the ODBC provider. The ODBC configuration document allows you to declare certain tables as point feature classes by specifying the X, Y and optionally Z columns of the table OdbcTableItem Represents a table override. A table override allows a table to be configured as a point feature class RasterWmsItem A WMS Raster configuration element RasterWmsItem.WmsImageFormat Represents all valid WMS image formats WmsConfigurationDocument Represents a configuration document for the WMS provider. WmsLayerDefinition WMS Layer Definition configuration element"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Serialization.IBinarySerializable.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Serialization.IBinarySerializable.html",
    "title": "Interface IBinarySerializable | MapGuide Maestro",
    "keywords": "Interface IBinarySerializable An object that can be serialized, using the internal MapGuide format, must implement this interface Namespace : OSGeo.MapGuide.MaestroAPI.Serialization Assembly : cs.temp.dll.dll Syntax public interface IBinarySerializable Methods Deserialize(MgBinaryDeserializer) Deserializes using the specified deserializer. Declaration void Deserialize(MgBinaryDeserializer deserializer) Parameters Type Name Description MgBinaryDeserializer deserializer The deserializer. Serialize(MgBinarySerializer) Serializes using the specified serializer. Declaration void Serialize(MgBinarySerializer serializer) Parameters Type Name Description MgBinarySerializer serializer The serializer."
  },
  "api/OSGeo.MapGuide.MaestroAPI.Serialization.MgBinaryDeserializer.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Serialization.MgBinaryDeserializer.html",
    "title": "Class MgBinaryDeserializer | MapGuide Maestro",
    "keywords": "Class MgBinaryDeserializer A utility for serializing objects to the internal MapGuide Format Inheritance System.Object MgBinaryDeserializer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Serialization Assembly : cs.temp.dll.dll Syntax public class MgBinaryDeserializer Constructors MgBinaryDeserializer(Stream, Version) Initializes a new instance of the MgBinaryDeserializer class. Declaration public MgBinaryDeserializer(Stream stream, Version siteversion) Parameters Type Name Description Stream stream The stream. Version siteversion The siteversion. Properties SiteVersion Gets the site version. Declaration public Version SiteVersion { get; } Property Value Type Description Version The site version. Methods ReadBool() Reads the bool. Declaration public bool ReadBool() Returns Type Description System.Boolean ReadByte() Reads the byte. Declaration public byte ReadByte() Returns Type Description System.Byte ReadClassId() Reads the class id. Declaration public int ReadClassId() Returns Type Description System.Int32 ReadCoordinates() Reads the coordinates. Declaration public double[] ReadCoordinates() Returns Type Description System.Double [] ReadDouble() Reads the double. Declaration public double ReadDouble() Returns Type Description System.Double ReadInt16() Reads the int16. Declaration public short ReadInt16() Returns Type Description System.Int16 ReadInt32() Reads the int32. Declaration public int ReadInt32() Returns Type Description System.Int32 ReadInt64() Reads the int64. Declaration public long ReadInt64() Returns Type Description System.Int64 ReadInternalString() Reads the internal string. Declaration public string ReadInternalString() Returns Type Description System.String ReadObject() Reads the object. Declaration public IBinarySerializable ReadObject() Returns Type Description IBinarySerializable ReadResourceIdentifier() Reads the resource identifier. Declaration public string ReadResourceIdentifier() Returns Type Description System.String ReadSingle() Reads the single. Declaration public float ReadSingle() Returns Type Description System.Single ReadStream() Reads the stream. Declaration public Stream ReadStream() Returns Type Description Stream ReadStreamEnd() Reads the stream end. Declaration public void ReadStreamEnd() ReadStreamRepeat(Byte[], Int32, Int32) Internal helper that will read from a potentially fragmented stream Declaration public void ReadStreamRepeat(byte[] buf, int offset, int len) Parameters Type Name Description System.Byte [] buf The buf. System.Int32 offset The offset. System.Int32 len The number of bytes to read ReadStreamRepeat(Int32) Reads the stream repeat. Declaration public byte[] ReadStreamRepeat(int len) Parameters Type Name Description System.Int32 len The len. Returns Type Description System.Byte [] ReadString() Reads the string. Declaration public string ReadString() Returns Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Serialization.MgBinarySerializer.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Serialization.MgBinarySerializer.html",
    "title": "Class MgBinarySerializer | MapGuide Maestro",
    "keywords": "Class MgBinarySerializer A utility for deserializing data in the internal MapGuide format. Inheritance System.Object MgBinarySerializer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Serialization Assembly : cs.temp.dll.dll Syntax public class MgBinarySerializer Constructors MgBinarySerializer(Stream, Version) Initializes a new instance of the MgBinarySerializer class. Declaration public MgBinarySerializer(Stream stream, Version siteversion) Parameters Type Name Description Stream stream The stream. Version siteversion The siteversion. Fields DoubleLen Declaration public static int DoubleLen Field Value Type Description System.Int32 FloatLen Declaration public static int FloatLen Field Value Type Description System.Int32 UInt16Len Declaration public static int UInt16Len Field Value Type Description System.Int32 UInt32Len Declaration public static int UInt32Len Field Value Type Description System.Int32 UInt64Len Declaration public static int UInt64Len Field Value Type Description System.Int32 UInt8Len Declaration public static int UInt8Len Field Value Type Description System.Int32 Properties SiteVersion Gets the site version. Declaration public Version SiteVersion { get; } Property Value Type Description Version The site version. Methods Write(IBinarySerializable) Writes the specified value. Declaration public void Write(IBinarySerializable value) Parameters Type Name Description IBinarySerializable value The value. Write(Stream) Writes the specified stream. Declaration public void Write(Stream stream) Parameters Type Name Description Stream stream The stream. Write(Boolean) Writes the specified value. Declaration public void Write(bool value) Parameters Type Name Description System.Boolean value if set to true [value]. Write(Byte) Writes the specified value. Declaration public void Write(byte value) Parameters Type Name Description System.Byte value The value. Write(Double) Writes the specified value. Declaration public void Write(double value) Parameters Type Name Description System.Double value The value. Write(Int16) Writes the specified value. Declaration public void Write(short value) Parameters Type Name Description System.Int16 value The value. Write(Int32) Writes the specified value. Declaration public void Write(int value) Parameters Type Name Description System.Int32 value The value. Write(Int64) Writes the specified value. Declaration public void Write(long value) Parameters Type Name Description System.Int64 value The value. Write(String) Writes the specified value. Declaration public void Write(string value) Parameters Type Name Description System.String value The value. WriteClassId(Int32) Writes the class id. Declaration public void WriteClassId(int value) Parameters Type Name Description System.Int32 value The value. WriteCoordinates(Double[], Int32) Writes the coordinates. Declaration public void WriteCoordinates(double[] coordinates, int dimensions) Parameters Type Name Description System.Double [] coordinates The coordinates. System.Int32 dimensions The dimensions. WriteRaw(Byte[]) Writes the raw. Declaration public void WriteRaw(byte[] buf) Parameters Type Name Description System.Byte [] buf The buf. WriteResourceIdentifier(String) Writes the resource identifier. Declaration public void WriteResourceIdentifier(string resourceID) Parameters Type Name Description System.String resourceID The resource ID. WriteStreamEnd() Writes the stream end. Declaration public void WriteStreamEnd() WriteStringInternal(String) Writes the string internal. Declaration public void WriteStringInternal(string value) Parameters Type Name Description System.String value The value."
  },
  "api/OSGeo.MapGuide.MaestroAPI.Serialization.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Serialization.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.Serialization | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.Serialization Classes MgBinaryDeserializer A utility for serializing objects to the internal MapGuide Format MgBinarySerializer A utility for deserializing data in the internal MapGuide format. Interfaces IBinarySerializable An object that can be serialized, using the internal MapGuide format, must implement this interface"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Services.IDrawingService.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Services.IDrawingService.html",
    "title": "Interface IDrawingService | MapGuide Maestro",
    "keywords": "Interface IDrawingService Allows low level access to DWF (Design Web Format) data stored in a resource repository as part of a drawing source. Namespace : OSGeo.MapGuide.MaestroAPI.Services Assembly : cs.temp.dll.dll Syntax public interface IDrawingService : IService Examples This example shows how to obtain a drawing service instance. Note that you should check if this service type is supported through its capabilities. IServerConnection conn; ... IDrawingService drawingSvc = (IDrawingService)conn.GetService((int)ServiceType.Drawing); Methods DescribeDrawing(String) Gets the manifest.xml document which describes the supported document interfaces, the document properties, the sections and their contents, and section dependencies. Declaration Stream DescribeDrawing(string resourceID) Parameters Type Name Description System.String resourceID Returns Type Description System.IO.Stream EnumerateDrawingLayers(String, String) Gets the names of the layers in a DWF section. Declaration string[] EnumerateDrawingLayers(string resourceID, string sectionName) Parameters Type Name Description System.String resourceID System.String sectionName Returns Type Description System.String [] EnumerateDrawingSectionResources(String, String) Enumerates the resources of a DWF section (sometimes called a sheet). Declaration DrawingSectionResourceList EnumerateDrawingSectionResources(string resourceID, string sectionName) Parameters Type Name Description System.String resourceID System.String sectionName Returns Type Description DrawingSectionResourceList EnumerateDrawingSections(String) Enumerates only the ePlot sections (sheets) in a DWF. Declaration DrawingSectionList EnumerateDrawingSections(string resourceID) Parameters Type Name Description System.String resourceID Returns Type Description DrawingSectionList GetDrawing(String) Returns the DWF stream for a drawing specified by resource identifier. Declaration Stream GetDrawing(string resourceID) Parameters Type Name Description System.String resourceID Returns Type Description System.IO.Stream GetDrawingCoordinateSpace(String) Gets the coordinate system assigned to the DWF drawing. Declaration string GetDrawingCoordinateSpace(string resourceID) Parameters Type Name Description System.String resourceID Returns Type Description System.String GetLayer(String, String, String) Gets a layer from a particular section of a DWF. Declaration Stream GetLayer(string resourceID, string sectionName, string layerName) Parameters Type Name Description System.String resourceID System.String sectionName System.String layerName Returns Type Description System.IO.Stream GetSection(String, String) Gets a DWF containing only the requested section (sometimes called a sheet). Declaration Stream GetSection(string resourceID, string sectionName) Parameters Type Name Description System.String resourceID System.String sectionName Returns Type Description System.IO.Stream GetSectionResource(String, String) Gets a specific resource from the DWF. Declaration Stream GetSectionResource(string resourceID, string resourceName) Parameters Type Name Description System.String resourceID System.String resourceName Returns Type Description System.IO.Stream"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Services.IFeatureService.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Services.IFeatureService.html",
    "title": "Interface IFeatureService | MapGuide Maestro",
    "keywords": "Interface IFeatureService Provides services for accessing, querying and inspecting feature sources Namespace : OSGeo.MapGuide.MaestroAPI.Services Assembly : cs.temp.dll.dll Syntax public interface IFeatureService : IService Remarks Note that IServerConnection provides built-in access to resource and feature services. Using the OSGeo.MapGuide.MaestroAPI.IServerConnection.GetService method is not necessary Properties FeatureProviders Gets an array of all registered providers Declaration ObjCommon.FeatureProviderRegistryFeatureProvider[] FeatureProviders { get; } Property Value Type Description ObjCommon.FeatureProviderRegistryFeatureProvider [] Methods AggregateQueryFeatureSource(String, String, String) Executes an aggregate query on the specified feature source Declaration IReader AggregateQueryFeatureSource(string resourceID, string className, string filter) Parameters Type Name Description System.String resourceID The Feature Source ID System.String className The feature class name System.String filter The FDO filter string that determines what features will be returned Returns Type Description IReader A IReader containing the results of the query AggregateQueryFeatureSource(String, String, String, NameValueCollection) Executes an aggregate query on the specified feature source Declaration IReader AggregateQueryFeatureSource(string resourceID, string className, string filter, NameValueCollection aggregateFunctions) Parameters Type Name Description System.String resourceID The Feature Source ID System.String className The feature class name System.String filter The FDO filter string that determines what features will be returned NameValueCollection aggregateFunctions A list of name/value pairs that contain the alias (name) for an FDO aggregate expression (value) Returns Type Description IReader A IReader containing the results of the query AggregateQueryFeatureSource(String, String, String, String[]) Executes an aggregate query on the specified feature source Declaration IReader AggregateQueryFeatureSource(string resourceID, string className, string filter, string[] propertyNames) Parameters Type Name Description System.String resourceID The Feature Source ID System.String className The feature class name System.String filter The FDO filter string that determines what features will be returned System.String [] propertyNames An array of property names to include in the result Returns Type Description IReader A IReader containing the results of the query DescribeFeatureSource(String) Describes the specified feature source Declaration FeatureSourceDescription DescribeFeatureSource(string resourceID) Parameters Type Name Description System.String resourceID The Feature Source ID Returns Type Description FeatureSourceDescription Remarks If you only need to list schemas and class names, use the respective OSGeo.MapGuide.MaestroAPI.Services.IFeatureService.GetSchemas and OSGeo.MapGuide.MaestroAPI.Services.IFeatureService.GetClassNames methods. Using this API will have a noticeable performance impact on really large datastores (whose size is in the 100s of classes). DescribeFeatureSource(String, String) Describes the specified feature source Declaration FeatureSchema DescribeFeatureSource(string resourceID, string schema) Parameters Type Name Description System.String resourceID The Feature Source ID System.String schema The name of the schema to describe Returns Type Description FeatureSchema Remarks If you only need to list schemas and class names, use the respective OSGeo.MapGuide.MaestroAPI.Services.IFeatureService.GetSchemas and OSGeo.MapGuide.MaestroAPI.Services.IFeatureService.GetClassNames methods. Using this API will have a noticeable performance impact on really large datastores (whose size is in the 100s of classes). DescribeFeatureSourcePartial(String, String, String[]) Describes the specified feature source restricted to only the specified schema and the specified class names Declaration FeatureSchema DescribeFeatureSourcePartial(string resourceID, string schema, string[] classNames) Parameters Type Name Description System.String resourceID The feature source id System.String schema The schema name System.String [] classNames The array of class names to include in the resulting schema Returns Type Description FeatureSchema Remarks If you only need to list schemas and class names, use the respective OSGeo.MapGuide.MaestroAPI.Services.IFeatureService.GetSchemas and OSGeo.MapGuide.MaestroAPI.Services.IFeatureService.GetClassNames methods. Using this API will have a noticeable performance impact on really large datastores (whose size is in the 100s of classes). EnumerateDataStores(String, String) Enumerates all the data stores and if they are FDO enabled for the specified provider and partial connection string Declaration DataStoreList EnumerateDataStores(string providerName, string partialConnString) Parameters Type Name Description System.String providerName The FDO provider name System.String partialConnString The partial connection string. Certain providers require a partial conection string in order to be able to enumerate data stores Returns Type Description DataStoreList ExecuteSqlQuery(String, String) Executes a SQL query Declaration IReader ExecuteSqlQuery(string featureSourceID, string sql) Parameters Type Name Description System.String featureSourceID The Feature Source ID System.String sql The SQL query string Returns Type Description IReader A IReader containing the results of the query Remarks No validation is done on the SQL query string. The calling application should validate the SQL string to ensure that it does not contain any malicious operations. GetClassDefinition(String, String) Gets the specified class definition Declaration ClassDefinition GetClassDefinition(string resourceID, string className) Parameters Type Name Description System.String resourceID The Feature Source ID System.String className The feature class name. You can pass a qualified class name to be explicit about which class definition you are after Returns Type Description ClassDefinition GetClassNames(String, String) Gets an array of qualified feature class names from the specified feature source Declaration string[] GetClassNames(string resourceID, string schemaName) Parameters Type Name Description System.String resourceID The feature source id System.String schemaName The name of the schema whose class names are to be returned. If null, class names from all schemas in the feature source are returned Returns Type Description System.String [] GetConnectionPropertyValues(String, String, String) Gets the possible values for a given connection property Declaration string[] GetConnectionPropertyValues(string providerName, string propertyName, string partialConnectionString) Parameters Type Name Description System.String providerName The FDO provider name System.String propertyName The property name System.String partialConnectionString A partial connection string if certain providers require such information Returns Type Description System.String [] A list of possible values for the given property GetFeatureProvider(String) Returns an installed provider, given the name of the provider Declaration ObjCommon.FeatureProviderRegistryFeatureProvider GetFeatureProvider(string providername) Parameters Type Name Description System.String providername The name of the provider Returns Type Description ObjCommon.FeatureProviderRegistryFeatureProvider The first matching provider or null GetIdentityProperties(String, String) Gets the names of the identity properties from a feature Declaration string[] GetIdentityProperties(string resourceID, string classname) Parameters Type Name Description System.String resourceID The Feature Source ID System.String classname The classname of the feature, including schema Returns Type Description System.String [] A string array with the found identities GetLongTransactions(String, Boolean) Gets the long transactions for the specified feature source Declaration ILongTransactionList GetLongTransactions(string resourceID, bool activeOnly) Parameters Type Name Description System.String resourceID The Feature Source ID System.Boolean activeOnly If true, will only return active long transactions Returns Type Description ILongTransactionList GetProviderCapabilities(String) Gets the capabilities of the specified provider Declaration IFdoProviderCapabilities GetProviderCapabilities(string provider) Parameters Type Name Description System.String provider Returns Type Description IFdoProviderCapabilities GetSchemaMapping(String, String) Gets the schema mappings for the given FDO provider. These mappings form the basis for a custom configuration document for a feature source that supports configuration Declaration ConfigurationDocument GetSchemaMapping(string provider, string partialConnString) Parameters Type Name Description System.String provider The FDO provider System.String partialConnString The connection string Returns Type Description ConfigurationDocument GetSchemas(String) Gets an array of schema names from the specified feature source Declaration string[] GetSchemas(string resourceID) Parameters Type Name Description System.String resourceID The Feature Source ID Returns Type Description System.String [] GetSpatialContextInfo(String, Boolean) Get the spatial context information for the specified feature source Declaration ObjCommon.FdoSpatialContextList GetSpatialContextInfo(string resourceID, bool activeOnly) Parameters Type Name Description System.String resourceID The Feature Source ID System.Boolean activeOnly If true, will only return the active spatial context Returns Type Description ObjCommon.FdoSpatialContextList GetSpatialExtent(String, String, String) Gets the geometric extent of the specified feature source Declaration ObjCommon.IEnvelope GetSpatialExtent(string resourceID, string className, string geometryPropertyName) Parameters Type Name Description System.String resourceID The Feature Source ID System.String className The feature class name System.String geometryPropertyName The geometry property to get the geometric extent of Returns Type Description ObjCommon.IEnvelope GetSpatialExtent(String, String, String, Boolean) Gets the geometric extent of the specified feature source Declaration ObjCommon.IEnvelope GetSpatialExtent(string resourceID, string className, string geometryPropertyName, bool allowFallbackToContextInformation) Parameters Type Name Description System.String resourceID The Feature Source ID System.String className The feature class name System.String geometryPropertyName The geometry property to get the geometric extent of System.Boolean allowFallbackToContextInformation If true, the geometric extent of the feature class's spatial context will be used in the event that computing the extents fails Returns Type Description ObjCommon.IEnvelope Exceptions Type Condition NullExtentException Thrown if the geometric extent is null GetSpatialExtent(String, String, String, String) Gets the geometric extent of the specified feature source Declaration ObjCommon.IEnvelope GetSpatialExtent(string resourceID, string className, string geometryPropertyName, string filter) Parameters Type Name Description System.String resourceID The Feature Source ID System.String className The feature class name System.String geometryPropertyName The geometry property to get the geometric extent of System.String filter The FDO filter string that determines what features will be returned Returns Type Description ObjCommon.IEnvelope QueryFeatureSource(String, String) Executes a feature query on the specified feature source Declaration IFeatureReader QueryFeatureSource(string resourceID, string className) Parameters Type Name Description System.String resourceID The Feature Source ID System.String className The feature class name Returns Type Description IFeatureReader A IFeatureReader containing the results of the query QueryFeatureSource(String, String, String) Executes a feature query on the specified feature source Declaration IFeatureReader QueryFeatureSource(string resourceID, string className, string filter) Parameters Type Name Description System.String resourceID The Feature Source ID System.String className The feature class name System.String filter The FDO filter string that determines what features will be returned Returns Type Description IFeatureReader A IFeatureReader containing the results of the query QueryFeatureSource(String, String, String, String[]) Executes a feature query on the specified feature source Declaration IFeatureReader QueryFeatureSource(string resourceID, string className, string filter, string[] propertyNames) Parameters Type Name Description System.String resourceID The Feature Source ID System.String className The feature class name System.String filter The FDO filter string that determines what features will be returned System.String [] propertyNames A list of properties that are to be returned in the query result Returns Type Description IFeatureReader A IFeatureReader containing the results of the query QueryFeatureSource(String, String, String, String[], NameValueCollection) Executes a feature query on the specified feature source Declaration IFeatureReader QueryFeatureSource(string resourceID, string className, string filter, string[] propertyNames, NameValueCollection computedProperties) Parameters Type Name Description System.String resourceID The Feature Source ID System.String className The feature class name System.String filter The FDO filter string that determines what features will be returned System.String [] propertyNames A list of properties that are to be returned in the query result NameValueCollection computedProperties A list of name/value pairs that contain the alias (name) for an FDO expression (value) Returns Type Description IFeatureReader A IFeatureReader containing the results of the query QueryFeatureSource(String, String, String, String[], NameValueCollection, Int32) Executes a feature query on the specified feature source Declaration IFeatureReader QueryFeatureSource(string resourceID, string className, string filter, string[] propertyNames, NameValueCollection computedProperties, int limit) Parameters Type Name Description System.String resourceID The Feature Source ID System.String className The feature class name System.String filter The FDO filter string that determines what features will be returned System.String [] propertyNames A list of properties that are to be returned in the query result NameValueCollection computedProperties A list of name/value pairs that contain the alias (name) for an FDO expression (value) System.Int32 limit Limits the number of features returned in the reader. -1 for all features Returns Type Description IFeatureReader A IFeatureReader containing the results of the query RemoveVersionFromProviderName(String) Removes the version numbers from a providername Declaration string RemoveVersionFromProviderName(string providername) Parameters Type Name Description System.String providername The name of the provider, with or without version numbers Returns Type Description System.String The provider name without version numbers TestConnection(String) Tests the connection settings of the specified feature source Declaration string TestConnection(string featureSourceId) Parameters Type Name Description System.String featureSourceId Returns Type Description System.String TestConnection(String, NameValueCollection) Tests the specified connection settings Declaration string TestConnection(string providername, NameValueCollection parameters) Parameters Type Name Description System.String providername NameValueCollection parameters Returns Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Services.IFusionService.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Services.IFusionService.html",
    "title": "Interface IFusionService | MapGuide Maestro",
    "keywords": "Interface IFusionService Provides services for the construction of Fusion web applications Namespace : OSGeo.MapGuide.MaestroAPI.Services Assembly : cs.temp.dll.dll Syntax public interface IFusionService : IService Examples This example shows how to obtain a fusion service instance. Note that you should check if this service type is supported through its capabilities. IServerConnection conn; ... IFusionService fusionSvc = (IFusionService)conn.GetService((int)ServiceType.Fusion); Methods GetApplicationContainers() Returns the avalible widget containers on the server Declaration IApplicationDefinitionContainerInfoSet GetApplicationContainers() Returns Type Description IApplicationDefinitionContainerInfoSet The avalible widget containers on the server GetApplicationTemplates() Gets the application templates. Declaration IApplicationDefinitionTemplateInfoSet GetApplicationTemplates() Returns Type Description IApplicationDefinitionTemplateInfoSet GetApplicationWidgets() Returns the avalible application widgets on the server Declaration IApplicationDefinitionWidgetInfoSet GetApplicationWidgets() Returns Type Description IApplicationDefinitionWidgetInfoSet The avalible application widgets on the server"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.TileRunParameters.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.TileRunParameters.html",
    "title": "Class TileRunParameters | MapGuide Maestro",
    "keywords": "Class TileRunParameters Defines global parameters for a tiling run Inheritance System.Object TileRunParameters Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public class TileRunParameters Fields BASEGROUPS The base layer groups to generate tiles for Declaration public const string BASEGROUPS = \"basegroups\" Field Value Type Description System.String CONNECTIONPARAMS The connection parameters Declaration public const string CONNECTIONPARAMS = \"connection-params\" Field Value Type Description System.String DOTSPERINCH The DPI value Declaration public const string DOTSPERINCH = \"DPI\" Field Value Type Description System.String DPI The display DPI Declaration public double DPI Field Value Type Description System.Double EXTENTOVERRIDE The overridden extent Declaration public const string EXTENTOVERRIDE = \"extentoverride\" Field Value Type Description System.String LIMITCOLS Limit the number of columns Declaration public const string LIMITCOLS = \"limitcols\" Field Value Type Description System.String LIMITROWS Limit the number of rows Declaration public const string LIMITROWS = \"limitrows\" Field Value Type Description System.String MAPAGENT The mapagent url Declaration public const string MAPAGENT = \"mapagent\" Field Value Type Description System.String MAPDEFINITIONS The list of map definitions Declaration public const string MAPDEFINITIONS = \"mapdefinitions\" Field Value Type Description System.String MetersPerUnit The meters per unit Declaration public double MetersPerUnit Field Value Type Description System.Double METERSPERUNIT The meters per unit Declaration public const string METERSPERUNIT = \"metersperunit\" Field Value Type Description System.String NATIVECONNECTION Indicates whether to use a native connection Declaration public const string NATIVECONNECTION = \"native-connection\" Field Value Type Description System.String PASSWORD The password Declaration public const string PASSWORD = \"password\" Field Value Type Description System.String PROVIDER The connection provider Declaration public const string PROVIDER = \"provider\" Field Value Type Description System.String RandomizeTileSequence Gets or sets whether to randomize the tile generation sequence Declaration public bool RandomizeTileSequence Field Value Type Description System.Boolean RANDOMTILEORDER Random tile order Declaration public const string RANDOMTILEORDER = \"random-tile-order\" Field Value Type Description System.String RenderMethod The render method Declaration public TileRunParameters.RenderMethodDelegate RenderMethod Field Value Type Description TileRunParameters.RenderMethodDelegate RetryCount The number of times to retry Declaration public int RetryCount Field Value Type Description System.Int32 SCALEINDEX The scale index Declaration public const string SCALEINDEX = \"scaleindex\" Field Value Type Description System.String THREADCOUNT The thread count Declaration public const string THREADCOUNT = \"threadcount\" Field Value Type Description System.String TileHeight The tile height Declaration public int TileHeight Field Value Type Description System.Int32 TILEHEIGHT The tile height Declaration public const string TILEHEIGHT = \"tileheight\" Field Value Type Description System.String TileWidth The tile width Declaration public int TileWidth Field Value Type Description System.Int32 TILEWIDTH The tile width Declaration public const string TILEWIDTH = \"tilewidth\" Field Value Type Description System.String USERNAME The username Declaration public const string USERNAME = \"username\" Field Value Type Description System.String Properties ThreadCount Gets or sets the thread count Declaration public int ThreadCount { get; set; } Property Value Type Description System.Int32"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.TileSeeder.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.TileSeeder.html",
    "title": "Class TileSeeder | MapGuide Maestro",
    "keywords": "Class TileSeeder Populates a tile cache by requesting all possible tiles for a given in map in a multi-threaded manner This is the successor to the TilingRunCollection with a simpler API design and implementation Inheritance System.Object TileSeeder Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public class TileSeeder Examples This example shows how to seed a tile cache IServerConnection conn; ... ITileService tileSvc = (ITileService)conn.GetService((int)ServiceType.Tile); IMapDefinition mapDef = (IMapDefinition)conn.ResourceService.GetResource(\"Library://Path/To/MyTiled.MapDefinition\"); TileSeederOptions options = new TileSeederOptions(); TileWalkOptions walkOptions = new TileWalkOptions(mapDef); ITileWalker walker = new DefaultTileWalker(walkOptions); TileSeeder seeder = new TileSeeder(tileSvc, walker, options); TileSeedStats stats = seeder.Run(); Constructors TileSeeder(ITileService, ITileWalker, TileSeederOptions) Constructs a new instance Declaration public TileSeeder(ITileService tileSvc, ITileWalker walker, TileSeederOptions options) Parameters Type Name Description ITileService tileSvc ITileWalker walker TileSeederOptions options Methods Run(IProgress<TileProgress>) Populates the tile cache for the configured tiled map definition or tile set Declaration public TileSeedStats Run(IProgress<TileProgress> progress = null) Parameters Type Name Description IProgress < TileProgress > progress Returns Type Description TileSeedStats"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.TileSeederOptions.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.TileSeederOptions.html",
    "title": "Class TileSeederOptions | MapGuide Maestro",
    "keywords": "Class TileSeederOptions Defines options for controlling the tile seeding process Inheritance System.Object TileSeederOptions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public class TileSeederOptions"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.TileSeedStats.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.TileSeedStats.html",
    "title": "Struct TileSeedStats | MapGuide Maestro",
    "keywords": "Struct TileSeedStats Defines the statistics of a tile seeding run Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public struct TileSeedStats Properties Duration The duration of the whole operation Declaration public TimeSpan Duration { get; set; } Property Value Type Description TimeSpan ResourceID The resource id of the map definition or tile set being seeded Declaration public string ResourceID { get; set; } Property Value Type Description System.String TilesRendered The number of tiles rendered Declaration public int TilesRendered { get; set; } Property Value Type Description System.Int32"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.TilingRunCollection.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.TilingRunCollection.html",
    "title": "Class TilingRunCollection | MapGuide Maestro",
    "keywords": "Class TilingRunCollection Class to hold settings for a batch run of tile building Inheritance System.Object TilingRunCollection Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public class TilingRunCollection : IDisposable Constructors TilingRunCollection(IServerConnection) Constructs a new batch setup Declaration public TilingRunCollection(IServerConnection connection) Parameters Type Name Description IServerConnection connection TilingRunCollection(IServerConnection, String[]) Constructs a new batch setup Declaration public TilingRunCollection(IServerConnection connection, params string[] maps) Parameters Type Name Description IServerConnection connection System.String [] maps TilingRunCollection(String, String, String, String[]) Constructs a new batch setup. If no maps are supplied, all maps in the repository is assumed. Declaration public TilingRunCollection(string mapagent, string username, string password, params string[] maps) Parameters Type Name Description System.String mapagent The url to the mapagent.fcgi System.String username The username to connect with System.String password The password to connect with System.String [] maps A list of maps to process, leave empty to process all layers Fields PauseEvent An event that can be used to pause MgCooker Declaration public ManualResetEvent PauseEvent Field Value Type Description System.Threading.ManualResetEvent Properties Cancel Gets a flag indicating if the rendering process is cancelled Declaration public bool Cancel { get; } Property Value Type Description System.Boolean Config The tile settings Declaration public TileRunParameters Config { get; } Property Value Type Description TileRunParameters Connection The connection to the server Declaration public IServerConnection Connection { get; } Property Value Type Description IServerConnection Maps The list of map configurations to proccess Declaration public List<MapTilingConfiguration> Maps { get; } Property Value Type Description List < MapTilingConfiguration > Methods AddMapDefinitions(String[]) Adds the specified map definition ids Declaration public void AddMapDefinitions(string[] maps) Parameters Type Name Description System.String [] maps Dispose() Dispose of this instance Declaration public void Dispose() Finalize() Finalizer Declaration protected void Finalize() LimitCols(Int64) Limits the number of columns Declaration public void LimitCols(long limit) Parameters Type Name Description System.Int64 limit LimitRows(Int64) Limits the number of rows Declaration public void LimitRows(long limit) Parameters Type Name Description System.Int64 limit RenderAll() Renders all tiles in all maps Declaration public void RenderAll() SetGroups(String[]) Sets the list of groups Declaration public void SetGroups(string[] groups) Parameters Type Name Description System.String [] groups SetScales(Int32[]) Sets the list of scale indexes Declaration public void SetScales(int[] scaleindexes) Parameters Type Name Description System.Int32 [] scaleindexes Events BeginRenderingGroup A group is being rendered Declaration public event TileProgressEventHandler BeginRenderingGroup Event Type Type Description TileProgressEventHandler BeginRenderingMap A map is being rendered Declaration public event TileProgressEventHandler BeginRenderingMap Event Type Type Description TileProgressEventHandler BeginRenderingMaps All maps are being rendered Declaration public event TileProgressEventHandler BeginRenderingMaps Event Type Type Description TileProgressEventHandler BeginRenderingScale A scale is being rendered Declaration public event TileProgressEventHandler BeginRenderingScale Event Type Type Description TileProgressEventHandler BeginRenderingTile A tile is being rendered Declaration public event TileProgressEventHandler BeginRenderingTile Event Type Type Description TileProgressEventHandler FailedRenderingTile A tile has failed to render Declaration public event TileErrorEventHandler FailedRenderingTile Event Type Type Description TileErrorEventHandler FinishRenderingGroup A group has been rendered Declaration public event TileProgressEventHandler FinishRenderingGroup Event Type Type Description TileProgressEventHandler FinishRenderingMap A map has been rendered Declaration public event TileProgressEventHandler FinishRenderingMap Event Type Type Description TileProgressEventHandler FinishRenderingMaps All maps have been rendered Declaration public event TileProgressEventHandler FinishRenderingMaps Event Type Type Description TileProgressEventHandler FinishRenderingScale A scale has been rendered Declaration public event TileProgressEventHandler FinishRenderingScale Event Type Type Description TileProgressEventHandler FinishRenderingTile A tile has been rendered Declaration public event TileProgressEventHandler FinishRenderingTile Event Type Type Description TileProgressEventHandler"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.XYZTileService.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.XYZTileService.html",
    "title": "Class XYZTileService | MapGuide Maestro",
    "keywords": "Class XYZTileService An implementation of ITileService for fetching XYZ tiles Inheritance System.Object XYZTileService Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public class XYZTileService : ITileService Constructors XYZTileService(String) Constructs a new instance Declaration public XYZTileService(string urlTemplate) Parameters Type Name Description System.String urlTemplate The URL of the XYZ tile service/endpoint. The URL must have {x}, {y} and {z} placeholders Methods GetTile(String, String, Int32, Int32, Int32) Gets the tile at the given XYZ coordinate Declaration public Stream GetTile(string mapDefinition, string baseLayerGroup, int column, int row, int scaleIndex) Parameters Type Name Description System.String mapDefinition Un-used parameter System.String baseLayerGroup Un-used parameters System.Int32 column Y value System.Int32 row X value System.Int32 scaleIndex Z value Returns Type Description Stream"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.XYZTileWalker.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.XYZTileWalker.html",
    "title": "Class XYZTileWalker | MapGuide Maestro",
    "keywords": "Class XYZTileWalker An implementation of ITileWalker that can compute a list of tiles to request for an XYZ tile set Inheritance System.Object XYZTileWalker Implements ITileWalker Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Tile Assembly : cs.temp.dll.dll Syntax public class XYZTileWalker : ITileWalker Constructors XYZTileWalker(Double, Double, Double, Double) Constructs a new instance for the given extent Declaration public XYZTileWalker(double minX, double minY, double maxX, double maxY) Parameters Type Name Description System.Double minX System.Double minY System.Double maxX System.Double maxY Properties ResourceID Un-used. Returns an empty string Declaration public string ResourceID { get; } Property Value Type Description System.String Methods GetTileList() Computes the list of all possible tiles to request Declaration public TileRef[] GetTileList() Returns Type Description TileRef [] Implements ITileWalker"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Tile.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Tile.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.Tile | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.Tile Classes DefaultTileWalker The default tile walking strategy DefaultTileWalkOptions Defines options that control how the tile set is to be walked to obtain the full list of tiles to be requested MapTilingConfiguration Class that represents a single map to build tiles for TileProgressEventArgs Tile progress event TileRenderingErrorEventArgs The rendering error event TileRunParameters Defines global parameters for a tiling run TileSeeder Populates a tile cache by requesting all possible tiles for a given in map in a multi-threaded manner This is the successor to the TilingRunCollection with a simpler API design and implementation TileSeederOptions Defines options for controlling the tile seeding process TilingRunCollection Class to hold settings for a batch run of tile building XYZTileService An implementation of ITileService for fetching XYZ tiles XYZTileWalker An implementation of ITileWalker that can compute a list of tiles to request for an XYZ tile set Structs TileProgress A tile seeding progress event TileRef Defines a request for a single tile TileSeedStats Defines the statistics of a tile seeding run Interfaces ITileWalker Defines a strategy for walking through all the possible tiles for a given tiled map or tile set Enums CallbackStates These are the avalible states for callbacks Delegates TileErrorEventHandler This delegate is used to monitor progress on tile rendering TileProgressEventHandler This delegate is used to monitor progress on tile rendering TileRunParameters.RenderMethodDelegate Defines a tile render method"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.ISeparator.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.ISeparator.html",
    "title": "Interface ISeparator | MapGuide Maestro",
    "keywords": "Interface ISeparator Represents a menu/toolbar separator Inherited Members IUIItem.Parent IUIItem.Function Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface ISeparator : IUIItem, INotifyPropertyChanged"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IUIItem.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IUIItem.html",
    "title": "Interface IUIItem | MapGuide Maestro",
    "keywords": "Interface IUIItem Represents a UI toolbar/menu item Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IUIItem : INotifyPropertyChanged Properties Function The item function Declaration UiItemFunctionType Function { get; } Property Value Type Description UiItemFunctionType Parent The parent menu Declaration IMenu Parent { get; } Property Value Type Description IMenu"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IUIItemContainer.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IUIItemContainer.html",
    "title": "Interface IUIItemContainer | MapGuide Maestro",
    "keywords": "Interface IUIItemContainer Represents a UI item container component Inherited Members IWidgetContainer.Name IWidgetContainer.Type IWidgetContainer.Position IExtensibleElement.Extension IMenu.ItemCount IMenu.Items IMenu.MoveUp(IUIItem) IMenu.MoveDown(IUIItem) IMenu.GetIndex(IUIItem) IMenu.Insert(IUIItem, Int32) IMenu.AddItem(IUIItem) IMenu.RemoveItem(IUIItem) Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IUIItemContainer : IWidgetContainer, INotifyPropertyChanged, IExtensibleElement, IMenu"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IUIWidget.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IUIWidget.html",
    "title": "Interface IUIWidget | MapGuide Maestro",
    "keywords": "Interface IUIWidget Represents a widget definition that is accessible from a menu or toolbar Inherited Members IWidget.Name IWidget.Type IWidget.Location IWidget.ToXml() IExtensibleElement.Extension Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IUIWidget : IWidget, INotifyPropertyChanged, IExtensibleElement Properties Disabled Indicates if it is disabled Declaration string Disabled { get; set; } Property Value Type Description System.String ImageClass The image icon CSS class Declaration string ImageClass { get; set; } Property Value Type Description System.String ImageUrl The image icon URL Declaration string ImageUrl { get; set; } Property Value Type Description System.String Label The label Declaration string Label { get; set; } Property Value Type Description System.String StatusText The status bar text Declaration string StatusText { get; set; } Property Value Type Description System.String Tooltip The tooltip Declaration string Tooltip { get; set; } Property Value Type Description System.String Methods Clone() Clones this instance Declaration IUIWidget Clone() Returns Type Description IUIWidget"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IWidget.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IWidget.html",
    "title": "Interface IWidget | MapGuide Maestro",
    "keywords": "Interface IWidget Represents a fusion application widget Inherited Members IExtensibleElement.Extension Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IWidget : INotifyPropertyChanged, IExtensibleElement Properties Location Gets or sets the location Declaration string Location { get; set; } Property Value Type Description System.String Name Gets or sets the name of the widget Declaration string Name { get; set; } Property Value Type Description System.String Type Gets or sets the type of the widget Declaration string Type { get; set; } Property Value Type Description System.String Methods ToXml() Gets the raw XML content of this widget Declaration string ToXml() Returns Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IWidgetContainer.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IWidgetContainer.html",
    "title": "Interface IWidgetContainer | MapGuide Maestro",
    "keywords": "Interface IWidgetContainer Represents a container component in a flexible layout Inherited Members IExtensibleElement.Extension Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IWidgetContainer : INotifyPropertyChanged, IExtensibleElement Properties Name The name of the widget container Declaration string Name { get; set; } Property Value Type Description System.String Position The position of the widget container Declaration string Position { get; set; } Property Value Type Description System.String Type The type of the widget container Declaration string Type { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IWidgetInfo.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IWidgetInfo.html",
    "title": "Interface IWidgetInfo | MapGuide Maestro",
    "keywords": "Interface IWidgetInfo Describes a fusion widget Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IWidgetInfo Properties ContainableBy Indicates which containers this widget is containable by Declaration string[] ContainableBy { get; } Property Value Type Description System.String [] Description Gets the description Declaration string Description { get; } Property Value Type Description System.String ImageClass Gets the image css class Declaration string ImageClass { get; } Property Value Type Description System.String ImageUrl Gets the image url Declaration string ImageUrl { get; } Property Value Type Description System.String Label Gets the label Declaration string Label { get; } Property Value Type Description System.String LocalizedType Gets the localized type of the widget Declaration string LocalizedType { get; } Property Value Type Description System.String Location Gets the location Declaration string Location { get; } Property Value Type Description System.String Parameters Gets the parameters for this widget Declaration IWidgetParameter[] Parameters { get; } Property Value Type Description IWidgetParameter [] StandardUi Indicates if this is a UI widget Declaration bool StandardUi { get; } Property Value Type Description System.Boolean StatusText Gets the text to display in the status bar Declaration string StatusText { get; } Property Value Type Description System.String Tooltip Gets the tooltip Declaration string Tooltip { get; } Property Value Type Description System.String Type Gets the type of widget Declaration string Type { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IWidgetItem.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IWidgetItem.html",
    "title": "Interface IWidgetItem | MapGuide Maestro",
    "keywords": "Interface IWidgetItem Represents a widget reference. This is analogous to a command item in a Web Layouts Inherited Members IUIItem.Parent IUIItem.Function Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IWidgetItem : IUIItem, INotifyPropertyChanged Properties Widget The widget name Declaration string Widget { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.DrawingSectionListSection.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.DrawingSectionListSection.html",
    "title": "Class DrawingSectionListSection | MapGuide Maestro",
    "keywords": "Class DrawingSectionListSection Inheritance System.Object DrawingSectionListSection Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class DrawingSectionListSection : ComponentModel.INotifyPropertyChanged Properties Name Declaration public string Name { get; set; } Property Value Type Description System.String Title Declaration public string Title { get; set; } Property Value Type Description System.String Type Declaration public string Type { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this DrawingSectionListSection object Declaration public virtual DrawingSectionListSection Clone() Returns Type Description DrawingSectionListSection Deserialize(String) Declaration public static DrawingSectionListSection Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description DrawingSectionListSection Deserialize(String, out DrawingSectionListSection) Declaration public static bool Deserialize(string xml, out DrawingSectionListSection obj) Parameters Type Name Description System.String xml DrawingSectionListSection obj Returns Type Description System.Boolean Deserialize(String, out DrawingSectionListSection, out Exception) Deserializes workflow markup into an DrawingSectionListSection object Declaration public static bool Deserialize(string xml, out DrawingSectionListSection obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize DrawingSectionListSection obj Output DrawingSectionListSection object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static DrawingSectionListSection LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description DrawingSectionListSection LoadFromFile(String, out DrawingSectionListSection) Declaration public static bool LoadFromFile(string fileName, out DrawingSectionListSection obj) Parameters Type Name Description System.String fileName DrawingSectionListSection obj Returns Type Description System.Boolean LoadFromFile(String, out DrawingSectionListSection, out Exception) Deserializes xml markup from file into an DrawingSectionListSection object Declaration public static bool LoadFromFile(string fileName, out DrawingSectionListSection obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize DrawingSectionListSection obj Output DrawingSectionListSection object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current DrawingSectionListSection object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current DrawingSectionListSection object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.DrawingSectionResourceList.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.DrawingSectionResourceList.html",
    "title": "Class DrawingSectionResourceList | MapGuide Maestro",
    "keywords": "Class DrawingSectionResourceList Drawing Section Resource list Inheritance System.Object DrawingSectionResourceList Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class DrawingSectionResourceList : ComponentModel.INotifyPropertyChanged Properties SectionResource Declaration public BindingList<DrawingSectionResourceListSectionResource> SectionResource { get; set; } Property Value Type Description BindingList < DrawingSectionResourceListSectionResource > Methods Clone() Create a clone of this DrawingSectionResourceList object Declaration public virtual DrawingSectionResourceList Clone() Returns Type Description DrawingSectionResourceList Deserialize(String) Declaration public static DrawingSectionResourceList Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description DrawingSectionResourceList Deserialize(String, out DrawingSectionResourceList) Declaration public static bool Deserialize(string xml, out DrawingSectionResourceList obj) Parameters Type Name Description System.String xml DrawingSectionResourceList obj Returns Type Description System.Boolean Deserialize(String, out DrawingSectionResourceList, out Exception) Deserializes workflow markup into an DrawingSectionResourceList object Declaration public static bool Deserialize(string xml, out DrawingSectionResourceList obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize DrawingSectionResourceList obj Output DrawingSectionResourceList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static DrawingSectionResourceList LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description DrawingSectionResourceList LoadFromFile(String, out DrawingSectionResourceList) Declaration public static bool LoadFromFile(string fileName, out DrawingSectionResourceList obj) Parameters Type Name Description System.String fileName DrawingSectionResourceList obj Returns Type Description System.Boolean LoadFromFile(String, out DrawingSectionResourceList, out Exception) Deserializes xml markup from file into an DrawingSectionResourceList object Declaration public static bool LoadFromFile(string fileName, out DrawingSectionResourceList obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize DrawingSectionResourceList obj Output DrawingSectionResourceList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current DrawingSectionResourceList object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current DrawingSectionResourceList object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.DrawingSectionResourceListSectionResource.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.DrawingSectionResourceListSectionResource.html",
    "title": "Class DrawingSectionResourceListSectionResource | MapGuide Maestro",
    "keywords": "Class DrawingSectionResourceListSectionResource Inheritance System.Object DrawingSectionResourceListSectionResource Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class DrawingSectionResourceListSectionResource : ComponentModel.INotifyPropertyChanged Properties Href Declaration public string Href { get; set; } Property Value Type Description System.String Mime Declaration public string Mime { get; set; } Property Value Type Description System.String Role Declaration public string Role { get; set; } Property Value Type Description System.String Title Declaration public string Title { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this DrawingSectionResourceListSectionResource object Declaration public virtual DrawingSectionResourceListSectionResource Clone() Returns Type Description DrawingSectionResourceListSectionResource Deserialize(String) Declaration public static DrawingSectionResourceListSectionResource Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description DrawingSectionResourceListSectionResource Deserialize(String, out DrawingSectionResourceListSectionResource) Declaration public static bool Deserialize(string xml, out DrawingSectionResourceListSectionResource obj) Parameters Type Name Description System.String xml DrawingSectionResourceListSectionResource obj Returns Type Description System.Boolean Deserialize(String, out DrawingSectionResourceListSectionResource, out Exception) Deserializes workflow markup into an DrawingSectionResourceListSectionResource object Declaration public static bool Deserialize(string xml, out DrawingSectionResourceListSectionResource obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize DrawingSectionResourceListSectionResource obj Output DrawingSectionResourceListSectionResource object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static DrawingSectionResourceListSectionResource LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description DrawingSectionResourceListSectionResource LoadFromFile(String, out DrawingSectionResourceListSectionResource) Declaration public static bool LoadFromFile(string fileName, out DrawingSectionResourceListSectionResource obj) Parameters Type Name Description System.String fileName DrawingSectionResourceListSectionResource obj Returns Type Description System.Boolean LoadFromFile(String, out DrawingSectionResourceListSectionResource, out Exception) Deserializes xml markup from file into an DrawingSectionResourceListSectionResource object Declaration public static bool LoadFromFile(string fileName, out DrawingSectionResourceListSectionResource obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize DrawingSectionResourceListSectionResource obj Output DrawingSectionResourceListSectionResource object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current DrawingSectionResourceListSectionResource object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current DrawingSectionResourceListSectionResource object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.Envelope.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.Envelope.html",
    "title": "Class Envelope | MapGuide Maestro",
    "keywords": "Class Envelope Specifies an envelope (a rectangle) using two corner points. Inheritance System.Object Envelope Implements IEnvelope INotifyPropertyChanged Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class Envelope : ComponentModel.INotifyPropertyChanged, IEnvelope, INotifyPropertyChanged Constructors Envelope(Double, Double, Double, Double) Constructor Declaration public Envelope(double minx, double miny, double maxx, double maxy) Parameters Type Name Description System.Double minx System.Double miny System.Double maxx System.Double maxy Properties LowerLeftCoordinate Specifies the lower left corner of the envelope. Declaration public EnvelopeLowerLeftCoordinate LowerLeftCoordinate { get; set; } Property Value Type Description EnvelopeLowerLeftCoordinate MaxX Gets or sets the upper X value Declaration public double MaxX { get; set; } Property Value Type Description System.Double MaxY Gets or sets the upper Y value Declaration public double MaxY { get; set; } Property Value Type Description System.Double MinX Gets or sets the lower X value Declaration public double MinX { get; set; } Property Value Type Description System.Double MinY Gets or set the lower Y value Declaration public double MinY { get; set; } Property Value Type Description System.Double UpperRightCoordinate Specifies the upper right corner of the envelope. Declaration public EnvelopeUpperRightCoordinate UpperRightCoordinate { get; set; } Property Value Type Description EnvelopeUpperRightCoordinate Methods Clone() Create a clone of this Envelope object Declaration public virtual Envelope Clone() Returns Type Description Envelope Deserialize(String) Declaration public static Envelope Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description Envelope Deserialize(String, out Envelope) Declaration public static bool Deserialize(string xml, out Envelope obj) Parameters Type Name Description System.String xml Envelope obj Returns Type Description System.Boolean Deserialize(String, out Envelope, out Exception) Deserializes workflow markup into an Envelope object Declaration public static bool Deserialize(string xml, out Envelope obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize Envelope obj Output Envelope object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static Envelope LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description Envelope LoadFromFile(String, out Envelope) Declaration public static bool LoadFromFile(string fileName, out Envelope obj) Parameters Type Name Description System.String fileName Envelope obj Returns Type Description System.Boolean LoadFromFile(String, out Envelope, out Exception) Deserializes xml markup from file into an Envelope object Declaration public static bool LoadFromFile(string fileName, out Envelope obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize Envelope obj Output Envelope object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current Envelope object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current Envelope object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Implements IEnvelope INotifyPropertyChanged"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.EnvelopeExtensions.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.EnvelopeExtensions.html",
    "title": "Class EnvelopeExtensions | MapGuide Maestro",
    "keywords": "Class EnvelopeExtensions Extension method class Inheritance System.Object EnvelopeExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax public static class EnvelopeExtensions Methods Center(IEnvelope) Gets the center of the specified envelope Declaration public static IPoint2D Center(this IEnvelope env) Parameters Type Name Description IEnvelope env Returns Type Description IPoint2D Clone(IEnvelope) Clones this instance Declaration public static IEnvelope Clone(this IEnvelope env) Parameters Type Name Description IEnvelope env The envelope. Returns Type Description IEnvelope Contains(IEnvelope, Double, Double) Indicates whether the specified coordinates are within this instance Declaration public static bool Contains(this IEnvelope env, double x, double y) Parameters Type Name Description IEnvelope env The env. System.Double x The x. System.Double y The y. Returns Type Description System.Boolean true if [contains] [the specified env]; otherwise, false . ExpandToInclude(IEnvelope, IEnvelope) Expands this envelope to accomodate the given envelope Declaration public static void ExpandToInclude(this IEnvelope env, IEnvelope e1) Parameters Type Name Description IEnvelope env IEnvelope e1 Intersects(IEnvelope, IEnvelope) Indicates whether the specified envelope intersects this instance Declaration public static bool Intersects(this IEnvelope env, IEnvelope other) Parameters Type Name Description IEnvelope env The env. IEnvelope other The other. Returns Type Description System.Boolean IsEmpty(IEnvelope) Gets whether the given instance is empty Declaration public static bool IsEmpty(this IEnvelope env) Parameters Type Name Description IEnvelope env Returns Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.EnvelopeLowerLeftCoordinate.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.EnvelopeLowerLeftCoordinate.html",
    "title": "Class EnvelopeLowerLeftCoordinate | MapGuide Maestro",
    "keywords": "Class EnvelopeLowerLeftCoordinate Specifies the lower left corner of the envelope. Inheritance System.Object EnvelopeLowerLeftCoordinate Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class EnvelopeLowerLeftCoordinate : ComponentModel.INotifyPropertyChanged Properties M Declaration public double M { get; set; } Property Value Type Description System.Double X Declaration public double X { get; set; } Property Value Type Description System.Double Y Declaration public double Y { get; set; } Property Value Type Description System.Double Z Declaration public double Z { get; set; } Property Value Type Description System.Double Methods Clone() Create a clone of this EnvelopeLowerLeftCoordinate object Declaration public virtual EnvelopeLowerLeftCoordinate Clone() Returns Type Description EnvelopeLowerLeftCoordinate Deserialize(String) Declaration public static EnvelopeLowerLeftCoordinate Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description EnvelopeLowerLeftCoordinate Deserialize(String, out EnvelopeLowerLeftCoordinate) Declaration public static bool Deserialize(string xml, out EnvelopeLowerLeftCoordinate obj) Parameters Type Name Description System.String xml EnvelopeLowerLeftCoordinate obj Returns Type Description System.Boolean Deserialize(String, out EnvelopeLowerLeftCoordinate, out Exception) Deserializes workflow markup into an EnvelopeLowerLeftCoordinate object Declaration public static bool Deserialize(string xml, out EnvelopeLowerLeftCoordinate obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize EnvelopeLowerLeftCoordinate obj Output EnvelopeLowerLeftCoordinate object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static EnvelopeLowerLeftCoordinate LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description EnvelopeLowerLeftCoordinate LoadFromFile(String, out EnvelopeLowerLeftCoordinate) Declaration public static bool LoadFromFile(string fileName, out EnvelopeLowerLeftCoordinate obj) Parameters Type Name Description System.String fileName EnvelopeLowerLeftCoordinate obj Returns Type Description System.Boolean LoadFromFile(String, out EnvelopeLowerLeftCoordinate, out Exception) Deserializes xml markup from file into an EnvelopeLowerLeftCoordinate object Declaration public static bool LoadFromFile(string fileName, out EnvelopeLowerLeftCoordinate obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize EnvelopeLowerLeftCoordinate obj Output EnvelopeLowerLeftCoordinate object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current EnvelopeLowerLeftCoordinate object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current EnvelopeLowerLeftCoordinate object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.EnvelopeUpperRightCoordinate.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.EnvelopeUpperRightCoordinate.html",
    "title": "Class EnvelopeUpperRightCoordinate | MapGuide Maestro",
    "keywords": "Class EnvelopeUpperRightCoordinate Specifies the upper right corner of the envelope. Inheritance System.Object EnvelopeUpperRightCoordinate Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class EnvelopeUpperRightCoordinate : ComponentModel.INotifyPropertyChanged Properties M Declaration public double M { get; set; } Property Value Type Description System.Double X Declaration public double X { get; set; } Property Value Type Description System.Double Y Declaration public double Y { get; set; } Property Value Type Description System.Double Z Declaration public double Z { get; set; } Property Value Type Description System.Double Methods Clone() Create a clone of this EnvelopeUpperRightCoordinate object Declaration public virtual EnvelopeUpperRightCoordinate Clone() Returns Type Description EnvelopeUpperRightCoordinate Deserialize(String) Declaration public static EnvelopeUpperRightCoordinate Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description EnvelopeUpperRightCoordinate Deserialize(String, out EnvelopeUpperRightCoordinate) Declaration public static bool Deserialize(string xml, out EnvelopeUpperRightCoordinate obj) Parameters Type Name Description System.String xml EnvelopeUpperRightCoordinate obj Returns Type Description System.Boolean Deserialize(String, out EnvelopeUpperRightCoordinate, out Exception) Deserializes workflow markup into an EnvelopeUpperRightCoordinate object Declaration public static bool Deserialize(string xml, out EnvelopeUpperRightCoordinate obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize EnvelopeUpperRightCoordinate obj Output EnvelopeUpperRightCoordinate object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static EnvelopeUpperRightCoordinate LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description EnvelopeUpperRightCoordinate LoadFromFile(String, out EnvelopeUpperRightCoordinate) Declaration public static bool LoadFromFile(string fileName, out EnvelopeUpperRightCoordinate obj) Parameters Type Name Description System.String fileName EnvelopeUpperRightCoordinate obj Returns Type Description System.Boolean LoadFromFile(String, out EnvelopeUpperRightCoordinate, out Exception) Deserializes xml markup from file into an EnvelopeUpperRightCoordinate object Declaration public static bool LoadFromFile(string fileName, out EnvelopeUpperRightCoordinate obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize EnvelopeUpperRightCoordinate obj Output EnvelopeUpperRightCoordinate object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current EnvelopeUpperRightCoordinate object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current EnvelopeUpperRightCoordinate object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ExpressionDataType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ExpressionDataType.html",
    "title": "Enum ExpressionDataType | MapGuide Maestro",
    "keywords": "Enum ExpressionDataType The types of valid FDO expressions for use in Symbol Definitions Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax public enum ExpressionDataType Fields Name Description Association Association property Data_Blob BLOB data property Data_Boolean Boolean data property Data_Byte Byte data property Data_Clob CLOB data property Data_DateTime DateTime data property Data_Double Double data property Data_Int16 Int16 data property Data_Int32 Int32 data property Data_Int64 Int64 data property Data_Single Single data property Data_String String data property Geometry Geometry property Raster Raster property Sym_Angle Angle symbol parameter Sym_Bold Bold symbol parameter Sym_Boolean Boolean symbol parameter Sym_Color Color symbol parameter Sym_Content Content symbol parameter Sym_EndOffset End offset symbol parameter Sym_FillColor Fill color symbol parameter Sym_FontHeight Font height symbol parameter Sym_FontName Font name symbol parameter Sym_FrameFillColor Frame fill color symbol parameter Sym_FrameLineColor Frame line color symbol parameter Sym_GhostColor Ghost color symbol parameter Sym_HorizontalAlignment Horizontal alignment symbol parameter Sym_Integer Integer symbol parameter Sym_Italic Italic symbol parameter Sym_Justification Justification symbol parameter Sym_LineColor Line color symbol parameter Sym_LineSpacing Line spacing symbol parameter Sym_LineWeight Line weight symbol parameter Sym_Markup Markup symbol parameter Sym_ObliqueAngle Oblique angle symbol parameter Sym_Overlined Overlined symbol parameter Sym_Real Real symbol parameter Sym_RepeatX Repeat X symbol parameter Sym_RepeatY Repeat Y symbol parameter Sym_StartOffset Start offset symbol parameter Sym_String String symbol parameter Sym_TextColor Text color symbol parameter Sym_TrackSpacing Track spacing symbol parameter Sym_Underlined Underlined symbol parameter Sym_VerticalAlignment Vertical alignment symbol parameter"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.PermissionsType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.PermissionsType.html",
    "title": "Enum PermissionsType | MapGuide Maestro",
    "keywords": "Enum PermissionsType Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public enum PermissionsType Fields Name Description n r rw"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.RepositoryContentType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.RepositoryContentType.html",
    "title": "Class RepositoryContentType | MapGuide Maestro",
    "keywords": "Class RepositoryContentType Inheritance System.Object RepositoryContentType Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class RepositoryContentType : ComponentModel.INotifyPropertyChanged Properties Description Declaration public string Description { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this RepositoryContentType object Declaration public virtual RepositoryContentType Clone() Returns Type Description RepositoryContentType Deserialize(String) Declaration public static RepositoryContentType Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description RepositoryContentType Deserialize(String, out RepositoryContentType) Declaration public static bool Deserialize(string xml, out RepositoryContentType obj) Parameters Type Name Description System.String xml RepositoryContentType obj Returns Type Description System.Boolean Deserialize(String, out RepositoryContentType, out Exception) Deserializes workflow markup into an RepositoryContentType object Declaration public static bool Deserialize(string xml, out RepositoryContentType obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize RepositoryContentType obj Output RepositoryContentType object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static RepositoryContentType LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description RepositoryContentType LoadFromFile(String, out RepositoryContentType) Declaration public static bool LoadFromFile(string fileName, out RepositoryContentType obj) Parameters Type Name Description System.String fileName RepositoryContentType obj Returns Type Description System.Boolean LoadFromFile(String, out RepositoryContentType, out Exception) Deserializes xml markup from file into an RepositoryContentType object Declaration public static bool LoadFromFile(string fileName, out RepositoryContentType obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize RepositoryContentType obj Output RepositoryContentType object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current RepositoryContentType object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current RepositoryContentType object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.RepositoryList.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.RepositoryList.html",
    "title": "Class RepositoryList | MapGuide Maestro",
    "keywords": "Class RepositoryList Repository list Inheritance System.Object RepositoryList Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class RepositoryList : ComponentModel.INotifyPropertyChanged Properties Repository Declaration public BindingList<RepositoryListRepository> Repository { get; set; } Property Value Type Description BindingList < RepositoryListRepository > Methods Clone() Create a clone of this RepositoryList object Declaration public virtual RepositoryList Clone() Returns Type Description RepositoryList Deserialize(String) Declaration public static RepositoryList Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description RepositoryList Deserialize(String, out RepositoryList) Declaration public static bool Deserialize(string xml, out RepositoryList obj) Parameters Type Name Description System.String xml RepositoryList obj Returns Type Description System.Boolean Deserialize(String, out RepositoryList, out Exception) Deserializes workflow markup into an RepositoryList object Declaration public static bool Deserialize(string xml, out RepositoryList obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize RepositoryList obj Output RepositoryList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static RepositoryList LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description RepositoryList LoadFromFile(String, out RepositoryList) Declaration public static bool LoadFromFile(string fileName, out RepositoryList obj) Parameters Type Name Description System.String fileName RepositoryList obj Returns Type Description System.Boolean LoadFromFile(String, out RepositoryList, out Exception) Deserializes xml markup from file into an RepositoryList object Declaration public static bool LoadFromFile(string fileName, out RepositoryList obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize RepositoryList obj Output RepositoryList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current RepositoryList object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current RepositoryList object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.RepositoryListRepository.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.RepositoryListRepository.html",
    "title": "Class RepositoryListRepository | MapGuide Maestro",
    "keywords": "Class RepositoryListRepository Inheritance System.Object RepositoryListRepository Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class RepositoryListRepository : ComponentModel.INotifyPropertyChanged Properties Name Declaration public string Name { get; set; } Property Value Type Description System.String RepositoryContent Declaration public RepositoryContentType RepositoryContent { get; set; } Property Value Type Description RepositoryContentType Methods Clone() Create a clone of this RepositoryListRepository object Declaration public virtual RepositoryListRepository Clone() Returns Type Description RepositoryListRepository Deserialize(String) Declaration public static RepositoryListRepository Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description RepositoryListRepository Deserialize(String, out RepositoryListRepository) Declaration public static bool Deserialize(string xml, out RepositoryListRepository obj) Parameters Type Name Description System.String xml RepositoryListRepository obj Returns Type Description System.Boolean Deserialize(String, out RepositoryListRepository, out Exception) Deserializes workflow markup into an RepositoryListRepository object Declaration public static bool Deserialize(string xml, out RepositoryListRepository obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize RepositoryListRepository obj Output RepositoryListRepository object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static RepositoryListRepository LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description RepositoryListRepository LoadFromFile(String, out RepositoryListRepository) Declaration public static bool LoadFromFile(string fileName, out RepositoryListRepository obj) Parameters Type Name Description System.String fileName RepositoryListRepository obj Returns Type Description System.Boolean LoadFromFile(String, out RepositoryListRepository, out Exception) Deserializes xml markup from file into an RepositoryListRepository object Declaration public static bool LoadFromFile(string fileName, out RepositoryListRepository obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize RepositoryListRepository obj Output RepositoryListRepository object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current RepositoryListRepository object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current RepositoryListRepository object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourceDataList.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourceDataList.html",
    "title": "Class ResourceDataList | MapGuide Maestro",
    "keywords": "Class ResourceDataList Resource Data list Inheritance System.Object ResourceDataList Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourceDataList : ComponentModel.INotifyPropertyChanged Properties ResourceData Declaration public BindingList<ResourceDataListResourceData> ResourceData { get; set; } Property Value Type Description BindingList < ResourceDataListResourceData > Methods Clone() Create a clone of this ResourceDataList object Declaration public virtual ResourceDataList Clone() Returns Type Description ResourceDataList Deserialize(String) Declaration public static ResourceDataList Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourceDataList Deserialize(String, out ResourceDataList) Declaration public static bool Deserialize(string xml, out ResourceDataList obj) Parameters Type Name Description System.String xml ResourceDataList obj Returns Type Description System.Boolean Deserialize(String, out ResourceDataList, out Exception) Deserializes workflow markup into an ResourceDataList object Declaration public static bool Deserialize(string xml, out ResourceDataList obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourceDataList obj Output ResourceDataList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourceDataList LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourceDataList LoadFromFile(String, out ResourceDataList) Declaration public static bool LoadFromFile(string fileName, out ResourceDataList obj) Parameters Type Name Description System.String fileName ResourceDataList obj Returns Type Description System.Boolean LoadFromFile(String, out ResourceDataList, out Exception) Deserializes xml markup from file into an ResourceDataList object Declaration public static bool LoadFromFile(string fileName, out ResourceDataList obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourceDataList obj Output ResourceDataList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourceDataList object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourceDataList object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourceDataListResourceData.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourceDataListResourceData.html",
    "title": "Class ResourceDataListResourceData | MapGuide Maestro",
    "keywords": "Class ResourceDataListResourceData Inheritance System.Object ResourceDataListResourceData Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourceDataListResourceData : ComponentModel.INotifyPropertyChanged Properties Name Declaration public string Name { get; set; } Property Value Type Description System.String Type Declaration public ResourceDataType Type { get; set; } Property Value Type Description ResourceDataType Methods Clone() Create a clone of this ResourceDataListResourceData object Declaration public virtual ResourceDataListResourceData Clone() Returns Type Description ResourceDataListResourceData Deserialize(String) Declaration public static ResourceDataListResourceData Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourceDataListResourceData Deserialize(String, out ResourceDataListResourceData) Declaration public static bool Deserialize(string xml, out ResourceDataListResourceData obj) Parameters Type Name Description System.String xml ResourceDataListResourceData obj Returns Type Description System.Boolean Deserialize(String, out ResourceDataListResourceData, out Exception) Deserializes workflow markup into an ResourceDataListResourceData object Declaration public static bool Deserialize(string xml, out ResourceDataListResourceData obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourceDataListResourceData obj Output ResourceDataListResourceData object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourceDataListResourceData LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourceDataListResourceData LoadFromFile(String, out ResourceDataListResourceData) Declaration public static bool LoadFromFile(string fileName, out ResourceDataListResourceData obj) Parameters Type Name Description System.String fileName ResourceDataListResourceData obj Returns Type Description System.Boolean LoadFromFile(String, out ResourceDataListResourceData, out Exception) Deserializes xml markup from file into an ResourceDataListResourceData object Declaration public static bool LoadFromFile(string fileName, out ResourceDataListResourceData obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourceDataListResourceData obj Output ResourceDataListResourceData object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourceDataListResourceData object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourceDataListResourceData object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourceDataType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourceDataType.html",
    "title": "Enum ResourceDataType | MapGuide Maestro",
    "keywords": "Enum ResourceDataType Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public enum ResourceDataType Fields Name Description File Stream String"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ResourceDocumentHeaderType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ResourceDocumentHeaderType.html",
    "title": "Class ResourceDocumentHeaderType | MapGuide Maestro",
    "keywords": "Class ResourceDocumentHeaderType Inheritance System.Object ResourceDocumentHeaderType Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ResourceDocumentHeaderType : ComponentModel.INotifyPropertyChanged Constructors ResourceDocumentHeaderType() For internal use only. Made public to satisfy serialization requirements. Use OSGeo.MapGuide.ObjectModels.ResourceDocumentHeaderType.CreateDefault to create new instances Declaration public ResourceDocumentHeaderType() Properties General Declaration public ResourceDocumentHeaderTypeGeneral General { get; set; } Property Value Type Description ResourceDocumentHeaderTypeGeneral Metadata Declaration public ResourceDocumentHeaderTypeMetadata Metadata { get; set; } Property Value Type Description ResourceDocumentHeaderTypeMetadata Security Declaration public ResourceSecurityType Security { get; set; } Property Value Type Description ResourceSecurityType ValidatingSchema Declaration public string ValidatingSchema { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this ResourceDocumentHeaderType object Declaration public virtual ResourceDocumentHeaderType Clone() Returns Type Description ResourceDocumentHeaderType CreateDefault() Declaration public static ResourceDocumentHeaderType CreateDefault() Returns Type Description ResourceDocumentHeaderType Deserialize(String) Declaration public static ResourceDocumentHeaderType Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ResourceDocumentHeaderType Deserialize(String, out ResourceDocumentHeaderType) Declaration public static bool Deserialize(string xml, out ResourceDocumentHeaderType obj) Parameters Type Name Description System.String xml ResourceDocumentHeaderType obj Returns Type Description System.Boolean Deserialize(String, out ResourceDocumentHeaderType, out Exception) Deserializes workflow markup into an ResourceDocumentHeaderType object Declaration public static bool Deserialize(string xml, out ResourceDocumentHeaderType obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ResourceDocumentHeaderType obj Output ResourceDocumentHeaderType object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ResourceDocumentHeaderType LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ResourceDocumentHeaderType LoadFromFile(String, out ResourceDocumentHeaderType) Declaration public static bool LoadFromFile(string fileName, out ResourceDocumentHeaderType obj) Parameters Type Name Description System.String fileName ResourceDocumentHeaderType obj Returns Type Description System.Boolean LoadFromFile(String, out ResourceDocumentHeaderType, out Exception) Deserializes xml markup from file into an ResourceDocumentHeaderType object Declaration public static bool LoadFromFile(string fileName, out ResourceDocumentHeaderType obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ResourceDocumentHeaderType obj Output ResourceDocumentHeaderType object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ResourceDocumentHeaderType object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ResourceDocumentHeaderType object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.StringCollection.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.StringCollection.html",
    "title": "Class StringCollection | MapGuide Maestro",
    "keywords": "Class StringCollection String list Inheritance System.Object StringCollection Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class StringCollection : ComponentModel.INotifyPropertyChanged Properties Item Declaration public BindingList<string> Item { get; set; } Property Value Type Description BindingList < System.String > Methods Clone() Create a clone of this StringCollection object Declaration public virtual StringCollection Clone() Returns Type Description StringCollection Deserialize(String) Declaration public static StringCollection Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description StringCollection Deserialize(String, out StringCollection) Declaration public static bool Deserialize(string xml, out StringCollection obj) Parameters Type Name Description System.String xml StringCollection obj Returns Type Description System.Boolean Deserialize(String, out StringCollection, out Exception) Deserializes workflow markup into an StringCollection object Declaration public static bool Deserialize(string xml, out StringCollection obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize StringCollection obj Output StringCollection object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static StringCollection LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description StringCollection LoadFromFile(String, out StringCollection) Declaration public static bool LoadFromFile(string fileName, out StringCollection obj) Parameters Type Name Description System.String fileName StringCollection obj Returns Type Description System.Boolean LoadFromFile(String, out StringCollection, out Exception) Deserializes xml markup from file into an StringCollection object Declaration public static bool LoadFromFile(string fileName, out StringCollection obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize StringCollection obj Output StringCollection object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current StringCollection object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current StringCollection object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.TileProvider.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.TileProvider.html",
    "title": "Class TileProvider | MapGuide Maestro",
    "keywords": "Class TileProvider Inheritance System.Object TileProvider Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax public class TileProvider Properties ConnectionProperties Declaration public TileProviderConnectionProperty[] ConnectionProperties { get; set; } Property Value Type Description TileProviderConnectionProperty [] Description Declaration public string Description { get; set; } Property Value Type Description System.String DisplayName Declaration public string DisplayName { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.TileProviderConnectionProperty.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.TileProviderConnectionProperty.html",
    "title": "Class TileProviderConnectionProperty | MapGuide Maestro",
    "keywords": "Class TileProviderConnectionProperty Inheritance System.Object TileProviderConnectionProperty Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax public class TileProviderConnectionProperty Properties DefaultValue Declaration public string DefaultValue { get; set; } Property Value Type Description System.String Enumerable Declaration public bool Enumerable { get; set; } Property Value Type Description System.Boolean LocalizedName Declaration public string LocalizedName { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; set; } Property Value Type Description System.String Protected Declaration public bool Protected { get; set; } Property Value Type Description System.Boolean Required Declaration public bool Required { get; set; } Property Value Type Description System.Boolean Value Declaration public string[] Value { get; set; } Property Value Type Description System.String []"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.TileProviderList.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.TileProviderList.html",
    "title": "Class TileProviderList | MapGuide Maestro",
    "keywords": "Class TileProviderList Inheritance System.Object TileProviderList Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax public class TileProviderList Properties TileProvider Declaration public TileProvider[] TileProvider { get; set; } Property Value Type Description TileProvider []"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.UnmanagedDataList.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.UnmanagedDataList.html",
    "title": "Class UnmanagedDataList | MapGuide Maestro",
    "keywords": "Class UnmanagedDataList Unmanaged data list Inheritance System.Object UnmanagedDataList Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class UnmanagedDataList : ComponentModel.INotifyPropertyChanged Properties Items Declaration public BindingList<object> Items { get; set; } Property Value Type Description BindingList < System.Object > Methods Clone() Create a clone of this UnmanagedDataList object Declaration public virtual UnmanagedDataList Clone() Returns Type Description UnmanagedDataList Deserialize(String) Declaration public static UnmanagedDataList Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description UnmanagedDataList Deserialize(String, out UnmanagedDataList) Declaration public static bool Deserialize(string xml, out UnmanagedDataList obj) Parameters Type Name Description System.String xml UnmanagedDataList obj Returns Type Description System.Boolean Deserialize(String, out UnmanagedDataList, out Exception) Deserializes workflow markup into an UnmanagedDataList object Declaration public static bool Deserialize(string xml, out UnmanagedDataList obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize UnmanagedDataList obj Output UnmanagedDataList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static UnmanagedDataList LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description UnmanagedDataList LoadFromFile(String, out UnmanagedDataList) Declaration public static bool LoadFromFile(string fileName, out UnmanagedDataList obj) Parameters Type Name Description System.String fileName UnmanagedDataList obj Returns Type Description System.Boolean LoadFromFile(String, out UnmanagedDataList, out Exception) Deserializes xml markup from file into an UnmanagedDataList object Declaration public static bool LoadFromFile(string fileName, out UnmanagedDataList obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize UnmanagedDataList obj Output UnmanagedDataList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current UnmanagedDataList object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current UnmanagedDataList object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.LayerType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.LayerType.html",
    "title": "Enum LayerType | MapGuide Maestro",
    "keywords": "Enum LayerType The type of layer definition Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public enum LayerType Fields Name Description Drawing DWF-based drawing layer Raster Raster layer Vector Vector layer"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.LengthUnitType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.LengthUnitType.html",
    "title": "Enum LengthUnitType | MapGuide Maestro",
    "keywords": "Enum LengthUnitType The type of length unit Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public enum LengthUnitType Fields Name Description Centimeters Feet Inches Kilometers Meters Miles Millimeters Points Yards"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.PointSymbolType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.PointSymbolType.html",
    "title": "Enum PointSymbolType | MapGuide Maestro",
    "keywords": "Enum PointSymbolType The type of point symbol Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public enum PointSymbolType Fields Name Description Block A vector symbol specifed from a block Font A symbol specified using a font character Image A raster or image symbol. Note that these do not scale well, but sometimes this is all that you have. Supported formats are application specific. Mark A predefined shape such as a square or circle. Text A textual symbol W2D A vector symbol defined using a W2D stream"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ShapeType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ShapeType.html",
    "title": "Enum ShapeType | MapGuide Maestro",
    "keywords": "Enum ShapeType The type of shape Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public enum ShapeType Fields Name Description Circle Cross Square Star Triangle X"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.SizeContextType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.SizeContextType.html",
    "title": "Enum SizeContextType | MapGuide Maestro",
    "keywords": "Enum SizeContextType The type of size context Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public enum SizeContextType Fields Name Description DeviceUnits MappingUnits"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.StyleType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.StyleType.html",
    "title": "Enum StyleType | MapGuide Maestro",
    "keywords": "Enum StyleType Indicates the type of geometry this style specification is for Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public enum StyleType Fields Name Description Area Composite Line Point"
  },
  "api/OSGeo.MapGuide.ObjectModels.PrintLayout.ILogo.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.PrintLayout.ILogo.html",
    "title": "Interface ILogo | MapGuide Maestro",
    "keywords": "Interface ILogo Represents a logo Namespace : OSGeo.MapGuide.ObjectModels.PrintLayout Assembly : cs.temp.dll.dll Syntax public interface ILogo : INotifyPropertyChanged Properties Name Gets or sets the name. Declaration string Name { get; set; } Property Value Type Description System.String The name. Position Gets the position. Declaration IPosition Position { get; } Property Value Type Description IPosition The position. ResourceId Gets or sets the resource id. Declaration string ResourceId { get; set; } Property Value Type Description System.String The resource id. Rotation Gets or sets the rotation. Declaration float ? Rotation { get; set; } Property Value Type Description System.Nullable < System.Single > The rotation. Size Gets the size. Declaration ISize Size { get; } Property Value Type Description ISize The size."
  },
  "api/OSGeo.MapGuide.ObjectModels.PrintLayout.IPosition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.PrintLayout.IPosition.html",
    "title": "Interface IPosition | MapGuide Maestro",
    "keywords": "Interface IPosition Represents a position Namespace : OSGeo.MapGuide.ObjectModels.PrintLayout Assembly : cs.temp.dll.dll Syntax public interface IPosition : INotifyPropertyChanged Properties Bottom Gets or sets the bottom margin. Declaration float Bottom { get; set; } Property Value Type Description System.Single The bottom margin. Left Gets or sets the left margin. Declaration float Left { get; set; } Property Value Type Description System.Single The left margin. Units Gets or sets the units. Declaration string Units { get; set; } Property Value Type Description System.String The units."
  },
  "api/OSGeo.MapGuide.ObjectModels.PrintLayout.IPrintLayout.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.PrintLayout.IPrintLayout.html",
    "title": "Interface IPrintLayout | MapGuide Maestro",
    "keywords": "Interface IPrintLayout Print Layouts Inherited Members IResource.ValidatingSchema IResource.ResourceID IResource.ResourceType IResource.Serialize() IResource.IsStronglyTyped IVersionedEntity.ResourceVersion Namespace : OSGeo.MapGuide.ObjectModels.PrintLayout Assembly : cs.temp.dll.dll Syntax public interface IPrintLayout : IResource, IVersionedEntity, ICloneable, INotifyPropertyChanged Properties CustomLogos Gets the custom logos. Declaration IEnumerable<ILogo> CustomLogos { get; } Property Value Type Description IEnumerable < ILogo > The custom logos. CustomText Gets the custom text elements. Declaration IEnumerable<IText> CustomText { get; } Property Value Type Description IEnumerable < IText > The custom text elements. LayoutProperties Gets the layout properties. Declaration IPrintLayoutProperties LayoutProperties { get; } Property Value Type Description IPrintLayoutProperties The layout properties. PageProperties Gets the page properties. Declaration IPrintLayoutPageProperties PageProperties { get; } Property Value Type Description IPrintLayoutPageProperties The page properties. Methods AddLogo(ILogo) Adds the logo. Declaration void AddLogo(ILogo logo) Parameters Type Name Description ILogo logo The logo. AddText(IText) Adds the text. Declaration void AddText(IText text) Parameters Type Name Description IText text The text. CreateFont(String, Single, String) Creates the font. Declaration IFont CreateFont(string name, float height, string units) Parameters Type Name Description System.String name The name. System.Single height The height. System.String units The units. Returns Type Description IFont CreateLogo(String, String, ISize, IPosition) Creates the logo. Declaration ILogo CreateLogo(string symbolLibraryId, string symbolName, ISize size, IPosition position) Parameters Type Name Description System.String symbolLibraryId The symbol library id. System.String symbolName Name of the symbol. ISize size The size. IPosition position The position. Returns Type Description ILogo CreateLogoPosition(Single, Single, String) Creates the logo position. Declaration IPosition CreateLogoPosition(float left, float bottom, string units) Parameters Type Name Description System.Single left The left. System.Single bottom The bottom. System.String units The units. Returns Type Description IPosition CreateLogoSize(Single, Single, String) Creates the size of the logo. Declaration ISize CreateLogoSize(float width, float height, string units) Parameters Type Name Description System.Single width The width. System.Single height The height. System.String units The units. Returns Type Description ISize CreateText(String, IFont, IPosition) Creates the text element. Declaration IText CreateText(string value, IFont font, IPosition text) Parameters Type Name Description System.String value The value. IFont font The font. IPosition text The text. Returns Type Description IText CreateTextPosition(Single, Single, String) Creates the text position. Declaration IPosition CreateTextPosition(float left, float bottom, string units) Parameters Type Name Description System.Single left The left. System.Single bottom The bottom. System.String units The units. Returns Type Description IPosition RemoveLogo(ILogo) Removes the logo. Declaration void RemoveLogo(ILogo logo) Parameters Type Name Description ILogo logo The logo. RemoveText(IText) Removes the text. Declaration void RemoveText(IText text) Parameters Type Name Description IText text The text."
  },
  "api/OSGeo.MapGuide.ObjectModels.PrintLayout.IPrintLayoutPageProperties.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.PrintLayout.IPrintLayoutPageProperties.html",
    "title": "Interface IPrintLayoutPageProperties | MapGuide Maestro",
    "keywords": "Interface IPrintLayoutPageProperties Page properties of the print layout Namespace : OSGeo.MapGuide.ObjectModels.PrintLayout Assembly : cs.temp.dll.dll Syntax public interface IPrintLayoutPageProperties : INotifyPropertyChanged Properties BackgroundColor Gets or sets the color of the background. Declaration Color BackgroundColor { get; set; } Property Value Type Description Color The color of the background."
  },
  "api/OSGeo.MapGuide.ObjectModels.PrintLayout.IPrintLayoutProperties.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.PrintLayout.IPrintLayoutProperties.html",
    "title": "Interface IPrintLayoutProperties | MapGuide Maestro",
    "keywords": "Interface IPrintLayoutProperties Layout properties of the print layout Namespace : OSGeo.MapGuide.ObjectModels.PrintLayout Assembly : cs.temp.dll.dll Syntax public interface IPrintLayoutProperties : INotifyPropertyChanged Properties ShowCustomLogos Gets or sets a value indicating whether [show custom logos]. Declaration bool ShowCustomLogos { get; set; } Property Value Type Description System.Boolean true if [show custom logos]; otherwise, false . ShowCustomText Gets or sets a value indicating whether [show custom text]. Declaration bool ShowCustomText { get; set; } Property Value Type Description System.Boolean true if [show custom text]; otherwise, false . ShowDateTime Gets or sets a value indicating whether [show date time]. Declaration bool ShowDateTime { get; set; } Property Value Type Description System.Boolean true if [show date time]; otherwise, false . ShowLegend Gets or sets a value indicating whether [show legend]. Declaration bool ShowLegend { get; set; } Property Value Type Description System.Boolean true if [show legend]; otherwise, false . ShowNorthArrow Gets or sets a value indicating whether [show north arrow]. Declaration bool ShowNorthArrow { get; set; } Property Value Type Description System.Boolean true if [show north arrow]; otherwise, false . ShowScaleBar Gets or sets a value indicating whether [show scale bar]. Declaration bool ShowScaleBar { get; set; } Property Value Type Description System.Boolean true if [show scale bar]; otherwise, false . ShowTitle Gets or sets a value indicating whether [show title]. Declaration bool ShowTitle { get; set; } Property Value Type Description System.Boolean true if [show title]; otherwise, false . ShowURL Gets or sets a value indicating whether [show URL]. Declaration bool ShowURL { get; set; } Property Value Type Description System.Boolean true if [show URL]; otherwise, false ."
  },
  "api/OSGeo.MapGuide.ObjectModels.PrintLayout.ISize.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.PrintLayout.ISize.html",
    "title": "Interface ISize | MapGuide Maestro",
    "keywords": "Interface ISize Represents a size Namespace : OSGeo.MapGuide.ObjectModels.PrintLayout Assembly : cs.temp.dll.dll Syntax public interface ISize : INotifyPropertyChanged Properties Height Gets or sets the height. Declaration float Height { get; set; } Property Value Type Description System.Single The height. Units Gets or sets the units. Declaration string Units { get; set; } Property Value Type Description System.String The units. Width Gets or sets the width. Declaration float Width { get; set; } Property Value Type Description System.Single The width."
  },
  "api/OSGeo.MapGuide.ObjectModels.PrintLayout.IText.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.PrintLayout.IText.html",
    "title": "Interface IText | MapGuide Maestro",
    "keywords": "Interface IText Represents a text element Namespace : OSGeo.MapGuide.ObjectModels.PrintLayout Assembly : cs.temp.dll.dll Syntax public interface IText : INotifyPropertyChanged Properties Font Gets the font. Declaration IFont Font { get; } Property Value Type Description IFont The font. Position Gets the position. Declaration IPosition Position { get; } Property Value Type Description IPosition The position. Value Gets or sets the value. Declaration string Value { get; set; } Property Value Type Description System.String The value."
  },
  "api/OSGeo.MapGuide.ObjectModels.PrintLayout.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.PrintLayout.html",
    "title": "Namespace OSGeo.MapGuide.ObjectModels.PrintLayout | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.ObjectModels.PrintLayout Interfaces IFont Represents a font ILogo Represents a logo IPosition Represents a position IPrintLayout Print Layouts IPrintLayoutPageProperties Page properties of the print layout IPrintLayoutProperties Layout properties of the print layout ISize Represents a size IText Represents a text element"
  },
  "api/OSGeo.MapGuide.ObjectModels.ResourceContentVersionChecker.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ResourceContentVersionChecker.html",
    "title": "Class ResourceContentVersionChecker | MapGuide Maestro",
    "keywords": "Class ResourceContentVersionChecker Inspects a resource content stream to determine the version of the resource content within The stream to be inspected is copied and the inspection is made on the copy Inheritance System.Object ResourceContentVersionChecker Namespace : OSGeo.MapGuide.ObjectModels Assembly : cs.temp.dll.dll Syntax public sealed class ResourceContentVersionChecker : IDisposable Constructors ResourceContentVersionChecker(Stream) Constructor Declaration public ResourceContentVersionChecker(Stream stream) Parameters Type Name Description Stream stream The resource content stream. Inspection is done on a copy of this stream ResourceContentVersionChecker(String) Alternate constructor Declaration public ResourceContentVersionChecker(string xmlContent) Parameters Type Name Description System.String xmlContent Methods Dispose() Disposes this instance Declaration public void Dispose() GetVersion() Gets the resource content version Declaration public ResourceTypeDescriptor GetVersion() Returns Type Description ResourceTypeDescriptor GetVersionFromXmlStream(Stream) Gets the version from XML stream. Declaration public static ResourceTypeDescriptor GetVersionFromXmlStream(Stream ms) Parameters Type Name Description Stream ms The ms. Returns Type Description ResourceTypeDescriptor"
  },
  "api/OSGeo.MapGuide.ObjectModels.ResourceExtensions.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ResourceExtensions.html",
    "title": "Class ResourceExtensions | MapGuide Maestro",
    "keywords": "Class ResourceExtensions Extension method class Inheritance System.Object ResourceExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels Assembly : cs.temp.dll.dll Syntax public static class ResourceExtensions Methods GetResourceTypeDescriptor(IResource) Gets the resource type descriptor. Declaration public static ResourceTypeDescriptor GetResourceTypeDescriptor(this IResource res) Parameters Type Name Description IResource res The res. Returns Type Description ResourceTypeDescriptor The resource type descriptor SerializeToStream(IResource) Serializes to stream. Declaration public static Stream SerializeToStream(this IResource res) Parameters Type Name Description IResource res The resource Returns Type Description Stream The serialized stream"
  },
  "api/OSGeo.MapGuide.ObjectModels.ResourceIdentifier.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ResourceIdentifier.html",
    "title": "Class ResourceIdentifier | MapGuide Maestro",
    "keywords": "Class ResourceIdentifier This class contains all the required code for maintaining resource identifiers. It has implicit conversions to and from a string, which makes it much easier to use. It has both static methods that operate on strings, as well as a class that can be manipulated. Inheritance System.Object ResourceIdentifier Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels Assembly : cs.temp.dll.dll Syntax public class ResourceIdentifier Constructors ResourceIdentifier(ResourceIdentifier) Constructs a new ResourceIdentifier, based on an existing one. Declaration public ResourceIdentifier(ResourceIdentifier id) Parameters Type Name Description ResourceIdentifier id The resource identifier to copy ResourceIdentifier(String) Constructs a new ResourceIdentifier with the given full path Declaration public ResourceIdentifier(string resourceId) Parameters Type Name Description System.String resourceId The path of the resource to refence ResourceIdentifier(String, ResourceTypes) Constructs a new library based resource identifier Declaration public ResourceIdentifier(string name, ResourceTypes type) Parameters Type Name Description System.String name The name of the resource, may include path information with the &quot;/&quot; character ResourceTypes type The type of resource the identifier names ResourceIdentifier(String, ResourceTypes, String) Constructs a new session based resource identifier Declaration public ResourceIdentifier(string name, ResourceTypes type, string sessionId) Parameters Type Name Description System.String name The name of the resource, may include path information with the &quot;/&quot; character ResourceTypes type The type of resource the identifier names System.String sessionId The session id to use Properties Extension Gets or sets the extension of the resourceId Declaration public string Extension { get; set; } Property Value Type Description System.String Fullname Gets or sets the name and extension of the resource Declaration public string Fullname { get; set; } Property Value Type Description System.String Fullpath Gets the full path of the resource, that is the path without repository information Declaration public string Fullpath { get; set; } Property Value Type Description System.String IsEmpty Gets a value indicating if the resource is blank Declaration public bool IsEmpty { get; } Property Value Type Description System.Boolean IsFolder Gets a value indicating if the resource identifier points to a folder Declaration public bool IsFolder { get; } Property Value Type Description System.Boolean IsInLibrary Gets a value indicating if the resource is in the library repository Declaration public bool IsInLibrary { get; } Property Value Type Description System.Boolean IsInSessionRepository Gets a value indicating if the resource is in the session repository Declaration public bool IsInSessionRepository { get; } Property Value Type Description System.Boolean IsValid Gets a value indicating if the resource identifier is valid Declaration public bool IsValid { get; } Property Value Type Description System.Boolean Length Gets the length of the resource identifier as a string Declaration public int Length { get; } Property Value Type Description System.Int32 Name Gets or sets the name of the resource Declaration public string Name { get; set; } Property Value Type Description System.String ParentFolder Gets the containing folder path for the resource, including the repository Declaration public string ParentFolder { get; } Property Value Type Description System.String Path Gets the path of the resource, that is the path without repository information and no extension Declaration public string Path { get; set; } Property Value Type Description System.String RepositoryPath Gets or sets the path to the resource, including the repository Declaration public string RepositoryPath { get; set; } Property Value Type Description System.String ResourceId Gets or sets the full resource identifier Declaration public string ResourceId { get; set; } Property Value Type Description System.String ResourceType Gets the resource type Declaration public string ResourceType { get; } Property Value Type Description System.String Methods ConvertToLibrary() Converts this instance to be in the library repository Declaration public void ConvertToLibrary() ConvertToLibrary(String) Converts a resource id to be placed in the library Declaration public static string ConvertToLibrary(string identifier) Parameters Type Name Description System.String identifier The identifier to convert Returns Type Description System.String The converted identifier ConvertToSession(String) Converts this instance to be in the session repository Declaration public void ConvertToSession(string sessionId) Parameters Type Name Description System.String sessionId The sessionid ConvertToSession(String, String) Converts a resource id to be placed in the library Declaration public static string ConvertToSession(string identifier, string sessionId) Parameters Type Name Description System.String identifier The identifier to convert System.String sessionId The session id of the repository it should be placed in Returns Type Description System.String The converted identifier GetFullname(String) Gets the name and extension of the identifier Declaration public static string GetFullname(string identifier) Parameters Type Name Description System.String identifier The identifier to extract the information from Returns Type Description System.String The full name of the identifier GetFullpath(String) Returns the full path of the resource, that is the resourceId without the repository information Declaration public static string GetFullpath(string identifier) Parameters Type Name Description System.String identifier The identifier to get the path from Returns Type Description System.String The path of the identifier GetName(String) Gets the name of a resource, given its identifier Declaration public static string GetName(string identifier) Parameters Type Name Description System.String identifier The identifier to look for Returns Type Description System.String The name of the resource GetParentFolder(String) Gets the parent folder. Declaration public static string GetParentFolder(string identifier) Parameters Type Name Description System.String identifier The identifier. Returns Type Description System.String GetPath(String) Returns the path of the resource, that is the resourceId without the repository information and extension Declaration public static string GetPath(string identifier) Parameters Type Name Description System.String identifier The identifier to get the path from Returns Type Description System.String The path of the identifier GetRepository(String) Gets the repository part of a resource identifier, eg.: \"Library://\" or \"Session:xxxx//\" Declaration public static string GetRepository(string identifier) Parameters Type Name Description System.String identifier Returns Type Description System.String GetRepositoryPath(String) Returns the path that contains the resource, including the repository Declaration public static string GetRepositoryPath(string identifier) Parameters Type Name Description System.String identifier The resource identifier to use Returns Type Description System.String The folder for the identifier GetResourceTypeAsString(String) Gets the type of this resource. Declaration public static string GetResourceTypeAsString(string identifier) Parameters Type Name Description System.String identifier Returns Type Description System.String Remarks Use this method over OSGeo.MapGuide.MaestroAPI.Resource.ResourceIdentifier.GetResourceType if the Maestro API may not be aware of the new resource type IsFolderResource(String) Returns a value indicating if the resource points to a folder Declaration public static bool IsFolderResource(string identifier) Parameters Type Name Description System.String identifier The identifier to evaluate Returns Type Description System.Boolean A value indicating if the resource points to a folder IsSessionBased(String) Determines whether this resource id is session-based Declaration public static bool IsSessionBased(string resourceID) Parameters Type Name Description System.String resourceID The resource ID. Returns Type Description System.Boolean true if this resource id is session-based; otherwise, false . Normalize() Normalizes the identifier, that is prepends a slash if the identifier points to a folder Declaration public void Normalize() Normalize(String) Normalizes a identifier, that is prepends a slash if it is a folder resource Declaration public static string Normalize(string identifier) Parameters Type Name Description System.String identifier The identifier to normalize Returns Type Description System.String The normalized identifier SetExtension(String, String) Changes the extension of the given resource Declaration public static string SetExtension(string identifier, string newextension) Parameters Type Name Description System.String identifier The identifier to change the extension for System.String newextension The new extension to use Returns Type Description System.String The renmaed identifier SetName(String, String) Sets the name of the resource, with or without the extension Declaration public static string SetName(string identifier, string newname) Parameters Type Name Description System.String identifier The identifier to give a new name System.String newname The new name to assign Returns Type Description System.String The renamed identifier SetPath(String, String) Sets the path of the identifier, with or without the extension Declaration public static string SetPath(string identifier, string newpath) Parameters Type Name Description System.String identifier The identifier to update System.String newpath The new path to user, with or without the extension Returns Type Description System.String The new identifier SetRepositoryPath(String, String) Sets the path including the repository to the given value Declaration public static string SetRepositoryPath(string identifier, string folder) Parameters Type Name Description System.String identifier The identifier to change the folder for System.String folder The new folder Returns Type Description System.String An identifier in the new folder ToString() Returns the full resource id as a string Declaration public override string ToString() Returns Type Description System.String The full resource id as a string Overrides System.Object.ToString() Validate(String, ResourceTypes) Determines if a resource identifier is valid and of the desired type Declaration public static bool Validate(string identifier, ResourceTypes type) Parameters Type Name Description System.String identifier The identifier to validate ResourceTypes type The type the resource identifer must be Returns Type Description System.Boolean A value indicating if the identifier is valid Validate(String, Boolean) Determines if a resource identifier is valid Declaration public static bool Validate(string identifier, bool strict = true) Parameters Type Name Description System.String identifier The identifier to validate System.Boolean strict If true, will check if the type of the resource id is one that is supported by Maestro Returns Type Description System.Boolean A value indicating if the identifier is valid Operators Implicit(ResourceIdentifier to String) Helper operator that makes using the resource identifiers easier Declaration public static implicit operator string (ResourceIdentifier id) Parameters Type Name Description ResourceIdentifier id The id to convert to a string Returns Type Description System.String The converted string Implicit(String to ResourceIdentifier) Helper operator that makes using the resource identifiers easier Declaration public static implicit operator ResourceIdentifier(string id) Parameters Type Name Description System.String id The id to convert into a resource indetifier class Returns Type Description ResourceIdentifier The resource identifier"
  },
  "api/OSGeo.MapGuide.ObjectModels.ResourceSerializer.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ResourceSerializer.html",
    "title": "Class ResourceSerializer | MapGuide Maestro",
    "keywords": "Class ResourceSerializer A resource serializer Inheritance System.Object ResourceSerializer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels Assembly : cs.temp.dll.dll Syntax public class ResourceSerializer Properties Deserialize Gets or sets the deserialize method. Declaration public Func<string, IResource> Deserialize { get; set; } Property Value Type Description Func < System.String , IResource > The deserialize method. Serialize Gets or sets the serialize method. Declaration public Func<IResource, Stream> Serialize { get; set; } Property Value Type Description Func < IResource , Stream > The serialize method."
  },
  "api/OSGeo.MapGuide.ObjectModels.ResourceTypeDescriptor.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ResourceTypeDescriptor.html",
    "title": "Class ResourceTypeDescriptor | MapGuide Maestro",
    "keywords": "Class ResourceTypeDescriptor Represents a unique resource type / version pair Inheritance System.Object ResourceTypeDescriptor Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels Assembly : cs.temp.dll.dll Syntax public class ResourceTypeDescriptor Constructors ResourceTypeDescriptor(String, String) Initializes a new instance of the ResourceTypeDescriptor class. Declaration public ResourceTypeDescriptor(string resType, string ver) Parameters Type Name Description System.String resType Type of the res. System.String ver The ver. Properties ApplicationDefinition Application Definition v1.0.0 Declaration public static ResourceTypeDescriptor ApplicationDefinition { get; } Property Value Type Description ResourceTypeDescriptor DrawingSource Drawing Source v1.0.0 Declaration public static ResourceTypeDescriptor DrawingSource { get; } Property Value Type Description ResourceTypeDescriptor FeatureSource Feature Source v1.0.0 Declaration public static ResourceTypeDescriptor FeatureSource { get; } Property Value Type Description ResourceTypeDescriptor LayerDefinition Layer Definition v1.0.0 Declaration public static ResourceTypeDescriptor LayerDefinition { get; } Property Value Type Description ResourceTypeDescriptor LoadProcedure Load Procedure v1.0.0 Declaration public static ResourceTypeDescriptor LoadProcedure { get; } Property Value Type Description ResourceTypeDescriptor MapDefinition Map Definition v1.0.0 Declaration public static ResourceTypeDescriptor MapDefinition { get; } Property Value Type Description ResourceTypeDescriptor PrintLayout Print Layout v1.0.0 Declaration public static ResourceTypeDescriptor PrintLayout { get; } Property Value Type Description ResourceTypeDescriptor ResourceType Gets or sets the type of the resource. Declaration public string ResourceType { get; set; } Property Value Type Description System.String The type of the resource. SymbolDefinition Symbol Definition v1.0.0 Declaration public static ResourceTypeDescriptor SymbolDefinition { get; } Property Value Type Description ResourceTypeDescriptor SymbolLibrary Symbol Library v1.0.0 Declaration public static ResourceTypeDescriptor SymbolLibrary { get; } Property Value Type Description ResourceTypeDescriptor Version Gets or sets the version. Declaration public string Version { get; set; } Property Value Type Description System.String The version. WebLayout Web Layout v1.0.0 Declaration public static ResourceTypeDescriptor WebLayout { get; } Property Value Type Description ResourceTypeDescriptor XsdName Gets the name of the validating XML schema Declaration public string XsdName { get; } Property Value Type Description System.String Methods Equals(Object) Determines whether the specified System.Object is equal to this instance. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The System.Object to compare with this instance. Returns Type Description System.Boolean true if the specified System.Object is equal to this instance; otherwise, false . Overrides System.Object.Equals(System.Object) Exceptions Type Condition System.NullReferenceException The obj parameter is null. GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides System.Object.GetHashCode() ToString() Returns a System.String that represents this instance. Declaration public override string ToString() Returns Type Description System.String A System.String that represents this instance. Overrides System.Object.ToString()"
  },
  "api/OSGeo.MapGuide.ObjectModels.ResourceTypes.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ResourceTypes.html",
    "title": "Enum ResourceTypes | MapGuide Maestro",
    "keywords": "Enum ResourceTypes Represents the common resource types in MapGuide Namespace : OSGeo.MapGuide.ObjectModels Assembly : cs.temp.dll.dll Syntax public enum ResourceTypes Fields Name Description ApplicationDefinition Fusion Flexible Layout DrawingSource Drawing Source FeatureSource Feature Source Folder Folder LayerDefinition Layer Definition LoadProcedure Load Procedure Map Runtime Map MapDefinition Map Definition PrintLayout Print Layout Selection A selection for a runtime map SymbolDefinition Symbol Definition SymbolLibrary DWF-based Symbol Library TileSetDefinition A tile set definition WatermarkDefinition A watermark WebLayout Web Layout"
  },
  "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.ICoordinateSystemInfo.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.ICoordinateSystemInfo.html",
    "title": "Interface ICoordinateSystemInfo | MapGuide Maestro",
    "keywords": "Interface ICoordinateSystemInfo Represents coordinate system information for a Runtime Map Namespace : OSGeo.MapGuide.ObjectModels.RuntimeMap Assembly : cs.temp.dll.dll Syntax public interface ICoordinateSystemInfo Properties EpsgCode Gets the EPSG code of this coordinate system Declaration string EpsgCode { get; } Property Value Type Description System.String MentorCode Gets the CS-Map coordinate system code of this coordinate system Declaration string MentorCode { get; } Property Value Type Description System.String MetersPerUnit Gets the meters-per-unit value of this runtime map. This value is essential for any tile or rendering functionality Declaration double MetersPerUnit { get; } Property Value Type Description System.Double Wkt Gets the WKT of this coordinate system Declaration string Wkt { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IFeatureSourceInfo.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IFeatureSourceInfo.html",
    "title": "Interface IFeatureSourceInfo | MapGuide Maestro",
    "keywords": "Interface IFeatureSourceInfo Represents Feature Source information for a layer Namespace : OSGeo.MapGuide.ObjectModels.RuntimeMap Assembly : cs.temp.dll.dll Syntax public interface IFeatureSourceInfo Properties ClassName Gets the name of the feature class that the layer is rendered from Declaration string ClassName { get; } Property Value Type Description System.String Geometry Gets the name of the geometry property of the feature class that the layer is rendered from Declaration string Geometry { get; } Property Value Type Description System.String ResourceID Gets the resource id of the Feature Source Declaration string ResourceID { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ClippingControl.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ClippingControl.html",
    "title": "Enum ClippingControl | MapGuide Maestro",
    "keywords": "Enum ClippingControl The types of clipping control Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum ClippingControl Fields Name Description Clip Inside Overlap"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.DataType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.DataType.html",
    "title": "Enum DataType | MapGuide Maestro",
    "keywords": "Enum DataType Enumerates the allowed DataType values Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum DataType Fields Name Description Boolean Color Integer Real String"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.DataType2.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.DataType2.html",
    "title": "Enum DataType2 | MapGuide Maestro",
    "keywords": "Enum DataType2 Enumerates the allowed DataType values. Introduced with Symbol Definition 1.1.0 schema Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum DataType2 Fields Name Description Angle Bold Boolean Color Content EndOffset FillColor FontHeight FontName FrameFillColor FrameLineColor GhostColor HorizontalAlignment Integer Italic Justification LineColor LineSpacing LineWeight Markup ObliqueAngle Overlined Real RepeatX RepeatY StartOffset String TextColor TrackSpacing Underlined VerticalAlignment"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.GraphicElementType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.GraphicElementType.html",
    "title": "Enum GraphicElementType | MapGuide Maestro",
    "keywords": "Enum GraphicElementType Defines the valid types of graphic elements Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum GraphicElementType Fields Name Description Image Images Path A linear path containing one or more segments Text Text"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.GrowControl.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.GrowControl.html",
    "title": "Enum GrowControl | MapGuide Maestro",
    "keywords": "Enum GrowControl The possible values for grow control Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum GrowControl Fields Name Description GrowInX GrowInXY GrowInXYMaintainAspect GrowInY"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.HorizontalAlignment.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.HorizontalAlignment.html",
    "title": "Enum HorizontalAlignment | MapGuide Maestro",
    "keywords": "Enum HorizontalAlignment The types of horizontal alignment Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum HorizontalAlignment Fields Name Description Center Left Right"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IAreaUsage.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IAreaUsage.html",
    "title": "Interface IAreaUsage | MapGuide Maestro",
    "keywords": "Interface IAreaUsage Defines area usage Inherited Members IUsageBase.AngleControl IUsageBase.Angle Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface IAreaUsage : IUsageBase Properties BufferWidth Gets or sets the width of the buffer. Declaration string BufferWidth { get; set; } Property Value Type Description System.String The width of the buffer. ClippingControl Gets or sets the clipping control. Declaration string ClippingControl { get; set; } Property Value Type Description System.String The clipping control. OriginControl Gets or sets the origin control. Declaration string OriginControl { get; set; } Property Value Type Description System.String The origin control. OriginX Gets or sets the X origin. Declaration string OriginX { get; set; } Property Value Type Description System.String The X origin. OriginY Gets or sets the Y origin. Declaration string OriginY { get; set; } Property Value Type Description System.String The Y origin. RepeatX Gets or sets the X repeat value. Declaration string RepeatX { get; set; } Property Value Type Description System.String The X repeat value. RepeatY Gets or sets the Y repeat value Declaration string RepeatY { get; set; } Property Value Type Description System.String The Y repeat value."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ICompoundSymbolDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ICompoundSymbolDefinition.html",
    "title": "Interface ICompoundSymbolDefinition | MapGuide Maestro",
    "keywords": "Interface ICompoundSymbolDefinition Represents a compound symbol definition Inherited Members ISymbolDefinitionBase.Name ISymbolDefinitionBase.Description ISymbolDefinitionBase.Type ISymbolDefinitionBase.RemoveSchemaAttributes() ISymbolDefinitionBase.SetSchemaAttributes() IResource.ValidatingSchema IResource.ResourceID IResource.ResourceType IResource.Serialize() IResource.IsStronglyTyped IVersionedEntity.ResourceVersion Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface ICompoundSymbolDefinition : ISymbolDefinitionBase, IResource, IVersionedEntity, ICloneable, INotifyPropertyChanged Properties SimpleSymbol Gets the simple symbols. Declaration IEnumerable<ISimpleSymbolReferenceBase> SimpleSymbol { get; } Property Value Type Description IEnumerable < ISimpleSymbolReferenceBase > The simple symbols. Methods AddSimpleSymbol(ISimpleSymbolReferenceBase) Adds the simple symbol. Declaration void AddSimpleSymbol(ISimpleSymbolReferenceBase sym) Parameters Type Name Description ISimpleSymbolReferenceBase sym The sym. CreateSimpleSymbol(ISimpleSymbolDefinition) Creates an inline symbol definition reference Declaration ISimpleSymbolReferenceBase CreateSimpleSymbol(ISimpleSymbolDefinition sym) Parameters Type Name Description ISimpleSymbolDefinition sym Returns Type Description ISimpleSymbolReferenceBase CreateSymbolReference(String) Creates a resource id based symbol reference Declaration ISimpleSymbolReferenceBase CreateSymbolReference(string resourceId) Parameters Type Name Description System.String resourceId The resource id. Returns Type Description ISimpleSymbolReferenceBase PurgeSimpleSymbolAttributes() Purges root element attributes from all inline Simple Symbol Definitions. This should be called before serialization Declaration void PurgeSimpleSymbolAttributes() RemoveSimpleSymbol(ISimpleSymbolReferenceBase) Removes the simple symbol. Declaration void RemoveSimpleSymbol(ISimpleSymbolReferenceBase sym) Parameters Type Name Description ISimpleSymbolReferenceBase sym The sym."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IGraphicBase.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IGraphicBase.html",
    "title": "Interface IGraphicBase | MapGuide Maestro",
    "keywords": "Interface IGraphicBase Represents the base interface of all graphics Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface IGraphicBase Properties ResizeControl Gets or sets the resize control. Declaration string ResizeControl { get; set; } Property Value Type Description System.String The resize control. Type Gets the type of graphic element Declaration GraphicElementType Type { get; } Property Value Type Description GraphicElementType"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IGraphics.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IGraphics.html",
    "title": "Interface IGraphics | MapGuide Maestro",
    "keywords": "Interface IGraphics A collection of graphic elements Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface IGraphics Properties Elements Gets the elements. Declaration IEnumerable<IGraphicBase> Elements { get; } Property Value Type Description IEnumerable < IGraphicBase > The elements. Methods AddGraphicElement(IGraphicBase) Adds the graphic element. Declaration void AddGraphicElement(IGraphicBase graphics) Parameters Type Name Description IGraphicBase graphics The graphics. RemoveGraphicElement(IGraphicBase) Removes the graphic element. Declaration void RemoveGraphicElement(IGraphicBase graphics) Parameters Type Name Description IGraphicBase graphics The graphics."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IImageBase.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IImageBase.html",
    "title": "Interface IImageBase | MapGuide Maestro",
    "keywords": "Interface IImageBase An image graphic Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface IImageBase Properties Type Gets the type. Declaration ImageType Type { get; } Property Value Type Description ImageType The type."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IImageGraphic.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IImageGraphic.html",
    "title": "Interface IImageGraphic | MapGuide Maestro",
    "keywords": "Interface IImageGraphic Defines an image graphic Inherited Members IGraphicBase.ResizeControl IGraphicBase.Type Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface IImageGraphic : IGraphicBase Properties Angle Gets or sets the angle. Declaration string Angle { get; set; } Property Value Type Description System.String The angle. Item Gets or sets the image content Declaration IImageBase Item { get; set; } Property Value Type Description IImageBase Remarks If the object being returned is an inline image, the object is a fresh instance whose byte array refers to the same instance. That is to say: IInlineImage img1 = (IInlineImage)imageGraphic.Item; IInlineImage img2 = (IInlineImage)imageGraphic.Item; Object.ReferenceEquals(img1, img2); //false Object.ReferenceEquals(img1.Content, img2.Content); //true PositionX Gets or sets the position X. Declaration string PositionX { get; set; } Property Value Type Description System.String The position X. PositionY Gets or sets the position Y. Declaration string PositionY { get; set; } Property Value Type Description System.String The position Y. SizeScalable Gets or sets the size scalable. Declaration string SizeScalable { get; set; } Property Value Type Description System.String The size scalable. SizeX Gets or sets the size X. Declaration string SizeX { get; set; } Property Value Type Description System.String The size X. SizeY Gets or sets the size Y. Declaration string SizeY { get; set; } Property Value Type Description System.String The size Y."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IImageReference.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IImageReference.html",
    "title": "Interface IImageReference | MapGuide Maestro",
    "keywords": "Interface IImageReference An image reference Inherited Members IImageBase.Type Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface IImageReference : IImageBase Properties LibraryItemName Gets or sets the name of the library item. Declaration string LibraryItemName { get; set; } Property Value Type Description System.String The name of the library item. ResourceId Gets or sets the resource id. Declaration string ResourceId { get; set; } Property Value Type Description System.String The resource id."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IImageReferenceImage.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IImageReferenceImage.html",
    "title": "Interface IImageReferenceImage | MapGuide Maestro",
    "keywords": "Interface IImageReferenceImage Represents an image refrence Inherited Members IImageBase.Type Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface IImageReferenceImage : IImageBase Properties Reference Gets or sets the reference. Declaration IImageReference Reference { get; set; } Property Value Type Description IImageReference The reference."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IInlineImage.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IInlineImage.html",
    "title": "Interface IInlineImage | MapGuide Maestro",
    "keywords": "Interface IInlineImage Represents an inline image Inherited Members IImageBase.Type Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface IInlineImage : IImageBase Properties Content Gets or sets the content. Declaration byte[] Content { get; set; } Property Value Type Description System.Byte [] The content."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ILineUsage.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ILineUsage.html",
    "title": "Interface ILineUsage | MapGuide Maestro",
    "keywords": "Interface ILineUsage Represents line usage Inherited Members IUsageBase.AngleControl IUsageBase.Angle Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface ILineUsage : IUsageBase Properties DefaultPath Gets or sets the default path. Declaration IPathGraphic DefaultPath { get; set; } Property Value Type Description IPathGraphic The default path. EndOffset Gets or sets the end offset. Declaration string EndOffset { get; set; } Property Value Type Description System.String The end offset. Repeat Gets or sets the repeat value Declaration string Repeat { get; set; } Property Value Type Description System.String The repeat value. StartOffset Gets or sets the start offset. Declaration string StartOffset { get; set; } Property Value Type Description System.String The start offset. UnitsControl Gets or sets the units control. Declaration string UnitsControl { get; set; } Property Value Type Description System.String The units control. VertexAngleLimit Gets or sets the vertex angle limit. Declaration string VertexAngleLimit { get; set; } Property Value Type Description System.String The vertex angle limit. VertexControl Gets or sets the vertex control. Declaration string VertexControl { get; set; } Property Value Type Description System.String The vertex control. VertexJoin Gets or sets the vertex join. Declaration string VertexJoin { get; set; } Property Value Type Description System.String The vertex join. VertexMiterLimit Gets or sets the vertex miter limit. Declaration string VertexMiterLimit { get; set; } Property Value Type Description System.String The vertex miter limit."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.VerticalAlignment.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.VerticalAlignment.html",
    "title": "Enum VerticalAlignment | MapGuide Maestro",
    "keywords": "Enum VerticalAlignment The types of vertical alignment Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum VerticalAlignment Fields Name Description Baseline Bottom Capline Halfline Top"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.html",
    "title": "Namespace OSGeo.MapGuide.ObjectModels.SymbolDefinition | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.ObjectModels.SymbolDefinition Classes SymbolDefExtensions Extension methods for symbol definitions Interfaces IAreaUsage Defines area usage ICompoundSymbolDefinition Represents a compound symbol definition IGraphicBase Represents the base interface of all graphics IGraphics A collection of graphic elements IImageBase An image graphic IImageGraphic Defines an image graphic IImageReference An image reference IImageReferenceImage Represents an image refrence IInlineImage Represents an inline image ILineUsage Represents line usage IParameter Defines a parameter IParameterDefinition Represents a set of parameter definitions IPathGraphic A path IPathGraphic2 Path with support for scaling. Only applicable for Symbol Definition schema 2.4.0 and higher IPointUsage Specifies how a symbol is used in the context of point features IResizeBox Defines a resize box used with SimpleSymbolDefinitions ISimpleSymbolDefinition Represents a simple symbol definition ISimpleSymbolInlineReference Represents a simple symbol reference by inline definition ISimpleSymbolLibraryReference Represents a simple symbol reference by resource id ISimpleSymbolReferenceBase Represents a simple symbol reference ISymbolDefinitionBase Base interface of all symbol definitions ISymbolInstance Represents a symbol instance used for advanced cartographic stylization ISymbolInstanceReference Represents a symbol instance reference ISymbolInstanceReferenceInline Represents a symbol instance reference by a inline definition ISymbolInstanceReferenceLibrary Represents a symbol instance reference by a resource id ITextFrame A text frame ITextGraphic Text graphics ITextGraphic2 An extension of the text element to support rich text. Introduced with the Symbol Definition 1.1.0 schema IUsageBase Base usage interface Enums AngleControl The types of angle control ClippingControl The types of clipping control DataType Enumerates the allowed DataType values DataType2 Enumerates the allowed DataType values. Introduced with Symbol Definition 1.1.0 schema GraphicElementType Defines the valid types of graphic elements GrowControl The possible values for grow control HorizontalAlignment The types of horizontal alignment ImageType The type of image Justification The types of justification LineCap The types of line cap LineJoin The types of line join OriginControl The types of origin control ResizeControl The types of resize control SimpleSymbolReferenceType The type of simple symbol reference SymbolDefinitionType Indicates the type of symbol definition SymbolInstanceType Defines the type of symbol instances UnitsControl The types of units control VertexControl The types of vertex control VertexJoin The types of vertex join VerticalAlignment The types of vertical alignment"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolLibrary.ISymbol.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolLibrary.ISymbol.html",
    "title": "Interface ISymbol | MapGuide Maestro",
    "keywords": "Interface ISymbol A reference in a DWF symbol library Namespace : OSGeo.MapGuide.ObjectModels.SymbolLibrary Assembly : cs.temp.dll.dll Syntax public interface ISymbol Properties Name Gets or sets the name. Declaration string Name { get; set; } Property Value Type Description System.String The name. Resource Gets or sets the resource. Declaration string Resource { get; set; } Property Value Type Description System.String The resource."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolLibrary.ISymbolLibrary.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolLibrary.ISymbolLibrary.html",
    "title": "Interface ISymbolLibrary | MapGuide Maestro",
    "keywords": "Interface ISymbolLibrary A DWF-based symbol library Inherited Members IResource.ValidatingSchema IResource.ResourceID IResource.ResourceType IResource.Serialize() IResource.IsStronglyTyped IVersionedEntity.ResourceVersion Namespace : OSGeo.MapGuide.ObjectModels.SymbolLibrary Assembly : cs.temp.dll.dll Syntax public interface ISymbolLibrary : IResource, IVersionedEntity, ICloneable, INotifyPropertyChanged Properties Description Gets or sets the description. Declaration string Description { get; set; } Property Value Type Description System.String The description. Symbol Gets the symbol references Declaration IEnumerable<ISymbol> Symbol { get; } Property Value Type Description IEnumerable < ISymbol > The symbol references."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolLibrary.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolLibrary.html",
    "title": "Namespace OSGeo.MapGuide.ObjectModels.SymbolLibrary | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.ObjectModels.SymbolLibrary Interfaces ISymbol A reference in a DWF symbol library ISymbolLibrary A DWF-based symbol library"
  },
  "api/OSGeo.MapGuide.ObjectModels.TileProviderList.TileProviderList.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.TileProviderList.TileProviderList.html",
    "title": "Class TileProviderList | MapGuide Maestro",
    "keywords": "Class TileProviderList Root element that contains a collection of TileProvider elements. Inheritance System.Object TileProviderList Namespace : OSGeo.MapGuide.ObjectModels.TileProviderList Assembly : cs.temp.dll.dll Syntax [Serializable] public class TileProviderList : ComponentModel.INotifyPropertyChanged Properties TileProvider Describes an installed tile provider. Declaration public BindingList<TileProviderListTileProvider> TileProvider { get; set; } Property Value Type Description BindingList < TileProviderListTileProvider > Methods Clone() Create a clone of this TileProviderList object Declaration public virtual TileProviderList Clone() Returns Type Description TileProviderList Deserialize(String) Declaration public static TileProviderList Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description TileProviderList Deserialize(String, out TileProviderList) Declaration public static bool Deserialize(string xml, out TileProviderList obj) Parameters Type Name Description System.String xml TileProviderList obj Returns Type Description System.Boolean Deserialize(String, out TileProviderList, out Exception) Deserializes workflow markup into an TileProviderList object Declaration public static bool Deserialize(string xml, out TileProviderList obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize TileProviderList obj Output TileProviderList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static TileProviderList LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description TileProviderList LoadFromFile(String, out TileProviderList) Declaration public static bool LoadFromFile(string fileName, out TileProviderList obj) Parameters Type Name Description System.String fileName TileProviderList obj Returns Type Description System.Boolean LoadFromFile(String, out TileProviderList, out Exception) Deserializes xml markup from file into an TileProviderList object Declaration public static bool LoadFromFile(string fileName, out TileProviderList obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize TileProviderList obj Output TileProviderList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string propertyName) Parameters Type Name Description System.String propertyName SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current TileProviderList object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current TileProviderList object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.TileProviderList.TileProviderListTileProvider.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.TileProviderList.TileProviderListTileProvider.html",
    "title": "Class TileProviderListTileProvider | MapGuide Maestro",
    "keywords": "Class TileProviderListTileProvider Describes an installed tile provider. Inheritance System.Object TileProviderListTileProvider Namespace : OSGeo.MapGuide.ObjectModels.TileProviderList Assembly : cs.temp.dll.dll Syntax [Serializable] public class TileProviderListTileProvider : ComponentModel.INotifyPropertyChanged Properties ConnectionProperties Connection properties for each provider with default values will be listed here. Declaration public BindingList<TileProviderListTileProviderConnectionProperty> ConnectionProperties { get; set; } Property Value Type Description BindingList < TileProviderListTileProviderConnectionProperty > Description A brief description of the feature provider. Declaration public string Description { get; set; } Property Value Type Description System.String DisplayName A user friendly display name of the feature provider. Declaration public string DisplayName { get; set; } Property Value Type Description System.String Name Unique name of the feature provider. This name should be of the form <Company>.<Provider>.<Version>. Declaration public string Name { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this TileProviderListTileProvider object Declaration public virtual TileProviderListTileProvider Clone() Returns Type Description TileProviderListTileProvider Deserialize(String) Declaration public static TileProviderListTileProvider Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description TileProviderListTileProvider Deserialize(String, out TileProviderListTileProvider) Declaration public static bool Deserialize(string xml, out TileProviderListTileProvider obj) Parameters Type Name Description System.String xml TileProviderListTileProvider obj Returns Type Description System.Boolean Deserialize(String, out TileProviderListTileProvider, out Exception) Deserializes workflow markup into an TileProviderListTileProvider object Declaration public static bool Deserialize(string xml, out TileProviderListTileProvider obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize TileProviderListTileProvider obj Output TileProviderListTileProvider object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static TileProviderListTileProvider LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description TileProviderListTileProvider LoadFromFile(String, out TileProviderListTileProvider) Declaration public static bool LoadFromFile(string fileName, out TileProviderListTileProvider obj) Parameters Type Name Description System.String fileName TileProviderListTileProvider obj Returns Type Description System.Boolean LoadFromFile(String, out TileProviderListTileProvider, out Exception) Deserializes xml markup from file into an TileProviderListTileProvider object Declaration public static bool LoadFromFile(string fileName, out TileProviderListTileProvider obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize TileProviderListTileProvider obj Output TileProviderListTileProvider object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string propertyName) Parameters Type Name Description System.String propertyName SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current TileProviderListTileProvider object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current TileProviderListTileProvider object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.TileProviderList.TileProviderListTileProviderConnectionProperty.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.TileProviderList.TileProviderListTileProviderConnectionProperty.html",
    "title": "Class TileProviderListTileProviderConnectionProperty | MapGuide Maestro",
    "keywords": "Class TileProviderListTileProviderConnectionProperty Inheritance System.Object TileProviderListTileProviderConnectionProperty Namespace : OSGeo.MapGuide.ObjectModels.TileProviderList Assembly : cs.temp.dll.dll Syntax [Serializable] public class TileProviderListTileProviderConnectionProperty : ComponentModel.INotifyPropertyChanged Properties DefaultValue Declaration public string DefaultValue { get; set; } Property Value Type Description System.String Enumerable Declaration public bool Enumerable { get; set; } Property Value Type Description System.Boolean LocalizedName Declaration public string LocalizedName { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; set; } Property Value Type Description System.String Protected Declaration public bool Protected { get; set; } Property Value Type Description System.Boolean Required Declaration public bool Required { get; set; } Property Value Type Description System.Boolean Value Declaration public BindingList<string> Value { get; set; } Property Value Type Description BindingList < System.String > Methods Clone() Create a clone of this TileProviderListTileProviderConnectionProperty object Declaration public virtual TileProviderListTileProviderConnectionProperty Clone() Returns Type Description TileProviderListTileProviderConnectionProperty Deserialize(String) Declaration public static TileProviderListTileProviderConnectionProperty Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description TileProviderListTileProviderConnectionProperty Deserialize(String, out TileProviderListTileProviderConnectionProperty) Declaration public static bool Deserialize(string xml, out TileProviderListTileProviderConnectionProperty obj) Parameters Type Name Description System.String xml TileProviderListTileProviderConnectionProperty obj Returns Type Description System.Boolean Deserialize(String, out TileProviderListTileProviderConnectionProperty, out Exception) Deserializes workflow markup into an TileProviderListTileProviderConnectionProperty object Declaration public static bool Deserialize(string xml, out TileProviderListTileProviderConnectionProperty obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize TileProviderListTileProviderConnectionProperty obj Output TileProviderListTileProviderConnectionProperty object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static TileProviderListTileProviderConnectionProperty LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description TileProviderListTileProviderConnectionProperty LoadFromFile(String, out TileProviderListTileProviderConnectionProperty) Declaration public static bool LoadFromFile(string fileName, out TileProviderListTileProviderConnectionProperty obj) Parameters Type Name Description System.String fileName TileProviderListTileProviderConnectionProperty obj Returns Type Description System.Boolean LoadFromFile(String, out TileProviderListTileProviderConnectionProperty, out Exception) Deserializes xml markup from file into an TileProviderListTileProviderConnectionProperty object Declaration public static bool LoadFromFile(string fileName, out TileProviderListTileProviderConnectionProperty obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize TileProviderListTileProviderConnectionProperty obj Output TileProviderListTileProviderConnectionProperty object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string propertyName) Parameters Type Name Description System.String propertyName SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current TileProviderListTileProviderConnectionProperty object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current TileProviderListTileProviderConnectionProperty object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.TileProviderList.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.TileProviderList.html",
    "title": "Namespace OSGeo.MapGuide.ObjectModels.TileProviderList | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.ObjectModels.TileProviderList Classes TileProviderList Root element that contains a collection of TileProvider elements. TileProviderListTileProvider Describes an installed tile provider. TileProviderListTileProviderConnectionProperty"
  },
  "api/OSGeo.MapGuide.ObjectModels.TileSetDefinition.ExtensionMethods.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.TileSetDefinition.ExtensionMethods.html",
    "title": "Class ExtensionMethods | MapGuide Maestro",
    "keywords": "Class ExtensionMethods Extension methods Inheritance System.Object ExtensionMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.TileSetDefinition Assembly : cs.temp.dll.dll Syntax public static class ExtensionMethods Methods GetBaseLayerByName(ITileSetAbstract, String) Gets the base layer of the specified name Declaration public static IBaseMapLayer GetBaseLayerByName(this ITileSetAbstract map, string layerName) Parameters Type Name Description ITileSetAbstract map The map System.String layerName The layer name Returns Type Description IBaseMapLayer The base layer GetBaseLayerCount(ITileSetAbstract) Gets the number of base layers Declaration public static int GetBaseLayerCount(this ITileSetAbstract map) Parameters Type Name Description ITileSetAbstract map The map Returns Type Description System.Int32 The count GetDefaultCoordinateSystem(ITileSetDefinition) Gets the coordinate system of this tile set. Must be using the default tile provider Declaration public static string GetDefaultCoordinateSystem(this ITileSetDefinition tileSet) Parameters Type Name Description ITileSetDefinition tileSet The tile set Returns Type Description System.String The coordinate system GetDefaultFiniteScaleList(ITileSetDefinition) Gets the finite scale list of this tile set. Must be using the default tile provider. Declaration public static double[] GetDefaultFiniteScaleList(this ITileSetDefinition tileSet) Parameters Type Name Description ITileSetDefinition tileSet The tile set Returns Type Description System.Double [] The array of finite scales GetDefaultTileHeight(ITileSetDefinition) Gets the height of this tile set. Must be using the default tile provider. Declaration public static int ? GetDefaultTileHeight(this ITileSetDefinition tileSet) Parameters Type Name Description ITileSetDefinition tileSet The tile set Returns Type Description System.Nullable < System.Int32 > The height of this tile set GetDefaultTileWidth(ITileSetDefinition) Gets the width of this tile set. Must be using the default tile provider. Declaration public static int ? GetDefaultTileWidth(this ITileSetDefinition tileSet) Parameters Type Name Description ITileSetDefinition tileSet The tile set Returns Type Description System.Nullable < System.Int32 > The width of this tile set GetFirstGroup(ITileSetAbstract) Gets the first base map group Declaration public static IBaseMapGroup GetFirstGroup(this ITileSetAbstract map) Parameters Type Name Description ITileSetAbstract map The map Returns Type Description IBaseMapGroup The first base map group GetGroup(ITileSetAbstract, String) Gets the base map group of the specified name Declaration public static IBaseMapGroup GetGroup(this ITileSetAbstract map, string groupName) Parameters Type Name Description ITileSetAbstract map The map System.String groupName The group name Returns Type Description IBaseMapGroup The base map group GetGroupForLayer(ITileSetAbstract, IBaseMapLayer) Gets the parent group for the specified layer Declaration public static IBaseMapGroup GetGroupForLayer(this ITileSetAbstract map, IBaseMapLayer layer) Parameters Type Name Description ITileSetAbstract map The map IBaseMapLayer layer The layer Returns Type Description IBaseMapGroup The parent group GetLayersForGroup(ITileSetAbstract, String) Gets the tiled layers for the specified base map group Declaration public static IEnumerable<IBaseMapLayer> GetLayersForGroup(this ITileSetAbstract map, string groupName) Parameters Type Name Description ITileSetAbstract map The map System.String groupName The group name Returns Type Description IEnumerable < IBaseMapLayer > The tiled layers GetMaxScale(ITileSetAbstract) Gets the maximum finite display scale Declaration public static double GetMaxScale(this ITileSetAbstract map) Parameters Type Name Description ITileSetAbstract map The map Returns Type Description System.Double The maximum scale GetMinScale(ITileSetAbstract) Gets the minimum finite display scale Declaration public static double GetMinScale(this ITileSetAbstract map) Parameters Type Name Description ITileSetAbstract map The map Returns Type Description System.Double The minimum scale GetParameter(ITileSetDefinition, String) Gets the tile set parameter of the specified name Declaration public static INameStringPair GetParameter(this ITileSetDefinition tileSet, string name) Parameters Type Name Description ITileSetDefinition tileSet The tile set System.String name The name Returns Type Description INameStringPair The parameter GetTileFormat(ITileSetDefinition) Gets the image format of this tile set Declaration public static string GetTileFormat(this ITileSetDefinition tileSet) Parameters Type Name Description ITileSetDefinition tileSet The tile set Returns Type Description System.String The image format GetTilePath(ITileSetDefinition) Gets the tile path of this tile set Declaration public static string GetTilePath(this ITileSetDefinition tileSet) Parameters Type Name Description ITileSetDefinition tileSet The tile set Returns Type Description System.String The tile path GroupExists(ITileSetAbstract, String) Gets whether the specified base map group exists Declaration public static bool GroupExists(this ITileSetAbstract map, string groupName) Parameters Type Name Description ITileSetAbstract map The map System.String groupName The group name Returns Type Description System.Boolean True if it exists. False otherwise GroupExists(ITileSetDefinition, String) Gets whether the specified base group exists in the tile set Declaration public static bool GroupExists(this ITileSetDefinition tileSet, string groupName) Parameters Type Name Description ITileSetDefinition tileSet The tile set System.String groupName The group name Returns Type Description System.Boolean True if the group exists. False otherwise HasGroups(ITileSetAbstract) Gets whether this base map has groups Declaration public static bool HasGroups(this ITileSetAbstract map) Parameters Type Name Description ITileSetAbstract map The map Returns Type Description System.Boolean True if it has groups. False otherwise HasLayers(IBaseMapGroup) Gets whether this base map group has tiled layers Declaration public static bool HasLayers(this IBaseMapGroup grp) Parameters Type Name Description IBaseMapGroup grp The group Returns Type Description System.Boolean True if it has tiled layers. False otherwise HasLayers(ITileSetAbstract) Gets whether this base map has tiled layers Declaration public static bool HasLayers(this ITileSetAbstract map) Parameters Type Name Description ITileSetAbstract map The map Returns Type Description System.Boolean True if it has tiled layers. False otherwise LayerExists(ITileSetAbstract, String) Gets whether a base layer of the specified name exists. Declaration public static bool LayerExists(this ITileSetAbstract map, string layerName) Parameters Type Name Description ITileSetAbstract map The map System.String layerName The layer name Returns Type Description System.Boolean True if it exists. False otherwise RemoveBaseLayerGroup(ITileSetDefinition, IBaseMapGroup) Removes the given base layer group from the Map Definition Declaration public static void RemoveBaseLayerGroup(this ITileSetDefinition map, IBaseMapGroup group) Parameters Type Name Description ITileSetDefinition map The map IBaseMapGroup group The group to remove SetDefaultCoordinateSystem(ITileSetDefinition, String) Sets the coordinate system of this tile set. Must be using the default tile provider. Declaration public static void SetDefaultCoordinateSystem(this ITileSetDefinition tileSet, string coordinateSystem) Parameters Type Name Description ITileSetDefinition tileSet The tile set System.String coordinateSystem The coordinate system SetDefaultFiniteScaleList(ITileSetDefinition, IEnumerable<Double>) Sets the finite scale list of this tile set. Must be using the default tile provider. Declaration public static void SetDefaultFiniteScaleList(this ITileSetDefinition tileSet, IEnumerable<double> scales) Parameters Type Name Description ITileSetDefinition tileSet The tile set IEnumerable < System.Double > scales The finite sclae list SetDefaultProviderParameters(ITileSetDefinition, Int32, Int32, String, Double[], String, String) Sets default provider parameters. Any existing parameters are cleared Declaration public static void SetDefaultProviderParameters(this ITileSetDefinition tileSet, int tileWidth, int tileHeight, string coordinateSystem, double[] finiteScaleList, string tileFormat = \"PNG\", string tilePath = \"%MG_TILE_CACHE_PATH%\") Parameters Type Name Description ITileSetDefinition tileSet The tile set System.Int32 tileWidth Tile width System.Int32 tileHeight Tile height System.String coordinateSystem Coordinate system System.Double [] finiteScaleList The finite scale list System.String tileFormat Image format System.String tilePath Tile path SetDefaultTileHeight(ITileSetDefinition, Int32) Sets the height of this tile set. Must be using the default tile provider. Declaration public static void SetDefaultTileHeight(this ITileSetDefinition tileSet, int value) Parameters Type Name Description ITileSetDefinition tileSet The tile set System.Int32 value The height SetDefaultTileWidth(ITileSetDefinition, Int32) Sets the width of this tile set. Must be using the default tile provider. Declaration public static void SetDefaultTileWidth(this ITileSetDefinition tileSet, int value) Parameters Type Name Description ITileSetDefinition tileSet The tile set System.Int32 value The width of this tile set SetTileFormat(ITileSetDefinition, String) Sets the image format of this tile set Declaration public static void SetTileFormat(this ITileSetDefinition tileSet, string format) Parameters Type Name Description ITileSetDefinition tileSet The tile set System.String format The image format SetTilePath(ITileSetDefinition, String) Sets the path of this tile set Declaration public static void SetTilePath(this ITileSetDefinition tileSet, string path) Parameters Type Name Description ITileSetDefinition tileSet The tile set System.String path The tile path SetXYZProviderParameters(ITileSetDefinition, String, String) Sets XYZ provider parameters. Any existing parameters are cleared Declaration public static void SetXYZProviderParameters(this ITileSetDefinition tileSet, string tileFormat = \"PNG\", string tilePath = \"%MG_TILE_CACHE_PATH%\") Parameters Type Name Description ITileSetDefinition tileSet The tile set System.String tileFormat The image format System.String tilePath The tile path"
  },
  "api/OSGeo.MapGuide.ObjectModels.TileSetDefinition.ITileSetAbstract.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.TileSetDefinition.ITileSetAbstract.html",
    "title": "Interface ITileSetAbstract | MapGuide Maestro",
    "keywords": "Interface ITileSetAbstract An abstraction that works with both Tile Set Definitions and the base map section of a Map Definition Namespace : OSGeo.MapGuide.ObjectModels.TileSetDefinition Assembly : cs.temp.dll.dll Syntax public interface ITileSetAbstract Properties BaseMapLayerGroups The base map layer groups Declaration IEnumerable<IBaseMapGroup> BaseMapLayerGroups { get; } Property Value Type Description IEnumerable < IBaseMapGroup > FiniteDisplayScale The finite display scale list Declaration IEnumerable<double> FiniteDisplayScale { get; } Property Value Type Description IEnumerable < System.Double > GroupCount Gets the group count. Declaration int GroupCount { get; } Property Value Type Description System.Int32 The group count. ScaleCount Gets the scale count. Declaration int ScaleCount { get; } Property Value Type Description System.Int32 The scale count. SupportsCustomFiniteDisplayScales Gets whether this tile set supports custom finite display scales. If false, none of the scale operations should be used Declaration bool SupportsCustomFiniteDisplayScales { get; } Property Value Type Description System.Boolean SupportsCustomFiniteDisplayScalesUnconditionally Gets whether this tile set supports under certain conditions. If false, the caller should check if SupportsCustomFiniteDisplayScales is true in order to safely invoke any scale based operations Declaration bool SupportsCustomFiniteDisplayScalesUnconditionally { get; } Property Value Type Description System.Boolean Methods AddBaseLayerGroup(String) Adds the base layer group. Declaration IBaseMapGroup AddBaseLayerGroup(string name) Parameters Type Name Description System.String name The name. Returns Type Description IBaseMapGroup The group AddFiniteDisplayScale(Double) Adds the finite display scale. The implementation may internally sort after adding the added item Declaration void AddFiniteDisplayScale(double value) Parameters Type Name Description System.Double value The value. GetGroupAt(Int32) Gets the group at the specified index Declaration IBaseMapGroup GetGroupAt(int index) Parameters Type Name Description System.Int32 index The index. Returns Type Description IBaseMapGroup The group GetLayersForGroup(String) Gets the layer for the given base layer group name Declaration IEnumerable<IBaseMapLayer> GetLayersForGroup(string groupName) Parameters Type Name Description System.String groupName Returns Type Description IEnumerable < IBaseMapLayer > GetScaleAt(Int32) Gets the scale at the specified index Declaration double GetScaleAt(int index) Parameters Type Name Description System.Int32 index The index. Returns Type Description System.Double The scale RemoveAllScales() Removes all scales. Declaration void RemoveAllScales() RemoveBaseLayerGroup(IBaseMapGroup) Removes the base layer group. Declaration void RemoveBaseLayerGroup(IBaseMapGroup group) Parameters Type Name Description IBaseMapGroup group The group. RemoveFiniteDisplayScale(Double) Removes the finite display scale. Declaration void RemoveFiniteDisplayScale(double value) Parameters Type Name Description System.Double value The value. RemoveScaleAt(Int32) Removes the scale at the specified index Declaration void RemoveScaleAt(int index) Parameters Type Name Description System.Int32 index The index. SetFiniteDisplayScales(IEnumerable<Double>) Sets the finite display scale list Declaration void SetFiniteDisplayScales(IEnumerable<double> scales) Parameters Type Name Description IEnumerable < System.Double > scales The scales to set"
  },
  "api/OSGeo.MapGuide.ObjectModels.TileSetDefinition.ITileSetDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.TileSetDefinition.ITileSetDefinition.html",
    "title": "Interface ITileSetDefinition | MapGuide Maestro",
    "keywords": "Interface ITileSetDefinition Describes a Tile Set Definition Inherited Members IResource.ValidatingSchema IResource.ResourceID IResource.ResourceType IResource.Serialize() IResource.IsStronglyTyped IVersionedEntity.ResourceVersion ITileSetAbstract.SetFiniteDisplayScales(IEnumerable<Double>) ITileSetAbstract.AddFiniteDisplayScale(Double) ITileSetAbstract.RemoveFiniteDisplayScale(Double) ITileSetAbstract.ScaleCount ITileSetAbstract.RemoveScaleAt(Int32) ITileSetAbstract.GetScaleAt(Int32) ITileSetAbstract.RemoveAllScales() ITileSetAbstract.FiniteDisplayScale ITileSetAbstract.SupportsCustomFiniteDisplayScalesUnconditionally ITileSetAbstract.SupportsCustomFiniteDisplayScales ITileSetAbstract.BaseMapLayerGroups ITileSetAbstract.GetLayersForGroup(String) ITileSetAbstract.GroupCount ITileSetAbstract.GetGroupAt(Int32) ITileSetAbstract.AddBaseLayerGroup(String) ITileSetAbstract.RemoveBaseLayerGroup(IBaseMapGroup) Namespace : OSGeo.MapGuide.ObjectModels.TileSetDefinition Assembly : cs.temp.dll.dll Syntax public interface ITileSetDefinition : IResource, IVersionedEntity, ICloneable, INotifyPropertyChanged, ITileSetAbstract Properties Extents The extents of this tile set Declaration IEnvelope Extents { get; set; } Property Value Type Description IEnvelope TileStoreParameters The configuration parameters Declaration ITileStoreParameters TileStoreParameters { get; } Property Value Type Description ITileStoreParameters"
  },
  "api/OSGeo.MapGuide.ObjectModels.TileSetDefinition.ITileStoreParameters.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.TileSetDefinition.ITileStoreParameters.html",
    "title": "Interface ITileStoreParameters | MapGuide Maestro",
    "keywords": "Interface ITileStoreParameters Describes configuration parameters for a Tile Set Definition Namespace : OSGeo.MapGuide.ObjectModels.TileSetDefinition Assembly : cs.temp.dll.dll Syntax public interface ITileStoreParameters Properties Parameters Gets all the configuration parameters Declaration IEnumerable<INameStringPair> Parameters { get; } Property Value Type Description IEnumerable < INameStringPair > TileProvider The tile provider name Declaration string TileProvider { get; set; } Property Value Type Description System.String Methods AddParameter(String, String) Adds a configuration parameter Declaration void AddParameter(string name, string value) Parameters Type Name Description System.String name The parameter name System.String value The parameter value ClearParameters() Clears all configuration parameters Declaration void ClearParameters() SetParameter(String, String) Sets the value for a configuration parameter Declaration void SetParameter(string name, string value) Parameters Type Name Description System.String name The parameter name System.String value The parameter value Events ParametersChanged Raised when a configuration parameter has changed Declaration event EventHandler ParametersChanged Event Type Type Description EventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.TileSetDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.TileSetDefinition.html",
    "title": "Namespace OSGeo.MapGuide.ObjectModels.TileSetDefinition | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.ObjectModels.TileSetDefinition Classes ExtensionMethods Extension methods Interfaces ITileSetAbstract An abstraction that works with both Tile Set Definitions and the base map section of a Map Definition ITileSetDefinition Describes a Tile Set Definition ITileStoreParameters Describes configuration parameters for a Tile Set Definition"
  },
  "api/OSGeo.MapGuide.ObjectModels.UntypedResource.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.UntypedResource.html",
    "title": "Class UntypedResource | MapGuide Maestro",
    "keywords": "Class UntypedResource Represents resource content that could not be deserialized into a corresponding strongly-typed resource class. This is just a container of arbitrary xml content. Inheritance System.Object UntypedResource Implements IResource IVersionedEntity ICloneable INotifyPropertyChanged Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels Assembly : cs.temp.dll.dll Syntax public class UntypedResource : IResource, IVersionedEntity, ICloneable, INotifyPropertyChanged Properties IsStronglyTyped Gets whether this resource is strongly typed Declaration public bool IsStronglyTyped { get; } Property Value Type Description System.Boolean ResourceID Gets or sets the resource id Declaration public string ResourceID { get; set; } Property Value Type Description System.String ResourceType Gets the resource type Declaration public string ResourceType { get; } Property Value Type Description System.String ResourceVersion Gets the resource version Declaration public Version ResourceVersion { get; } Property Value Type Description Version ValidatingSchema Gets the validating XML schema Declaration public string ValidatingSchema { get; } Property Value Type Description System.String XmlContent Gets or sets the XML content Declaration public string XmlContent { get; set; } Property Value Type Description System.String Methods Clone() Returns a clone of this instance Declaration public object Clone() Returns Type Description System.Object Serialize() Gets the XML form of this instance Declaration public string Serialize() Returns Type Description System.String Events PropertyChanged Raised when a property changes Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Implements IResource IVersionedEntity ICloneable INotifyPropertyChanged"
  },
  "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.HorizontalAlignmentType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WatermarkDefinition.HorizontalAlignmentType.html",
    "title": "Enum HorizontalAlignmentType | MapGuide Maestro",
    "keywords": "Enum HorizontalAlignmentType The allowed horizontal alignment values for a watermark position Namespace : OSGeo.MapGuide.ObjectModels.WatermarkDefinition Assembly : cs.temp.dll.dll Syntax public enum HorizontalAlignmentType Fields Name Description Center Left Right"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.ILocalizable.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.ILocalizable.html",
    "title": "Interface ILocalizable | MapGuide Maestro",
    "keywords": "Interface ILocalizable A UI element with localizable features Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface ILocalizable : INotifyPropertyChanged Properties Description Gets or sets the description. Declaration string Description { get; set; } Property Value Type Description System.String The description. DisabledImageURL Gets or sets the disabled image URL. Declaration string DisabledImageURL { get; set; } Property Value Type Description System.String The disabled image URL. ImageURL Gets or sets the image URL. Declaration string ImageURL { get; set; } Property Value Type Description System.String The image URL. Tooltip Gets or sets the tooltip. Declaration string Tooltip { get; set; } Property Value Type Description System.String The tooltip."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IMap.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IMap.html",
    "title": "Interface IMap | MapGuide Maestro",
    "keywords": "Interface IMap The map referenced in this web layout Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IMap : INotifyPropertyChanged Properties HyperlinkTarget Gets or sets the hyperlink target for feature selection urls Declaration TargetType HyperlinkTarget { get; set; } Property Value Type Description TargetType The hyperlink target. HyperlinkTargetFrame Gets or sets the hyperlink target frame for feature selection urls. Declaration string HyperlinkTargetFrame { get; set; } Property Value Type Description System.String The hyperlink target frame. InitialView Gets or sets the initial view. Declaration IMapView InitialView { get; set; } Property Value Type Description IMapView The initial view. ResourceId Gets or sets the resource id. Declaration string ResourceId { get; set; } Property Value Type Description System.String The resource id."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IMapView.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IMapView.html",
    "title": "Interface IMapView | MapGuide Maestro",
    "keywords": "Interface IMapView The initial view of the map Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IMapView : INotifyPropertyChanged Properties CenterX Gets or sets the center X. Declaration double CenterX { get; set; } Property Value Type Description System.Double The center X. CenterY Gets or sets the center Y. Declaration double CenterY { get; set; } Property Value Type Description System.Double The center Y. Scale Gets or sets the scale. Declaration double Scale { get; set; } Property Value Type Description System.Double The scale."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IMeasureCommand.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IMeasureCommand.html",
    "title": "Interface IMeasureCommand | MapGuide Maestro",
    "keywords": "Interface IMeasureCommand Measure command Inherited Members ITargetedCommand.Target ITargetedCommand.TargetFrame ICommand.Name ICommand.Label ICommand.TargetViewer ILocalizable.Tooltip ILocalizable.Description ILocalizable.ImageURL ILocalizable.DisabledImageURL Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IMeasureCommand : ITargetedCommand, ICustomCommand, ICommand, ILocalizable, INotifyPropertyChanged"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IMenu.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IMenu.html",
    "title": "Interface IMenu | MapGuide Maestro",
    "keywords": "Interface IMenu Represents a UI element that can have any number of child UI elements Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IMenu Properties ItemCount Gets the item count. Declaration int ItemCount { get; } Property Value Type Description System.Int32 The item count. Items Gets the items. Declaration IEnumerable<IUIItem> Items { get; } Property Value Type Description IEnumerable < IUIItem > The items. Methods AddItem(IUIItem) Adds the item. Declaration void AddItem(IUIItem item) Parameters Type Name Description IUIItem item The item. GetIndex(IUIItem) Gets the index of the specified item. Declaration int GetIndex(IUIItem item) Parameters Type Name Description IUIItem item The item. Returns Type Description System.Int32 Insert(IUIItem, Int32) Inserts the specified item at the specified index. Declaration void Insert(IUIItem item, int index) Parameters Type Name Description IUIItem item The item. System.Int32 index The index. MoveDown(IUIItem) Moves the specified item down. Declaration bool MoveDown(IUIItem item) Parameters Type Name Description IUIItem item The item. Returns Type Description System.Boolean MoveUp(IUIItem) Moves the specified item up. Declaration bool MoveUp(IUIItem item) Parameters Type Name Description IUIItem item The item. Returns Type Description System.Boolean RemoveItem(IUIItem) Removes the item. Declaration void RemoveItem(IUIItem item) Parameters Type Name Description IUIItem item The item."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.ImportedCommandResult.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.ImportedCommandResult.html",
    "title": "Class ImportedCommandResult | MapGuide Maestro",
    "keywords": "Class ImportedCommandResult Represents a result of a command import Inheritance System.Object ImportedCommandResult Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public class ImportedCommandResult Properties ImportedName Gets or sets the imported name Declaration public string ImportedName { get; set; } Property Value Type Description System.String NameChanged Gets whether the name was changed when importing Declaration public bool NameChanged { get; } Property Value Type Description System.Boolean OriginalName Gets or sets the original name Declaration public string OriginalName { get; set; } Property Value Type Description System.String Methods ToString() Gets the string representation Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IParameterPair.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IParameterPair.html",
    "title": "Interface IParameterPair | MapGuide Maestro",
    "keywords": "Interface IParameterPair A key value pair Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IParameterPair Properties Key Gets or sets the key. Declaration string Key { get; set; } Property Value Type Description System.String The key. Value Gets or sets the value. Declaration string Value { get; set; } Property Value Type Description System.String The value."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IPrintCommand.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IPrintCommand.html",
    "title": "Interface IPrintCommand | MapGuide Maestro",
    "keywords": "Interface IPrintCommand Print command Inherited Members ICommand.Name ICommand.Label ICommand.TargetViewer ILocalizable.Tooltip ILocalizable.Description ILocalizable.ImageURL ILocalizable.DisabledImageURL Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IPrintCommand : ICustomCommand, ICommand, ILocalizable, INotifyPropertyChanged Properties PrintLayout Gets the print layouts. Declaration IEnumerable<IResourceReference> PrintLayout { get; } Property Value Type Description IEnumerable < IResourceReference > The print layouts. Methods AddPrintLayout(IResourceReference) Adds the print layout. Declaration void AddPrintLayout(IResourceReference reference) Parameters Type Name Description IResourceReference reference The reference. Clear() Clears this instance. Declaration void Clear() CreatePrintLayout(String) Creates the print layout. Declaration IResourceReference CreatePrintLayout(string resourceId) Parameters Type Name Description System.String resourceId The resource id. Returns Type Description IResourceReference RemovePrintLayout(IResourceReference) Removes the print layout. Declaration void RemovePrintLayout(IResourceReference reference) Parameters Type Name Description IResourceReference reference The reference."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IResourceReference.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IResourceReference.html",
    "title": "Interface IResourceReference | MapGuide Maestro",
    "keywords": "Interface IResourceReference A resource reference Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IResourceReference : INotifyPropertyChanged Properties ResourceId Gets or sets the resource id. Declaration string ResourceId { get; set; } Property Value Type Description System.String The resource id."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IResultColumn.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IResultColumn.html",
    "title": "Interface IResultColumn | MapGuide Maestro",
    "keywords": "Interface IResultColumn A search command result column Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IResultColumn Properties Name Gets or sets the name. Declaration string Name { get; set; } Property Value Type Description System.String The name. Property Gets or sets the property. Declaration string Property { get; set; } Property Value Type Description System.String The property."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IResultColumnSet.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IResultColumnSet.html",
    "title": "Interface IResultColumnSet | MapGuide Maestro",
    "keywords": "Interface IResultColumnSet A search command result specification Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IResultColumnSet Properties Column Gets the columns. Declaration IEnumerable<IResultColumn> Column { get; } Property Value Type Description IEnumerable < IResultColumn > The columns. Methods AddResultColumn(IResultColumn) Adds the result column. Declaration void AddResultColumn(IResultColumn col) Parameters Type Name Description IResultColumn col The col. Clear() Clears this instance. Declaration void Clear() CreateColumn(String, String) Creates the column. Declaration IResultColumn CreateColumn(string name, string property) Parameters Type Name Description System.String name The name. System.String property The property. Returns Type Description IResultColumn RemoveResultColumn(IResultColumn) Removes the result column. Declaration void RemoveResultColumn(IResultColumn col) Parameters Type Name Description IResultColumn col The col."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.ISearchCommand.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.ISearchCommand.html",
    "title": "Interface ISearchCommand | MapGuide Maestro",
    "keywords": "Interface ISearchCommand Search command Inherited Members ITargetedCommand.Target ITargetedCommand.TargetFrame ICommand.Name ICommand.Label ICommand.TargetViewer ILocalizable.Tooltip ILocalizable.Description ILocalizable.ImageURL ILocalizable.DisabledImageURL Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface ISearchCommand : ITargetedCommand, ICustomCommand, ICommand, ILocalizable, INotifyPropertyChanged Properties Filter Gets or sets the filter. Declaration string Filter { get; set; } Property Value Type Description System.String The filter. Layer Gets or sets the layer. Declaration string Layer { get; set; } Property Value Type Description System.String The layer. MatchLimit Gets or sets the match limit. Declaration int MatchLimit { get; set; } Property Value Type Description System.Int32 The match limit. Prompt Gets or sets the prompt. Declaration string Prompt { get; set; } Property Value Type Description System.String The prompt. ResultColumns Gets the result columns. Declaration IResultColumnSet ResultColumns { get; } Property Value Type Description IResultColumnSet The result columns."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.ISelectWithinCommand.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.ISelectWithinCommand.html",
    "title": "Interface ISelectWithinCommand | MapGuide Maestro",
    "keywords": "Interface ISelectWithinCommand Select within command Inherited Members ITargetedCommand.Target ITargetedCommand.TargetFrame ICommand.Name ICommand.Label ICommand.TargetViewer ILocalizable.Tooltip ILocalizable.Description ILocalizable.ImageURL ILocalizable.DisabledImageURL Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface ISelectWithinCommand : ITargetedCommand, ICustomCommand, ICommand, ILocalizable, INotifyPropertyChanged"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.ISeparatorItem.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.ISeparatorItem.html",
    "title": "Interface ISeparatorItem | MapGuide Maestro",
    "keywords": "Interface ISeparatorItem A separator item Inherited Members IUIItem.Parent IUIItem.Function Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface ISeparatorItem : IUIItem"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IStatusBar.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IStatusBar.html",
    "title": "Interface IStatusBar | MapGuide Maestro",
    "keywords": "Interface IStatusBar The status bar Inherited Members IWebLayoutControl.Visible Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IStatusBar : IWebLayoutControl, INotifyPropertyChanged"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.ITargetedCommand.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.ITargetedCommand.html",
    "title": "Interface ITargetedCommand | MapGuide Maestro",
    "keywords": "Interface ITargetedCommand A command that operates in a certain viewer frame Inherited Members ICommand.Name ICommand.Label ICommand.TargetViewer ILocalizable.Tooltip ILocalizable.Description ILocalizable.ImageURL ILocalizable.DisabledImageURL Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface ITargetedCommand : ICustomCommand, ICommand, ILocalizable, INotifyPropertyChanged Properties Target Gets or sets the target. Declaration TargetType Target { get; set; } Property Value Type Description TargetType The target. TargetFrame Gets or sets the target frame. Declaration string TargetFrame { get; set; } Property Value Type Description System.String The target frame."
  },
  "api/OSGeo.FDO.Expressions.BinaryLogicalOperations.html": {
    "href": "api/OSGeo.FDO.Expressions.BinaryLogicalOperations.html",
    "title": "Enum BinaryLogicalOperations | MapGuide Maestro",
    "keywords": "Enum BinaryLogicalOperations The binary logical operator Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public enum BinaryLogicalOperations Fields Name Description And Logical AND Or Logical OR"
  },
  "api/OSGeo.FDO.Expressions.FdoParameter.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoParameter.html",
    "title": "Class FdoParameter | MapGuide Maestro",
    "keywords": "Class FdoParameter An FDO parameter Inheritance System.Object FdoParseable FdoExpression FdoValueExpression FdoParameter Inherited Members FdoExpression.ParseableType FdoExpression.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoParameter : FdoValueExpression Properties ExpressionType The expression type Declaration public override ExpressionType ExpressionType { get; } Property Value Type Description ExpressionType Overrides FdoExpression.ExpressionType Name The parameter name Declaration public string Name { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.FDO.Expressions.FdoSearchCondition.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoSearchCondition.html",
    "title": "Class FdoSearchCondition | MapGuide Maestro",
    "keywords": "Class FdoSearchCondition An FDO search condition Inheritance System.Object FdoParseable FdoFilter FdoSearchCondition FdoComparisonCondition FdoGeometricCondition FdoInCondition FdoNullCondition Inherited Members FdoFilter.ParseableType FdoFilter.FilterType FdoFilter.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public abstract class FdoSearchCondition : FdoFilter"
  },
  "api/OSGeo.FDO.Expressions.FdoSpatialCondition.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoSpatialCondition.html",
    "title": "Class FdoSpatialCondition | MapGuide Maestro",
    "keywords": "Class FdoSpatialCondition An FDO spatial condition Inheritance System.Object FdoParseable FdoFilter FdoSearchCondition FdoGeometricCondition FdoSpatialCondition Inherited Members FdoFilter.ParseableType FdoFilter.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoSpatialCondition : FdoGeometricCondition Properties Expression The geometric expression Declaration public FdoExpression Expression { get; } Property Value Type Description FdoExpression FilterType The filter type Declaration public override FilterType FilterType { get; } Property Value Type Description FilterType Overrides FdoFilter.FilterType Identifier The geometry identifier Declaration public FdoIdentifier Identifier { get; } Property Value Type Description FdoIdentifier Operator The spatial operator Declaration public SpatialOperations Operator { get; } Property Value Type Description SpatialOperations"
  },
  "api/OSGeo.FDO.Expressions.FilterType.html": {
    "href": "api/OSGeo.FDO.Expressions.FilterType.html",
    "title": "Enum FilterType | MapGuide Maestro",
    "keywords": "Enum FilterType Filter types Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public enum FilterType Fields Name Description BinaryLogicalOperator Binary logical ComparisonCondition Comparison condition DistanceCondition Distance condition InCondition In condition NullCondition Null condition SpatialCondition Spatial condition UnaryLogicalOperator Unary logical"
  },
  "api/OSGeo.FDO.Expressions.LiteralValueType.html": {
    "href": "api/OSGeo.FDO.Expressions.LiteralValueType.html",
    "title": "Enum LiteralValueType | MapGuide Maestro",
    "keywords": "Enum LiteralValueType The literal value type Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public enum LiteralValueType Fields Name Description Data A data value Geometry A geometry value"
  },
  "api/OSGeo.MapGuide.MaestroAPI.ArgumentParser.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.ArgumentParser.html",
    "title": "Class ArgumentParser | MapGuide Maestro",
    "keywords": "Class ArgumentParser A helper class to parse command-line arguments Inheritance System.Object ArgumentParser Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public class ArgumentParser Remarks Command-line arguments use the following format: -name1 -name2[:value2] -name3[:value3] Constructors ArgumentParser(String[]) Constructs a new instance Declaration public ArgumentParser(string[] args) Parameters Type Name Description System.String [] args Methods GetAllArgumentsWithValues() Gets a collection of name-value pairs of arguments with values Declaration public NameValueCollection GetAllArgumentsWithValues() Returns Type Description NameValueCollection GetValue(String) Gets the value of the specified switch Declaration public string GetValue(string name) Parameters Type Name Description System.String name Returns Type Description System.String IsDefined(String) Gets whether the particular switch has been defined Declaration public bool IsDefined(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Capability.ConnectionCapabilities.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Capability.ConnectionCapabilities.html",
    "title": "Class ConnectionCapabilities | MapGuide Maestro",
    "keywords": "Class ConnectionCapabilities Base connection capabilitiy class Inheritance System.Object ConnectionCapabilities Implements IConnectionCapabilities Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Capability Assembly : cs.temp.dll.dll Syntax public abstract class ConnectionCapabilities : IConnectionCapabilities Constructors ConnectionCapabilities(IServerConnection) Initializes a new instance of the ConnectionCapabilities class. Declaration protected ConnectionCapabilities(IServerConnection parent) Parameters Type Name Description IServerConnection parent The parent. Fields _parent The parent connection Declaration protected IServerConnection _parent Field Value Type Description IServerConnection Properties IsMultithreaded Indicates whether the current connection can be used between multiple threads Declaration public abstract bool IsMultithreaded { get; } Property Value Type Description System.Boolean SupportedCommands Gets an array of supported commands Declaration public abstract int[] SupportedCommands { get; } Property Value Type Description System.Int32 [] SupportedResourceTypes Gets the array of supported resource types Declaration public string[] SupportedResourceTypes { get; } Property Value Type Description System.String [] SupportedServices Gets an array of supported services Declaration public virtual int[] SupportedServices { get; } Property Value Type Description System.Int32 [] SupportsResourceHeaders Gets whether this connection supports the concept of resource headers Declaration public virtual bool SupportsResourceHeaders { get; } Property Value Type Description System.Boolean SupportsResourcePreviews Indicates whether web-based previewing capabilities are possible with this connection Declaration public abstract bool SupportsResourcePreviews { get; } Property Value Type Description System.Boolean SupportsResourceReferences Gets whether this connection supports resource reference tracking Declaration public virtual bool SupportsResourceReferences { get; } Property Value Type Description System.Boolean SupportsResourceSecurity Gets whether this connection supports resource security Declaration public virtual bool SupportsResourceSecurity { get; } Property Value Type Description System.Boolean SupportsWfsPublishing Gets whether this connection supports publishing resources for WFS Declaration public virtual bool SupportsWfsPublishing { get; } Property Value Type Description System.Boolean SupportsWmsPublishing Gets whether this connection supports publishing resources for WMS Declaration public virtual bool SupportsWmsPublishing { get; } Property Value Type Description System.Boolean Methods GetMaxLayerDefinitionVersion() Gets the max layer definition version. Declaration protected virtual Version GetMaxLayerDefinitionVersion() Returns Type Description Version GetMaxLoadProcedureVersion() Gets the max load procedure version. Declaration protected virtual Version GetMaxLoadProcedureVersion() Returns Type Description Version GetMaxMapDefinitionVersion() Gets the max map definition version Declaration protected virtual Version GetMaxMapDefinitionVersion() Returns Type Description Version GetMaxSupportedResourceVersion(String) Gets the highest supported resource version. Declaration public virtual Version GetMaxSupportedResourceVersion(string resourceType) Parameters Type Name Description System.String resourceType Returns Type Description Version GetMaxSymbolDefinitionVersion() Gets the max symbol definition version. Declaration protected virtual Version GetMaxSymbolDefinitionVersion() Returns Type Description Version GetMaxWatermarkDefinitionVersion() Gets the max watermark definition version Declaration protected virtual Version GetMaxWatermarkDefinitionVersion() Returns Type Description Version GetMaxWebLayoutVersion() Gets the max web layout version. Declaration protected virtual Version GetMaxWebLayoutVersion() Returns Type Description Version IsSupportedResourceType(String) Indicates if this current connection supports the specified resource type Declaration public virtual bool IsSupportedResourceType(string resourceType) Parameters Type Name Description System.String resourceType Returns Type Description System.Boolean SupportsAdvancedSymbols() Supportses the advanced symbols. Declaration protected virtual bool SupportsAdvancedSymbols() Returns Type Description System.Boolean SupportsFusion() Supportses the fusion. Declaration protected virtual bool SupportsFusion() Returns Type Description System.Boolean Implements IConnectionCapabilities"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.CachedFdoConnection.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.CachedFdoConnection.html",
    "title": "Class CachedFdoConnection | MapGuide Maestro",
    "keywords": "Class CachedFdoConnection Represents information about a cached FDO connection Inheritance System.Object CachedFdoConnection Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public class CachedFdoConnection Properties ConnectionState Gets the state of this connection Declaration public string ConnectionState { get; set; } Property Value Type Description System.String InUse Gets whether this connection is currently in use Declaration public string InUse { get; set; } Property Value Type Description System.String LastUsed Gets the date this connection was last used Declaration public DateTime LastUsed { get; set; } Property Value Type Description DateTime LongTransaction Gets the long transaction Declaration public string LongTransaction { get; set; } Property Value Type Description System.String Name Gets the feature source Declaration public string Name { get; set; } Property Value Type Description System.String UseCount Gets the number of objects currently using this connection Declaration public int UseCount { get; set; } Property Value Type Description System.Int32 Valid Gets whether this connection is valid Declaration public string Valid { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.CachedProviderInfo.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.CachedProviderInfo.html",
    "title": "Class CachedProviderInfo | MapGuide Maestro",
    "keywords": "Class CachedProviderInfo Represents the cache status of connections for a particular provider Inheritance System.Object CachedProviderInfo Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public class CachedProviderInfo Properties CachedFdoConnections Gets an array of cached connections using this provider Declaration public CachedFdoConnection[] CachedFdoConnections { get; set; } Property Value Type Description CachedFdoConnection [] CurrentDataConnectionPoolSize Gets the current connection pool size Declaration public int CurrentDataConnectionPoolSize { get; set; } Property Value Type Description System.Int32 CurrentDataConnections Gets the number of current connections Declaration public int CurrentDataConnections { get; set; } Property Value Type Description System.Int32 FeatureSourceId Gets the feature source Declaration public string FeatureSourceId { get; set; } Property Value Type Description System.String KeepDataConnectionsCached Gets whether connections are cached Declaration public string KeepDataConnectionsCached { get; set; } Property Value Type Description System.String MaximumDataConnectionPoolSize Gets the maximum connection pool size Declaration public int MaximumDataConnectionPoolSize { get; set; } Property Value Type Description System.Int32 ThreadModel Gets the thread model Declaration public string ThreadModel { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.DefaultCreateDataStoreCommand-1.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.DefaultCreateDataStoreCommand-1.html",
    "title": "Class DefaultCreateDataStoreCommand<TConn> | MapGuide Maestro",
    "keywords": "Class DefaultCreateDataStoreCommand<TConn> A default implementation of IApplySchema . Reserved for connection provider use Inheritance System.Object DefaultCommand <TConn> DefaultCreateDataStoreCommand<TConn> Implements ICreateDataStore ICommand IFdoSpatialContext Inherited Members DefaultCommand<TConn>.ConnImpl DefaultCommand<TConn>.Parent DefaultCommand<TConn>.ValidateCoreParams() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public abstract class DefaultCreateDataStoreCommand<TConn> : DefaultCommand<TConn>, ICreateDataStore, ICommand, IFdoSpatialContext where TConn : IServerConnection Type Parameters Name Description TConn The type of the conn. Constructors DefaultCreateDataStoreCommand(TConn) Initializes a new instance of the DefaultCreateDataStoreCommand<TConn> class. Declaration protected DefaultCreateDataStoreCommand(TConn conn) Parameters Type Name Description TConn conn The conn. Properties CoordinateSystemName Gets or sets the name of the coordinate system. Declaration public string CoordinateSystemName { get; set; } Property Value Type Description System.String The name of the coordinate system. CoordinateSystemWkt Gets or sets the coordinate system WKT. Declaration public string CoordinateSystemWkt { get; set; } Property Value Type Description System.String The coordinate system WKT. Description Gets or sets the description. Declaration public string Description { get; set; } Property Value Type Description System.String The description. Extent Gets or sets the extent. Declaration public IEnvelope Extent { get; set; } Property Value Type Description IEnvelope The extent. ExtentType Gets or sets the type of the extent. Declaration public FdoSpatialContextListSpatialContextExtentType ExtentType { get; set; } Property Value Type Description FdoSpatialContextListSpatialContextExtentType The type of the extent. FeatureSourceId Gets or sets the feature source id. Declaration public string FeatureSourceId { get; set; } Property Value Type Description System.String The feature source id. FileName Gets or sets the name of the file. Declaration public string FileName { get; set; } Property Value Type Description System.String The name of the file. Name Gets or sets the name of the spatial context to create. Declaration public string Name { get; set; } Property Value Type Description System.String The name. Provider Gets or sets the provider. Declaration public string Provider { get; set; } Property Value Type Description System.String The provider. Schema Gets or sets the schema. Declaration public FeatureSchema Schema { get; set; } Property Value Type Description FeatureSchema The schema. XYTolerance Gets or sets the XY tolerance. Declaration public double XYTolerance { get; set; } Property Value Type Description System.Double The XY tolerance. ZTolerance Gets or sets the Z tolerance. Declaration public double ZTolerance { get; set; } Property Value Type Description System.Double The Z tolerance. Methods Execute() Executes this instance. Declaration public void Execute() ExecuteInternal() Performs actual execution of the command. Declaration protected abstract void ExecuteInternal() ReadXml(XmlNode, XmlNamespaceManager) Declaration public void ReadXml(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description System.Xml.XmlNode node System.Xml.XmlNamespaceManager mgr WriteXml(XmlDocument, XmlNode) Declaration public void WriteXml(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description System.Xml.XmlDocument doc System.Xml.XmlNode currentNode Implements ICreateDataStore ICommand IFdoSpatialContext"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.DefaultDeleteCommand-1.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.DefaultDeleteCommand-1.html",
    "title": "Class DefaultDeleteCommand<TConn> | MapGuide Maestro",
    "keywords": "Class DefaultDeleteCommand<TConn> A default implementation of IDeleteFeatures . This class is reserved for connection provider use Inheritance System.Object DefaultCommand <TConn> DefaultFeatureCommand <TConn> DefaultDeleteCommand<TConn> Implements IDeleteFeatures IFeatureCommand ICommand Inherited Members DefaultFeatureCommand<TConn>.FeatureSourceId DefaultFeatureCommand<TConn>.ClassName DefaultFeatureCommand<TConn>.ValidateParams() DefaultCommand<TConn>.ConnImpl DefaultCommand<TConn>.Parent DefaultCommand<TConn>.ValidateCoreParams() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public abstract class DefaultDeleteCommand<TConn> : DefaultFeatureCommand<TConn>, IDeleteFeatures, IFeatureCommand, ICommand where TConn : IServerConnection Type Parameters Name Description TConn The type of the conn. Constructors DefaultDeleteCommand(TConn) Initializes a new instance of the DefaultDeleteCommand<TConn> class. Declaration protected DefaultDeleteCommand(TConn conn) Parameters Type Name Description TConn conn The conn. Properties Filter Gets or sets the filter. Declaration public string Filter { get; set; } Property Value Type Description System.String The filter. Methods Execute() Executes this instance. Declaration public int Execute() Returns Type Description System.Int32 ExecuteInternal() Performs actual execution of the command Declaration protected abstract int ExecuteInternal() Returns Type Description System.Int32 Implements IDeleteFeatures IFeatureCommand ICommand"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.IApplySchema.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.IApplySchema.html",
    "title": "Interface IApplySchema | MapGuide Maestro",
    "keywords": "Interface IApplySchema Defines a command that applies the given Feature Schema to a Feature Source Inherited Members ICommand.Parent Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public interface IApplySchema : ICommand Remarks This command is only supported on certain implementations of IServerConnection You can find out if the connection supports this command through the Capabilities Properties FeatureSourceId Gets or sets the Feature Source ID Declaration string FeatureSourceId { get; set; } Property Value Type Description System.String Schema Gets or sets the Feature Schema Declaration FeatureSchema Schema { get; set; } Property Value Type Description FeatureSchema Methods Execute() Executes the command Declaration void Execute()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.IBatchInsertFeatures.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.IBatchInsertFeatures.html",
    "title": "Interface IBatchInsertFeatures | MapGuide Maestro",
    "keywords": "Interface IBatchInsertFeatures Defines a command that inserts a series of features into a Feature Source Inherited Members IFeatureCommand.FeatureSourceId IFeatureCommand.ClassName ICommand.Parent Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public interface IBatchInsertFeatures : IFeatureCommand, ICommand Remarks This command is only supported on certain implementations of IServerConnection You can find out if the connection supports this command through the Capabilities Nothing implements this interface at the moment Properties RecordsToInsert Gets or sets the list of features to insert Declaration ICollection<IRecord> RecordsToInsert { get; set; } Property Value Type Description ICollection < IRecord > Methods Execute() Executes the command. Declaration ICollection<InsertResult> Execute() Returns Type Description ICollection < InsertResult > A collection of InsertResult instances. Inspect the individual InsertResult properties to determine which features failed to be inserted."
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.IDescribeRuntimeMap.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.IDescribeRuntimeMap.html",
    "title": "Interface IDescribeRuntimeMap | MapGuide Maestro",
    "keywords": "Interface IDescribeRuntimeMap Describes the structure of an existing runtime map Inherited Members ICommand.Parent Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public interface IDescribeRuntimeMap : ICommand Properties IconFormat The icon image format (default: PNG) Declaration string IconFormat { get; set; } Property Value Type Description System.String IconHeight The height of each inline icon that will be rendered (default: 16) Declaration int IconHeight { get; set; } Property Value Type Description System.Int32 IconsPerScaleRange The number of icons to render inline (as base64 images) per scale range in each layer of the map Declaration int IconsPerScaleRange { get; set; } Property Value Type Description System.Int32 IconWidth The width of each inline icon that will be rendered (default: 16) Declaration int IconWidth { get; set; } Property Value Type Description System.Int32 Name The name of the runtime map to describe the structure of Declaration string Name { get; set; } Property Value Type Description System.String RequestedFeatures A bitmask specifying what pieces of information to include in the CREATERUNTIMEMAP response Declaration int RequestedFeatures { get; set; } Property Value Type Description System.Int32 Methods Execute() Executes the request and returns the structure of the runtime map Declaration IRuntimeMapInfo Execute() Returns Type Description IRuntimeMapInfo The structure of the runtime map"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.IFeatureCommand.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.IFeatureCommand.html",
    "title": "Interface IFeatureCommand | MapGuide Maestro",
    "keywords": "Interface IFeatureCommand Defines a command that works against a Feature Class of a Feature Source Inherited Members ICommand.Parent Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public interface IFeatureCommand : ICommand Properties ClassName Gets or sets the Feature Class name Declaration string ClassName { get; set; } Property Value Type Description System.String FeatureSourceId Gets or sets the Feature Source ID Declaration string FeatureSourceId { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.RuntimeMapRequestedFeatures.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.RuntimeMapRequestedFeatures.html",
    "title": "Enum RuntimeMapRequestedFeatures | MapGuide Maestro",
    "keywords": "Enum RuntimeMapRequestedFeatures A bitmask that defines what information to include in a CreateRuntimeMap or DescribeRuntimeMap response. Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public enum RuntimeMapRequestedFeatures Fields Name Description FeatureSourceInformation Include feature source information for each layer. Does nothing if OSGeo.MapGuide.MaestroAPI.Commands.RuntimeMapRequest.LayersAndGroups is not included in the mask Icons Include inline icons for each layer. Does nothing if OSGeo.MapGuide.MaestroAPI.Commands.RuntimeMapRequest.LayersAndGroups is not included in the mask LayersAndGroups Include layer and group structure None No features"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.Commands | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.Commands Classes CachedFdoConnection Represents information about a cached FDO connection CachedProviderInfo Represents the cache status of connections for a particular provider ConfigurationSettings Represents the FDO cache configuration DefaultApplySchemaCommand<TConn> A default implementation of IApplySchema . This class is reserved for connection provider use DefaultCommand<TConn> A default implementation of ICommand . This class is reserved for connection provider use DefaultCreateDataStoreCommand<TConn> A default implementation of IApplySchema . Reserved for connection provider use DefaultDeleteCommand<TConn> A default implementation of IDeleteFeatures . This class is reserved for connection provider use DefaultFeatureCommand<TConn> A default implementation of the IFeatureCommand . This class is reserved for connection provider use DefaultInsertCommand<TConn> A default implementation of IInsertFeatures . This class is reserved for connection provider use DefaultUpdateCommand<TConn> A default implementation of IUpdateFeatures . This class is reserved for connection provider use FdoCacheInfo Represents the cache status of FDO connections currently managed by the MapGuide Server InsertResult The result of a Execute() operation Interfaces IApplySchema Defines a command that applies the given Feature Schema to a Feature Source IBatchInsertFeatures Defines a command that inserts a series of features into a Feature Source ICommand The base interface of all custom commands ICreateDataStore Defines a command that creates a file-based data store on a given feature source ICreateRuntimeMap A command that creates a runtime map from the given Map Definition IDeleteFeatures Defines a command that deletes one or more features in a Feature Source based on some filtering criteria IDescribeRuntimeMap Describes the structure of an existing runtime map IFeatureCommand Defines a command that works against a Feature Class of a Feature Source IGetFdoCacheInfo Defines the command for querying the cache status of FDO connections IGetResourceContents Defines a command to get a set of resource contents in a single batch IGetTileProviders A command that enumerates the list of registered tile set providers IInsertFeatures Defines a command that inserts a feature into a Feature Source IUpdateFeatures Defines a command that updates one or more features in a Feature Source based on some filtering criteria Enums CommandType Defines the custom command types RuntimeMapRequestedFeatures A bitmask that defines what information to include in a CreateRuntimeMap or DescribeRuntimeMap response."
  },
  "api/OSGeo.MapGuide.MaestroAPI.ConnectionProviderEntry.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.ConnectionProviderEntry.html",
    "title": "Class ConnectionProviderEntry | MapGuide Maestro",
    "keywords": "Class ConnectionProviderEntry Represents an entry in the Connection Provider Registry Inheritance System.Object ConnectionProviderEntry Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public class ConnectionProviderEntry Properties AssemblyPath Gets the path of the assembly containing the provider implementation Declaration public string AssemblyPath { get; } Property Value Type Description System.String Description Gets or sets the description. Declaration public string Description { get; } Property Value Type Description System.String The description. HasGlobalState Gets whether this provider has global connection state. This effectively indicates that subsequent connections after the first one created for this provider will re-use the same connection information and may/will disregard that values of the connection parameters you pass in Declaration public bool HasGlobalState { get; } Property Value Type Description System.Boolean IsMultiPlatform Gets or sets a value indicating whether this instance is multi platform. Declaration public bool IsMultiPlatform { get; } Property Value Type Description System.Boolean true if this instance is multi platform; otherwise, false . Name Gets or sets the name. Declaration public string Name { get; } Property Value Type Description System.String The name."
  },
  "api/OSGeo.MapGuide.MaestroAPI.ConnectionProviderRegistry.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.ConnectionProviderRegistry.html",
    "title": "Class ConnectionProviderRegistry | MapGuide Maestro",
    "keywords": "Class ConnectionProviderRegistry The entry point of the Maestro API. The ConnectionProviderRegistry is used to create IServerConnection objects. IServerConnection is the root object of the Maestro API, and is where most of the functionality provided by this API is accessed from. The ConnectionProviderRegistry supports dynamic creation of IServerConnection objects given a provider name and a connection string, which specifies the initialization parameters of the connection. The connection providers are defined in an XML file called ConnectionProviders.xml which contains all the registered providers. Each provider has the following properties: The name of the provider The assembly containing the IServerConnection implementation The name of this IServerConnection implementation The IServerConnection implementation is expected to have a non-public constructor which takes a single parameter, a containing the initialization parameters parsed from the given connection string. Inheritance System.Object ConnectionProviderRegistry Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public static class ConnectionProviderRegistry Examples This example shows how to create a http-based MapGuide Server connection to the server's mapagent interface. using OSGeo.MapGuide.MaestroAPI; ... IServerConnection conn = ConnectionProviderRegistry.CreateConnection(\"Maestro.Http\", \"Url\", \"http://localhost/mapguide/mapagent/mapagent.fcgi\", \"Username\", \"Administrator\", \"Password\", \"admin\"); This example shows how to create a TCP/IP connection that wraps the official MapGuide API using OSGeo.MapGuide.MaestroAPI; ... IServerConnection conn = ConnectionProviderRegistry.CreateConnection(\"Maestro.LocalNative\", \"ConfigFile\", \"webconfig.ini\", \"Username\", \"Administrator\", \"Password\", \"admin\"); Methods CreateConnection(String, NameValueCollection) Creates an initialized IServerConnection object given the provider name and the initalization parameters Declaration public static IServerConnection CreateConnection(string provider, NameValueCollection connInitParams) Parameters Type Name Description System.String provider NameValueCollection connInitParams Returns Type Description IServerConnection CreateConnection(String, String) Creates an initialized IServerConnection object given the provider name and connection string Declaration public static IServerConnection CreateConnection(string provider, string connectionString) Parameters Type Name Description System.String provider System.String connectionString Returns Type Description IServerConnection Remarks The Maestro.Local provider (that wraps mg-desktop) and Maestro.LocalNative providers (that wraps the official MapGuide API) are unique in that it has global connection state. What this means is that subsequent connections after the first one for these providers may re-use existing state for the first connection. The reason for this is that creating this connection internally calls MgdPlatform.Initialize(iniFile) and MapGuideApi.MgInitializeWebTier(iniFile) respectively, that initializes the necessary library parameters in the process space of your application. Creating another connection will call MgdPlatform.Initialize and MapGuideApi.MgInitializeWebTier again, but these methods are by-design only made to be called once as subsequent calls are returned immediately. Basically, the connection parameters you pass in are for initializing the provider the first time round. Subsequent calls may not (most likely will not) respect the values of your connection parameters. You can programmatically check this via the HasGlobalState property CreateConnection(String, String[]) Creates an initialized IServerConnection object given the provider name and the initalization parameters. Declaration public static IServerConnection CreateConnection(string provider, params string[] initParameters) Parameters Type Name Description System.String provider System.String [] initParameters A variable list of initialization parameters. They must be specified in the form: [Param1], [Value1], [Param2], [Value2], etc Returns Type Description IServerConnection FindProvider(String) Gets the entry for the given connection provider name Declaration public static ConnectionProviderEntry FindProvider(string provider) Parameters Type Name Description System.String provider Returns Type Description ConnectionProviderEntry GetInvocationCount(String) Gets the invocation count for the given provider (the number of times a connection has been created for that provider) Declaration public static int GetInvocationCount(string provider) Parameters Type Name Description System.String provider Returns Type Description System.Int32 The invocation count for the given provider. -1 if the provider is not registered or does not exist Remarks This (in conjunction with the HasGlobalState property) can be used to programmatically determine if creating a connection for a given provider will respect the connection parameter values you pass to it. (0 calls will respect your parameter values. 1 or more will not) GetProviders() Gets a list of registered provider names. The returned names are in upper-case. Declaration public static ConnectionProviderEntry[] GetProviders() Returns Type Description ConnectionProviderEntry [] InitRegistry(String) Initializes the connection provider registry. You only need to do this if you intend to load connections from providers registered in ConnectionProviders.xml The HTTP connection provider is built-in and does not require calling this method first Declaration public static void InitRegistry(string dir = null) Parameters Type Name Description System.String dir The path to the directory containing ConnectionProviders.xml ParseConnectionString(String) Parses the given Maestro connection string into a System.Collections.Specialized.NameValueCollection Declaration public static NameValueCollection ParseConnectionString(string connectionString) Parameters Type Name Description System.String connectionString Returns Type Description NameValueCollection RegisterProvider(ConnectionProviderEntry, ConnectionFactoryMethod) Registers a new connection provider Declaration public static void RegisterProvider(ConnectionProviderEntry entry, ConnectionFactoryMethod method) Parameters Type Name Description ConnectionProviderEntry entry The provider entry. ConnectionFactoryMethod method The factory method."
  },
  "api/OSGeo.MapGuide.MaestroAPI.CrossConnection.RebaseOptions.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.CrossConnection.RebaseOptions.html",
    "title": "Class RebaseOptions | MapGuide Maestro",
    "keywords": "Class RebaseOptions Resource re-basing options Inheritance System.Object RebaseOptions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.CrossConnection Assembly : cs.temp.dll.dll Syntax public class RebaseOptions Constructors RebaseOptions(String, String) Initializes a new instance of the RebaseOptions class. Declaration public RebaseOptions(string sourceFolder, string targetFolder) Parameters Type Name Description System.String sourceFolder The source folder. System.String targetFolder The target folder. Properties SourceFolder The source folder to look for in resource ids Declaration public string SourceFolder { get; } Property Value Type Description System.String TargetFolder The target folder to replace with Declaration public string TargetFolder { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.CrossConnection.ResourceMigrator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.CrossConnection.ResourceMigrator.html",
    "title": "Class ResourceMigrator | MapGuide Maestro",
    "keywords": "Class ResourceMigrator A helper class that copies/moves resources from one connection to another Inheritance System.Object ResourceMigrator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.CrossConnection Assembly : cs.temp.dll.dll Syntax public class ResourceMigrator Examples This example shows how to copy resources from one connection to another using the ResourceMigrator class IServerConnection sourceConn; IServerConnection targetConn; ... ResourceMigrator migrator = new ResourceMigrator(sourceConn, targetConn); //These are the source resource ids to copy string [] sourceIds = new string[] { \"Library://Samples/Sheboyan/Data/Parcels.FeatureSource\", \"Library://Samples/Sheboyan/Data/Rail.FeatureSource\", \"Library://Samples/Sheboyan/Data/Islands.FeatureSource\", \"Library://Samples/Sheboyan/Data/Buildings.FeatureSource\" }; //These the the target ids we are copying to. The number of source and //target ids must be the same string [] targetIds = new string[] { \"Library://Production/Data/Parcels.FeatureSource\", \"Library://Production/Data/Rail.FeatureSource\", \"Library://Production/Data/Islands.FeatureSource\", \"Library://Production/Data/Buildings.FeatureSource\" }; //Set up the re-base options. This is generally the common parent of the source and target ids. //This is to ensure that any resource ids references are updated as they are copied across RebaseOptions options = new RebaseOptions(\"Library://Samples/Sheboygan/\", \"Library://Production/\"); bool bOverwrite = true; //Execute the migration string [] copied = migrator.CopyResources(sourceIds, targetIds, bOverwrite, options, null); Constructors ResourceMigrator(IServerConnection, IServerConnection) Initializes a new instance of the ResourceMigrator class. Declaration public ResourceMigrator(IServerConnection source, IServerConnection target) Parameters Type Name Description IServerConnection source The source. IServerConnection target The target. Properties Source Gets the source connection Declaration public IServerConnection Source { get; } Property Value Type Description IServerConnection Target Gets the target connection Declaration public IServerConnection Target { get; } Property Value Type Description IServerConnection Methods CopyResources(String[], String, Boolean, LengthyOperationProgressCallBack) Copies resources from the source connection to another connection. The resources in question will be copied to the specified folder. Folder structure of the source is discarded Declaration public int CopyResources(string[] resourceIds, string folderId, bool overwrite, LengthyOperationProgressCallBack callback) Parameters Type Name Description System.String [] resourceIds System.String folderId System.Boolean overwrite LengthyOperationProgressCallBack callback Returns Type Description System.Int32 CopyResources(String[], String[], Boolean, RebaseOptions, LengthyOperationProgressCallBack) Copies resource from the source connection to another connection. Declaration public string[] CopyResources(string[] sourceResourceIds, string[] targetResourceIds, bool overwrite, RebaseOptions options, LengthyOperationProgressCallBack callback) Parameters Type Name Description System.String [] sourceResourceIds The array of source resource ids System.String [] targetResourceIds The array of target resource ids to copy to. Each resource id in the source array will be copied to the corresponding resource id in the target array System.Boolean overwrite Indicates whether to overwrite RebaseOptions options Re-base options LengthyOperationProgressCallBack callback Returns Type Description System.String [] MigrateResource(String, Boolean, LengthyOperationProgressCallBack) Shortcut API to migrate a specific resource to the target connection. Dependent resources are automatically migrated as well. This copies all dependent resources of the specified resource. Declaration public string[] MigrateResource(string resourceId, bool overwrite, LengthyOperationProgressCallBack callback) Parameters Type Name Description System.String resourceId The id of the resource to migrate System.Boolean overwrite If true, all dependent resources that already exist in the target connection are overwritten, otherwise these are not copied over LengthyOperationProgressCallBack callback A callback method to indicate progress Returns Type Description System.String [] An array of resource ids that were succesfully migrated MigrateResource(String, String[], Boolean, LengthyOperationProgressCallBack) Migrates a specific resource (and its dependent resources) to the target connection Declaration public string[] MigrateResource(string resourceId, string[] dependentResourceIds, bool overwrite, LengthyOperationProgressCallBack callback) Parameters Type Name Description System.String resourceId The id of the resource to migrate System.String [] dependentResourceIds The array of dependent resource ids System.Boolean overwrite If true, all dependent resources that already exist in the target connection are overwritten, otherwise these are not copied over LengthyOperationProgressCallBack callback A callback method to indicate progress Returns Type Description System.String [] An array of resource ids that were succesfully migrated MoveResources(String[], String, Boolean, LengthyOperationProgressCallBack) Moves resources from the source connection to the specified folder on the target connection. Folder structure of the source is discarded Declaration public int MoveResources(string[] resourceIds, string folderId, bool overwrite, LengthyOperationProgressCallBack callback) Parameters Type Name Description System.String [] resourceIds System.String folderId System.Boolean overwrite LengthyOperationProgressCallBack callback Returns Type Description System.Int32"
  },
  "api/OSGeo.MapGuide.MaestroAPI.CrossConnection.ResourceRebaser.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.CrossConnection.ResourceRebaser.html",
    "title": "Class ResourceRebaser | MapGuide Maestro",
    "keywords": "Class ResourceRebaser A helper class to re-base referenced resource ids in a resource document Inheritance System.Object ResourceRebaser Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.CrossConnection Assembly : cs.temp.dll.dll Syntax public class ResourceRebaser Examples How to use the ResourceRebaser IServerConnection conn; ... IResource layerDef = conn.ResourceService.GetResource(\"Library://Test/Sample.LayerDefinition\"); var rebaser = new ResourceRebaser(layerDef); //Change all resource id references within to point to the new parent location rebaser.Rebase(\"Library://Test/\", \"Library://Rebased/\"); Constructors ResourceRebaser(IResource) Initializes a new instance of the ResourceRebaser class. Declaration public ResourceRebaser(IResource res) Parameters Type Name Description IResource res The res. Methods Rebase(String, String) Re-bases any resource id references in the resource document Declaration public IResource Rebase(string sourceRoot, string targetRoot) Parameters Type Name Description System.String sourceRoot System.String targetRoot Returns Type Description IResource A re-based copy of the original resource"
  },
  "api/OSGeo.MapGuide.MaestroAPI.CrossConnection.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.CrossConnection.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.CrossConnection | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.CrossConnection Classes RebaseOptions Resource re-basing options ResourceMigrator A helper class that copies/moves resources from one connection to another ResourceRebaser A helper class to re-base referenced resource ids in a resource document"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Exceptions.SerializationException.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Exceptions.SerializationException.html",
    "title": "Class SerializationException | MapGuide Maestro",
    "keywords": "Class SerializationException Indicates an error during the serialization process Inheritance System.Object MaestroException SerializationException Namespace : OSGeo.MapGuide.MaestroAPI.Exceptions Assembly : cs.temp.dll.dll Syntax [Serializable] public class SerializationException : MaestroException Constructors SerializationException() Initializes a new instance of the SerializationException class. Declaration public SerializationException() SerializationException(SerializationInfo, StreamingContext) Initializes a new instance of the SerializationException class. Declaration protected SerializationException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Exceptions Type Condition System.ArgumentNullException The info parameter is null. System.Runtime.Serialization.SerializationException The class name is null or System.Exception.HResult is zero (0). SerializationException(String) Initializes a new instance of the SerializationException class. Declaration public SerializationException(string message) Parameters Type Name Description System.String message The message. SerializationException(String, Exception) Initializes a new instance of the SerializationException class. Declaration public SerializationException(string message, Exception inner) Parameters Type Name Description System.String message The message. Exception inner The inner."
  },
  "api/OSGeo.MapGuide.MaestroAPI.Exceptions.UnsupportedResourceTypeException.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Exceptions.UnsupportedResourceTypeException.html",
    "title": "Class UnsupportedResourceTypeException | MapGuide Maestro",
    "keywords": "Class UnsupportedResourceTypeException Used to indicate a resource type is not supported for a connection Inheritance System.Object MaestroException UnsupportedResourceTypeException Namespace : OSGeo.MapGuide.MaestroAPI.Exceptions Assembly : cs.temp.dll.dll Syntax [Serializable] public class UnsupportedResourceTypeException : MaestroException Constructors UnsupportedResourceTypeException(SerializationInfo, StreamingContext) Initializes a new instance of the UnsupportedResourceTypeException class. Declaration protected UnsupportedResourceTypeException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Exceptions Type Condition System.ArgumentNullException The info parameter is null. System.Runtime.Serialization.SerializationException The class name is null or System.Exception.HResult is zero (0). UnsupportedResourceTypeException(String) Initializes a new instance of the UnsupportedResourceTypeException class. Declaration public UnsupportedResourceTypeException(string rt) Parameters Type Name Description System.String rt The resource type. UnsupportedResourceTypeException(String, String) Initializes a new instance of the UnsupportedResourceTypeException class. Declaration public UnsupportedResourceTypeException(string rt, string message) Parameters Type Name Description System.String rt The resource type. System.String message The message. UnsupportedResourceTypeException(String, String, Exception) Initializes a new instance of the UnsupportedResourceTypeException class. Declaration public UnsupportedResourceTypeException(string rt, string message, Exception inner) Parameters Type Name Description System.String rt The resource type. System.String message The message. Exception inner The inner. Properties ResourceType Gets or sets the type of the resource. Declaration public string ResourceType { get; } Property Value Type Description System.String The type of the resource."
  },
  "api/OSGeo.MapGuide.MaestroAPI.Exceptions.UnsupportedServiceTypeException.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Exceptions.UnsupportedServiceTypeException.html",
    "title": "Class UnsupportedServiceTypeException | MapGuide Maestro",
    "keywords": "Class UnsupportedServiceTypeException Exception that is thrown when an attempt is made to get a service which is not supported by the connection Inheritance System.Object MaestroException UnsupportedServiceTypeException Namespace : OSGeo.MapGuide.MaestroAPI.Exceptions Assembly : cs.temp.dll.dll Syntax [Serializable] public class UnsupportedServiceTypeException : MaestroException Constructors UnsupportedServiceTypeException(ServiceType) Initializes a new instance of the UnsupportedServiceTypeException class. Declaration public UnsupportedServiceTypeException(ServiceType st) Parameters Type Name Description ServiceType st The st. UnsupportedServiceTypeException(ServiceType, String) Initializes a new instance of the UnsupportedServiceTypeException class. Declaration public UnsupportedServiceTypeException(ServiceType st, string message) Parameters Type Name Description ServiceType st The st. System.String message The message. UnsupportedServiceTypeException(ServiceType, String, Exception) Initializes a new instance of the UnsupportedServiceTypeException class. Declaration public UnsupportedServiceTypeException(ServiceType st, string message, Exception inner) Parameters Type Name Description ServiceType st The st. System.String message The message. Exception inner The inner. UnsupportedServiceTypeException(SerializationInfo, StreamingContext) Initializes a new instance of the UnsupportedServiceTypeException class. Declaration protected UnsupportedServiceTypeException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Exceptions Type Condition System.ArgumentNullException The info parameter is null. System.Runtime.Serialization.SerializationException The class name is null or System.Exception.HResult is zero (0). Properties ServiceType Gets or sets the type of the service. Declaration public ServiceType ServiceType { get; } Property Value Type Description ServiceType The type of the service."
  },
  "api/OSGeo.MapGuide.MaestroAPI.Exceptions.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Exceptions.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.Exceptions | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.Exceptions Classes CustomPropertyNotFoundException An exception that is thrown when attempting to get or set a custom connection property that is not defined DuplicateKeyException Raised when an item with an pre-existing key is being added to a collection ExpressionException Thrown when evaluating an expression fails MaestroException Represents the base class of all exceptions that can be thrown from the Maestro API NestedExceptionMessageProcessor Helper class to process exception messages for exceptions that may contain one or more nested inner exceptions NullExtentException Thrown when no result exists for a extent query ResourceConversionException Used to indicate failures in resource upgrades/downgrades SerializationException Indicates an error during the serialization process UnsupportedResourceTypeException Used to indicate a resource type is not supported for a connection UnsupportedServiceTypeException Exception that is thrown when an attempt is made to get a service which is not supported by the connection"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.DoubleValue.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.DoubleValue.html",
    "title": "Class DoubleValue | MapGuide Maestro",
    "keywords": "Class DoubleValue Stores double data Inheritance System.Object PropertyValue ValueTypePropertyValue < System.Double > DoubleValue Inherited Members ValueTypePropertyValue<Double>.IsNull ValueTypePropertyValue<Double>.Value ValueTypePropertyValue<Double>.SetNull() ValueTypePropertyValue<Double>.PropertyDefType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class DoubleValue : ValueTypePropertyValue<double> Constructors DoubleValue() Initializes a new instance Declaration public DoubleValue() DoubleValue(Double) Initializes a new instance Declaration public DoubleValue(double value) Parameters Type Name Description System.Double value Properties Type Gets the type. Declaration public override PropertyValueType Type { get; } Property Value Type Description PropertyValueType Overrides PropertyValue.Type Methods ValueAsString() Gets the value as a string Declaration public override string ValueAsString() Returns Type Description System.String Overrides PropertyValue.ValueAsString()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.FeatureArrayReader.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.FeatureArrayReader.html",
    "title": "Class FeatureArrayReader | MapGuide Maestro",
    "keywords": "Class FeatureArrayReader A subclass of FeatureReaderBase that iterates over an array of IFeature instances Inheritance System.Object ReaderBase FeatureReaderBase FeatureArrayReader Implements IFeatureReader IReader IDisposable IFeature IRecord IEnumerable < IFeature > Inherited Members FeatureReaderBase.ClassDefinition FeatureReaderBase.GetFeatureObject(String) FeatureReaderBase.GetFeatureObject(Int32) FeatureReaderBase.GetName(Int32) FeatureReaderBase.GetFieldType(Int32) FeatureReaderBase.ReaderType FeatureReaderBase.ReadNextRecord() FeatureReaderBase.GetEnumerator() ReaderBase.Current ReaderBase.FieldCount ReaderBase.ReadNext() ReaderBase.Dispose() ReaderBase.Dispose(Boolean) ReaderBase.IsNull(String) ReaderBase.IsNull(Int32) ReaderBase.GetBoolean(String) ReaderBase.GetByte(String) ReaderBase.GetBlob(String) ReaderBase.GetClob(String) ReaderBase.GetDouble(String) ReaderBase.GetDateTime(String) ReaderBase.GetInt16(String) ReaderBase.GetInt32(String) ReaderBase.GetInt64(String) ReaderBase.GetSingle(String) ReaderBase.GetString(String) ReaderBase.GetGeometry(String) ReaderBase.GetBoolean(Int32) ReaderBase.GetByte(Int32) ReaderBase.GetBlob(Int32) ReaderBase.GetClob(Int32) ReaderBase.GetDouble(Int32) ReaderBase.GetDateTime(Int32) ReaderBase.GetInt16(Int32) ReaderBase.GetInt32(Int32) ReaderBase.GetInt64(Int32) ReaderBase.GetSingle(Int32) ReaderBase.GetString(Int32) ReaderBase.GetGeometry(Int32) ReaderBase.Item[Int32] ReaderBase.Item[String] System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class FeatureArrayReader : FeatureReaderBase, IFeatureReader, IReader, IDisposable, IFeature, IRecord, IEnumerable<IFeature> Constructors FeatureArrayReader(IFeature[]) Initializes a new instance of the FeatureArrayReader class. Declaration public FeatureArrayReader(IFeature[] features) Parameters Type Name Description IFeature [] features The features. Methods Close() Closes the object, freeing any resources it may be holding. Declaration public override void Close() Overrides ReaderBase.Close() GetPropertyType(Int32) Gets the property value type for the property at the specified index Declaration public override PropertyValueType GetPropertyType(int index) Parameters Type Name Description System.Int32 index Returns Type Description PropertyValueType Overrides ReaderBase.GetPropertyType(Int32) GetPropertyType(String) Gets the property value type for the property of the specified name Declaration public override PropertyValueType GetPropertyType(string name) Parameters Type Name Description System.String name Returns Type Description PropertyValueType Overrides ReaderBase.GetPropertyType(String) ReadNextFeature() Reads the next feature. Declaration protected override IFeature ReadNextFeature() Returns Type Description IFeature Overrides FeatureReaderBase.ReadNextFeature() Implements IFeatureReader IReader IDisposable IFeature IRecord IEnumerable<>"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.FeatureBase.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.FeatureBase.html",
    "title": "Class FeatureBase | MapGuide Maestro",
    "keywords": "Class FeatureBase Base implementation of the IFeature interface Inheritance System.Object RecordBase FeatureBase Implements IRecordReset IRecordInitialize IFeature IRecord Inherited Members RecordBase._values RecordBase._ordinalMap RecordBase.GetValue(String) RecordBase.PropertyExists(String) RecordBase.PutValue(String, PropertyValue) RecordBase.IsNull(String) RecordBase.IsNull(Int32) RecordBase.GetBoolean(String) RecordBase.GetByte(String) RecordBase.GetBlob(String) RecordBase.GetClob(String) RecordBase.GetDouble(String) RecordBase.GetDateTime(String) RecordBase.GetFeatureObject(String) RecordBase.GetInt16(String) RecordBase.GetInt32(String) RecordBase.GetInt64(String) RecordBase.GetSingle(String) RecordBase.GetString(String) RecordBase.GetGeometry(String) RecordBase.GetBoolean(Int32) RecordBase.GetByte(Int32) RecordBase.GetBlob(Int32) RecordBase.GetClob(Int32) RecordBase.GetDouble(Int32) RecordBase.IRecord.GetDateTime(Int32) RecordBase.GetFeatureObject(Int32) RecordBase.GetInt16(Int32) RecordBase.GetInt32(Int32) RecordBase.GetInt64(Int32) RecordBase.GetSingle(Int32) RecordBase.GetString(Int32) RecordBase.GetGeometry(Int32) RecordBase.Item[Int32] RecordBase.Item[String] RecordBase.FieldCount RecordBase.GetName(Int32) RecordBase.GetFieldType(Int32) RecordBase.Update(IRecord) RecordBase.PropertyNames RecordBase.GetPropertyType(String) RecordBase.GetPropertyType(Int32) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class FeatureBase : RecordBase, IRecordReset, IRecordInitialize, IFeature, IRecord Constructors FeatureBase(ClassDefinition) Initializes a new instance of the FeatureBase class. Declaration public FeatureBase(ClassDefinition clsDef) Parameters Type Name Description ClassDefinition clsDef The class definition. Properties ClassDefinition Gets the class definition of the object currently being read. If the user has requested only a subset of the class properties (as specified in the filter text), the class definition reflects what the user has requested, rather than the full class definition. Declaration public ClassDefinition ClassDefinition { get; } Property Value Type Description ClassDefinition Implements IRecordReset IRecordInitialize IFeature IRecord"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.FeatureReaderBase.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.FeatureReaderBase.html",
    "title": "Class FeatureReaderBase | MapGuide Maestro",
    "keywords": "Class FeatureReaderBase Base implementation of the IFeatureReader interface Inheritance System.Object ReaderBase FeatureReaderBase FeatureArrayReader Implements IFeatureReader IReader IDisposable IFeature IRecord IEnumerable < IFeature > Inherited Members ReaderBase.Current ReaderBase.FieldCount ReaderBase.ReadNext() ReaderBase.Close() ReaderBase.Dispose() ReaderBase.Dispose(Boolean) ReaderBase.IsNull(String) ReaderBase.IsNull(Int32) ReaderBase.GetBoolean(String) ReaderBase.GetByte(String) ReaderBase.GetBlob(String) ReaderBase.GetClob(String) ReaderBase.GetDouble(String) ReaderBase.GetDateTime(String) ReaderBase.GetInt16(String) ReaderBase.GetInt32(String) ReaderBase.GetInt64(String) ReaderBase.GetSingle(String) ReaderBase.GetString(String) ReaderBase.GetGeometry(String) ReaderBase.GetBoolean(Int32) ReaderBase.GetByte(Int32) ReaderBase.GetBlob(Int32) ReaderBase.GetClob(Int32) ReaderBase.GetDouble(Int32) ReaderBase.GetDateTime(Int32) ReaderBase.GetInt16(Int32) ReaderBase.GetInt32(Int32) ReaderBase.GetInt64(Int32) ReaderBase.GetSingle(Int32) ReaderBase.GetString(Int32) ReaderBase.GetGeometry(Int32) ReaderBase.Item[Int32] ReaderBase.Item[String] ReaderBase.GetPropertyType(String) ReaderBase.GetPropertyType(Int32) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public abstract class FeatureReaderBase : ReaderBase, IFeatureReader, IReader, IDisposable, IFeature, IRecord, IEnumerable<IFeature> Properties ClassDefinition Gets the class definition of the object currently being read. If the user has requested only a subset of the class properties (as specified in the filter text), the class definition reflects what the user has requested, rather than the full class definition. Declaration public ClassDefinition ClassDefinition { get; protected set; } Property Value Type Description ClassDefinition ReaderType Gets the type of the reader. Declaration public override ReaderType ReaderType { get; } Property Value Type Description ReaderType The type of the reader. Overrides ReaderBase.ReaderType Methods GetEnumerator() Returns an enumerator that iterates through the collection. Declaration public IEnumerator<IFeature> GetEnumerator() Returns Type Description IEnumerator < IFeature > A System.Collections.Generic.IEnumerator`1 that can be used to iterate through the collection. GetFeatureObject(Int32) Gets a IFeatureReader containing all the nested features at the specified index Declaration public IFeatureReader GetFeatureObject(int index) Parameters Type Name Description System.Int32 index Returns Type Description IFeatureReader GetFeatureObject(String) Gets a IFeatureReader containing all the nested features of the specified property Declaration public IFeatureReader GetFeatureObject(string name) Parameters Type Name Description System.String name Returns Type Description IFeatureReader GetFieldType(Int32) Gets the CLR type of the field at the specified index Declaration public override Type GetFieldType(int i) Parameters Type Name Description System.Int32 i Returns Type Description Type Overrides ReaderBase.GetFieldType(Int32) GetName(Int32) Gets the name of the field at the specified index Declaration public override string GetName(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.String Overrides ReaderBase.GetName(Int32) ReadNextFeature() Reads the next feature. Declaration protected abstract IFeature ReadNextFeature() Returns Type Description IFeature ReadNextRecord() Reads the next record. Declaration protected override IRecord ReadNextRecord() Returns Type Description IRecord Overrides ReaderBase.ReadNextRecord() Implements IFeatureReader IReader IDisposable IFeature IRecord IEnumerable<>"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.Int64Value.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.Int64Value.html",
    "title": "Class Int64Value | MapGuide Maestro",
    "keywords": "Class Int64Value Stores int64 data Inheritance System.Object PropertyValue ValueTypePropertyValue < System.Int64 > Int64Value Inherited Members ValueTypePropertyValue<Int64>.IsNull ValueTypePropertyValue<Int64>.Value ValueTypePropertyValue<Int64>.SetNull() ValueTypePropertyValue<Int64>.PropertyDefType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class Int64Value : ValueTypePropertyValue<long> Constructors Int64Value() Initializes a new instance Declaration public Int64Value() Int64Value(Int64) Initializes a new instance Declaration public Int64Value(long value) Parameters Type Name Description System.Int64 value Properties Type Gets the type. Declaration public override PropertyValueType Type { get; } Property Value Type Description PropertyValueType Overrides PropertyValue.Type Methods ValueAsString() Gets the value as a string Declaration public override string ValueAsString() Returns Type Description System.String Overrides PropertyValue.ValueAsString()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.IReader.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.IReader.html",
    "title": "Interface IReader | MapGuide Maestro",
    "keywords": "Interface IReader Provides a forward-only, read-only iterator for reading data. You must call ReadNext() before you can access any data Inherited Members IRecord.FieldCount IRecord.GetName(Int32) IRecord.GetFieldType(Int32) IRecord.IsNull(String) IRecord.IsNull(Int32) IRecord.GetBoolean(String) IRecord.GetByte(String) IRecord.GetBlob(String) IRecord.GetClob(String) IRecord.GetDouble(String) IRecord.GetDateTime(String) IRecord.GetInt16(String) IRecord.GetInt32(String) IRecord.GetInt64(String) IRecord.GetSingle(String) IRecord.GetString(String) IRecord.GetGeometry(String) IRecord.GetBoolean(Int32) IRecord.GetByte(Int32) IRecord.GetBlob(Int32) IRecord.GetClob(Int32) IRecord.GetDouble(Int32) IRecord.GetDateTime(Int32) IRecord.GetInt16(Int32) IRecord.GetInt32(Int32) IRecord.GetInt64(Int32) IRecord.GetSingle(Int32) IRecord.GetString(Int32) IRecord.GetGeometry(Int32) IRecord.Item[Int32] IRecord.Item[String] IRecord.GetPropertyType(String) IRecord.GetPropertyType(Int32) Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public interface IReader : IDisposable, IRecord Remarks You must call ReadNext before you can access the data For each property, determine the property type and then call the appropriate Get<type>() method to get the value of the property. The exception for this is if you are access the value via the indexer. In this case you only need determine the property type when casting from the System.Object that is returned by the indexer Methods Close() Closes the object, freeing any resources it may be holding. Declaration void Close() ReadNext() Advances the reader to the next item and determines whether there is another object to read. Declaration bool ReadNext() Returns Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.IRecord.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.IRecord.html",
    "title": "Interface IRecord | MapGuide Maestro",
    "keywords": "Interface IRecord Provides access to the property values within each result for a IReader Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public interface IRecord Remarks For each property, determine the property type and then call the appropriate Get<type>() method to get the value of the property. The exception for this is if you are access the value via the indexer. In this case you only need determine the property type when casting from the System.Object that is returned by the indexer Properties FieldCount Gets the number of fields in this record Declaration int FieldCount { get; } Property Value Type Description System.Int32 Item[Int32] Gets the object at the specified index Declaration object this[int index] { get; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Object Item[String] Gets the object value for the specified property Declaration object this[string name] { get; } Parameters Type Name Description System.String name Property Value Type Description System.Object Methods GetBlob(Int32) Gets the blob value at the specified index Declaration byte[] GetBlob(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Byte [] GetBlob(String) Gets the blob value of the specified property Declaration byte[] GetBlob(string name) Parameters Type Name Description System.String name Returns Type Description System.Byte [] GetBoolean(Int32) Gets the boolean value at the specified index Declaration bool GetBoolean(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Boolean GetBoolean(String) Gets the boolean value of the specified property Declaration bool GetBoolean(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean GetByte(Int32) Gets the byte value at the specified index Declaration byte GetByte(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Byte GetByte(String) Gets the byte value of the specified property Declaration byte GetByte(string name) Parameters Type Name Description System.String name Returns Type Description System.Byte GetClob(Int32) Gets the clob value at the specified index Declaration char[] GetClob(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Char [] GetClob(String) Gets the clob value of the specified property Declaration char[] GetClob(string name) Parameters Type Name Description System.String name Returns Type Description System.Char [] GetDateTime(Int32) Gets the datetime value at the specified index Declaration DateTime GetDateTime(int index) Parameters Type Name Description System.Int32 index Returns Type Description DateTime GetDateTime(String) Gets the datetime value of the specified property Declaration DateTime GetDateTime(string name) Parameters Type Name Description System.String name Returns Type Description DateTime GetDouble(Int32) Gets the double value at the specified index Declaration double GetDouble(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Double GetDouble(String) Gets the double value of the specified property Declaration double GetDouble(string name) Parameters Type Name Description System.String name Returns Type Description System.Double GetFieldType(Int32) Gets the CLR type of the field at the specified index Declaration Type GetFieldType(int i) Parameters Type Name Description System.Int32 i Returns Type Description Type GetGeometry(Int32) Gets the geometry value at the specified index Declaration IGeometryRef GetGeometry(int index) Parameters Type Name Description System.Int32 index Returns Type Description IGeometryRef GetGeometry(String) Gets the geometry value of the specified property Declaration IGeometryRef GetGeometry(string name) Parameters Type Name Description System.String name Returns Type Description IGeometryRef GetInt16(Int32) Gets the int16 value at the specified index Declaration short GetInt16(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Int16 GetInt16(String) Gets the int16 value of the specified property Declaration short GetInt16(string name) Parameters Type Name Description System.String name Returns Type Description System.Int16 GetInt32(Int32) Gets the int32 value at the specified index Declaration int GetInt32(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Int32 GetInt32(String) Gets the int32 value of the specified property Declaration int GetInt32(string name) Parameters Type Name Description System.String name Returns Type Description System.Int32 GetInt64(Int32) Gets the int64 value at the specified index Declaration long GetInt64(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Int64 GetInt64(String) Gets the int64 value of the specified property Declaration long GetInt64(string name) Parameters Type Name Description System.String name Returns Type Description System.Int64 GetName(Int32) Gets the name of the field at the specified index Declaration string GetName(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.String GetPropertyType(Int32) Gets the type of the property at the specified index. Declaration PropertyValueType GetPropertyType(int index) Parameters Type Name Description System.Int32 index The index. Returns Type Description PropertyValueType GetPropertyType(String) Gets the type of the property. Declaration PropertyValueType GetPropertyType(string name) Parameters Type Name Description System.String name The name. Returns Type Description PropertyValueType GetSingle(Int32) Gets the single value at the specified index Declaration float GetSingle(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Single GetSingle(String) Gets the single value of the specified property Declaration float GetSingle(string name) Parameters Type Name Description System.String name Returns Type Description System.Single GetString(Int32) Gets the string value at the specified index Declaration string GetString(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.String GetString(String) Gets the string value of the specified property Declaration string GetString(string name) Parameters Type Name Description System.String name Returns Type Description System.String IsNull(Int32) Gets whether the property value at the specified index has a null property value. You must call this method first to determine if it is safe to call the corresponding GetXXX() methods Declaration bool IsNull(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Boolean IsNull(String) Gets whether the specified property name has a null property value Declaration bool IsNull(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.IRecordInitialize.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.IRecordInitialize.html",
    "title": "Interface IRecordInitialize | MapGuide Maestro",
    "keywords": "Interface IRecordInitialize Provides a means for initializing a IRecord instance with PropertyValue instances Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public interface IRecordInitialize Properties PropertyNames Gets the property names. Declaration IEnumerable<string> PropertyNames { get; } Property Value Type Description IEnumerable < System.String > Methods GetValue(String) Gets the specified property value by name Declaration PropertyValue GetValue(string name) Parameters Type Name Description System.String name Returns Type Description PropertyValue PutValue(String, PropertyValue) Adds the specified property value Declaration void PutValue(string name, PropertyValue value) Parameters Type Name Description System.String name PropertyValue value"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.ReaderType.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.ReaderType.html",
    "title": "Enum ReaderType | MapGuide Maestro",
    "keywords": "Enum ReaderType Defines the types of readers Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public enum ReaderType Fields Name Description Data The reader is a Data Reader Feature The reader is a Feature Reader Sql The reader is a SQL Reader"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.RecordBase.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.RecordBase.html",
    "title": "Class RecordBase | MapGuide Maestro",
    "keywords": "Class RecordBase Base implementation of the IRecord interface Inheritance System.Object RecordBase FeatureBase MutableRecordBase Implements IRecord IRecordReset IRecordInitialize Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public abstract class RecordBase : IRecord, IRecordReset, IRecordInitialize Constructors RecordBase() Initializes a new instance of the RecordBase class. Declaration protected RecordBase() Fields _ordinalMap A dictionary to map indexes to property names Declaration protected Dictionary<int, string> _ordinalMap Field Value Type Description Dictionary < System.Int32 , System.String > _values The map of property values Declaration protected Dictionary<string, PropertyValue> _values Field Value Type Description Dictionary < System.String , PropertyValue > Properties FieldCount Gets the number of fields in this record Declaration public int FieldCount { get; } Property Value Type Description System.Int32 Item[Int32] Gets the System.Object at the specified index. Declaration public object this[int index] { get; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Object Item[String] Gets the System.Object with the specified name. Declaration public object this[string name] { get; } Parameters Type Name Description System.String name Property Value Type Description System.Object PropertyNames Gets the property names. Declaration public IEnumerable<string> PropertyNames { get; } Property Value Type Description IEnumerable < System.String > Methods GetBlob(Int32) Gets the blob value at the specified index Declaration public byte[] GetBlob(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Byte [] GetBlob(String) Gets the blob value of the specified property Declaration public byte[] GetBlob(string name) Parameters Type Name Description System.String name Returns Type Description System.Byte [] GetBoolean(Int32) Gets the boolean value at the specified index Declaration public bool GetBoolean(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Boolean GetBoolean(String) Gets the boolean value of the specified property Declaration public bool GetBoolean(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean GetByte(Int32) Gets the byte value at the specified index Declaration public byte GetByte(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Byte GetByte(String) Gets the byte value of the specified property Declaration public byte GetByte(string name) Parameters Type Name Description System.String name Returns Type Description System.Byte GetClob(Int32) Gets the clob value at the specified index Declaration public char[] GetClob(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Char [] GetClob(String) Gets the clob value of the specified property Declaration public char[] GetClob(string name) Parameters Type Name Description System.String name Returns Type Description System.Char [] GetDateTime(String) Gets the datetime value of the specified property Declaration public DateTime GetDateTime(string name) Parameters Type Name Description System.String name Returns Type Description DateTime GetDouble(Int32) Gets the double value at the specified index Declaration public double GetDouble(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Double GetDouble(String) Gets the double value of the specified property Declaration public double GetDouble(string name) Parameters Type Name Description System.String name Returns Type Description System.Double GetFeatureObject(Int32) Gets the feature object. Declaration public IFeatureReader GetFeatureObject(int index) Parameters Type Name Description System.Int32 index The index. Returns Type Description IFeatureReader GetFeatureObject(String) Gets the feature object. Declaration public IFeatureReader GetFeatureObject(string name) Parameters Type Name Description System.String name The name. Returns Type Description IFeatureReader GetFieldType(Int32) Gets the CLR type of the field at the specified index Declaration public Type GetFieldType(int i) Parameters Type Name Description System.Int32 i Returns Type Description Type GetGeometry(Int32) Gets the geometry value at the specified index Declaration public IGeometryRef GetGeometry(int index) Parameters Type Name Description System.Int32 index Returns Type Description IGeometryRef GetGeometry(String) Gets the geometry value of the specified property Declaration public IGeometryRef GetGeometry(string name) Parameters Type Name Description System.String name Returns Type Description IGeometryRef GetInt16(Int32) Gets the int16 value at the specified index Declaration public short GetInt16(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Int16 GetInt16(String) Gets the int16 value of the specified property Declaration public short GetInt16(string name) Parameters Type Name Description System.String name Returns Type Description System.Int16 GetInt32(Int32) Gets the int32 value at the specified index Declaration public int GetInt32(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Int32 GetInt32(String) Gets the int32 value of the specified property Declaration public int GetInt32(string name) Parameters Type Name Description System.String name Returns Type Description System.Int32 GetInt64(Int32) Gets the int64 value at the specified index Declaration public long GetInt64(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Int64 GetInt64(String) Gets the int64 value of the specified property Declaration public long GetInt64(string name) Parameters Type Name Description System.String name Returns Type Description System.Int64 GetName(Int32) Gets the name of the field at the specified index Declaration public string GetName(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.String GetPropertyType(Int32) Gets the type of the property at the specified index. Declaration public PropertyValueType GetPropertyType(int index) Parameters Type Name Description System.Int32 index The index. Returns Type Description PropertyValueType GetPropertyType(String) Gets the type of the property. Declaration public PropertyValueType GetPropertyType(string name) Parameters Type Name Description System.String name The name. Returns Type Description PropertyValueType GetSingle(Int32) Gets the single value at the specified index Declaration public float GetSingle(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Single GetSingle(String) Gets the single value of the specified property Declaration public float GetSingle(string name) Parameters Type Name Description System.String name Returns Type Description System.Single GetString(Int32) Gets the string value at the specified index Declaration public string GetString(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.String GetString(String) Gets the string value of the specified property Declaration public string GetString(string name) Parameters Type Name Description System.String name Returns Type Description System.String GetValue(String) Gets the specified property value by name Declaration public PropertyValue GetValue(string name) Parameters Type Name Description System.String name Returns Type Description PropertyValue IsNull(Int32) Gets whether the property value at the specified index has a null property value. You must call this method first to determine if it is safe to call the corresponding GetXXX() methods Declaration public bool IsNull(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Boolean IsNull(String) Gets whether the specified property name has a null property value Declaration public bool IsNull(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean PropertyExists(String) Gets whether the specified named property exists Declaration public bool PropertyExists(string name) Parameters Type Name Description System.String name The property name. Returns Type Description System.Boolean PutValue(String, PropertyValue) Adds the specified property value Declaration public void PutValue(string name, PropertyValue value) Parameters Type Name Description System.String name PropertyValue value Update(IRecord) Updates the specified record. Declaration public void Update(IRecord record) Parameters Type Name Description IRecord record The record. Explicit Interface Implementations IRecord.GetDateTime(Int32) Gets the datetime value at the specified index Declaration DateTime IRecord.GetDateTime(int index) Parameters Type Name Description System.Int32 index Returns Type Description DateTime Implements IRecord IRecordReset IRecordInitialize"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.ReferenceTypePropertyValue-1.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.ReferenceTypePropertyValue-1.html",
    "title": "Class ReferenceTypePropertyValue<T> | MapGuide Maestro",
    "keywords": "Class ReferenceTypePropertyValue<T> Base class of all reference type property values Inheritance System.Object PropertyValue ReferenceTypePropertyValue<T> BlobValue ClobValue FeatureValue GeometryValue RasterValue StringValue Inherited Members PropertyValue.IsNull PropertyValue.SetNull() PropertyValue.Type PropertyValue.PropertyDefType PropertyValue.ValueAsString() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public abstract class ReferenceTypePropertyValue<T> : PropertyValue where T : class Type Parameters Name Description T Constructors ReferenceTypePropertyValue() Initializes a new instance of the ReferenceTypePropertyValue<T> class. Declaration protected ReferenceTypePropertyValue() ReferenceTypePropertyValue(T) Initializes a new instance of the ReferenceTypePropertyValue<T> class. Declaration protected ReferenceTypePropertyValue(T value) Parameters Type Name Description T value The value. Properties Value Gets or sets the value. Declaration public T Value { get; set; } Property Value Type Description T The value."
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.SingleValue.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.SingleValue.html",
    "title": "Class SingleValue | MapGuide Maestro",
    "keywords": "Class SingleValue Stores float data Inheritance System.Object PropertyValue ValueTypePropertyValue < System.Single > SingleValue Inherited Members ValueTypePropertyValue<Single>.IsNull ValueTypePropertyValue<Single>.Value ValueTypePropertyValue<Single>.SetNull() ValueTypePropertyValue<Single>.PropertyDefType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class SingleValue : ValueTypePropertyValue<float> Constructors SingleValue() Initializes a new instance Declaration public SingleValue() SingleValue(Single) Initializes a new instance Declaration public SingleValue(float value) Parameters Type Name Description System.Single value Properties Type Gets the type. Declaration public override PropertyValueType Type { get; } Property Value Type Description PropertyValueType Overrides PropertyValue.Type Methods ValueAsString() Gets the value as a string Declaration public override string ValueAsString() Returns Type Description System.String Overrides PropertyValue.ValueAsString()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.HttpServerConnectionProperties.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.HttpServerConnectionProperties.html",
    "title": "Class HttpServerConnectionProperties | MapGuide Maestro",
    "keywords": "Class HttpServerConnectionProperties HTTP connection provider properties Inheritance System.Object HttpServerConnectionProperties Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public static class HttpServerConnectionProperties Fields PROP_BASE_URL The base URL Declaration public const string PROP_BASE_URL = \"BaseUrl\" Field Value Type Description System.String PROP_USER_AGENT The user agent Declaration public const string PROP_USER_AGENT = \"UserAgent\" Field Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.IConnectionCapabilities.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.IConnectionCapabilities.html",
    "title": "Interface IConnectionCapabilities | MapGuide Maestro",
    "keywords": "Interface IConnectionCapabilities Defines the capabilities of this connection. This is used to safely access supported features of the connection. Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public interface IConnectionCapabilities Properties IsMultithreaded Indicates whether the current connection can be used between multiple threads Declaration bool IsMultithreaded { get; } Property Value Type Description System.Boolean SupportedCommands Gets an array of supported commands Declaration int[] SupportedCommands { get; } Property Value Type Description System.Int32 [] SupportedResourceTypes Gets the array of supported resource types Declaration string[] SupportedResourceTypes { get; } Property Value Type Description System.String [] SupportedServices Gets an array of supported services Declaration int[] SupportedServices { get; } Property Value Type Description System.Int32 [] SupportsResourceHeaders Gets whether this connection supports the concept of resource headers Declaration bool SupportsResourceHeaders { get; } Property Value Type Description System.Boolean SupportsResourcePreviews Indicates whether web-based previewing capabilities are possible with this connection Declaration bool SupportsResourcePreviews { get; } Property Value Type Description System.Boolean SupportsResourceReferences Gets whether this connection supports resource reference tracking Declaration bool SupportsResourceReferences { get; } Property Value Type Description System.Boolean SupportsResourceSecurity Gets whether this connection supports resource security Declaration bool SupportsResourceSecurity { get; } Property Value Type Description System.Boolean SupportsWfsPublishing Gets whether this connection supports publishing resources for WFS Declaration bool SupportsWfsPublishing { get; } Property Value Type Description System.Boolean SupportsWmsPublishing Gets whether this connection supports publishing resources for WMS Declaration bool SupportsWmsPublishing { get; } Property Value Type Description System.Boolean Methods GetMaxSupportedResourceVersion(String) Gets the highest supported resource version. Declaration Version GetMaxSupportedResourceVersion(string resourceType) Parameters Type Name Description System.String resourceType Returns Type Description Version IsSupportedResourceType(String) Indicates if this current connection supports the specified resource type Declaration bool IsSupportedResourceType(string resType) Parameters Type Name Description System.String resType Returns Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.MaestroAPI.IMpuCalculator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.IMpuCalculator.html",
    "title": "Interface IMpuCalculator | MapGuide Maestro",
    "keywords": "Interface IMpuCalculator An interface for calculating meters-per-unit values Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public interface IMpuCalculator Methods Calculate(String, Double) Calculates the meters-per-unit value Declaration double Calculate(string csWkt, double units) Parameters Type Name Description System.String csWkt The coordinate system wkt System.Double units The number of units Returns Type Description System.Double"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Internal.FixedWKTReader.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Internal.FixedWKTReader.html",
    "title": "Class FixedWKTReader | MapGuide Maestro",
    "keywords": "Class FixedWKTReader A fixed version of WKTReader that can parse 3D geometry WKT Inheritance System.Object FixedWKTReader Namespace : OSGeo.MapGuide.MaestroAPI.Internal Assembly : cs.temp.dll.dll Syntax public class FixedWKTReader : IGeometryTextReader Constructors FixedWKTReader() Creates a WKTReader that creates objects using a basic GeometryFactory. Declaration public FixedWKTReader() Methods Read(String) Converts a Well-known Text representation to a Geometry . Declaration public IGeometryRef Read(string wellKnownText) Parameters Type Name Description System.String wellKnownText one or more Geometry Tagged Text strings (see the OpenGIS Simple Features Specification) separated by whitespace. Returns Type Description IGeometryRef A Geometry specified by wellKnownText Read(TextReader) Converts a Well-known Text representation to a Geometry . Declaration public IGeometryRef Read(TextReader reader) Parameters Type Name Description TextReader reader A Reader which will return a \"Geometry Tagged Text\" string (see the OpenGIS Simple Features Specification). Returns Type Description IGeometryRef A Geometry read from reader ."
  },
  "api/OSGeo.MapGuide.MaestroAPI.LengthyOperationProgressCallBack.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.LengthyOperationProgressCallBack.html",
    "title": "Delegate LengthyOperationProgressCallBack | MapGuide Maestro",
    "keywords": "Delegate LengthyOperationProgressCallBack A delegate used to represent relay progress for lengthy operations Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public delegate void LengthyOperationProgressCallBack(object sender, LengthyOperationProgressArgs e); Parameters Type Name Description System.Object sender LengthyOperationProgressArgs e"
  },
  "api/OSGeo.MapGuide.MaestroAPI.MaestroApiProviderAttribute.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.MaestroApiProviderAttribute.html",
    "title": "Class MaestroApiProviderAttribute | MapGuide Maestro",
    "keywords": "Class MaestroApiProviderAttribute Marks this assembly as being an implementation of the Maestro API Inheritance System.Object MaestroApiProviderAttribute Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public class MaestroApiProviderAttribute : Attribute Constructors MaestroApiProviderAttribute(String, String, Type, Boolean, Boolean) Initializes a new instance of the MaestroApiProviderAttribute class. Declaration public MaestroApiProviderAttribute(string name, string description, Type implType, bool multiPlatform, bool bHasGlobalState) Parameters Type Name Description System.String name The name. System.String description The description. Type implType Type of the impl. System.Boolean multiPlatform if set to true [multi platform]. System.Boolean bHasGlobalState Whether this provider has global connection state Properties Description The description for this provider Declaration public string Description { get; set; } Property Value Type Description System.String HasGlobalState Indicates whether this provider contains global connection-specific state. For such providers, connections are effectively single-instance. This is corner-case property required by a particular provider (Maestro.Local), but may extend to other providers in the future Declaration public bool HasGlobalState { get; set; } Property Value Type Description System.Boolean ImplType The type that implements our main server connection interface Declaration public Type ImplType { get; set; } Property Value Type Description Type IsMultiPlatform Indicates whether this implementation can be used on non-windows environments (eg. Mono) Declaration public bool IsMultiPlatform { get; set; } Property Value Type Description System.Boolean Name The name of this provider Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Mapping.Extensions.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Mapping.Extensions.html",
    "title": "Class Extensions | MapGuide Maestro",
    "keywords": "Class Extensions Extension methods for RuntimeMapLayer Inheritance System.Object Extensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Mapping Assembly : cs.temp.dll.dll Syntax public static class Extensions Methods GetParentGroup(RuntimeMapLayer) Gets the parent group Declaration public static RuntimeMapGroup GetParentGroup(this RuntimeMapLayer layer) Parameters Type Name Description RuntimeMapLayer layer Returns Type Description RuntimeMapGroup"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Mapping.KeyValueCollection-2.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Mapping.KeyValueCollection-2.html",
    "title": "Class KeyValueCollection<TKey, TVal> | MapGuide Maestro",
    "keywords": "Class KeyValueCollection<TKey, TVal> A generic key/value collection Inheritance System.Object KeyValueCollection<TKey, TVal> RuntimeMapGroupCollection RuntimeMapLayerCollection Implements IList Namespace : OSGeo.MapGuide.MaestroAPI.Mapping Assembly : cs.temp.dll.dll Syntax public abstract class KeyValueCollection<TKey, TVal> : IList<TVal>, IList where TVal : class Type Parameters Name Description TKey The type of the key. TVal The type of the value. Constructors KeyValueCollection() Initializes a new instance of the KeyValueCollection<TKey, TVal> class. Declaration protected KeyValueCollection() Fields _values The internal list of value Declaration protected List<TVal> _values Field Value Type Description List <TVal> _valuesByKey The internal dictionary of values keyed by its key Declaration protected Dictionary<TKey, TVal> _valuesByKey Field Value Type Description Dictionary <TKey, TVal> Properties Count Gets the number of elements contained in the System.Collections.Generic.ICollection`1 . Declaration public int Count { get; } Property Value Type Description System.Int32 The number of elements contained in the System.Collections.Generic.ICollection`1 . IsReadOnly Gets a value indicating whether the System.Collections.Generic.ICollection`1 is read-only. Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean true if the System.Collections.Generic.ICollection`1 is read-only; otherwise, false. Item[TKey] Gets or sets the element at the specified index. Declaration public TVal this[TKey key] { get; set; } Parameters Type Name Description TKey key Property Value Type Description TVal The element at the specified index. Exceptions Type Condition System.ArgumentOutOfRangeException key is not a valid index in the System.Collections.Generic.IList`1 . System.NotSupportedException The property is set and the System.Collections.Generic.IList`1 is read-only. Item[Int32] Gets or sets the element at the specified index. Declaration public virtual TVal this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description TVal The element at the specified index. Exceptions Type Condition System.ArgumentOutOfRangeException index is not a valid index in the System.Collections.Generic.IList`1 . System.NotSupportedException The property is set and the System.Collections.Generic.IList`1 is read-only. Methods Add(TVal) Adds an item to the System.Collections.Generic.ICollection`1 . Declaration public virtual void Add(TVal item) Parameters Type Name Description TVal item The object to add to the System.Collections.Generic.ICollection`1 . Exceptions Type Condition System.NotSupportedException The System.Collections.Generic.ICollection`1 is read-only. Clear() Removes all items from the System.Collections.Generic.ICollection`1 . Declaration public virtual void Clear() Exceptions Type Condition System.NotSupportedException The System.Collections.Generic.ICollection`1 is read-only. Contains(TVal) Determines whether the System.Collections.Generic.ICollection`1 contains a specific value. Declaration public bool Contains(TVal item) Parameters Type Name Description TVal item The object to locate in the System.Collections.Generic.ICollection`1 . Returns Type Description System.Boolean true if item is found in the System.Collections.Generic.ICollection`1 ; otherwise, false. CopyTo(TVal[], Int32) Copies the elements of the System.Collections.Generic.ICollection`1 to an System.Array , starting at a particular System.Array index. Declaration public void CopyTo(TVal[] array, int arrayIndex) Parameters Type Name Description TVal[] array The one-dimensional System.Array that is the destination of the elements copied from System.Collections.Generic.ICollection`1 . The System.Array must have zero-based indexing. System.Int32 arrayIndex The zero-based index in array at which copying begins. Exceptions Type Condition System.ArgumentNullException array is null. System.ArgumentOutOfRangeException arrayIndex is less than 0. System.ArgumentException array is multidimensional. -or- arrayIndex is equal to or greater than the length of array . -or- The number of elements in the source System.Collections.Generic.ICollection`1 is greater than the available space from arrayIndex to the end of the destination array . -or- Type TVal cannot be cast automatically to the type of the destination array . GetEnumerator() Returns an enumerator that iterates through the collection. Declaration public IEnumerator<TVal> GetEnumerator() Returns Type Description IEnumerator <TVal> A System.Collections.Generic.IEnumerator`1 that can be used to iterate through the collection. IndexOf(TKey) Determines the index of a specific key in the collection Declaration public int IndexOf(TKey key) Parameters Type Name Description TKey key The key of the object to locate in the collection Returns Type Description System.Int32 The index of key if found in the list; otherwise, -1. IndexOf(TVal) Determines the index of a specific item in the System.Collections.Generic.IList`1 . Declaration public int IndexOf(TVal item) Parameters Type Name Description TVal item The object to locate in the System.Collections.Generic.IList`1 . Returns Type Description System.Int32 The index of item if found in the list; otherwise, -1. Insert(Int32, TVal) Inserts an item to the System.Collections.Generic.IList`1 at the specified index. Declaration public virtual void Insert(int index, TVal item) Parameters Type Name Description System.Int32 index The zero-based index at which item should be inserted. TVal item The object to insert into the System.Collections.Generic.IList`1 . Exceptions Type Condition System.ArgumentOutOfRangeException index is not a valid index in the System.Collections.Generic.IList`1 . System.NotSupportedException The System.Collections.Generic.IList`1 is read-only. OnBeforeItemAdded(TVal) Called before an item is added Declaration protected virtual void OnBeforeItemAdded(TVal item) Parameters Type Name Description TVal item The item. OnBeforeItemRemove(TVal) Called before an item is removed Declaration protected virtual void OnBeforeItemRemove(TVal item) Parameters Type Name Description TVal item The item. OnCollectionChanged() Raises the CollectionChanged event Declaration protected virtual void OnCollectionChanged() OnItemAdded(TVal) Called after an item has been added Declaration protected abstract void OnItemAdded(TVal item) Parameters Type Name Description TVal item The item. OnItemRemoved(TVal) Called after an item has been removed. Note this is only called if the remove operation removed the item in question Declaration protected abstract void OnItemRemoved(TVal value) Parameters Type Name Description TVal value The value. Remove(TVal) Removes the first occurrence of a specific object from the System.Collections.Generic.ICollection`1 . Declaration public bool Remove(TVal item) Parameters Type Name Description TVal item The object to remove from the System.Collections.Generic.ICollection`1 . Returns Type Description System.Boolean true if item was successfully removed from the System.Collections.Generic.ICollection`1 ; otherwise, false. This method also returns false if item is not found in the original System.Collections.Generic.ICollection`1 . Exceptions Type Condition System.NotSupportedException The System.Collections.Generic.ICollection`1 is read-only. RemoveAt(Int32) Removes the System.Collections.Generic.IList`1 item at the specified index. Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index The zero-based index of the item to remove. Exceptions Type Condition System.ArgumentOutOfRangeException index is not a valid index in the System.Collections.Generic.IList`1 . System.NotSupportedException The System.Collections.Generic.IList`1 is read-only. SelectKey(TVal) Selects the key given the value. Declaration protected abstract TKey SelectKey(TVal value) Parameters Type Name Description TVal value The value. Returns Type Description TKey SetNewIndex(Int32, TVal) Sets the new index of the specified object. This object must already be present inside the collection Declaration public void SetNewIndex(int newIndex, TVal item) Parameters Type Name Description System.Int32 newIndex TVal item Events CollectionChanged Raised when the collection has been modified Declaration public event EventHandler CollectionChanged Event Type Type Description EventHandler Implements IList"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayerType.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMapLayerType.html",
    "title": "Class RuntimeMapLayerType | MapGuide Maestro",
    "keywords": "Class RuntimeMapLayerType Defines the types of layers Inheritance System.Object RuntimeMapLayerType Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Mapping Assembly : cs.temp.dll.dll Syntax public static class RuntimeMapLayerType Fields BaseMap Base map (aka. Tiled) Declaration public const int BaseMap = 2 Field Value Type Description System.Int32 Dynamic Dynamic Declaration public const int Dynamic = 1 Field Value Type Description System.Int32"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Mapping.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Mapping.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.Mapping | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.Mapping Classes Extensions Extension methods for RuntimeMapLayer KeyValueCollection<TKey, TVal> A generic key/value collection MapObservable Base class implementation of the System.ComponentModel.INotifyPropertyChanged interface MapSelection Represents a map selection MapSelection.LayerSelection Represents a layer selection PropertyInfo Describes a FDO property RuntimeMap Represents a runtime instance of a Map Definition RuntimeMapGroup Represents a group of layers in a runtime map. Use OSGeo.MapGuide.MaestroAPI.Services.IMappingService.CreateMapGroup(OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMap,OSGeo.MapGuide.ObjectModels.MapDefinition.IMapLayerGroup) to create instances of this class. RuntimeMapGroupCollection A collection of runtime map groups RuntimeMapGroupType Defines the type of map layer group RuntimeMapLayer Represents a runtime map layer. Use OSGeo.MapGuide.MaestroAPI.Services.IMappingService.CreateMapLayer(OSGeo.MapGuide.MaestroAPI.Mapping.RuntimeMap,OSGeo.MapGuide.ObjectModels.LayerDefinition.ILayerDefinition) to create instances of this class. RuntimeMapLayer.ScaleRange Represents a scale range RuntimeMapLayerCollection A collection of runtime map layers RuntimeMapLayerType Defines the types of layers Delegates LayerEventHandler"
  },
  "api/OSGeo.MapGuide.MaestroAPI.MgServerConnectionBase.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.MgServerConnectionBase.html",
    "title": "Class MgServerConnectionBase | MapGuide Maestro",
    "keywords": "Class MgServerConnectionBase Base class of all MapGuide connection classes. Covers functionality encompassed by the MapGuide Geospatial Platform API and the MapGuide-specific services (Site, Rendering, Mapping, Tile, Drawing) Inheritance System.Object PlatformConnectionBase MgServerConnectionBase Inherited Members PlatformConnectionBase.m_serializers PlatformConnectionBase.m_validator PlatformConnectionBase.m_schemasPath PlatformConnectionBase.m_cachedSchemas PlatformConnectionBase.m_disableValidation PlatformConnectionBase.DeserializeObject<T>(Stream) PlatformConnectionBase.DeserializeObject(Type, Stream) PlatformConnectionBase.SerializeObject(Object) PlatformConnectionBase.SerializeObject(Object, Stream) PlatformConnectionBase.GetSerializer(Type) PlatformConnectionBase.DisableValidation PlatformConnectionBase.ValidateVersion(SiteVersion) PlatformConnectionBase.ValidateVersion(Version) PlatformConnectionBase.GetPreviewUrlGenerator() PlatformConnectionBase.ProviderName PlatformConnectionBase.CloneParameters PlatformConnectionBase.SessionID PlatformConnectionBase.GetInterface() PlatformConnectionBase.RemoveVersionFromProviderName(String) PlatformConnectionBase.GetSchema(Type) PlatformConnectionBase.ResourceAdded PlatformConnectionBase.ResourceDeleted PlatformConnectionBase.ResourceUpdated PlatformConnectionBase.OnResourceAdded(String) PlatformConnectionBase.OnResourceDeleted(String) PlatformConnectionBase.OnResourceUpdated(String) PlatformConnectionBase.CachedSchemas PlatformConnectionBase.Dispose() PlatformConnectionBase.Dispose(Boolean) PlatformConnectionBase.Clone() PlatformConnectionBase.RequestDispatched PlatformConnectionBase.OnRequestDispatched(String) PlatformConnectionBase.CreateGeometryReader() PlatformConnectionBase.GetResourceXmlData(String) PlatformConnectionBase.GetResource(String) PlatformConnectionBase.DeleteResource(String) PlatformConnectionBase.WriteResource(String, Object) PlatformConnectionBase.SetResourceXmlData(String, Stream) PlatformConnectionBase.GetRepositoryResources() PlatformConnectionBase.GetRepositoryResources(Int32) PlatformConnectionBase.GetRepositoryResources(String, Int32) PlatformConnectionBase.GetRepositoryResources(String) PlatformConnectionBase.GetRepositoryResources(String, String) PlatformConnectionBase.GetRepositoryResources(String, String, Int32) PlatformConnectionBase.GetRepositoryResources(String, String, Int32, Boolean) PlatformConnectionBase.Touch(String) PlatformConnectionBase.ResourceExists(String) PlatformConnectionBase.UpdateResourceReferences(Object, String, String, Boolean) PlatformConnectionBase.UpdateResourceReferences(Object, String, String, Boolean, Hashtable) PlatformConnectionBase.MoveResourceWithReferences(String, String, LengthyOperationCallBack, LengthyOperationProgressCallBack) PlatformConnectionBase.MoveFolderWithReferences(String, String, LengthyOperationCallBack, LengthyOperationProgressCallBack) PlatformConnectionBase.CopyFolderWithReferences(String, String, LengthyOperationCallBack, LengthyOperationProgressCallBack) PlatformConnectionBase.FixAndValidateFolderPath(String) PlatformConnectionBase.CreateFolder(String) PlatformConnectionBase.HasFolder(String) PlatformConnectionBase.EnumerateResourceReferences(String) PlatformConnectionBase.CopyResource(String, String, Boolean) PlatformConnectionBase.CopyFolder(String, String, Boolean) PlatformConnectionBase.MoveResource(String, String, Boolean) PlatformConnectionBase.MoveFolder(String, String, Boolean) PlatformConnectionBase.GetResourceData(String, String) PlatformConnectionBase.SetResourceData(String, String, ResourceDataType, Stream) PlatformConnectionBase.SetResourceData(String, String, ResourceDataType, Stream, Utility.StreamCopyProgressDelegate) PlatformConnectionBase.PurgeCachedItemsOf(String) PlatformConnectionBase.SaveResource(IResource) PlatformConnectionBase.SaveResourceAs(IResource, String) PlatformConnectionBase.UploadPackage(String, Utility.StreamCopyProgressDelegate) PlatformConnectionBase.UpdateRepository(String, ResourceFolderHeaderType) PlatformConnectionBase.GetFolderOrResourceHeader(String) PlatformConnectionBase.SetResourceXmlData(String, Stream, Stream) PlatformConnectionBase.GetResourceHeader(String) PlatformConnectionBase.GetFolderHeader(String) PlatformConnectionBase.SetFolderHeader(String, ResourceFolderHeaderType) PlatformConnectionBase.SetResourceHeader(String, ResourceDocumentHeaderType) PlatformConnectionBase.SetFolderOrResourceHeader(String, Object) PlatformConnectionBase.EnumerateUnmanagedData(String, String, Boolean, UnmanagedDataTypes) PlatformConnectionBase.GetFeatureProvider(String) PlatformConnectionBase.TestConnection(String) PlatformConnectionBase.FeatureProviders PlatformConnectionBase.GetSpatialContextInfo(String, Boolean) PlatformConnectionBase.GetIdentityProperties(String, String) PlatformConnectionBase.DescribeFeatureSource(String, String) PlatformConnectionBase.DescribeFeatureSourcePartial(String, String, String[]) PlatformConnectionBase.m_featureSchemaCache PlatformConnectionBase.m_classDefinitionCache PlatformConnectionBase.DescribeFeatureSourceInternal(String) PlatformConnectionBase.DescribeFeatureSource(String) PlatformConnectionBase.GetClassDefinitionInternal(String, String, String) PlatformConnectionBase.GetClassDefinition(String, String) PlatformConnectionBase.CacheStats PlatformConnectionBase.ResetFeatureSourceSchemaCache() PlatformConnectionBase.AggregateQueryFeatureSource(String, String, String) PlatformConnectionBase.AggregateQueryFeatureSource(String, String, String, String[]) PlatformConnectionBase.AggregateQueryFeatureSource(String, String, String, Specialized.NameValueCollection) PlatformConnectionBase.GetSpatialExtent(String, String, String) PlatformConnectionBase.GetSpatialExtent(String, String, String, String) PlatformConnectionBase.GetSpatialExtent(String, String, String, Boolean) PlatformConnectionBase.GetSpatialExtent(String, String, String, String, Boolean) PlatformConnectionBase.EnumerateDataStores(String, String) PlatformConnectionBase.GetSchemas(String) PlatformConnectionBase.GetClassNames(String, String) PlatformConnectionBase.GetLongTransactions(String, Boolean) PlatformConnectionBase.GetSchemaMapping(String, String) PlatformConnectionBase.QueryFeatureSource(String, String, String) PlatformConnectionBase.QueryFeatureSource(String, String) PlatformConnectionBase.QueryFeatureSource(String, String, String, String[]) PlatformConnectionBase.QueryFeatureSource(String, String, String, String[], NameValueCollection, Int32) PlatformConnectionBase.QueryFeatureSource(String, String, String, String[], NameValueCollection) PlatformConnectionBase.MaxTestedVersion PlatformConnectionBase.SiteVersion PlatformConnectionBase.GetCustomPropertyNames() PlatformConnectionBase.GetCustomPropertyType(String) PlatformConnectionBase.SetCustomProperty(String, Object) PlatformConnectionBase.GetCustomProperty(String) PlatformConnectionBase.CreateCommand(Int32) PlatformConnectionBase.InferMPU(String, Double) PlatformConnectionBase.GetCalculator() PlatformConnectionBase.CreateMapGroup(RuntimeMap, String) PlatformConnectionBase.CreateMapGroup(RuntimeMap, IBaseMapGroup) PlatformConnectionBase.CreateMapGroup(RuntimeMap, IMapLayerGroup) PlatformConnectionBase.CreateMapLayer(RuntimeMap, ILayerDefinition) PlatformConnectionBase.CreateMapLayer(RuntimeMap, ILayerDefinition, Boolean) PlatformConnectionBase.CreateMapLayer(RuntimeMap, IBaseMapLayer) PlatformConnectionBase.CreateMapLayer(RuntimeMap, IBaseMapLayer, Boolean) PlatformConnectionBase.CreateMapLayer(RuntimeMap, IMapLayer) PlatformConnectionBase.CreateMapLayer(RuntimeMap, IMapLayer, Boolean) PlatformConnectionBase.CreateMap(String, String) PlatformConnectionBase.CreateMap(String, String, Boolean) PlatformConnectionBase.CreateMap(String, String, Double) PlatformConnectionBase.CreateMap(String, String, Double, Boolean) PlatformConnectionBase.CreateMap(IMapDefinition) PlatformConnectionBase.CreateMap(IMapDefinition, Boolean) PlatformConnectionBase.CreateMap(IMapDefinition, Double) PlatformConnectionBase.CreateMap(IMapDefinition, Double, Boolean) PlatformConnectionBase.CreateMap(String, IMapDefinition) PlatformConnectionBase.CreateMap(String, IMapDefinition, Boolean) PlatformConnectionBase.CreateMap(String, IMapDefinition, Double) PlatformConnectionBase.CreateMap(String, IMapDefinition, Double, Boolean) PlatformConnectionBase.OpenMap(String) PlatformConnectionBase.ExecuteLoadProcedure(ILoadProcedure, LengthyOperationProgressCallBack, Boolean) PlatformConnectionBase.ExecuteLoadProcedure(String, LengthyOperationProgressCallBack, Boolean) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public abstract class MgServerConnectionBase : PlatformConnectionBase Constructors MgServerConnectionBase() Initializes a new instance of the MgServerConnectionBase class. Declaration protected MgServerConnectionBase() Fields _canAutoRestartSession Determines whether session auto-recover is possible Declaration protected bool _canAutoRestartSession Field Value Type Description System.Boolean m_autoRestartSession A flag that indicates if a session will be automatically restarted Declaration protected bool m_autoRestartSession Field Value Type Description System.Boolean m_cachedGroupList cached group list Declaration protected ObjCommon.GroupList m_cachedGroupList Field Value Type Description ObjCommon.GroupList m_cachedUserList cached user list Declaration protected ObjCommon.UserList m_cachedUserList Field Value Type Description ObjCommon.UserList m_password The password used to open this connection, if any Declaration protected string m_password Field Value Type Description System.String m_username The username used to open this connection, if any Declaration protected string m_username Field Value Type Description System.String Properties AutoRestartSession Gets or sets a value indicating if the session should automatically be restarted if it expires Declaration public virtual bool AutoRestartSession { get; set; } Property Value Type Description System.Boolean Methods CheckAndRaiseSessionChanged(String, String) Raises the SessionIDChanged event if the old and new session ids do not match Declaration protected void CheckAndRaiseSessionChanged(string oldSessionId, string newSessionId) Parameters Type Name Description System.String oldSessionId System.String newSessionId DisableAutoSessionRecovery() Indicates this connection cannot use session recovery, normally due to the fact the connection was initialized with just a session id. Declaration protected void DisableAutoSessionRecovery() EnumerateGroups() Gets a list of all groups on the server Declaration public abstract ObjCommon.GroupList EnumerateGroups() Returns Type Description ObjCommon.GroupList The list of groups EnumerateUsers() Gets a list of all users on the server Declaration public virtual ObjCommon.UserList EnumerateUsers() Returns Type Description ObjCommon.UserList The list of users EnumerateUsers(String) Gets a list of users in a group Declaration public abstract ObjCommon.UserList EnumerateUsers(string group) Parameters Type Name Description System.String group The group to retrieve the users from Returns Type Description ObjCommon.UserList The list of users GetLegendImageStream(Double, String, Int32, Int32) Renders a minature bitmap of the layers style Declaration public virtual Stream GetLegendImageStream(double scale, string layerdefinition, int themeIndex, int type) Parameters Type Name Description System.Double scale The scale for the bitmap to match System.String layerdefinition The layer the image should represent System.Int32 themeIndex If the layer is themed, this gives the theme index, otherwise set to 0 System.Int32 type The geometry type, 1 for point, 2 for line, 3 for area, 4 for composite Returns Type Description System.IO.Stream The minature bitmap GetLegendImageStream(Double, String, Int32, Int32, Int32, Int32, String) Gets the legend image. Declaration public abstract Stream GetLegendImageStream(double scale, string layerdefinition, int themeIndex, int type, int width, int height, string format) Parameters Type Name Description System.Double scale The scale. System.String layerdefinition The layerdefinition. System.Int32 themeIndex Index of the theme. System.Int32 type The type. System.Int32 width The width. System.Int32 height The height. System.String format The format. Returns Type Description System.IO.Stream GetSiteInfo() Gets the site info. Declaration public abstract ObjCommon.SiteInformation GetSiteInfo() Returns Type Description ObjCommon.SiteInformation GetTile(String, String, Int32, Int32, Int32) Gets the tile. Declaration public abstract Stream GetTile(string mapdefinition, string baselayergroup, int col, int row, int scaleindex) Parameters Type Name Description System.String mapdefinition The mapdefinition. System.String baselayergroup The baselayergroup. System.Int32 col The col. System.Int32 row The row. System.Int32 scaleindex The scaleindex. Returns Type Description System.IO.Stream IsSessionExpiredException(Exception) Determines if an exception is a \"Session Expired\" exception. Declaration public abstract bool IsSessionExpiredException(Exception ex) Parameters Type Name Description Exception ex The exception to evaluate Returns Type Description System.Boolean True if the exception is a session expired exception QueryMapFeatures(RuntimeMap, Int32, String, Boolean, String, QueryMapOptions) Identifies those features that meet the specified spatial selection criteria. This operation is used to implement server-side selection. In addition to a selection set, this operation returns attribute information in case only one feature is selected. Declaration public abstract string QueryMapFeatures(RuntimeMap rtMap, int maxFeatures, string wkt, bool persist, string selectionVariant, QueryMapOptions extraOptions) Parameters Type Name Description RuntimeMap rtMap The runtime map to identify features System.Int32 maxFeatures The maximum number of features to return System.String wkt The WKT of the filter geometry System.Boolean persist If true will update the selection set for the given map System.String selectionVariant The type of spatial operator to use for the spatial query QueryMapOptions extraOptions Extra querying options Returns Type Description System.String RenderDynamicOverlay(RuntimeMap, MapSelection, String) Renders a dynamic overlay image of the map Declaration public Stream RenderDynamicOverlay(RuntimeMap map, MapSelection selection, string format) Parameters Type Name Description RuntimeMap map MapSelection selection System.String format Returns Type Description System.IO.Stream RenderDynamicOverlay(RuntimeMap, MapSelection, String, Color, Int32) Renders a dynamic overlay image of the map Declaration public abstract Stream RenderDynamicOverlay(RuntimeMap map, MapSelection selection, string format, Color selectionColor, int behaviour) Parameters Type Name Description RuntimeMap map MapSelection selection System.String format Color selectionColor System.Int32 behaviour Returns Type Description System.IO.Stream RenderDynamicOverlay(RuntimeMap, MapSelection, String, Boolean) Renders a dynamic overlay image of the map Declaration public abstract Stream RenderDynamicOverlay(RuntimeMap map, MapSelection selection, string format, bool keepSelection) Parameters Type Name Description RuntimeMap map MapSelection selection System.String format System.Boolean keepSelection Returns Type Description System.IO.Stream RenderRuntimeMap(RuntimeMap, Double, Double, Double, Double, Int32, Int32, Int32) Renders the runtime map. Declaration public virtual Stream RenderRuntimeMap(RuntimeMap map, double x1, double y1, double x2, double y2, int width, int height, int dpi) Parameters Type Name Description RuntimeMap map The runtime map instance. System.Double x1 The x1. System.Double y1 The y1. System.Double x2 The x2. System.Double y2 The y2. System.Int32 width The width. System.Int32 height The height. System.Int32 dpi The dpi. Returns Type Description System.IO.Stream RenderRuntimeMap(RuntimeMap, Double, Double, Double, Double, Int32, Int32, Int32, String) Renders the runtime map. Declaration public virtual Stream RenderRuntimeMap(RuntimeMap map, double x1, double y1, double x2, double y2, int width, int height, int dpi, string format) Parameters Type Name Description RuntimeMap map The runtime map instance. System.Double x1 The x1. System.Double y1 The y1. System.Double x2 The x2. System.Double y2 The y2. System.Int32 width The width. System.Int32 height The height. System.Int32 dpi The dpi. System.String format The format. Returns Type Description System.IO.Stream RenderRuntimeMap(RuntimeMap, Double, Double, Double, Double, Int32, Int32, Int32, String, Boolean) Renders the runtime map. Declaration public abstract Stream RenderRuntimeMap(RuntimeMap map, double x1, double y1, double x2, double y2, int width, int height, int dpi, string format, bool clip) Parameters Type Name Description RuntimeMap map The runtime map instance. System.Double x1 The x1. System.Double y1 The y1. System.Double x2 The x2. System.Double y2 The y2. System.Int32 width The width. System.Int32 height The height. System.Int32 dpi The dpi. System.String format The format. System.Boolean clip if set to true [clip]. Returns Type Description System.IO.Stream RenderRuntimeMap(RuntimeMap, Double, Double, Double, Int32, Int32, Int32) Renders the runtime map. Declaration public virtual Stream RenderRuntimeMap(RuntimeMap map, double x, double y, double scale, int width, int height, int dpi) Parameters Type Name Description RuntimeMap map The runtime map instance. System.Double x The x. System.Double y The y. System.Double scale The scale. System.Int32 width The width. System.Int32 height The height. System.Int32 dpi The dpi. Returns Type Description System.IO.Stream RenderRuntimeMap(RuntimeMap, Double, Double, Double, Int32, Int32, Int32, String) Renders the runtime map. Declaration public virtual Stream RenderRuntimeMap(RuntimeMap map, double x, double y, double scale, int width, int height, int dpi, string format) Parameters Type Name Description RuntimeMap map The runtime map instance. System.Double x The x. System.Double y The y. System.Double scale The scale. System.Int32 width The width. System.Int32 height The height. System.Int32 dpi The dpi. System.String format The format. Returns Type Description System.IO.Stream RenderRuntimeMap(RuntimeMap, Double, Double, Double, Int32, Int32, Int32, String, Boolean) Renders the runtime map. Declaration public abstract Stream RenderRuntimeMap(RuntimeMap map, double x, double y, double scale, int width, int height, int dpi, string format, bool clip) Parameters Type Name Description RuntimeMap map The runtime map instance. System.Double x The x. System.Double y The y. System.Double scale The scale. System.Int32 width The width. System.Int32 height The height. System.Int32 dpi The dpi. System.String format The format. System.Boolean clip if set to true [clip]. Returns Type Description System.IO.Stream RestartSession() Restarts the server session, and creates a new session ID Declaration public void RestartSession() RestartSession(Boolean) Restarts the server session, and creates a new session ID Declaration public bool RestartSession(bool throwException) Parameters Type Name Description System.Boolean throwException If set to true, the call throws an exception if the call failed Returns Type Description System.Boolean True if the creation succeed, false otherwise RestartSessionInternal(Boolean) Attempts to create a new session Declaration protected abstract bool RestartSessionInternal(bool throwException) Parameters Type Name Description System.Boolean throwException Returns Type Description System.Boolean Events SessionIDChanged Raised when the associated session id has changed. This would happen if the connection detected an expired session and built a new session Declaration public event EventHandler SessionIDChanged Event Type Type Description EventHandler"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Platform.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Platform.html",
    "title": "Class Platform | MapGuide Maestro",
    "keywords": "Class Platform Platform check helper class. Use this class to determine if this assembly is executing under the Mono Runtime environment. Inheritance System.Object Platform Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public static class Platform Properties IsRunningOnMono Gets whether this application is running under the Mono CLR Declaration public static bool IsRunningOnMono { get; } Property Value Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Comparison.IDiffList.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Comparison.IDiffList.html",
    "title": "Interface IDiffList | MapGuide Maestro",
    "keywords": "Interface IDiffList Defines a list of difference Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Comparison Assembly : cs.temp.dll.dll Syntax public interface IDiffList Methods Count() Gets the number of instances Declaration int Count() Returns Type Description System.Int32 GetByIndex(Int32) Gets a diff at the specified index Declaration IComparable GetByIndex(int index) Parameters Type Name Description System.Int32 index Returns Type Description IComparable"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Comparison.TextFileDiffList.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Comparison.TextFileDiffList.html",
    "title": "Class TextFileDiffList | MapGuide Maestro",
    "keywords": "Class TextFileDiffList Represents a list of differences Inheritance System.Object TextFileDiffList Implements IDiffList Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Comparison Assembly : cs.temp.dll.dll Syntax public class TextFileDiffList : IDiffList Constructors TextFileDiffList(String) Creates a new instance Declaration public TextFileDiffList(string fileName) Parameters Type Name Description System.String fileName TextFileDiffList(String, Boolean) Creates a new instance Declaration public TextFileDiffList(string fileName, bool deleteFile) Parameters Type Name Description System.String fileName System.Boolean deleteFile Methods Count() Gets the number of lines Declaration public int Count() Returns Type Description System.Int32 GetByIndex(Int32) Gets the line at the specified index Declaration public IComparable GetByIndex(int index) Parameters Type Name Description System.Int32 index Returns Type Description IComparable Implements IDiffList"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Comparison.TextLine.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Comparison.TextLine.html",
    "title": "Class TextLine | MapGuide Maestro",
    "keywords": "Class TextLine Represents a line of text in a diff Inheritance System.Object TextLine Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Comparison Assembly : cs.temp.dll.dll Syntax public class TextLine : IComparable Fields Line The line content Declaration public string Line Field Value Type Description System.String Methods CompareTo(Object) Compares this instance against the given instance Declaration public int CompareTo(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Int32"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Comparison.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Comparison.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.Resource.Comparison | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.Resource.Comparison Classes DiffEngine Computes the differences between two sources DiffResultSpan Defines a diff result span TextFileDiffList Represents a list of differences TextLine Represents a line of text in a diff Interfaces IDiffList Defines a list of difference Enums DiffEngineLevel Controls the level of perfection required when computing the differences DiffResultSpanStatus Defines the status of a diff result span"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.ApplicationDefinitionValidator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.ApplicationDefinitionValidator.html",
    "title": "Class ApplicationDefinitionValidator | MapGuide Maestro",
    "keywords": "Class ApplicationDefinitionValidator Resource validator for Fusion Flexible Layouts Inheritance System.Object ApplicationDefinitionValidator Implements IResourceValidator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public class ApplicationDefinitionValidator : IResourceValidator Properties Connection The server connection which validation will be performed against Declaration public IServerConnection Connection { get; set; } Property Value Type Description IServerConnection SupportedResourceAndVersion Gets the resource type and version this validator supports Declaration public ResourceTypeDescriptor SupportedResourceAndVersion { get; } Property Value Type Description ResourceTypeDescriptor Methods Validate(ResourceValidationContext, IResource, Boolean) Validats the specified resources for common issues associated with this resource type Declaration public ValidationIssue[] Validate(ResourceValidationContext context, IResource resource, bool recurse) Parameters Type Name Description ResourceValidationContext context IResource resource System.Boolean recurse Returns Type Description ValidationIssue [] Implements IResourceValidator"
  },
  "index.html": {
    "href": "index.html",
    "title": "MapGuide Maestro | MapGuide Maestro",
    "keywords": "MapGuide Maestro MapGuide Maestro is an Open Source ( LGPL 2.1 ) map authoring application for MapGuide Open Source and Autodesk Infrastructure Map Server . MapGuide Maestro is written in 100% managed C#, targeting the .net Framework. It consists of: The Maestro windows application. Provides specialized user interfaces for editing most resource types supported by MapGuide/AIMS Designed for maximum productivity and authoring efficiency Provides validation services with a rich set of validation rules for ensuring integrity of your resources, data sources and configurations. Maestro is built on a flexible extension architecture allowing for custom addins. Some addins bundled with Maestro include: An addin for managing resources in a locally bundled mg-desktop An addin for creating and editing mapguide-rest configuration files. An addin for scripting/automating Maestro via IronPython An API (MaestroAPI) that provides unified access to services provided by MapGuide/aims that consists of: A strongly-typed model library that models all the resources provided by MapGuide/AIMS, allowing you to work with classes, interfaces and objects instead of manipulating XML documents. A unified provider-based API for accessing services provided by MapGuide/AIMS through a common set of interfaces: A HTTP provider for accessing the mapagent A provider that wraps the official MapGuide API A provider that wraps the mg-desktop API MapGuide Maestro is designed with flexiblity in mind. The application tries very hard not to take any options away, and always allows you to edit the internal XML representation of any resources you are working with. This ensures that features that are missing from the specialized editor user interfaces can still be accessed, and allows Maestro to be future-proofed against any new resource types that MapGuide/AIMS may introduce in the future. This project is not affiliated with Autodesk or OSGeo. Unsupported Features MapGuide Maestro aims to support most of the features avalible in MapGuide Open Source and AIMS, but a few things are not (and will not) be supported: Creating and editing Symbol Library resources Full support for Load Procedures. Current support only covers loading of SDF/SHP/SQLite files without no support for file conversion or transforming coordinates. Issues/Questions/etc When using the tool, please bear in mind that the project is a continual work in progress, and may not always perform as expected. Try to keep backups of all important data. If you encounter an error, or have a feature request, please check our issue list , and if it has not already been reported ​please report it (You must have a GitHub account). If you have a question about the usage, you can ask at the mapguide-users mailing list ."
  },
  "userguide/differences.html": {
    "href": "userguide/differences.html",
    "title": "Differences between Maestro and MapGuide Studio | MapGuide Maestro",
    "keywords": "Differences between Maestro and MapGuide Studio Note As of the 2012 release, MapGuide Enterprise is now known as Autodesk Infrastructure Map Server and the MapGuide Studio product is now called Autodesk Infrastructure Studio. This section will refer to these products by their old names. Both Maestro and MapGuide Studio fulfill the same purpose: To create, author and publish spatial data on a MapGuide Server. However there are some main differences: MapGuide Studio is a commerical product that comes with a MapGuide Enterprise licence only. It cannot be purchased separately. MapGuide Maestro is free and open-source. It is the only viable authoring solution for a MapGuide Open Source user. A licensed MapGuide Enterprise user has the choice of either tools when authoring. Fortunately, MapGuide Maestro is a capable alternative to MapGuide Studio. Besides the base shared features of loading/creating/publishing data, both tools have their own unique set of features, which this section will cover. Features unique to MapGuide Studio / Autodesk Infrastructure Studio MapGuide Studio supports loading of DWG files and raster images. Due to licensing and/or the need to be multi-platform, Maestro does not (and probably will never) support these features. MapGuide Studio supports creating and editing Symbol Libraries. Maestro cannot edit Symbol Libraries, however it has read support for these resources and Maestro supports symbol selection from Symbol Libraries. MapGuide Studio supports the \"Convert to SDF\" and generalization options of Load Procedures. Autodesk Infrastructure Studio (2013 onwards) supports publishing DWG files directly with no conversion and full visual fidelity. Autodesk Infrastructure Studio supports creating connections to Industry Model (Topobase) data sources. Features unique to MapGuide Maestro Maestro is multi-platform. It runs on Windows, Linux and Mac OSX. Maestro can connect to many different versions of MapGuide Open Source and MapGuide Enterprise (as far back as MGOS 1.2 / MGE 2008) Maestro supports validating resources ensuring data/resource integrity and trapping common errors and pitfalls that would normally be silent under MapGuide Studio. Maestro has a small installation footprint compared to MapGuide Studio. Maestro allows you to edit any resource in its XML form. The XML editor is used as a fallback measure if Maestro encounters unsupported or unrecognised resources. Maestro supports all known resource versions. Maestro will never silently upgrade your resources to the latest version. Maestro's functionality can be extended by users, either through dedicated extension APIs or through the built-in IronPython scripting engine. Maestro supports custom resource templates Maestro supports the creation and loading of MapGuide Packages (MGP) without needing to use the Site Administrator web application. Maestro has a more active development cycle. Maestro offers plenty of tools and shortcuts that greatly improves authoring productivity. Maestro supports authoring data from an mg-desktop application Maestro includes other various tools and utilities that fully exploit the services provided by MapGuide A Feature Source previewing utility A Runtime Map state inspection tool A tile pre-generation tool (MgCooker) A \"Live\" Map Definition editor that supports editing workflows similar to MapGuide Author 6.5 and much more!"
  },
  "userguide/edit_xml.html": {
    "href": "userguide/edit_xml.html",
    "title": "Editing via the XML editor | MapGuide Maestro",
    "keywords": "Editing via the XML editor The XML Editor is the generic editor that can be used to edit the XML form of any resource in the MapGuide Server. If you are intimately familiar with the XML schema of the resource in question, editing via the XML editor can often be much faster in terms of productivity than having to go through the specialized editor. The Generic XML editor For resources that are not recognised by the current release of Maestro or a specialized editor does not exist, this editor will be used as a fallback. Otherwise, you can choose to open any resource in the XML editor by right clicking the resource in the Site Explorer and choosing the Open Resource with XML Editor context menu item. Note You cannot have an XML editor or specialized editor editing the same resource. Maestro will not let it happen. If you are editing a resource via a specialized editor, you can instantly go to and edit the resource in its XML form via the XML editor with the Edit as XML toolbar command. The Edit as XML command Upon saving the XML content in this mode, the original specialized editor will be immediately refreshed with the latest resource settings."
  },
  "userguide/expr_editor.html": {
    "href": "userguide/expr_editor.html",
    "title": "The Expression Editor | MapGuide Maestro",
    "keywords": "The Expression Editor MapGuide has a built-in expression language, which allows for flexible computations based off of existing feature class property values to be used for various Layer stylization purposes. Some uses of expressions include: The Hyperlink property of a Layer Definition being the concatenated expression of several string properties. The Tooltip property of a Layer Definition being the concatenated expression of several string properties and fragments of html content. Maestro provides an Expression Editor that can assist in writing these FDO expressions. Any resource editor field that can accept an FDO expression will give you the option of using this editor. The Properties toolbar button lists all the available feature class properties. The Functions toolbar button lists all the available expression functions. The Filter toolbar button lists all the available conditional and filtering expressions. Also on the toolbar is the ability to fetch all distinct values for a given property. To do this, select the desired property in the first dropdown, then click the arrow on the right to load all the distinct values into the second dropdown. Note The types of functions and expressions available depend on the underlying FDO provider's capabilities. For example, editing a Tooltip expression on a Layer Definition will only use functions and expressions supported by the Feature Source the Layer Definition is referencing. The Expression Editor also has built-in auto-complete that brings up possible property/function suggestions as you type. You can invoke auto-complete at any time by pressing Alt + Right key"
  },
  "userguide/installation.html": {
    "href": "userguide/installation.html",
    "title": "Installing MapGuide Maestro | MapGuide Maestro",
    "keywords": "Installing MapGuide Maestro MapGuide Maestro is available in two forms: A windows executable installer A zip file Installing on Windows You can choose either the installer or zip file Note MapGuide Maestro requires .net Framework 4.6.1 installed first. The installer will download and install this for you if it is not present Note As of the 4.0 release of Maestro, the zip package differs from the installer package in that the zip package does not include the :doc: Local Connection Mode <local_connection_mode> feature. Installing on Linux/Mac OSX Warning MapGuide Maestro is not tested for these platforms. Binaries are only provided for the adventurous. Note Before you run MapGuide Maestro, you need to install the Mono framework. Mono is available for download here The installation is simply unzipping the file: unzip \"MapGuideMaestro-5.0.0-Release.zip\" Then run the application: cd Maestro mono Maestro.exe Note For distributions like Ubuntu, the Mono package is split into several components. You need to ensure that the winforms component is installed. The following command installs it for Ubuntu:: sudo apt-get install mono-runtime libmono-system-windows-forms4.0-cil libmono-system-core4.0-cil libmono-system-numerics4.0-cil libmono-system-web4.0-cil For other distros, please consult your system documentation. Note Please note that Mono support for WinForms is not 100% stable. Even though WinForms is feature complete, some features do not work flawlessly. This means that there are occasional drawing problems. Flipping a tab page back and forth usually solves the problem. Some buttons are missing, because Mono renders them outside the visible area. There are also some issues with certain icons. For best results, use the most current release of Mono (currently 2.10.2) where possible. The minimum usable release is Mono 2.8 Note The :doc: Local Connection Mode <local_connection_mode> feature is only available on windows. The zip package does not include this feature."
  },
  "userguide/introduction.html": {
    "href": "userguide/introduction.html",
    "title": "Introduction | MapGuide Maestro",
    "keywords": "Introduction MapGuide Maestro is an Open Source (LGPL) map authoring tool for MapGuide Open Source and Autodesk MapGuide Enterprise / Autodesk Infrastructure Map Server. MapGuide Maestro is a free application that can ease the management of spatial data in a MapGuide Server. MapGuide Maestro is a windows application written in 100% managed C#, targeting the .Net 2.0 Framework and can run in Linux and Mac OSX with the Mono framework ( http://www.mono-project.com ). It consists of a user interface, and an API (Maestro API). The API wraps server communication and Xml formats, in easily accesible, fully managed classes. It can use the official MapGuide API for fast access on the local network, or a fully managed http-only connection. Other connection types are planned in future releases. MapGuide Maestro is designed with flexibility and extensibility in mind. The tool tries very hard not to take any options away, and always allows you to edit the internal Xml of the feature you are working with. This ensures that features that are missing from the interface can still be accessed."
  },
  "userguide/localpreview.html": {
    "href": "userguide/localpreview.html",
    "title": "Using Local Feature Source Preview | MapGuide Maestro",
    "keywords": "Using Local Feature Source Preview Note Server support for the operations used by this tool have questionable reliability for MapGuide Open Source 2.1 and older releases (and corresponding MapGuide Enterprise versions). As such, this tool is only recommended for use in MapGuide Open Source 2.2 (MapGuide Enterprise 2011) and newer releases. The Preview toolbar command when used on a Feature Source editor will bring up a web-based schema inspector on that Feature Source. This schema inspector allows you to view the Feature Classes in the Feature Source with the ability to either view the data attributes or preview the data as rendered on a map with basic styles applied. However this schema inspector is very basic in its functionality. You cannot for instance, do any of the follwing: Run or test certain feature queries on a Feature Source to see what kind of result we get back. Similarly, run or test certain SQL queries on a Feature Source for FDO providers that support such capability. Maestro includes a Local Feature Source Preview tool that is designed to overcome such limitations of the web-based schema inspector. This tool is available: From the Tools menu On the Maestro Start Menu folder if you installed Maestro via the windows installer. In the Feature Source editor under the Other Options panel. Once again like MgCooker , this tool requires you to login on startup. Once logged in select the feature source to be previewed. Once the feature source is selected, the left pane will be populated with all feature schemas found and their Feature Classes (and their properties) To open a specific feature class for running queries, select the desired Feature Class node (represented by a table/spreadsheet). Two buttons on the toolbar will be activated when you do this: The SQL query command (indicated by the SQL icon) The feature query command (indicated by the magnifying icon) Click either one to open the query interface. From here specify an optional filter (which is a FDO filter expression), and optionally check/uncheck the properties you want to show as part of the query result, and any computed properties. Computed properties are FDO expressions. Once you have specified your query parameters, click Run Query to execute the query. Note Avoid issuing feature queries without a filter, large result sets being transferred over http can bring heavy load to a MapGuide Server and the Web Tier. To close any query interface, click the close button on the left pane toolbar (indicated by a cross)."
  },
  "userguide/local_connection_mode.html": {
    "href": "userguide/local_connection_mode.html",
    "title": "The Local Connection Mode | MapGuide Maestro",
    "keywords": "The Local Connection Mode The Local Connection Mode is a new feature of Maestro that allows you to work with a resource repository that is local on your machine. The Local Connection Mode is designed for the following user scenarios: Authoring resources and spatial data locally without requiring any connectivity to a MapGuide Server Authoring/editing resources for a mg-desktop based application Note The Local Connection Mode feature is only available on Windows. Note The physical location of the local repository is situated in: %APPDATA%\\MgLocal\\Repositories To connect to your local repository, select the Connect Locally option. For the Platform Configuration File , select the Platform.ini file in the Maestro installation directory. Then click OK to connect to your local repository. At this point, your local repository functions pretty much like a MapGuide Server repository. You can load packages into this repository and you can package data from this repository. Note If the Connect Locally option is disabled on Windows, you can enable it by running LocalConfigure.exe in your Maestro installation directory. This program is automatically run the first time Maestro is run (after installation)"
  },
  "userguide/mapguide_terminology.html": {
    "href": "userguide/mapguide_terminology.html",
    "title": "Understanding MapGuide Resources | MapGuide Maestro",
    "keywords": "Understanding MapGuide Resources .. todo:: Currently copy/paste of existing wiki content Before you can start using MapGuide Maestro, you must understand how MapGuide divides the different parts that make up a map. To understand the MapGuide Maestro interface, you must also have a knowledgde of the names used in MapGuide. .. todo:: Detail the features offered with each schema revision. Most of this already is covered in resource-readme.txt in the Maestro source code. There are many types of resources that can be stored in a MapGuide Server Feature Sources Introduced: MapGuide Open Source 1.0 / MapGuide Enterprise 2007 Version(s): 1.0.0 - MapGuide Open Source 1.0 / MapGuide Enterprise 2007 Feature Sources describe a FDO connection to a particular data store, which could be inside the MapGuide Server or stored externally. (see below: Spatial Data and Regular Data) Drawing Sources Introduced: MapGuide Open Source 1.0 / MapGuide Enterprise 2007 Version(s): 1.0.0 - MapGuide Open Source 1.0 / MapGuide Enterprise 2007 Drawing Sources are DWF data sources which provide drawing data with full visual fidelity. Layer Definitions Introduced: MapGuide Open Source 1.0 / MapGuide Enterprise 2007 Version(s): 1.0.0 - MapGuide Open Source 1.0 / MapGuide Enterprise 2007 1.1.0 - MapGuide Open Source 1.2 / MapGuide Enterprise 2008 1.2.0 - MapGuide Open Source 2.0 / MapGuide Enterprise 2009 1.3.0 - MapGuide Open Source 2.1 / MapGuide Enterprise 2010 2.3.0 - Autodesk Infrastructure Map Server 2012 2.4.0 - MapGuide Open Source 2.4 / Autodesk Infrastructure Map Server 2013 Layer Definitions describe how data from a Feature Source is to be styled. (see below: Displaying Data) Layer Definitions are can be shared among different maps. Map Definitions Introduced: MapGuide Open Source 1.0 / MapGuide Enterprise 2007 Version(s): 1.0.0 - MapGuide Open Source 1.0 / MapGuide Enterprise 2007 2.3.0 - MapGuide Open Source 2.3 / MapGuide Enterprise 2012 2.4.0 - MapGuide Open Source 2.4 / Autodesk Infrastructure Map Server 2013 Map Definitions contains one or more Layer Definitions grouped together and sorted by drawing order. Web Layouts Introduced: MapGuide Open Source 1.0 / MapGuide Enterprise 2007 Version(s): 1.0.0 - MapGuide Open Source 1.0 / MapGuide Enterprise 2007 1.1.0 - MapGuide Open Source 2.2 / MapGuide Enterprise 2011 2.4.0 - MapGuide Open Source 2.4 / Autodesk Infrastructure Map Server 2013 Describes the user interface for the AJAX viewer (see: Understanding MapGuide Applications - Web Layouts) Application Definitions Introduced: MapGuide Open Source 2.0 / MapGuide Enterprise 2009 Version(s): 1.0.0 - MapGuide Open Source 2.0 / MapGuide Enterprise 2009 Describes the user interface for the Fusion viewer (see: Understanding MapGuide Applications - Application Definitions) Load Procedures Introduced: MapGuide Open Source 1.0 / MapGuide Enterprise 2007 Version(s): 1.0.0 - MapGuide Open Source 1.0 / MapGuide Enterprise 2007 1.1.0 - MapGuide Open Source 2.0 / MapGuide Enterprise 2009 2.2.0 - MapGuide Open Source 2.2 / MapGuide Enterprise 2011 Describes to a client application like MapGuide Studio, how to load a set of data files into the MapGuide Server Print Layouts Introduced: MapGuide Open Source 1.0 / MapGuide Enterprise 2007 Version(s): 1.0.0 - MapGuide Open Source 1.0 / MapGuide Enterprise 2007 Describes the printing layout for a DWF plot operation Symbol Libraries Introduced: MapGuide Open Source 1.0 / MapGuide Enterprise 2007 Version(s): 1.0.0 - MapGuide Open Source 1.0 / MapGuide Enterprise 2007 Describes a collection of DWF-based symbols that can be used for point styles in a Layer Definitions There is no specialized editor support for Symbol Libraries. Opening Symbol Libraries will default to the generic XML editor. Symbol Definitions Introduced: MapGuide Open Source 1.2 / MapGuide Enterprise 2008 Version(s): 1.0.0 - MapGuide Open Source 1.2 / MapGuide Enterprise 2008 1.1.0 - MapGuide Open Source 2.0 / MapGuide Enterprise 2009 2.4.0 - MapGuide Open Source 2.4 / Autodesk Infrastructure Map Server 2013 Describes a cartographic symbol, which has lots of display and customisation parameters. Used by Layer Definitions. Watermark Definitions Introduced: MapGuide Open Source 2.3 / MapGuide Enterprise 2012 Version(s): 2.3.0 - MapGuide Open Source 2.3 / MapGuide Enterprise 2012 Describes a watermark that is rendered as part of the map when viewing it. Used by Map Definitions."
  },
  "userguide/mgcooker.html": {
    "href": "userguide/mgcooker.html",
    "title": "Using MgCooker | MapGuide Maestro",
    "keywords": "Using MgCooker Note A new tile seeder tool MgTileSeeder is in development that will supercede and eventually replace the MgCooker tool. For information on how to use MgTileSeeder , see Using MgTileSeeder Tiled Maps improve display performance by rendering the maps in tiles and keeping them stored in a special directory known as the Tile Cache . Subsequent views of the same map area will skip the rendering process and serve the already rendered tiles from the Tile Cache which is much faster. Having these tiles pre-generated up front allows you to get a view of the map in a near instant, because the potentially costly rendering operations are avoided. MgCooker is such a tool to allow you to pre-generate these tiles. MgCooker is available from the Tools menu in Maestro Note If you installed Maestro via the installer, MgCooker is also available on the Maestro Start Menu folder. MgCooker requires you to login on startup. Once logged in, it will show the list of Map Definitions with tiled layers. From here, tick the Map Definitions and the Base Layer Groups that you want to pre-generate tiles for. In addition other settings are available for you: You can set the upper limit of the number of tiles to generate You can customize the tile generation method. You can configure how many threads to generate tiles. Each thread effectively simulates an end-user looking at your specified tiled maps. Based on the method chosen, the way the simulated user navigates could be systematic or completely random. Once you have specified you settings you have the following options: Start the tile generation process by clicking Build tiles now . This process can take several hours to several days depending on the size of the maps being pre-generated. Save this out to a windows batch file, which will execute MgCooker from the command-line with your specified settings. This is useful for automation via the Windows Task Scheduler"
  },
  "userguide/mgtileseeder.html": {
    "href": "userguide/mgtileseeder.html",
    "title": "Using MgTileSeeder | MapGuide Maestro",
    "keywords": "Using MgTileSeeder Introduction MgTileSeeder is the successor to MgCooker . It has the following improvements over MgCooker : Supports seeding of XYZ tile sets introduced in MapGuide Open Source 3.0 Can also function as a generic seeder for any tile set based on a XYZ tiling scheme (eg. OpenStreetMap) A simpler, cleaner design with pluggable tile walking strategies MgTileSeeder is a truly cross-platform console application, targeting .net Core 2.0 (and all the platforms supported by .net Core 2.0) Unlike MgCooker , the MgTileSeeder tool is currently a purely commandline tool. There is no GUI counterpart. Note MgTileSeeder is also only available currently as a standalone package. It is not currently bundled with MapGuide Maestro. Usage MgTileSeeder has 2 modes of operation: Standard tiling of MapGuide tiled map definitions or tile sets (using the default provider) XYZ tiling of any XYZ tile set url with {x} , {y} and {z} placeholders and a specific bounding box in lat/long coordinates The basic command syntax for standard tiling is as follows: MgTileSeeder.exe mapguide --mapagent <mapagent url> --map <mapdefinition/tileset resource id> --meters-per-unit <meters per unit> [--username <MapGuide username>] [--password <MapGuide user password>] [--groups <Base Layer Group Names>] [--minx <BBOX minx>] [--miny <BBOX miny>] [--maxx <BBOX maxx>] [--maxy <BBOX maxy>] The basic command syntax for xyz tiling is as follows: MgTileSeeder.exe xyz --url <url> --minx <BBOX minx> --miny <BBOX miny> --maxx <BBOX maxx> --maxy <BBOX maxy> Examples The following example starts a tiling run for a tiled map Library://Samples/Sheboygan/MapsTiled/Sheboygan.MapDefinition MgTileSeeder mapguide --mapagent \"http://localhost/mapguide/mapagent/mapagent.fcgi\" --map \"Library://Samples/Sheboygan/MapsTiled/Sheboygan.MapDefinition\" --meters-per-unit 111319.4908 The following example starts a tiling run for a XYZ tileset Library://Samples/Sheboygan/TileSets/Sheboygan.TileSetDefinition MgTileSeeder xyz --url \"http://localhost/mapguide/mapagent/mapagent.fcgi?OPERATION=GETTILEIMAGE&VERSION=1.2.0&CLIENTAGENT=OpenLayers&USERNAME=Anonymous&MAPDEFINITION=Library://Samples/Sheboygan/MapsTiled/Sheboygan.MapDefinition&BASEMAPLAYERGROUPNAME=Base+Layer+Group&TILECOL=${y}&TILEROW=${x}&SCALEINDEX=${z}\" --minx -87.797866013832 --miny 43.6868578621819 --maxx -87.6645277718692 --maxy 43.8037962206133 Note the {x} , {y} and {z} placeholders in the above example. MgTileSeeder's xyz mode can work with any XYZ tile set (not just ones served by MapGuide)."
  },
  "userguide/other_resources.html": {
    "href": "userguide/other_resources.html",
    "title": "Other Resources | MapGuide Maestro",
    "keywords": "Other Resources It is hoped that this user guide has given you enough information to get comfortable in authoring data in Maestro. However, should you have any questions or require more information, there are many online resources to help. The Maestro wiki The mapguide-users mailing list . User discussion of all things mapguide related. A Nabble front-end exists too, but you must be registered on the mailing lists for your Nabble posts to properly make it back to the mailing lists The author's blog . Contains lots of Maestro, MapGuide and FDO tips and tricks. If you do find bugs or have an idea for a product enhancement, please do not hesistate to file an issue"
  },
  "userguide/other_tools.html": {
    "href": "userguide/other_tools.html",
    "title": "Other Tools | MapGuide Maestro",
    "keywords": "Other Tools Besides MgCooker and the Local Feature Source Preview tool, there are other minor tools available in Maestro which provide valuable functionality. These are described below and are all accessible from the Tools application menu in Maestro. Server Status Monitor The Server Status Monitor tool provides current server uptime, memory and operation statistics. The information is refreshed every 5 seconds. Server Status Monitor Feature Source Cache Viewer The Feature Source Cache Viewer allows you to see what FDO providers are currently have cached connections and lists what Feature Sources currently have cached connections. Feature Source Cache Viewer"
  },
  "userguide/packaging.html": {
    "href": "userguide/packaging.html",
    "title": "Packaging Data | MapGuide Maestro",
    "keywords": "Packaging Data MapGuide Packages allow you to import and export portions of the MapGuide Server repository to another MapGuide Server repostiory. It is a very useful way to backup, migrate and deploy data from one MapGuide Server to another. The MapGuide Server Site Administrator web application allows you to load and create these packages. But has some downsides: It is a server-side web application. Loading and retrieving packages requires the package be stored physically on the server's package directory Ability to automate such a process is limited. Questionable reliability with really large package files. MapGuide Maestro however, allows you to load and create such packages completely on the client-side . Creating Packages There are 2 ways to load a package: The Package - Package Folder menu option. Right clicking the desired folder in the Site Explorer and choosing the Package Folder option. The time it takes to create a package is a function of how many resources in total are in the folder to be packaged up. Loading Packages There are 2 ways to load a package: The Package - Load Package menu option Dragging and dropping the package file into the Site Explorer The time it takes to load a package is a function of how large the package is. Once loaded, the Site Explorer will refresh itself. When loading a package, you will be presented with the following options: Package loading options Each option is described below. Transactional Loading Transactional loading is the default loading mechanism. There is no way to measure loading progress, but the operation itself will either wholly succeed or wholly fail (hence the transactional nature of this operation). This operation is safe to use on small to moderately sized package files, and does not affect the integrity of the repository regardless of the result. Non-Transactional Loading Non-transactional loading is a new loading mechanism designed to work around the limitations of the default loading mechanism: The inability to measure/track progress More reliability with loading large package files (several hundred MBs in size) With the non-transaction loading approach, progress can be measured: Non-transactional packaging progress Should any package operations fail, they are logged and presented to the user at the end of the operation. Failed Non-transactional packaging operations At this point you can retry these failed operations, and only the failed operations will be re-executed. Otherwise you can close the dialog to complete this package loading operation. Note Because Maestro communicates to the MapGuide Server over http, loading large packages (over several hundred MBs) can be problematic. As such using the Site Administrator is recommended. Otherwise, an data moving strategy is required (eg. Repository backup/restore or use of aliases instead of embedded data files) Editing Packages Maestro also includes a package editing tool. To edit a package, select Package - Package Editor from the menu. Select the package file to edit, and the Package Editor dialog will be displayed. Package Editor Dialog The Package Editor shows the layout of the Package and the resources that would be created if this package were to be loaded. Package Editing Options To create a new folder, select New Folder to create a new folder at the selected folder node. To edit the name of this folder, click the node label until an edit box appears. To create a new resource to be loaded, select New Resource to create a new resource entry at the selected resource node. You will get a dialog to specify the location of the resource content file Add Resource Dialog To delete a folder or resource, select the node and click Delete to delete the selected resource or folder node. To add resource data for a resource entyr, select the resource node and use the Data Files user interface to add your resource data files. Once you have made your changes, click OK to save this to a new package. Clicking Cancel will discard all modifications"
  },
  "userguide/publish_workflow.html": {
    "href": "userguide/publish_workflow.html",
    "title": "The Maestro Publishing Workflow | MapGuide Maestro",
    "keywords": "The Maestro Publishing Workflow The basic workflow for creating maps and publishing them in Maestro is shown below The first step is to connect to a MapGuide Server. Maestro will always prompt for a login when starting up. 1. Find Data For this step, you have 2 choices. Create a Load Procedure . A Load Procedure specifies a set of source files to load from. When the Load Procedure is executed, the following occurs: A Feature Source is created for each source file A default Layer Definition is created for each created Feature Source Load Procedures will always load the source files into the MapGuide Server as embedded resource data of the Feature Source. If you want to maintain a connection to externally stored files, then you will have to create these Feature Sources manually. This approach is a quick way to load data into MapGuide. Load Procedures can be saved and executed at a later point in time to refresh this data. Create Feature Sources . For data sources like relational databases or web services, you do not have the Load Procedure option available. So therefore you have to create these Feature Sources manually. If you want to connect to externally stored or aliased data files, you have to use this approach. 2. Build Layers For this step, create Layer Definitions that point to a Feature Source . Layer Definitions give defines style and presentation rules for data coming from a Feature Sources . You can do things like: Theme data by attributes Style line thickness by attributes (or a computed expression based on attributes) Size point features by attributes (or a computed expression based on attributes) Use attributes (or a computed expression based on attributes) for feature labels Filter data by an attribute filter Layer Definitions also contains settings for viewer interactions. You can specify a tooltip that is shown when you put a mouse over a feature from this layer. This can be an attribute or a computed expression based on attributes You can specify a url that is launched when the user selects a feature from this layer. This can be an attribute or a computed expression based on attributes. If you created and executed a Load Procedure , then these Layer Definitions have been created for you. However these are created with default settings (monochromatic styles with basic symbology). So you will have to open and edit these resources to suit your needs. 3. Make a Map For this step, create a Map Definition and bring in the Layer Definitions you have created. Organise these layers into groups (optional) and sort them by drawing order with rasters and polygon layers at the bottom, followed by line layers, then followed by point layers. You don't need to specifically follow this draw order, but it's a generally useful rule to follow. For layers that change very rarely, you can set them as tiled layers. Tiled layers are rendered once as tiles and stored into a Tile Cache. Subsequent requests for the same view will request the cached tiles. This is a useful way to improve map performance. Note If you edit and save a map with tiled layers, the existing Tile Cache is deleted, as the generated tiles most likely no longer apply to the new map. Maestro will warn you about such situations. 4. Make the map available For this step. You can create either a Web Layout or a Application Definition which describe the viewer interface which to view and interact with the map. A Web Layout describes the user interface and functionality for the basic AJAX viewer. The AJAX viewer provies basic functionality for map viewing and interaction. A Flexible Layout describes the user interface and functionality for the Fusion viewer. The Fusion viewer has greater flexibility in terms of looks and functionality. Once you saved either resource, a preview URL will be visible in the respective editor. This URL allows your users to view the specific map using the specified viewer application."
  },
  "userguide/resource_validation.html": {
    "href": "userguide/resource_validation.html",
    "title": "Resource Validation | MapGuide Maestro",
    "keywords": "Resource Validation Resource integrity is a very important issue when authoring and publishing data in MapGuide. Doing something as innocuous as deleting a resource may inadvertently break any number of resources that may be depending on it. There are other common scenarios that can cause resource breakage: You have edited or removed a column in a database table from a Feature Source that is referenced by one or more layers. Rendering of this layer may either break or be incorrect. You have renamed a Layer Definition that one or more Map Definitions reference. You have deleted a custom command in a Web Layout that is referenced in a toolbar or menu Most of these scenarios result in usually the same outcome: You don't see things on the map that you would normally expect to be there. Fortunately, MapGuide Maestro provides a powerful Resource Validation facility that you can use to validate a given resource against such common scenarios. To validate a resource, right click it in the Site Explorer and select the Validate context menu item. Upon completion of validation, any warnings or errors are displayed in a dialog for you to review Validation Results Dialog Any information or warnings encountered during validation do not affect display of the map. These are generally about performance, source data and non-sensical (but not error-causing) configuration values. Note Resource Validation is automatically done by resource editors before saving a resource. If you are confident in your authoring capabilities, this may be unnecessary. An option is available for you to turn this off."
  },
  "userguide/rest_explorer.html": {
    "href": "userguide/rest_explorer.html",
    "title": "The REST Explorer | MapGuide Maestro",
    "keywords": "The REST Explorer The REST Explorer is an optional addin for connecting to and working with mapguide-rest configurations About configurations A mapguide-rest configuration is a JSON document that defines how a particular Feature Source or Layer Definition is exposed in a RESTful manner via mapguide-rest. Feature data in a Feature Source or Layer Definition configured for RESTful access can be accessed through a standard HTTP client with standard verbs ( GET , POST , PUT , DELETE ) and established conventions for each particular verb. The REST Explorer provides a specialized user interface for browsing, creating and editing mapguide-rest configurations. You can read more about mapguide-rest configurations from the mapguide-rest wiki Connecting to a mapguide-rest instance To connect to a mapguide-rest instance, click the connect button on the REST Explorer toolbar This will open a login dialog for you to enter the endpoint and credentials. Use the same Administrator/Author credentials as you would for a normal MapGuide Site connection. Once connected, the REST Explorer will enumerate all known configurations Expanding a configuration node will list any associated template files for that configuration Creating a new configuration To create a new mapguide-rest configuration, establish a mapguide-rest connection and click the add button. This will open the REST Configuration dialog where you can proceed to edit the configuration. 1. Set the URI part Enter the URI part in the provided text box. The basically defines the RESTful endpoint where this resource is accessible from. For example, assuming mapguide-rest is available at http://localhost/mapguide/rest , a URI part of parcels means the RESTful endpoint for this resource is available at: http://localhost/mapguide/rest/data/parcels The various representations you can configure for this resource hang off of this base URL endpoint. For example, if you configured an XML representation, you can access XML feature data for your resource by doing a GET request to: http://localhost/mapguide/rest/data/parcels/.xml 2. Set a source Choose either a Feature Source or Layer Definition , Either option will present a resource picker where you can select the Feature Source or Layer Definition to use. Once selected, the source JSON fragment will be added to the document 3. Add one or more representations Once you've set a source, you need to add one or more representations via the Add Representation menu. The following representations are available: XML - Feature data in this source can be accessed as XML GeoJSON - Feature data in this source can be accessed as GeoJSON CSV - Feature data in this source can be accessed as CSV (Comma-Separated Values) Image - Feature data in this source can be rendered out as a map image Template - Feature data in this source can be rendered out through user-defined textual templates Depending on the representation you chose you will get a new dialog that lets you configure each supported verb of the selected representation. Each method is detailed below Representation Details - GET The GET representation UI lets to you define the behavior of how responses are returned when an application makes a GET request to this RESTful endpoint The main options mainly revolve around: Feature Limit and Pagination Exposing what feature properties can be returned The coordinate system to transform feature geometries to Any additional computed properties to expose in the response Permissions on what users/groups can access this RESTful endpoint via the GET method Representation Details - POST/PUT/DELETE The UI for specifying POST , PUT and DELETE all concern permissions to define which users and groups are allowed to make requests to this RESTful endpoint for the given method The settings are the same as the Permissions section of the GET represenation configuration Adding template files If you configured a RESTful endpoint with a template representation, you will need to upload the required template files under that configuration. To do this, select the endpoint configuration node and click the button to add files. This will present a file picker where you can select the template file to upload. Once uploaded, the file will appear as a child node under the configuration node, and the file name can be referenced in the template representation settings"
  },
  "userguide/scripting_and_automating_maestro.html": {
    "href": "userguide/scripting_and_automating_maestro.html",
    "title": "Scripting and Automating Maestro | MapGuide Maestro",
    "keywords": "Scripting and Automating Maestro Note The IronPython Console feature is only available on Windows and is only bundled with the Windows installer package of Maestro As mentioned in the section ( The Maestro User Interface ), Maestro includes an IronPython Console which provides the user an interactive scripting environment to drive and automate certain parts of the Maestro application with IronPython code About IronPython IronPython is an open source implementation of the Python programming language which is tightly integrated with the .net Framework. IronPython can use the .net Framework and Python libraries and also allows for .net applications to easily use Python code. Maestro embeds an IronPython scripting engine allowing for easy scripting and automation of the application by users. For more information about the .net specific details of IronPython, click here The Host Application The IronPython Console exposes a top-level global object named app , which represents the Maestro Host Application. The Host Application provides the following services: Displaying messages/questions in a dialog box Displaying file pickers for file selection Obtaining IServerConnection references Convenience methods to fetch/set resource XML content by their resource id A UI-thread invoker for running UI interaction code from a background thread The IServerConnection interface represents the top-level interface of the Maestro API and is the gateway into most of the functionality that is offered by the Maestro API. Each root node (connection) in the Site Explorer represents an IServerConnection instance. The Host Application gives you the ability to retrieve such instances in order to be able to work with resources under that connection instance. You can bring up documentation of any object or function with the help command. For example, to describe the structure of our global Host Application: >>> help(app) ?Help on HostApplication in module __builtin__ | A simplified helper class that is exposed to python scripts to provide | convenience functionality or to workaround concepts that don't cleanly | translate to IronPython (eg. Generics) | | HostApplication() | | | Data and other attributes defined here: | | AskQuestion(...) | AskQuestion(self: HostApplication, title: str, question: str) -> bool | | Prompts for a question that requires a boolean response | | GetConnection(...) | GetConnection(self: HostApplication, name: str) -> IServerConnection | | Gets the connection by its specified name | | GetConnectionNames(...) | GetConnectionNames(self: HostApplication) -> Array[str] | | Returns a list of the names of all currently open connections | | GetResourceXml(...) | GetResourceXml(self: HostApplication, conn: IServerConnection, resourceId: str) -> str | | Gets the XML content of the given resource id | | OpenEditor(...) | OpenEditor(self: HostApplication, conn: IServerConnection, resourceId: str) | Opens the default editor for the specified resource | | OpenUrl(...) | OpenUrl(self: HostApplication, url: str) | Launches the specified url | | PickFolder(...) | PickFolder(self: HostApplication, conn: IServerConnection) -> str | | Prompts a dialog to select a folder | | PickResourceOpen(...) | PickResourceOpen(self: HostApplication, conn: IServerConnection, resourceType: str) -> str | | Displays a resource picker for opening | | PickResourceSave(...) | PickResourceSave(self: HostApplication, conn: IServerConnection, resourceType: str) -> str | | Displays a resource picker for saving | | PreviewResource(...) | PreviewResource(self: HostApplication, conn: IServerConnection, resourceId: str, locale: str) | Launches a preview of the given open resource | | SetResourceXml(...) | SetResourceXml(self: HostApplication, conn: IServerConnection, resourceId: str, xml: str) | Sets the XML content of the given resource id | | ShowError(...) | ShowError(self: HostApplication, ex: Exception) | Displays an exception in a dialog | | ShowMessage(...) | ShowMessage(self: HostApplication, title: str, message: str) | Displays a message | | UIInvoke(...) | UIInvoke(self: HostApplication, method: Delegate) | Invokes the specified method on the UI thread. Methods that interact with the | UI or create UI components | must be done on this thread | | | __repr__(...) | __repr__(self: object) -> str | >>> Loading scripts The IronPython console also supports loading pre-defined scripts. Click Run File and select the python script you want to load. All classes and functions defined in that python script will be loaded into the console's global namespace. Example scripts You can find some example scripts here which may give you some ideas as to what you can do through scripting and automation with IronPython"
  },
  "userguide/understanding_applications.html": {
    "href": "userguide/understanding_applications.html",
    "title": "Understanding MapGuide Applications | MapGuide Maestro",
    "keywords": "Understanding MapGuide Applications Web Layouts Web Layouts describe the user interface and functionality of the basic AJAX viewer. Through the Invoke Script and Invoke URL commands, custom functionality can be added to this viewer. The Web Layout editor is composed of 3 main sections, each described below. General Settings The General Settings section of the editor allows you to configure the primary aspects of the web layout The title that is shown when the basic AJAX viewer is displayed in the web browser The Map Definition that this viewer will be displaying. The custom initial starting view. Visibility of certain viewer elements The initial task pane url The General Settings When saved, the AJAX Viewer URL is used to publically access this web layout from the internet or intranet. Note If you are making this web layout for public consumption over the internet, the host name in the AJAX Viewer URL may need to be changed to match the publically accessible domain name. This URL is generated based on the mapagent URL you used when you logged in. Menu and Toolbar Command Layout The Menus and Toolbars section of the editor allows you to define the command layout of the toolbar and menus in the basic AJAX viewer Menus and Toolbars The Available Commands box lists all the commands (built-in and custom) that can be added to the toolbar and menus Note Flyout Menus can only go one level deep. Although the XML schema permits nested flyout menus the AJAX viewer will not respect this. Command Set Configuration The Commands section of the editor allows you to add and configure custom commands. Command configuration The Custom Command Properties box allows you to edit the specific launch parameters of a custom command. There are 3 types of custom commands: Invoke Script Invoke URL Search Note Consult the MapGuide Developer's Guide for more information about implementing custom commands using the MapGuide API. For built-in commands. This box provides a read-only view of the command properties. If you have the same set of custom commands, having to re-add these custom commands to every web layout can be time consuming. The Web Layout editor provides you with the ability to export these custom commands out to an XML file. The commands in these XML files can be imported into another Web Layout. To export commands, click the Export toolbar button and select the XML file which you wish to save these exported commands to. To import commands, click the Import toolbar button and select the XML file containing your previously exported commands. Application Definitions Application Definitions describe the user interface of a Fusion viewer. The Fusion viewer is more customizable than the basic AJAX viewer in terms of looks and out-of-the-box functionality. Looks are defined in terms of templates, functionality is defined in terms of widgets. A Fusion viewer application is a specified template, loaded up with your specific selection of widgets. The Application Definition editor is composed of 4 main sections. Each is described below. Template Selection The Flexible Layout Settings section allows you to select the template to use and the title to show when displayed in a web browser. Template selection panel When saved, the Public URL will be generated which you allows end users to access this Application Definition publically over the intranet or internet. Note The same public URL generation rules apply to Application Definitions as it does for Web Layouts. It is generated based on the mapagent URL you used when you logged in. Map Configuration The Map Configuration section allows you to specify the Map Definition that this viewer is for. Map Configuration In addition there are various settings for integrating your map with commercial map layers. Note If you use the commerical map layer integration, your map must be in the WGS84.PseudoMercator coordinate system. Otherwise your map will not line up with the commercial layers Note An API key is required for consuming Yahoo or Google layers. You are bound by the terms and conditions of the respective commercial layer providers you wish to use. Widget and Container Layout The Widgets section allows you to configure the layout of toolbar and menu widgets Widget and Container Layout Selecting a widget reference allows to you point to the correct widget in the widget set. Widget Management The Widget Management dialog allows you to configure the main map widget and to add/configure other widgets in the widget set. Widgets in the widget set can then be referenced in the Widgets section of the editor. Widget Management Dialog (map widget) Widget Management Dialog (other widgets) All widgets are edited via XML. Widget behaviour is customised by editing the <Extension> element of the widget XML. If you are not sure what elements are allowed in the widget's extension element, you can click the Widget Info button, which will list all the available extension properties for this widget Widget Info Dialog (for Redline widget)"
  },
  "userguide/understanding_drawing_sources.html": {
    "href": "userguide/understanding_drawing_sources.html",
    "title": "Understanding Drawing Sources | MapGuide Maestro",
    "keywords": "Understanding Drawing Sources Drawing Sources represent DWF-based drawing data. Drawing Sources provide full visual styling of the original DWF, but the associated data lacks any intelligence or viewer interaction elements. As such, the primary purpose of Drawing Sources is to provide a CAD-based contextual backdrop for your maps. This section covers the Drawing Source editor. The Drawing Source Editor interface The Drawing Source editor is very simple, only requiring 2 fields of input. The source DWF file embedded as a resource data file. The marked one is designated for this Drawing Source. The coordinate system of this drawing source."
  },
  "userguide/understanding_feature_sources.html": {
    "href": "userguide/understanding_feature_sources.html",
    "title": "Understanding Feature Sources | MapGuide Maestro",
    "keywords": "Understanding Feature Sources As already covered, Feature Sources describe a FDO connection to a particular spatial or non-spatial data store. FDO technology provides a generic, command-based interface to a number of back-end data source technologies for storing, retrieving, updating, and analyzing GIS (Geographic Information System) data. Support for various data sources exists in the form of FDO providers. File-based Data Spatial data exists in many different forms and data formats. MapGuide supports various file-based data sources out of the box: SDF using the SDF FDO provider SHP using the SHP FDO provider SQLite using the SQLite FDO provider (for MapGuide Open Source 2.2 or newer) MS Access Databases and Excel Spreadsheets using the ODBC provider. Various other file formats using the OGR FDO provider. Support for other file formats exist via third party FDO providers. Relational Data MapGuide also supports various relational data sources SQL Server MySQL Oracle PostgreSQL (for MapGuide Open Source 2.2 or newer) Support for other relational databases exist via third party FDO providers. Raster Data MapGuide also supports raster data sources via the GDAL FDO provider. The Generic Editor Maestro provides a specialized feature source editor for the most frequently used FDO providers. For third party or other unrecognised FDO providers, a generic editor is available to configure the connection parameters to your particular data store. The Generic Feature Source Editor If a connection property involves an embedded data file, upload the file first as a Resource Data File and you can reference it by prefixing %MG_DATA_FILE_PATH% in front of the resource data file name. Coordinate System Overrides The Coordinate System Overrides section of the editor allows you to override the coordinate systems of this Feature Source. The Coordinate System Overrides Editor For example, a Feature Source may report an Arbitrary or incorrectly specified coordinate system, but the actual geometries themselves have real world geographical relevance. You can use this editor to replace this Arbitrary coordinate system with a different coordinate system. This is important if you require MapGuide to transform data. The source and target coordinate systems need to be correct. This override mechanism allows you to fix the source side of the transformation. Joins and Extensions The Joins and Extensions section of the editor allows you to define Extended Feature Classes . The Joins and Extensions Editor Extended Feature Classes extend a given feature class in the edited feature source with: Extra calculated properties derived from FDO expressions Extra properties from another Feature Class in another Feature Source by performing a Feature Join If extending a Feature Class via a Feature Join you may choose the type of join to perform: Left Outer Right Outer Inner Also you have to specify at least one property from both participating Feature Classes that will be joined on. Finally you can force a 1-to-1 cardinality to avoid redundant secondary Feature Class attributes for each primary feature or vice versa. Note Feature Join performance is generally bad, especially when the join is performed across Feature Classes from different Feature Sources for different FDO providers. Consider doing joins at the database level, outside of MapGuide Note For best Feature Join performance, both sides of the join should support sortable query results. Providers that support sortable query results include: SDF (single property only) SHP (single property only) Any of the RDBMS providers (ODBC, SQL Server, MySQL, PostgreSQL, Oracle) Any join that involves any of the above providers on both sides on a single property should have generally decent performance. Still doing these joins at the datastore level is preferable Specifying Credentials Some Feature Source editors (generic or specialized) support entering user login credentials. The specialized editors will automatically substitute your entered credentails with the %MG_USERNAME% and %MG_PASSWORD% placeholder tokens, with the actual values encrypted and stored into the MG_USER_CREDENTIALS resource data item. For the Generic Editor, a Set Credentials link allows you to specify credentials in a secure manner. Specifying Credentials in the Generic editor Note Versions of Maestro before 4.0 did not support these feature and credentials were stored plaintext in the Resource XML documents themselves. It is strongly advised to run a validation process ( Resource Validation ) on your repository, which will pick up such resources (which will be flagged as warnings in the Validation Results dialog). You should re-open these resources in a newer version of Maestro and apply credentials in a secured manner. Other Feature Source Options All Feature Source editors whether the generic one or a specialized one will provide extra options for you which will be enabled or disabled based on the underlying capabilities of the FDO provider. Additional Feature Source Options Local Preview opens the Local Feature Source Preview on this Feature Source allowing you to view the strucutre of this Feature Source and be able to do basic data queries on the Feature Source. See Using Local Feature Source Preview for more information. Edit Configuration Document opens the associated configuration XML document. Most specialized Feature Source editors that support configuration will build this document for you. This feature allows you to look at the document itself and if required, edit the contents by hand Spatial Contexts displays the spatial contexts of the Feature Source Raster Configuration When creating Raster Feature Sources (with the GDAL provider), it is generally advised to use the Composite mode and build a configuration document by adding in the individual raster images. Adding in each raster image will update the configuration document with the details from that raster image such as the bounds and the physical file path. GDAL Feature Source editor in composite mode The configuration document serves as a Raster Tile Index and is referred to by MapGuide when doing raster data queries when rendering maps. The raster queries will use the bounds information recorded in the configuration document to grab the closest matching raster images for resampling. This is a much faster way for MapGuide to access raster imagery. After you have built your raster configuration document, be sure to check the overall final extents by clicking Edit Configuration Document under Other Options ( Understanding Feature Sources ) to see the configuration document XML Overall extents in the configuration document This is the value used for previewing any layers you build off of this Feature Source and incorrect extents can cause massive performance issues. Note After you have built your raster configuration document, you should also apply Understanding Feature Sources to ensure MapGuide will be reading this data under the correct coordinate system"
  },
  "userguide/understanding_layers.html": {
    "href": "userguide/understanding_layers.html",
    "title": "Understanding Layers | MapGuide Maestro",
    "keywords": "Understanding Layers There are 3 types of Layer Definitions: Vector Layer Definitions Drawing Layer Definitions Grid (Raster) Layer Definitions Vector Layer Definitions describe style and presentation settings for vector data coming from a Feature Source. Structurally, a Vector Layer Definition has: 1 or more Scale Ranges Each Scale Range can have 1 or more point/area/line rules. Creating a theme will auto-generate a certain number of point/area/line rules based on the theming criteria. Drawing Layer Definitions describe presentation settings for data coming from a Drawing Source. A Drawing Source layer simply specifies the DWF layers from the Drawing Source that will be displayed for this Layer Definition Raster Layer Definitions describe style and presentation settings for raster data coming from a Feature Source. Structurally a Raster Layer Definition has a single scale range, with a specified color style and optional hillshade and elevation settings. This section describes the Layer Definition editor and its various settings. Vector Layer Editor Resource Settings The Resource Settings section of the Vector Layer editor specifies the core properties of this Vector Layer Resource Settings section The Feature Source field specifies the Feature Source this Layer Definition applies to. The Feature Class field and Geometry Property fields specifies the Geometry property that these style settings will be applied to. All the fields under the Layer Settings group specify viewer interaction behaviors: Filter specifies an FDO attribute filter that will be applied when querying data from the Feature Source for rendering Hyperlink specifies an FDO expression that represents the URL that will be launched when the user CTRL+clicks on a feature in this layer Tooltip specifics an FDO expression that represents the HTML content that is displayed in a tooltip when the user hovers over any feature on this layer with the mouse pointer. Layer Properties Visible in Viewer The Layer Properties Visible in Viewer section of the editor specifies what properties of this layer are visible in the Properties Pane of the AJAX or Fusion viewer when a feature from this layer is selected. Layer Properties Visible in Viewer Simply tick the desired properties to make them visible. You can edit cells in the Display Name column to change the label for each property. Layer Styles The Layer Styles section is the meat and potatoes of this editor. Layer Styles The above screenshot shows an editor for one particular scale range (0 to 10000). Clicking Add on the toolbar will add another control for a new scale range. Each scale range has: 0 or more point styles. Un-ticking Display points will detach all currently specified point styles. 0 or more line styles. Un-ticking Display lines will detach all currently specified line styles. 0 or more area (polygon) styles. Un-ticking Display areas will detach all currently specified area styles. Each point/line/area style is represented by a control like the one below A style rule control These controls will allow you to edit (from left to right): The FDO filter that a feature must satisfy for this rule to be applied (default is empty = all features). Clicking the button will launch the FDO Expression Editor. The legend label for this rule The style preview for this rule. Clicking the button will launch the respective point/line/area style editor. The feature label. Clicking the button will launch the FDO Expression Editor. Rules can be added by clicking the add button on the top toolbar (indicated by a green plus icon). A theme can be generated by clicking on the theme button on the top toolbar (indicated by 3 overlapping circles of different colors). See Understanding Layers for more information. Rules can be removed by clicking the remove button for the associated rule style control (indicated by a red minus icon) Theming Layers Clicking the theme button will display the following dialog The theme creator dialog This dialog provides all the options for generating a theme, which can be based on: All values of a specific property All ranges/distributions of a specific property Each generated rule wil use a color from a specified color ramp. The color ramp can be gradient-based or use ColorBrewer thematics. An option is also available that allows you to use the first rule of your current style as the \"prototype\" from which your theme rules will be created from, avoiding the need to manually re-style each individual theme rule after generation. Once you have specified the theme settings and clicked OK , the matching rules will be generated and will replace or be appended to your existing set of style rules for this scale range. Point Style Rules Clicking the ... button beside the previewed point style on the rule editor control will display the Point Style Dialog The Point Style dialog The Point Style dialog (fill/border settings) There are many options here, but this guide will only cover the main ones. Point features can be drawn as symbols or as text labels. The Display Points checkbox governs this behavior. Ticking it will cause these points to be drawn as symbols. Un-ticking it will cause these points to be drawn as text. The symbol size and rotation parameters can either be numbers or numerical FDO expressions. For point symbology, you can choose a pre-defined list of symbols under the Symbol dropdown. The very last option in that dropdown ( Symbol ) allows you to pick a custom symbol from an existing Symbol Library resource. Note that the generated preview at the bottom of the dialog is an approximation and does not exactly reflect the style settings you have defined. This preview would be the same image if you were to look at this layer's icon in the AJAX or Fusion viewer legend. If you want an exact representation, use the Preview command in the main toolbar to view this Layer in your system default web browser. Here you can better verify your point style settings are correct. Line Style Rules Clicking the ... button beside the previewed line style on the rule editor control will display the Line Style Dialog The Line Style Dialog Just like point rules, line rules need not actually display lines. Line rules can display text. If so, the text labels will be rendered along the line geometry of each matching feature, but the line itself will not be rendered. The Apply line style checkbox governs whether the lines will be rendered. You can specify color, thickness and line pattern for the line style. Size context and units govern how the thickness parameter is to be interpreted when rendering. Line styles can be single or composite. The Use composite lines checkbox determines whether the line style will be single or composite. The Line Style Dialog with composite settings enabled Composite line styles consists of multiple line patterns stacked on top of each other to form a composite line style. Line geometries of each matching feature will be rendered with this line style. To add or remove lines from the composite line style, use the Add and Remove buttons on the Composite Line toolbar. Area Style Rules Clicking the ... button beside the previewed area style on the rule editor control will display the Area Style Dialog The Area Style Dialog This dialog allows you to control the two main aspects of an area style: The fill display The edge/border display Once again, the preview at the bottom of the dialog reflects your current style settings. Composite Style Rules Clicking the ... button beside the previewed area style on the rule editor control will display the Symbol Instances Dialog A Composite Style Rule control This dialog allows you to include references to existing Symbol Defintions or define such Symbol Definitions inline. The Symbol Instances Dialog For each symbol definition you include (referenced or inline), you can provide override any parameter values that are exposed. You can use FDO expressions for override parameter values. The inline symbol definitions use the same editors as the normal symbol definition editor. See Understanding Symbol Definitions Note Unlike Point/Line/Area styles, the top-level preview is blank because rendering composite symbolization preview is not currently supported. However the Symbol Instances Dialog does offer basic previewing support. What you see in the symbol preview is simply an enlarged version of the icon that you would see for this layer if it was displayed in the AJAX or Fusion viewer legend. Label Settings Clicking the ... button beside the label preview on the rule editor control will display the Label Settings Dialog The Label Settings Dialog This dialog allows you to control the labelling of line/area/point styles. Label text can be hard-coded strings or more commonly: derived from an FDO expression or a Feature Class Property. Drawing Layer Editor Just like the Drawing Source editor, the Drawing Layer editor is pretty simple and straight forward. The Drawing Layer Editor All you need to specify are: The Drawing Source this layer will read from. The DWF sheet this layer will read from. The DWF layers this layer will read from. The min/max scale that this Drawing Layer will be visible at. Raster Layer Editor Raster Layer Settings The Raster Layer editor defines style settings for raster data coming from a Feature Source. Raster Layer Settings Just like the Vector Layer editor, the Raster Layer editor requires a reference to a Feature Source and the Geometry Property (Raster Property) of a Feature Class so it knows where to source its raster data from. Raster Layer Visibility The Raster Layer Visibility settings govern what scale this Raster Layer is visible at. Raster Layer Visibility You can also define bitonal image color settings and the zoom factor which the raster is rebuilt. Advanced Raster Settings The Advanced Raster Settings allows you to enable settings for raster formats that support such settings. Advanced Raster Layer Settings"
  },
  "userguide/understanding_load_procedures.html": {
    "href": "userguide/understanding_load_procedures.html",
    "title": "Understanding Load Procedures | MapGuide Maestro",
    "keywords": "Understanding Load Procedures Load Procedures are resources which describe how to load a certain set of data files into the MapGuide Server. Load Procedures are a very quick way to load spatial data files into MapGuide or to refresh existing resources. However, unlike MapGuide Studio, Maestro only supports a subset of the features exposed by the Load Procedure schema. See Differences between Maestro and MapGuide Studio for more information. This section will cover the Load Procedure Editor Source Files The source file section of the editor shows all the source data files that the Load Procedure will load when executed You can add or remove files from this list. Note When executing a Load Procedure, Maestro will look for the source files on the machine running Maestro , and not the machine that's running the MapGuide Server. Keep this in mind when executing this Load Procedure from another Maestro installation. Transformation Settings The transformation settings section of the editor shows all the data transformation options available for the Load Procedure. Elements that are disabled are not supported by Maestro and are ignored during execution. Transformation settings vary from different Load Procedure types. Load Settings The load settings section of the editor allows you to specify where the generated resources will be loaded into. Clicking Load Resources will execute the Load Procedure with the current settings."
  },
  "userguide/understanding_maps.html": {
    "href": "userguide/understanding_maps.html",
    "title": "Understanding Map Definitions | MapGuide Maestro",
    "keywords": "Understanding Map Definitions The Map Definition represents the collection of layers to be displayed. Layers are organised logically into groups and can be sorted by drawing order. Individual layer visibility and legend visibily control can be configured here. The Map Definition editor is composed to two sections, both are covered below. Map Settings The Map Settings section of the editor allows you to define the core properties of this Map Definition You can specify the coordinate system, background color and the initial extents that this map encompasses. The coordinate system and initial extents are automatically set when the first layer is added to this map. You can re-calculate the extent at any time. Note The coordinate system you specify here is determines the units and coordinates that are displayed when you view this map from the AJAX or Fusion viewer. In addition, it is also used to automatically re-project any layers whose coordinate systems do not match. Note Automatic layer re-projection incurs a minor performance penalty when rendering the map. So if possible ensure that all the layers are in the same coordinate system (as the one you specify here) Note Extent calculation can take some time, especially if there are lots (hundreds) of layers in the Map Definition. In such cases, it is faster to enter the numbers manually. Note Extent calculation can even be inaccurate, especially if one or more layers references a badly set up feature source (eg. A GDAL raster feature source is a common source of bad extents). Again, in such cases manual entry of extents is faster and safer. Layer Configuration The Layer Configuration section allows you to organise the layers in the Map Definition by different facets. Selecting a layer or group in any of these tabs will allow you to edit the properties of that layer or group Layers by Group The Layers by Group tab allows you to organise the layers in your Map Definition logically into groups A Layer Group in this view may be converted to a Base Layer Group. Layers by Drawing Order The Layers by Group tab allows you to organise the layers in your Map Definition by drawing order Base Layer Groups The Base Layer Groups tab allows you to define and configure tiled layer and group settings"
  },
  "userguide/understanding_print_layouts.html": {
    "href": "userguide/understanding_print_layouts.html",
    "title": "Understanding Print Layouts | MapGuide Maestro",
    "keywords": "Understanding Print Layouts Print Layouts describe the layout of a DWF plot. DWF plots are produced by the MgMappingService service API and the Fusion SaveMap widget. Page and Layout Properties The Page and Layout Properties section of the editor allows you to configure the properties of this print layout Page and Layout Properties Custom Logos The Custom Logos section of the editor allows you to configure the logos which will be in this Print Layout. Custom Logos Logos are symbols from a Symbol Library resource. Each logo has size and positioning parameters that you can configure via this editor Custom Text The Custom Text section of the editor allows you to configure the text labels which will be in this Print Layout Custom Text Each text label has individual size and positioning parameters that you can configure via this editor"
  },
  "userguide/understanding_symbol_definitions.html": {
    "href": "userguide/understanding_symbol_definitions.html",
    "title": "Understanding Symbol Definitions | MapGuide Maestro",
    "keywords": "Understanding Symbol Definitions Symbol Definitions provide signifcantly advanced stylization options for map features as opposed to the stylization options provided by the Layer Definition. A Symbol Definition exists in two forms: A Simple Symbol Definition, which supports the definition of a symbol based on vector geometry, an image, or text. Simple Symbol Definition resources can also contain usage context settings which specify how it is applied when used to stylize point, line, or area geometry. Additionally, stylization settings can be parameterized and exposed in the form of parameter definitions, which can be overridden on a per-layer basis. A Compound Symbol Definition allows multiple Simple Symbol Definitions to be combined into a composite symbol. Components of a Simple Symbol Definition A Simple Symbol Definition is composed of the following components: A collection of graphics A collection of 0 or more symbol parameters A point, line or area usage context Advanced symbol settings The Simple Symbol Definition Editor provides the user interfaces to edit all aspects of the Simple Symbol Definition. The Simple Symbol Definition Editor General Settings The General Settings section of the editor allows you to specify the name and description of this symbol Graphics The Graphics section of the editor allows you to specify the visual elements of the symbol. You can add 3 different types of graphics: Text Elements Images Geometric Paths Symbol Parameters The Symbol Parameters section of the editor allows you to specify parameters for this symbol. Nearly all properties in the Simple Symbol Definition can reference a symbol parameter instead of specifying a hard-coded value. Such parameters can be specified on a per-layer basis via FDO expressions, allowing for symbols whose stylization behaviour is driven by the underlying feature data. Symbol Usage The Symbol Usage section of the editor allows you to define which geometry types this symbol can be used with Note You must specify at least one usage context. Otherwise, your symbol is not usable in any layer definition. Advanced Settings The Advanced Settings section of the editor allows you to specify resize box settings of the Simple Symbol Definition The Compound Symbol Definition Editor The Compound Symbol Definition Editor allows you to combine multiple Simple Symbol Definitions into a single composite symbol. The Simple Symbol Definitions you combine can be either: A reference to an existing Simple Symbol Definition An inline Simple Symbol Definition Inline Simple Symbol Definitions use the same Simple Symbol Definition editor, embedded within the existing Compound Symbol Definition Editor. Previewing Both Simple and Compound Symbol Definition editors support previewing, by clicking the Preview button in the main toolbar while the editor is the active tab. This generates an enlarged version of the icon that you would normally see for this layer if it was displayed in the AJAX or Fusion viewer legend."
  },
  "userguide/understanding_watermarks.html": {
    "href": "userguide/understanding_watermarks.html",
    "title": "Understanding Watermarks | MapGuide Maestro",
    "keywords": "Understanding Watermarks Watermarks allow your Maps and Layers to be \"branded\" with text or images of your choosing The Watermark Definition Editor The Watermark Definition Editor allows you create your own watermarks Watermarks can be either text or images and in terms of appearance can be a single instance at a specific position, or tiled at repeat horizontal and vertical intervals of your choice. Previews are supported by the Watermark Editor. Previewing the watermark will launch an empty map with your watermark settings The Watermark Instance Collection Editor The Watermark Instance Collection Editor allows you to attach watermark definitions to a Layer or Map Definition. If the schema version of the Layer or Map Definition supports Watermarks ( >= 2.3.0 ), the respective resource editor will include this Watermark Instance Collection Editor allowing you to attach watermarks to the respective layer or map. Each Watermark instance you add can have its appearance and/or positioning settings be overridden with values specific for this layer or map. If you add Watermark instances without overriding any appearance/positioning settings, the default settings from the originating Watermark Definition will be used."
  },
  "userguide/user_interface.html": {
    "href": "userguide/user_interface.html",
    "title": "The Maestro User Interface | MapGuide Maestro",
    "keywords": "The Maestro User Interface The main Maestro application window is composed of the following main components: Legend 1. The Site Explorer 2. Open Resource Editors 3. Messages, Outbound Requests and IronPython Console 4. Resource ID bar The Site Explorer presents the visual view of your MapGuide Server Site Repository , showing all the folders and resources stored within. When you double click a resource in the Site Explorer, it will open the matching editor for that particular resource. If the resource is not known to Maestro or the version of the resource is not known to Maestro the XML Editor will be shown instead loaded with the XML content of the selected resource. When you right click a resource in the Site Explorer a whole assortment of options on the context menu is available for that selected resource. All Open Resources will be shown in the main area of the Maestro application window. Maestro is designed to be as transparent as possible to the user, as such it logs a lot of messages useful for diagnostic purposes. Maestro also logs most communication that it makes to the MapGuide Server. You can see these logged messages and requests in the Messages and Outbound Requests tabs. The IronPython Console provides the user with an interactive REPL console, by which the user can run and evaluate snippets of IronPython code. The full Maestro API is exposed to the console, allowing the user to script and automate the application through IronPython code. IronPython is a dialect of Python geared towards integration with the .net Framework. For more information about this feature, see Scripting and Automating Maestro . For more information about IronPython, see IronPython.net Note The IronPython Console feature is only available on Windows and is only bundled with the Windows installer package of Maestro The Resource ID bar functions like an address bar in a web browser. Entering a Resource ID in the Resource ID bar and clicking Go will allow you to directly open the specified resource for editing. Similarly, selecting an open editor tab will show you the Resource ID of the resource being edited. This is a feature that power users will appreciate, as it allows for quick resource access without the need to navigate the repository in the Site Explorer to find it."
  },
  "devguide/coreconcepts.html": {
    "href": "devguide/coreconcepts.html",
    "title": "Core Concepts | MapGuide Maestro",
    "keywords": "Core Concepts .. todo:: Still has references to old SDK package Connections Overview Connections are the primary entry point into the functionality offered by the Maestro API. It abstracts away the various methods of interacting with a MapGuide Server into a single unified interface Known Implementations There are 3 known implementations of the IServerConnection interface: Maestro.Http : A HTTP implementation (that communicates with the http mapagent) Maestro.LocalNative : A Local Native implementation (that wraps the official MapGuide API) Maestro.Local : A Local implementation (that wraps the mg-desktop API) Service Interfaces A connection is represented by the IServerConnection interface. Creating such connections is done via the ConnectionProviderRegistry class. This class uses the ConnectionProviders.xml file to resolve and load the matching implementation Additional implementations can be registered in the ConnectionProviders.xml file Note Starting with the 6.0m8 release, the Maestro.Http provider is built into the Maestro API itself. The ConnectionProviders.xml file is not required if you are only using this connection provider. The LocalNative implementation source code is included with this SDK, but requires the official MapGuide API binaries to be also added to your application's directory. As a result this provider is disabled in the ConnectionProviders.xml file by default. The SDK includes a tool to help you build this LocalNative provider. The Local implementation is not included with the SDK. The windows version of Maestro includes this implementation and you can copy the required files from your Maestro installation should you choose to use this implementation. All examples outlined in this guide assume the use of the HTTP implementation ( Maestro.Http ) Resource Objects Overview Unlike the official MapGuide API, all resources in the Maestro API are strongly-typed objects and not blobs of arbitrary XML content that needs to be manually processed and manipulated by your application. All XML resource elements are represented as classes. These classes are automatically generated from the respective XSD used to validate this resource content. Because a resource can have many different schema versions, these classes implement a set of common interfaces that reside under the OSGeo.MapGuide.ObjectModels namespace. This has 2 benefits: It prevents collision of the autogenerated classes across different versions. The generated classes are partitioned under internal version-specific namespaces By working against the resource interfaces, your code can work with any supported schema version of a given resource. In addition, adding support for newer schema revisions requires no changes on your side When working with the Maestro API, always write code against the resource interfaces . Despite being public types and included in the Maestro API assemblies, never write code against the autogenerated classes because multiple versions of them exist. It is for this reason that the autogenerated classes are not included in this API documentation. Resource Interface Versions Each schema revision introduces new elements, which require new resource interfaces in the Maestro API that map to these new elements. In such cases, we adopt the approach of COM interfaces and create a new interface that extends the old one and incorporates the methods and properties to handle the new elements. The new interface is suffixed with a number that increases with each new schema revision For example, the IWebLayout interface represents the Web Layout resource (version 1.0.0 ). The 1.1.0 schema introduces a new PingServer element (to prevent viewer session expiry). To tap into this newly exposed element provided by this schema, a IWebLayout2 interface included, which extends the original IWebLayout interface and includes the new EnablePingServer property. All other resource interfaces follow the same pattern of design. Of course, due to the large number of schema revisions made since the very first release of MapGuide Open Source, it is a bit difficult to keep track of all the relevant schema revisions and the resource interfaces that are affected. The following table shows which resource schema versions a newer resource interface is applicable to: Resource Type Interfaces introduced for this version (also applicable for versions after it) Layer Definition (v1.1.0) IVectorScaleRange2 , ICompositeTypeStyle , ICompositeRule , IStroke2 , ElevationTypeType , IElevationSettings , ICompositeSymbolization , IParameterOverride , IParameterOverrideCollection Layer Definition (v1.2.0) ISymbolInstance2 , IParameterOverride2 , IThemeLabel , UsageContextType , GeometryContextType Layer Definition (v1.3.0) ICompositeTypeStyle2 , IAreaVectorStyle2 , ILineVectorStyle2 , IPointVectorStyle2 Layer Definition (v2.4.0) ISubLayerDefinition2 Map Definition (v2.3.0) IMapDefinition2 Map Definition (v3.0.0) IMapDefinition3 Web Layout (v1.1.0) IWebLayout2 Symbol Definition (v1.1.0) ISymbolInstance , ITextGraphic2 , DataType2 Symbol Definition (v2.4.0) IPathGraphic2 To determine whether a given interface is accessible, you can either check the ResourceVersion and refer to this table to see if these interfaces can be casted from their older versions. Or you can utilise language features such as C#'s as keyword to cast objects to specific interfaces. If the casted object is not null, then that interface is supported. If you are using C# 7.0 or higher language features, you can take advantage of pattern matching to achieve the same effect The Runtime Map Overview The RuntimeMap represents the state of the map that a user is currently looking at in the viewer. It contains all the relevant information about the current map: The current view center and scale The list of RuntimeMapLayer instances that belong to this map The list of RuntimeMapGroup instances that belong to this map The current extents of the map The display width/height/dpi of the map To obtain a reference to a runtime map, you will have to create one (via IMappingService . CreateMap ) or open an existing one (via IMappingService . OpenMap ). Note that when opening an existing runtime map, you need to supply the resource id of the runtime map state If given a map name and session id, the runtime map state resource id is usually of the form: Session:session-id//mapName.Map Most of this runtime map state can be manipulated through the APIs provided by the Maestro API. When manipulating the state of the runtime map (which also includes modifications to layers and groups that belong to it), you must remember to call Save() on the map to persist your modifications. Compatibility The RuntimeMap operates on an encoded binary blob on the MapGuide Server that represents the internal state of the runtime map. New versions of MapGuide may introduce new states that may break compatibility with the RuntimeMap class. As such, usage of the RuntimeMap in the Maestro API is restricted to the following versions of MapGuide (includes point releases and service packs): MapGuide Open Source 1.2 and newer Autodesk MapGuide Enterprise / Infrastructure Map Serve 2008 and newer If you are not using a version of MapGuide that is on this list, there is no guarantee the RuntimeMap will work as expected"
  },
  "devguide/gettingstarted.html": {
    "href": "devguide/gettingstarted.html",
    "title": "Getting Started | MapGuide Maestro",
    "keywords": "Getting Started Before you get started with the Maestro API, it helps to have an understanding of the following: Programming in C# and/or the .net Framework. Most of the code examples illustrated here are in C# Understanding the basics of MapGuide development and/or the MapGuide API. The Maestro API supplements MapGuide as an additional development option and carries many of the same concepts used in the official MapGuide API Why use the Maestro API? As mentioned above, the Maestro API is an alternative option for MapGuide application development. Depending on your needs, the Maestro API may either complement the official MapGuide API or be a wholesale replacement. The Maestro API may be of interest to you if: You prefer to work with MapGuide resources as strongly-typed objects instead of raw XML content You require a strongly-typed service client interface to the http mapagent You would like to build MapGuide applications/libraries that can work on both client and web tiers You would like to build MapGuide applications/libraries that can easily integrate with the respective .net web (asp.net) and desktop (WinForms/WPF) platforms You would like to build MapGuide applications/libraries in .net that can work on non-Windows platforms through .net Core Supported Platforms The MapGuide Maestro API targets the following platforms: .net Framework 4.6.1 .net Standard 2.0 Note Until further notice, due to constraints imposed by upstream dependencies, the .net Standard 2.0 target is not strong-named, while the .net Framework 4.6.1 target is strong-named Acquiring the Maestro API The MapGuide Maestro API is available as a pre-release NuGet package and can be installed through the NuGet package manager in Visual Studio or the dotnet add package command from the dotnet CLI."
  },
  "devguide/introduction.html": {
    "href": "devguide/introduction.html",
    "title": "Introduction | MapGuide Maestro",
    "keywords": "Introduction The code that drives the MapGuide Maestro application can also be used in your own applications. This is collectively known as the Maestro API The Maestro API consists of the following components: (Optional) The FDO expression parsing library (OSGeo.FDO.Expressions) The MapGuide Resource Object Model library (OSGeo.MapGuide.ObjectModels) The MapGuide Maestro API (OSGeo.MapGuide.MaestroAPI) OSGeo.FDO.Expressions This is an optional library for parsing FDO expression strings into Abstract Syntax Trees (AST) for structured analysis of the expression. The MapGuide Maestro application uses this library for parsing and validating FDO expressions against the feature classes and properties they are referencing. OSGeo.MapGuide.ObjectModels This is a library that defines all the resource types in MapGuide as strongly-typed classes and relieves the burden from the MapGuide Developer from working with resources as XML documents. OSGeo.MapGuide.MaestroAPI This library is the heart of the Maestro API. It provides a set of unified interfaces for working with the various services provided by MapGuide. The Maestro API offers a provider model that allows for consuming these interfaces across various implementations: The HTTP mapagent The official MapGuide .net API The mg-desktop implementation of the MapGuide API"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "MapGuide Maestro API Reference | MapGuide Maestro",
    "keywords": "MapGuide Maestro API Reference This is the reference documentation for the MapGuide Maestro API. The API consists of: The Maestro API core (OSGeo.MapGuide.MaestroAPI.dll) The MapGuide Object Model library (OSGeo.MapGuide.ObjectModels.dll) (Optional) The FDO Expression parser library (OSGeo.FDO.Expressions.dll) Also included in this documentation is the Developer's Guide to help you Get Started"
  },
  "api/OSGeo.FDO.Expressions.ComparisonOperations.html": {
    "href": "api/OSGeo.FDO.Expressions.ComparisonOperations.html",
    "title": "Enum ComparisonOperations | MapGuide Maestro",
    "keywords": "Enum ComparisonOperations Comparison operator Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public enum ComparisonOperations Fields Name Description EqualsTo Equals GreaterThan Greater than GreaterThanOrEqualTo Greater than or equal LessThan Less than LessThanOrEqualTo Less than or equal Like Like NotEqualsTo Not equals"
  },
  "api/OSGeo.FDO.Expressions.ExpressionType.html": {
    "href": "api/OSGeo.FDO.Expressions.ExpressionType.html",
    "title": "Enum ExpressionType | MapGuide Maestro",
    "keywords": "Enum ExpressionType FDO expression types Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public enum ExpressionType Fields Name Description BinaryExpression Binary expression BooleanValue Boolean value DateTimeValue DateTime value DoubleValue Double value Function Function GeometryValue Geometry value Identifier Identifier Int32Value Int32 value Parameter Parameter StringValue String value UnaryExpression Unary expression"
  },
  "api/OSGeo.FDO.Expressions.FdoBinaryLogicalOperator.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoBinaryLogicalOperator.html",
    "title": "Class FdoBinaryLogicalOperator | MapGuide Maestro",
    "keywords": "Class FdoBinaryLogicalOperator A binary logical operator Inheritance System.Object FdoParseable FdoFilter FdoLogicalOperator FdoBinaryLogicalOperator Inherited Members FdoFilter.ParseableType FdoFilter.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoBinaryLogicalOperator : FdoLogicalOperator Properties FilterType The filter type Declaration public override FilterType FilterType { get; } Property Value Type Description FilterType Overrides FdoFilter.FilterType Left The left-hand side expression Declaration public FdoFilter Left { get; } Property Value Type Description FdoFilter Operator The logical operator Declaration public BinaryLogicalOperations Operator { get; } Property Value Type Description BinaryLogicalOperations Right The right-hand side expression Declaration public FdoFilter Right { get; } Property Value Type Description FdoFilter"
  },
  "api/OSGeo.FDO.Expressions.FdoDataValue.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoDataValue.html",
    "title": "Class FdoDataValue | MapGuide Maestro",
    "keywords": "Class FdoDataValue A data value Inheritance System.Object FdoParseable FdoExpression FdoValueExpression FdoLiteralValue FdoDataValue FdoBooleanValue FdoDateTimeValue FdoDoubleValue FdoInt32Value FdoStringValue Inherited Members FdoLiteralValue.LiteralValueType FdoExpression.ParseableType FdoExpression.ExpressionType FdoExpression.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public abstract class FdoDataValue : FdoLiteralValue Constructors FdoDataValue() Constructor Declaration protected FdoDataValue() Properties DataType The data type Declaration public DataType DataType { get; protected set; } Property Value Type Description DataType"
  },
  "api/OSGeo.FDO.Expressions.FdoDoubleValue.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoDoubleValue.html",
    "title": "Class FdoDoubleValue | MapGuide Maestro",
    "keywords": "Class FdoDoubleValue An FDO double value Inheritance System.Object FdoParseable FdoExpression FdoValueExpression FdoLiteralValue FdoDataValue FdoDoubleValue Inherited Members FdoDataValue.DataType FdoLiteralValue.LiteralValueType FdoExpression.ParseableType FdoExpression.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoDoubleValue : FdoDataValue Properties ExpressionType The expression type Declaration public override ExpressionType ExpressionType { get; } Property Value Type Description ExpressionType Overrides FdoExpression.ExpressionType Value The double value Declaration public double Value { get; } Property Value Type Description System.Double"
  },
  "api/OSGeo.FDO.Expressions.FdoFunction.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoFunction.html",
    "title": "Class FdoFunction | MapGuide Maestro",
    "keywords": "Class FdoFunction An FDO function expression Inheritance System.Object FdoParseable FdoExpression FdoFunction Inherited Members FdoExpression.ParseableType FdoExpression.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoFunction : FdoExpression Properties Arguments The list of arguments passed in Declaration public List<FdoExpression> Arguments { get; } Property Value Type Description List < FdoExpression > ExpressionType The expression type Declaration public override ExpressionType ExpressionType { get; } Property Value Type Description ExpressionType Overrides FdoExpression.ExpressionType Identifier The name of the function Declaration public FdoIdentifier Identifier { get; } Property Value Type Description FdoIdentifier"
  },
  "api/OSGeo.FDO.Expressions.FdoIdentifier.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoIdentifier.html",
    "title": "Class FdoIdentifier | MapGuide Maestro",
    "keywords": "Class FdoIdentifier An FDO identifier Inheritance System.Object FdoParseable FdoExpression FdoIdentifier Inherited Members FdoExpression.ParseableType FdoExpression.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoIdentifier : FdoExpression Properties ExpressionType The expression type Declaration public override ExpressionType ExpressionType { get; } Property Value Type Description ExpressionType Overrides FdoExpression.ExpressionType Name The name Declaration public string Name { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.FDO.Expressions.FdoLiteralValue.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoLiteralValue.html",
    "title": "Class FdoLiteralValue | MapGuide Maestro",
    "keywords": "Class FdoLiteralValue An FDO literal value Inheritance System.Object FdoParseable FdoExpression FdoValueExpression FdoLiteralValue FdoDataValue FdoGeometryValue Inherited Members FdoExpression.ParseableType FdoExpression.ExpressionType FdoExpression.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public abstract class FdoLiteralValue : FdoValueExpression Properties LiteralValueType The literal value type Declaration public LiteralValueType LiteralValueType { get; protected set; } Property Value Type Description LiteralValueType"
  },
  "api/OSGeo.FDO.Expressions.FdoLogicalOperator.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoLogicalOperator.html",
    "title": "Class FdoLogicalOperator | MapGuide Maestro",
    "keywords": "Class FdoLogicalOperator An FDO logical operator Inheritance System.Object FdoParseable FdoFilter FdoLogicalOperator FdoBinaryLogicalOperator FdoUnaryLogicalOperator Inherited Members FdoFilter.ParseableType FdoFilter.FilterType FdoFilter.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public abstract class FdoLogicalOperator : FdoFilter"
  },
  "api/OSGeo.FDO.Expressions.FdoParseable.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoParseable.html",
    "title": "Class FdoParseable | MapGuide Maestro",
    "keywords": "Class FdoParseable The base class of all parseable FDO expressions Inheritance System.Object FdoParseable FdoExpression FdoFilter Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public abstract class FdoParseable Properties ParseableType The parseable type Declaration public abstract FdoParseableType ParseableType { get; } Property Value Type Description FdoParseableType"
  },
  "api/OSGeo.FDO.Expressions.FdoParseableType.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoParseableType.html",
    "title": "Enum FdoParseableType | MapGuide Maestro",
    "keywords": "Enum FdoParseableType The parseable type Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public enum FdoParseableType Fields Name Description Expression Expression Filter Filter"
  },
  "api/OSGeo.FDO.Expressions.FdoStringValue.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoStringValue.html",
    "title": "Class FdoStringValue | MapGuide Maestro",
    "keywords": "Class FdoStringValue An FDO string value Inheritance System.Object FdoParseable FdoExpression FdoValueExpression FdoLiteralValue FdoDataValue FdoStringValue Inherited Members FdoDataValue.DataType FdoLiteralValue.LiteralValueType FdoExpression.ParseableType FdoExpression.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoStringValue : FdoDataValue Properties ExpressionType The expression type Declaration public override ExpressionType ExpressionType { get; } Property Value Type Description ExpressionType Overrides FdoExpression.ExpressionType Value The string value Declaration public string Value { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.FDO.Expressions.FdoUnaryExpression.html": {
    "href": "api/OSGeo.FDO.Expressions.FdoUnaryExpression.html",
    "title": "Class FdoUnaryExpression | MapGuide Maestro",
    "keywords": "Class FdoUnaryExpression An FDO unary expression Inheritance System.Object FdoParseable FdoExpression FdoUnaryExpression Inherited Members FdoExpression.ParseableType FdoExpression.Parse(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.FDO.Expressions Assembly : cs.temp.dll.dll Syntax public class FdoUnaryExpression : FdoExpression Properties Expression The expression Declaration public FdoExpression Expression { get; } Property Value Type Description FdoExpression ExpressionType The expression type Declaration public override ExpressionType ExpressionType { get; } Property Value Type Description ExpressionType Overrides FdoExpression.ExpressionType"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.CommandType.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.CommandType.html",
    "title": "Enum CommandType | MapGuide Maestro",
    "keywords": "Enum CommandType Defines the custom command types Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public enum CommandType Fields Name Description ApplySchema Applies a feature schema to a feature source CreateDataStore Creates a data store on a feature source CreateRuntimeMap Creates a new Runtime Map and describe its structure DeleteFeatures Deletes features from a feature source DescribeRuntimeMap Describes the structure of an existing runtime map GetFdoCacheInfo Retrieves information about cached FDO connections GetResourceContents Gets a collection of resource content in a single batch GetTileProviders Enumerates registered Tile Set Providers InsertFeature Inserts a feature into a feature source UpdateFeatures Updates features in a feature source"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.ConfigurationSettings.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.ConfigurationSettings.html",
    "title": "Class ConfigurationSettings | MapGuide Maestro",
    "keywords": "Class ConfigurationSettings Represents the FDO cache configuration Inheritance System.Object ConfigurationSettings Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public class ConfigurationSettings Properties DataConnectionPoolEnabled Gets whether connection pooling is enabled Declaration public string DataConnectionPoolEnabled { get; set; } Property Value Type Description System.String DataConnectionPoolExcludedProviders Gets the FDO providers which are excluded from connection pooling Declaration public string DataConnectionPoolExcludedProviders { get; set; } Property Value Type Description System.String DataConnectionPoolSize Gets the size of the connection pool Declaration public int DataConnectionPoolSize { get; set; } Property Value Type Description System.Int32 DataConnectionPoolSizeCustom Gets a delimited list of custom connection pool sizes by provider Declaration public string DataConnectionPoolSizeCustom { get; set; } Property Value Type Description System.String DataConnectionTimeout Gets the connection timeout Declaration public int DataConnectionTimeout { get; set; } Property Value Type Description System.Int32"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.DefaultFeatureCommand-1.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.DefaultFeatureCommand-1.html",
    "title": "Class DefaultFeatureCommand<TConn> | MapGuide Maestro",
    "keywords": "Class DefaultFeatureCommand<TConn> A default implementation of the IFeatureCommand . This class is reserved for connection provider use Inheritance System.Object DefaultCommand <TConn> DefaultFeatureCommand<TConn> DefaultApplySchemaCommand<TConn> DefaultDeleteCommand<TConn> DefaultInsertCommand<TConn> DefaultUpdateCommand<TConn> Implements IFeatureCommand ICommand Inherited Members DefaultCommand<TConn>.ConnImpl DefaultCommand<TConn>.Parent DefaultCommand<TConn>.ValidateCoreParams() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public abstract class DefaultFeatureCommand<TConn> : DefaultCommand<TConn>, IFeatureCommand, ICommand where TConn : IServerConnection Type Parameters Name Description TConn The type of the conn. Constructors DefaultFeatureCommand(TConn) Initializes a new instance of the DefaultFeatureCommand<TConn> class. Declaration protected DefaultFeatureCommand(TConn conn) Parameters Type Name Description TConn conn The conn. Properties ClassName Gets or sets the name of the class. Declaration public string ClassName { get; set; } Property Value Type Description System.String The name of the class. FeatureSourceId Gets or sets the feature source id. Declaration public string FeatureSourceId { get; set; } Property Value Type Description System.String The feature source id. Methods ValidateParams() Performs basic validation of core command parameters Declaration protected void ValidateParams() Implements IFeatureCommand ICommand"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.DefaultInsertCommand-1.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.DefaultInsertCommand-1.html",
    "title": "Class DefaultInsertCommand<TConn> | MapGuide Maestro",
    "keywords": "Class DefaultInsertCommand<TConn> A default implementation of IInsertFeatures . This class is reserved for connection provider use Inheritance System.Object DefaultCommand <TConn> DefaultFeatureCommand <TConn> DefaultInsertCommand<TConn> Implements IInsertFeatures IFeatureCommand ICommand Inherited Members DefaultFeatureCommand<TConn>.FeatureSourceId DefaultFeatureCommand<TConn>.ClassName DefaultFeatureCommand<TConn>.ValidateParams() DefaultCommand<TConn>.ConnImpl DefaultCommand<TConn>.Parent DefaultCommand<TConn>.ValidateCoreParams() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public abstract class DefaultInsertCommand<TConn> : DefaultFeatureCommand<TConn>, IInsertFeatures, IFeatureCommand, ICommand where TConn : IServerConnection Type Parameters Name Description TConn The type of the conn. Constructors DefaultInsertCommand(TConn) Initializes a new instance of the Declaration protected DefaultInsertCommand(TConn conn) Parameters Type Name Description TConn conn The conn. Properties RecordToInsert Gets or sets the record to insert. Declaration public IMutableRecord RecordToInsert { get; set; } Property Value Type Description IMutableRecord The record to insert. Methods Execute() Executes this instance. Declaration public InsertResult Execute() Returns Type Description InsertResult ExecuteInternal() Performs the actual command execution Declaration protected abstract void ExecuteInternal() Implements IInsertFeatures IFeatureCommand ICommand"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.ICommand.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.ICommand.html",
    "title": "Interface ICommand | MapGuide Maestro",
    "keywords": "Interface ICommand The base interface of all custom commands Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public interface ICommand Properties Parent Gets the parent connection. Declaration IServerConnection Parent { get; } Property Value Type Description IServerConnection The parent connection."
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.ICreateDataStore.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.ICreateDataStore.html",
    "title": "Interface ICreateDataStore | MapGuide Maestro",
    "keywords": "Interface ICreateDataStore Defines a command that creates a file-based data store on a given feature source Inherited Members ICommand.Parent Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public interface ICreateDataStore : ICommand, IFdoSpatialContext Remarks This command is only supported on certain implementations of IServerConnection You can find out if the connection supports this command through the Capabilities Examples How to create a data store with a given schema IServerConnection conn = ...; FeatureSchema schema = new FeatureSchema(\"Default\", \"\"); ClassDefinition cls = new ClassDefinition(\"MyClass\", \"\"); cls.DefaultGeometryProperty = \"GEOM\"; //Add identity property KEY cls.AddProperty(new DataPropertyDefinition(\"KEY\", \"\") { DataType = DataPropertyType.Int32, IsAutoGenerated = true, IsReadOnly = true, IsNullable = false }, true); //Add string property NAME cls.AddProperty(new DataPropertyDefinition(\"NAME\", \"\") { DataType = DataPropertyType.String, Length = 255, IsNullable = true, IsReadOnly = false }); //Add geometry property GEOM cls.AddProperty(new GeometricPropertyDefinition(\"GEOM\", \"\") { GeometricTypes = FeatureGeometricType.Point, SpatialContextAssociation = \"Default\" }); schema.AddClass(cls); ICreateDataStore create = (ICreateDataStore)conn.CreateCommand((int)CommandType.CreateDataStore); CoordinateSystemDefinitionBase coordSys = conn.CoordinateSystemCatalog.FindCoordSys(\"LL84\"); create.FeatureSourceId = fsId; create.CoordinateSystemWkt = coordSys.WKT; create.Name = \"Default\"; create.ExtentType = OSGeo.MapGuide.ObjectModels.Common.FdoSpatialContextListSpatialContextExtentType.Dynamic; create.FileName = \"Test.sdf\"; create.Provider = \"OSGeo.SDF\"; create.Schema = schema; create.XYTolerance = 0.001; create.ZTolerance = 0.001; create.Execute(); Properties FeatureSourceId Gets or sets the Feature Source ID Declaration string FeatureSourceId { get; set; } Property Value Type Description System.String FileName Gets or sets the file name for the data store Declaration string FileName { get; set; } Property Value Type Description System.String Provider Gets or sets the FDO provider name Declaration string Provider { get; set; } Property Value Type Description System.String Schema Gets or sets the Feature Schema that models the structure of the data store Declaration FeatureSchema Schema { get; set; } Property Value Type Description FeatureSchema Methods Execute() Executes the command Declaration void Execute()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.IGetFdoCacheInfo.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.IGetFdoCacheInfo.html",
    "title": "Interface IGetFdoCacheInfo | MapGuide Maestro",
    "keywords": "Interface IGetFdoCacheInfo Defines the command for querying the cache status of FDO connections Inherited Members ICommand.Parent Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public interface IGetFdoCacheInfo : ICommand Examples This example shows how invoke the IGetFdoCacheInfo command. Note that you should check if the connection supports this command through its capabilities IServerConnection conn; ... IGetFdoCacheInfo command = (IGetFdoCacheInfo)conn.CreateCommand(CommandType.GetFdoCacheInfo); FdoCacheInfo cacheInfo = command.Execute(); Methods Execute() Executes this command and returns a FdoCacheInfo that represents this cache status information Declaration FdoCacheInfo Execute() Returns Type Description FdoCacheInfo"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Commands.IGetResourceContents.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Commands.IGetResourceContents.html",
    "title": "Interface IGetResourceContents | MapGuide Maestro",
    "keywords": "Interface IGetResourceContents Defines a command to get a set of resource contents in a single batch Inherited Members ICommand.Parent Namespace : OSGeo.MapGuide.MaestroAPI.Commands Assembly : cs.temp.dll.dll Syntax public interface IGetResourceContents : ICommand Examples This example shows how invoke the IGetResourceContents command. Note that you should check if the connection supports this command through its capabilities IServerConnection conn; ... IGetResourceContents command = (IGetResourceContents)conn.CreateCommand(CommandType.GetResourceContents); string [] resourceIds = new string[] { \"Library://Samples/Sheboygan/Layers/Parcels.LayerDefinition\", \"Library://Samples/Sheboygan/Layers/Rail.LayerDefinition\", \"Library://Samples/Sheboygan/Layers/HydrographicPolygons.LayerDefinition\", \"Library://Samples/Sheboygan/Layers/CityLimits.LayerDefinition\", \"Library://Samples/Sheboygan/Layers/Buildings.LayerDefinition\", \"Library://Samples/Sheboygan/Layers/Roads.LayerDefinition\" }; Dictionary<string, IResource> results = command.Execute(resourceIds); Methods Execute(IEnumerable<String>) Gets the resource content of the specified resources Declaration IDictionary<string, IResource> Execute(IEnumerable<string> resourceIds) Parameters Type Name Description IEnumerable < System.String > resourceIds Returns Type Description IDictionary < System.String , IResource >"
  },
  "api/OSGeo.MapGuide.MaestroAPI.ConnectionCacheStats.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.ConnectionCacheStats.html",
    "title": "Struct ConnectionCacheStats | MapGuide Maestro",
    "keywords": "Struct ConnectionCacheStats Describes stats of cached objects in a connection Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public struct ConnectionCacheStats Properties ClassDefinitions The number of cached class definitions Declaration public int ClassDefinitions { get; } Property Value Type Description System.Int32 FeatureSources The number of cached instances Declaration public int FeatureSources { get; } Property Value Type Description System.Int32"
  },
  "api/OSGeo.MapGuide.MaestroAPI.ConnectionFactoryMethod.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.ConnectionFactoryMethod.html",
    "title": "Delegate ConnectionFactoryMethod | MapGuide Maestro",
    "keywords": "Delegate ConnectionFactoryMethod A method that creates IServerConnection instances from the given parameters Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public delegate IServerConnection ConnectionFactoryMethod(NameValueCollection initParams); Parameters Type Name Description NameValueCollection initParams The init params. Returns Type Description IServerConnection"
  },
  "api/OSGeo.MapGuide.MaestroAPI.CoordinateSystem.CoordinateSystemCatalog.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.CoordinateSystem.CoordinateSystemCatalog.html",
    "title": "Class CoordinateSystemCatalog | MapGuide Maestro",
    "keywords": "Class CoordinateSystemCatalog Base coordinate system catalog class Inheritance System.Object CoordinateSystemCatalog Implements ICoordinateSystemCatalog Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.CoordinateSystem Assembly : cs.temp.dll.dll Syntax public abstract class CoordinateSystemCatalog : ICoordinateSystemCatalog Properties Categories Gets an array of coordinate system categories Declaration public abstract CoordinateSystemCategory[] Categories { get; } Property Value Type Description CoordinateSystemCategory [] Coordsys Gets an array of all coordinate systems in this catalog Declaration public virtual CoordinateSystemDefinitionBase[] Coordsys { get; } Property Value Type Description CoordinateSystemDefinitionBase [] IsLoaded Gets whether the coordinate system catalog has been loaded Declaration public abstract bool IsLoaded { get; } Property Value Type Description System.Boolean LibraryName Gets the name of the coordinate system library Declaration public abstract string LibraryName { get; } Property Value Type Description System.String Methods ConvertCoordinateSystemCodeToWkt(String) Convers the specified coordinate system code to WKT Declaration public abstract string ConvertCoordinateSystemCodeToWkt(string coordcode) Parameters Type Name Description System.String coordcode Returns Type Description System.String ConvertEpsgCodeToWkt(String) Converts the specified epsg code to WKT Declaration public abstract string ConvertEpsgCodeToWkt(string epsg) Parameters Type Name Description System.String epsg Returns Type Description System.String ConvertWktToCoordinateSystemCode(String) Converts the specified WKT into a coordinate system code Declaration public abstract string ConvertWktToCoordinateSystemCode(string wkt) Parameters Type Name Description System.String wkt Returns Type Description System.String ConvertWktToEpsgCode(String) Converts the specified WKT into an EPSG code Declaration public abstract string ConvertWktToEpsgCode(string wkt) Parameters Type Name Description System.String wkt Returns Type Description System.String CreateCoordinateSystem(String) Gets the coordinate system for the given well-known text Declaration public virtual ICoordinateSystemRef CreateCoordinateSystem(string wkt) Parameters Type Name Description System.String wkt Returns Type Description ICoordinateSystemRef CreateEmptyCoordinateSystem() Gets an empty coordinate system Declaration public abstract CoordinateSystemDefinitionBase CreateEmptyCoordinateSystem() Returns Type Description CoordinateSystemDefinitionBase CreateTransform(String, String) Creates a simple coordinate system transformation from the source and target WKT strings Declaration public virtual ISimpleTransform CreateTransform(string sourceWkt, string targetWkt) Parameters Type Name Description System.String sourceWkt System.String targetWkt Returns Type Description ISimpleTransform EnumerateCoordinateSystems(String) Gets an array of all coordinate systems in the specified category Declaration public abstract CoordinateSystemDefinitionBase[] EnumerateCoordinateSystems(string category) Parameters Type Name Description System.String category Returns Type Description CoordinateSystemDefinitionBase [] FindCoordSys(String) Gets the coordinate system that matches the specified code Declaration public virtual CoordinateSystemDefinitionBase FindCoordSys(string coordcode) Parameters Type Name Description System.String coordcode Returns Type Description CoordinateSystemDefinitionBase IsValid(String) Checks if the specified WKT is valid Declaration public abstract bool IsValid(string wkt) Parameters Type Name Description System.String wkt Returns Type Description System.Boolean Implements ICoordinateSystemCatalog"
  },
  "api/OSGeo.MapGuide.MaestroAPI.CoordinateSystem.CoordinateSystemCategory.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.CoordinateSystem.CoordinateSystemCategory.html",
    "title": "Class CoordinateSystemCategory | MapGuide Maestro",
    "keywords": "Class CoordinateSystemCategory Represents a coordinate system category Inheritance System.Object CoordinateSystemCategory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.CoordinateSystem Assembly : cs.temp.dll.dll Syntax public abstract class CoordinateSystemCategory Constructors CoordinateSystemCategory(ICoordinateSystemCatalog, String) Initializes a new instance of the CoordinateSystemCategory class. Declaration protected CoordinateSystemCategory(ICoordinateSystemCatalog parent, string name) Parameters Type Name Description ICoordinateSystemCatalog parent The parent. System.String name The name. Properties Items Gets an array of all coordinate systems in this category Declaration public CoordinateSystemDefinitionBase[] Items { get; } Property Value Type Description CoordinateSystemDefinitionBase [] Name Gets the name. Declaration public string Name { get; } Property Value Type Description System.String The name. Methods ToString() Returns a System.String that represents this instance. Declaration public override string ToString() Returns Type Description System.String A System.String that represents this instance. Overrides System.Object.ToString()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.CoordinateSystem.CoordinateSystemDefinitionBase.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.CoordinateSystem.CoordinateSystemDefinitionBase.html",
    "title": "Class CoordinateSystemDefinitionBase | MapGuide Maestro",
    "keywords": "Class CoordinateSystemDefinitionBase Represents a coordinate system definition Inheritance System.Object CoordinateSystemDefinitionBase HttpCoordinateSystemDefinition Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.CoordinateSystem Assembly : cs.temp.dll.dll Syntax public abstract class CoordinateSystemDefinitionBase Constructors CoordinateSystemDefinitionBase() Initializes a new instance of the OSGeo.MapGuide.MaestroAPI.CoordinateSystem.CoordinateSystemBase class. Declaration protected CoordinateSystemDefinitionBase() CoordinateSystemDefinitionBase(CoordinateSystemCategory) Initializes a new instance of the OSGeo.MapGuide.MaestroAPI.CoordinateSystem.CoordinateSystemBase class. Declaration protected CoordinateSystemDefinitionBase(CoordinateSystemCategory parent) Parameters Type Name Description CoordinateSystemCategory parent The parent. Fields m_code The cs code Declaration protected string m_code Field Value Type Description System.String m_datum The datum Declaration protected string m_datum Field Value Type Description System.String m_datumDescription The datum description Declaration protected string m_datumDescription Field Value Type Description System.String m_description The description Declaration protected string m_description Field Value Type Description System.String m_ellipsoid The ellipsoid Declaration protected string m_ellipsoid Field Value Type Description System.String m_ellipsoidDescription The ellipsoid description Declaration protected string m_ellipsoidDescription Field Value Type Description System.String m_epsg The epsg code Declaration protected string m_epsg Field Value Type Description System.String m_parent The parent category Declaration protected CoordinateSystemCategory m_parent Field Value Type Description CoordinateSystemCategory m_projection The projection Declaration protected string m_projection Field Value Type Description System.String m_projectionDescription The projection description Declaration protected string m_projectionDescription Field Value Type Description System.String m_wkt The cs wkt Declaration protected string m_wkt Field Value Type Description System.String Properties Code Gets or sets the code. Declaration public string Code { get; set; } Property Value Type Description System.String The code. Datum Gets the datum. Declaration public string Datum { get; } Property Value Type Description System.String The datum. DatumDescription Gets the datum description. Declaration public string DatumDescription { get; } Property Value Type Description System.String The datum description. Description Gets or sets the description. Declaration public string Description { get; set; } Property Value Type Description System.String The description. Ellipsoid Gets the ellipsoid. Declaration public string Ellipsoid { get; } Property Value Type Description System.String The ellipsoid. EllipsoidDescription Gets the ellipsoid description. Declaration public string EllipsoidDescription { get; } Property Value Type Description System.String The ellipsoid description. EPSG Gets the EPSG code Declaration public string EPSG { get; } Property Value Type Description System.String The EPSG code. Projection Gets the projection. Declaration public string Projection { get; } Property Value Type Description System.String The projection. ProjectionDescription Gets the projection description. Declaration public string ProjectionDescription { get; } Property Value Type Description System.String The projection description. WKT Gets or sets the WKT. Declaration public string WKT { get; set; } Property Value Type Description System.String The WKT. Methods ToString() Returns a System.String that represents this instance. Declaration public override string ToString() Returns Type Description System.String A System.String that represents this instance. Overrides System.Object.ToString()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.CoordinateSystem.DefaultSimpleTransform.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.CoordinateSystem.DefaultSimpleTransform.html",
    "title": "Class DefaultSimpleTransform | MapGuide Maestro",
    "keywords": "Class DefaultSimpleTransform A simple transform that wraps the NTS coordinate system transformation APIs Inheritance System.Object DefaultSimpleTransform Implements ISimpleTransform IDisposable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.CoordinateSystem Assembly : cs.temp.dll.dll Syntax public class DefaultSimpleTransform : ISimpleTransform, IDisposable Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Transform(Double, Double, out Double, out Double) Transforms the specified point Declaration public void Transform(double x, double y, out double tx, out double ty) Parameters Type Name Description System.Double x The X coordinate System.Double y The Y coordinate System.Double tx The transformed X coordinate System.Double ty The transformed Y coordinate Implements ISimpleTransform IDisposable"
  },
  "api/OSGeo.MapGuide.MaestroAPI.CsHelper.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.CsHelper.html",
    "title": "Class CsHelper | MapGuide Maestro",
    "keywords": "Class CsHelper Provides application-level overrides for coordinate system related functionality. Inheritance System.Object CsHelper Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public static class CsHelper Properties DefaultCalculator Gets or sets the default calculator Declaration public static IMpuCalculator DefaultCalculator { get; set; } Property Value Type Description IMpuCalculator DefaultCatalog Gets or sets the default catalog Declaration public static ICoordinateSystemCatalog DefaultCatalog { get; set; } Property Value Type Description ICoordinateSystemCatalog"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Exceptions.CustomPropertyNotFoundException.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Exceptions.CustomPropertyNotFoundException.html",
    "title": "Class CustomPropertyNotFoundException | MapGuide Maestro",
    "keywords": "Class CustomPropertyNotFoundException An exception that is thrown when attempting to get or set a custom connection property that is not defined Inheritance System.Object MaestroException CustomPropertyNotFoundException Namespace : OSGeo.MapGuide.MaestroAPI.Exceptions Assembly : cs.temp.dll.dll Syntax [Serializable] public class CustomPropertyNotFoundException : MaestroException Constructors CustomPropertyNotFoundException() Initializes a new instance of the CustomPropertyNotFoundException class. Declaration public CustomPropertyNotFoundException() CustomPropertyNotFoundException(SerializationInfo, StreamingContext) Initializes a new instance of the CustomPropertyNotFoundException class. Declaration protected CustomPropertyNotFoundException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Exceptions Type Condition System.ArgumentNullException The info parameter is null. System.Runtime.Serialization.SerializationException The class name is null or System.Exception.HResult is zero (0). CustomPropertyNotFoundException(String) Initializes a new instance of the CustomPropertyNotFoundException class. Declaration public CustomPropertyNotFoundException(string message) Parameters Type Name Description System.String message The message. CustomPropertyNotFoundException(String, Exception) Initializes a new instance of the CustomPropertyNotFoundException class. Declaration public CustomPropertyNotFoundException(string message, Exception inner) Parameters Type Name Description System.String message The message. Exception inner The inner."
  },
  "api/OSGeo.MapGuide.MaestroAPI.Exceptions.DuplicateKeyException.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Exceptions.DuplicateKeyException.html",
    "title": "Class DuplicateKeyException | MapGuide Maestro",
    "keywords": "Class DuplicateKeyException Raised when an item with an pre-existing key is being added to a collection Inheritance System.Object DuplicateKeyException Namespace : OSGeo.MapGuide.MaestroAPI.Exceptions Assembly : cs.temp.dll.dll Syntax [Serializable] public class DuplicateKeyException : Exception Constructors DuplicateKeyException() Initializes a new instance of the DuplicateKeyException class. Declaration public DuplicateKeyException() DuplicateKeyException(SerializationInfo, StreamingContext) Initializes a new instance of the DuplicateKeyException class. Declaration protected DuplicateKeyException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Exceptions Type Condition System.ArgumentNullException The info parameter is null. System.Runtime.Serialization.SerializationException The class name is null or System.Exception.HResult is zero (0). DuplicateKeyException(String) Initializes a new instance of the DuplicateKeyException class. Declaration public DuplicateKeyException(string message) Parameters Type Name Description System.String message The message. DuplicateKeyException(String, Exception) Initializes a new instance of the DuplicateKeyException class. Declaration public DuplicateKeyException(string message, Exception inner) Parameters Type Name Description System.String message The message. Exception inner The inner."
  },
  "api/OSGeo.MapGuide.MaestroAPI.Exceptions.ExpressionException.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Exceptions.ExpressionException.html",
    "title": "Class ExpressionException | MapGuide Maestro",
    "keywords": "Class ExpressionException Thrown when evaluating an expression fails Inheritance System.Object MaestroException ExpressionException Namespace : OSGeo.MapGuide.MaestroAPI.Exceptions Assembly : cs.temp.dll.dll Syntax [Serializable] public class ExpressionException : MaestroException Constructors ExpressionException() Initializes a new instance of the ExpressionException class. Declaration public ExpressionException() ExpressionException(SerializationInfo, StreamingContext) Initializes a new instance of the ExpressionException class. Declaration protected ExpressionException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Exceptions Type Condition System.ArgumentNullException The info parameter is null. System.Runtime.Serialization.SerializationException The class name is null or System.Exception.HResult is zero (0). ExpressionException(String) Initializes a new instance of the ExpressionException class. Declaration public ExpressionException(string message) Parameters Type Name Description System.String message The message. ExpressionException(String, Exception) Initializes a new instance of the ExpressionException class. Declaration public ExpressionException(string message, Exception inner) Parameters Type Name Description System.String message The message. Exception inner The inner."
  },
  "api/OSGeo.MapGuide.MaestroAPI.ExplodeThemeOptions.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.ExplodeThemeOptions.html",
    "title": "Class ExplodeThemeOptions | MapGuide Maestro",
    "keywords": "Class ExplodeThemeOptions Defines parameter for exploding a theme into filtered layers Inheritance System.Object ExplodeThemeOptions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public class ExplodeThemeOptions Properties ActiveStyle The active style Declaration public IVectorStyle ActiveStyle { get; set; } Property Value Type Description IVectorStyle FolderId The folder to create the layers in Declaration public string FolderId { get; set; } Property Value Type Description System.String Layer The layer definition Declaration public ILayerDefinition Layer { get; set; } Property Value Type Description ILayerDefinition LayerNameFormat The layer name format string Declaration public string LayerNameFormat { get; set; } Property Value Type Description System.String LayerPrefix The layer prefix Declaration public string LayerPrefix { get; set; } Property Value Type Description System.String Range The active scale range Declaration public IVectorScaleRange Range { get; set; } Property Value Type Description IVectorScaleRange"
  },
  "api/OSGeo.MapGuide.MaestroAPI.ExtensionMethods.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.ExtensionMethods.html",
    "title": "Class ExtensionMethods | MapGuide Maestro",
    "keywords": "Class ExtensionMethods Extension methods Inheritance System.Object ExtensionMethods Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public static class ExtensionMethods Methods GenerateSessionResourceId(IServerConnection, String) Generates the session resource id. Declaration public static string GenerateSessionResourceId(this IServerConnection conn, string resType) Parameters Type Name Description IServerConnection conn The conn. System.String resType Type of the res. Returns Type Description System.String GenerateSessionResourceId(IServerConnection, String, String) Generates the session resource id. Declaration public static string GenerateSessionResourceId(this IServerConnection conn, string name, string resType) Parameters Type Name Description IServerConnection conn The conn. System.String name The name. System.String resType Type of the res. Returns Type Description System.String GetFeatureCount(IServerConnection, String, String, String) Gets the total number of features in the feature class Declaration public static int GetFeatureCount(this IServerConnection conn, string featureSourceId, string featureClass, string filter) Parameters Type Name Description IServerConnection conn System.String featureSourceId System.String featureClass System.String filter Returns Type Description System.Int32"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.BlobValue.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.BlobValue.html",
    "title": "Class BlobValue | MapGuide Maestro",
    "keywords": "Class BlobValue Stores blob data Inheritance System.Object PropertyValue ReferenceTypePropertyValue < System.Byte []> BlobValue Inherited Members ReferenceTypePropertyValue<Byte[]>.Value PropertyValue.IsNull PropertyValue.SetNull() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class BlobValue : ReferenceTypePropertyValue<byte[]> Constructors BlobValue() Initializes a new instance Declaration public BlobValue() BlobValue(Byte[]) Initializes a new instance Declaration public BlobValue(byte[] value) Parameters Type Name Description System.Byte [] value Properties PropertyDefType Gets the suggsted property definition type for this value Declaration public override PropertyDefinitionType PropertyDefType { get; } Property Value Type Description PropertyDefinitionType The suggsted property definition type. Overrides PropertyValue.PropertyDefType Type Gets the type. Declaration public override PropertyValueType Type { get; } Property Value Type Description PropertyValueType Overrides PropertyValue.Type Methods ValueAsString() Gets the value as a string Declaration public override string ValueAsString() Returns Type Description System.String Overrides PropertyValue.ValueAsString()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.BooleanValue.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.BooleanValue.html",
    "title": "Class BooleanValue | MapGuide Maestro",
    "keywords": "Class BooleanValue Stores boolean data Inheritance System.Object PropertyValue ValueTypePropertyValue < System.Boolean > BooleanValue Inherited Members ValueTypePropertyValue<Boolean>.IsNull ValueTypePropertyValue<Boolean>.Value ValueTypePropertyValue<Boolean>.SetNull() ValueTypePropertyValue<Boolean>.PropertyDefType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class BooleanValue : ValueTypePropertyValue<bool> Constructors BooleanValue() Initializes a new instance Declaration public BooleanValue() BooleanValue(Boolean) Initializes a new instance Declaration public BooleanValue(bool value) Parameters Type Name Description System.Boolean value Properties Type Gets the type. Declaration public override PropertyValueType Type { get; } Property Value Type Description PropertyValueType Overrides PropertyValue.Type Methods ValueAsString() Gets the value as a string Declaration public override string ValueAsString() Returns Type Description System.String Overrides PropertyValue.ValueAsString()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.FeatureValue.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.FeatureValue.html",
    "title": "Class FeatureValue | MapGuide Maestro",
    "keywords": "Class FeatureValue Stores feature data Inheritance System.Object PropertyValue ReferenceTypePropertyValue < IFeature []> FeatureValue Inherited Members ReferenceTypePropertyValue<IFeature[]>.Value PropertyValue.IsNull PropertyValue.SetNull() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class FeatureValue : ReferenceTypePropertyValue<IFeature[]> Constructors FeatureValue() Initializes a new instance Declaration public FeatureValue() FeatureValue(IFeature[]) Initializes a new instance Declaration public FeatureValue(IFeature[] values) Parameters Type Name Description IFeature [] values Properties PropertyDefType Gets the suggsted property definition type for this value Declaration public override PropertyDefinitionType PropertyDefType { get; } Property Value Type Description PropertyDefinitionType The suggsted property definition type. Overrides PropertyValue.PropertyDefType Type Gets the type. Declaration public override PropertyValueType Type { get; } Property Value Type Description PropertyValueType Overrides PropertyValue.Type Methods ValueAsString() Gets the value as a string Declaration public override string ValueAsString() Returns Type Description System.String Overrides PropertyValue.ValueAsString()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.GeometryValue.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.GeometryValue.html",
    "title": "Class GeometryValue | MapGuide Maestro",
    "keywords": "Class GeometryValue Stores geometry data Inheritance System.Object PropertyValue ReferenceTypePropertyValue < IGeometryRef > GeometryValue Inherited Members ReferenceTypePropertyValue<IGeometryRef>.Value PropertyValue.IsNull PropertyValue.SetNull() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class GeometryValue : ReferenceTypePropertyValue<IGeometryRef> Constructors GeometryValue() Initializes a new instance Declaration public GeometryValue() GeometryValue(IGeometryRef) Initializes a new instance Declaration public GeometryValue(IGeometryRef value) Parameters Type Name Description IGeometryRef value Properties PropertyDefType Gets the suggsted property definition type for this value Declaration public override PropertyDefinitionType PropertyDefType { get; } Property Value Type Description PropertyDefinitionType The suggsted property definition type. Overrides PropertyValue.PropertyDefType Type Gets the type. Declaration public override PropertyValueType Type { get; } Property Value Type Description PropertyValueType Overrides PropertyValue.Type Methods ValueAsString() Gets the value as a string Declaration public override string ValueAsString() Returns Type Description System.String Overrides PropertyValue.ValueAsString()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.IFeature.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.IFeature.html",
    "title": "Interface IFeature | MapGuide Maestro",
    "keywords": "Interface IFeature Provides access to the property values within each feature for a IFeatureReader Inherited Members IRecord.FieldCount IRecord.GetName(Int32) IRecord.GetFieldType(Int32) IRecord.IsNull(String) IRecord.IsNull(Int32) IRecord.GetBoolean(String) IRecord.GetByte(String) IRecord.GetBlob(String) IRecord.GetClob(String) IRecord.GetDouble(String) IRecord.GetDateTime(String) IRecord.GetInt16(String) IRecord.GetInt32(String) IRecord.GetInt64(String) IRecord.GetSingle(String) IRecord.GetString(String) IRecord.GetGeometry(String) IRecord.GetBoolean(Int32) IRecord.GetByte(Int32) IRecord.GetBlob(Int32) IRecord.GetClob(Int32) IRecord.GetDouble(Int32) IRecord.GetDateTime(Int32) IRecord.GetInt16(Int32) IRecord.GetInt32(Int32) IRecord.GetInt64(Int32) IRecord.GetSingle(Int32) IRecord.GetString(Int32) IRecord.GetGeometry(Int32) IRecord.Item[Int32] IRecord.Item[String] IRecord.GetPropertyType(String) IRecord.GetPropertyType(Int32) Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public interface IFeature : IRecord Remarks For each property, determine the property type and then call the appropriate Get<type>() method to get the value of the property. The exception for this is if you are access the value via the indexer. In this case you only need determine the property type when casting from the System.Object that is returned by the indexer Properties ClassDefinition Gets the class definition of the object currently being read. If the user has requested only a subset of the class properties (as specified in the filter text), the class definition reflects what the user has requested, rather than the full class definition. Declaration ClassDefinition ClassDefinition { get; } Property Value Type Description ClassDefinition Methods GetFeatureObject(Int32) Gets a IFeatureReader containing all the nested features at the specified index Declaration IFeatureReader GetFeatureObject(int index) Parameters Type Name Description System.Int32 index Returns Type Description IFeatureReader GetFeatureObject(String) Gets a IFeatureReader containing all the nested features of the specified property Declaration IFeatureReader GetFeatureObject(string name) Parameters Type Name Description System.String name Returns Type Description IFeatureReader"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.IFeatureReader.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.IFeatureReader.html",
    "title": "Interface IFeatureReader | MapGuide Maestro",
    "keywords": "Interface IFeatureReader Provides a forward-only, read-only iterator for reading features selected from a feature source Inherited Members IReader.ReadNext() IReader.Close() IFeature.ClassDefinition IFeature.GetFeatureObject(String) IFeature.GetFeatureObject(Int32) IRecord.FieldCount IRecord.GetName(Int32) IRecord.GetFieldType(Int32) IRecord.IsNull(String) IRecord.IsNull(Int32) IRecord.GetBoolean(String) IRecord.GetByte(String) IRecord.GetBlob(String) IRecord.GetClob(String) IRecord.GetDouble(String) IRecord.GetDateTime(String) IRecord.GetInt16(String) IRecord.GetInt32(String) IRecord.GetInt64(String) IRecord.GetSingle(String) IRecord.GetString(String) IRecord.GetGeometry(String) IRecord.GetBoolean(Int32) IRecord.GetByte(Int32) IRecord.GetBlob(Int32) IRecord.GetClob(Int32) IRecord.GetDouble(Int32) IRecord.GetDateTime(Int32) IRecord.GetInt16(Int32) IRecord.GetInt32(Int32) IRecord.GetInt64(Int32) IRecord.GetSingle(Int32) IRecord.GetString(Int32) IRecord.GetGeometry(Int32) IRecord.Item[Int32] IRecord.Item[String] IRecord.GetPropertyType(String) IRecord.GetPropertyType(Int32) Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public interface IFeatureReader : IReader, IDisposable, IFeature, IRecord, IEnumerable<IFeature> Remarks You must call ReadNext before you can access the data For each property, determine the property type and then call the appropriate Get<type>() method to get the value of the property. The exception for this is if you are access the value via the indexer. In this case you only need determine the property type when casting from the System.Object that is returned by the indexer Examples How an IFeatureReader is normally used IServerConnection conn = ConnectionProviderRegistry.CreateConnection(\"Maestro.Http\", \"Username\", \"Administrator\", \"Password\", \"admin\", \"Url\", \"http://localhost/mapguide/mapagent/mapagent.fcgi\"); using (IFeatureReader reader = conn.FeatureService.QueryFeatureSource(\"Library://Test/Parcels.FeatureSource\", \"Default:Parcels\", null)) { while (reader.ReadNext()) { //Process the current feature } reader.Close(); }"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.IRecordReset.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.IRecordReset.html",
    "title": "Interface IRecordReset | MapGuide Maestro",
    "keywords": "Interface IRecordReset Provides a means for resetting a IRecord instance Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public interface IRecordReset Methods Update(IRecord) Updates the specified record. Declaration void Update(IRecord record) Parameters Type Name Description IRecord record The record."
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.LimitingFeatureReader.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.LimitingFeatureReader.html",
    "title": "Class LimitingFeatureReader | MapGuide Maestro",
    "keywords": "Class LimitingFeatureReader Wraps a IFeatureReader to only allow up the specified number of iterations Inheritance System.Object LimitingFeatureReader Implements IFeatureReader IReader IDisposable IFeature IRecord IEnumerable < IFeature > Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class LimitingFeatureReader : IFeatureReader, IReader, IDisposable, IFeature, IRecord, IEnumerable<IFeature> Constructors LimitingFeatureReader(IFeatureReader, Int32) Declaration public LimitingFeatureReader(IFeatureReader reader, int limit) Parameters Type Name Description IFeatureReader reader System.Int32 limit Properties ClassDefinition Gets the class definition of the object currently being read. If the user has requested only a subset of the class properties (as specified in the filter text), the class definition reflects what the user has requested, rather than the full class definition. Declaration public ClassDefinition ClassDefinition { get; } Property Value Type Description ClassDefinition FieldCount Gets the number of fields in this record Declaration public int FieldCount { get; } Property Value Type Description System.Int32 Item[Int32] Gets the object at the specified index Declaration public object this[int index] { get; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Object Item[String] Gets the object value for the specified property Declaration public object this[string name] { get; } Parameters Type Name Description System.String name Property Value Type Description System.Object Methods Close() Closes the object, freeing any resources it may be holding. Declaration public void Close() Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() GetBlob(Int32) Gets the blob value at the specified index Declaration public byte[] GetBlob(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Byte [] GetBlob(String) Gets the blob value of the specified property Declaration public byte[] GetBlob(string name) Parameters Type Name Description System.String name Returns Type Description System.Byte [] GetBoolean(Int32) Gets the boolean value at the specified index Declaration public bool GetBoolean(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Boolean GetBoolean(String) Gets the boolean value of the specified property Declaration public bool GetBoolean(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean GetByte(Int32) Gets the byte value at the specified index Declaration public byte GetByte(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Byte GetByte(String) Gets the byte value of the specified property Declaration public byte GetByte(string name) Parameters Type Name Description System.String name Returns Type Description System.Byte GetClob(Int32) Gets the clob value at the specified index Declaration public char[] GetClob(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Char [] GetClob(String) Gets the clob value of the specified property Declaration public char[] GetClob(string name) Parameters Type Name Description System.String name Returns Type Description System.Char [] GetDateTime(Int32) Gets the datetime value at the specified index Declaration public DateTime GetDateTime(int index) Parameters Type Name Description System.Int32 index Returns Type Description DateTime GetDateTime(String) Gets the datetime value of the specified property Declaration public DateTime GetDateTime(string name) Parameters Type Name Description System.String name Returns Type Description DateTime GetDouble(Int32) Gets the double value at the specified index Declaration public double GetDouble(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Double GetDouble(String) Gets the double value of the specified property Declaration public double GetDouble(string name) Parameters Type Name Description System.String name Returns Type Description System.Double GetEnumerator() Returns an enumerator that iterates through the collection Declaration public IEnumerator<IFeature> GetEnumerator() Returns Type Description IEnumerator < IFeature > GetFeatureObject(Int32) Gets a IFeatureReader containing all the nested features at the specified index Declaration public IFeatureReader GetFeatureObject(int index) Parameters Type Name Description System.Int32 index Returns Type Description IFeatureReader GetFeatureObject(String) Gets a IFeatureReader containing all the nested features of the specified property Declaration public IFeatureReader GetFeatureObject(string name) Parameters Type Name Description System.String name Returns Type Description IFeatureReader GetFieldType(Int32) Gets the CLR type of the field at the specified index Declaration public Type GetFieldType(int i) Parameters Type Name Description System.Int32 i Returns Type Description Type GetGeometry(Int32) Gets the geometry value at the specified index Declaration public IGeometryRef GetGeometry(int index) Parameters Type Name Description System.Int32 index Returns Type Description IGeometryRef GetGeometry(String) Gets the geometry value of the specified property Declaration public IGeometryRef GetGeometry(string name) Parameters Type Name Description System.String name Returns Type Description IGeometryRef GetInt16(Int32) Gets the int16 value at the specified index Declaration public short GetInt16(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Int16 GetInt16(String) Gets the int16 value of the specified property Declaration public short GetInt16(string name) Parameters Type Name Description System.String name Returns Type Description System.Int16 GetInt32(Int32) Gets the int32 value at the specified index Declaration public int GetInt32(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Int32 GetInt32(String) Gets the int32 value of the specified property Declaration public int GetInt32(string name) Parameters Type Name Description System.String name Returns Type Description System.Int32 GetInt64(Int32) Gets the int64 value at the specified index Declaration public long GetInt64(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Int64 GetInt64(String) Gets the int64 value of the specified property Declaration public long GetInt64(string name) Parameters Type Name Description System.String name Returns Type Description System.Int64 GetName(Int32) Gets the name of the field at the specified index Declaration public string GetName(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.String GetPropertyType(Int32) Gets the type of the property at the specified index. Declaration public PropertyValueType GetPropertyType(int index) Parameters Type Name Description System.Int32 index Returns Type Description PropertyValueType GetPropertyType(String) Gets the type of the property. Declaration public PropertyValueType GetPropertyType(string name) Parameters Type Name Description System.String name Returns Type Description PropertyValueType GetSingle(Int32) Gets the single value at the specified index Declaration public float GetSingle(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Single GetSingle(String) Gets the single value of the specified property Declaration public float GetSingle(string name) Parameters Type Name Description System.String name Returns Type Description System.Single GetString(Int32) Gets the string value at the specified index Declaration public string GetString(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.String GetString(String) Gets the string value of the specified property Declaration public string GetString(string name) Parameters Type Name Description System.String name Returns Type Description System.String IsNull(Int32) Gets whether the property value at the specified index has a null property value. You must call this method first to determine if it is safe to call the corresponding GetXXX() methods Declaration public bool IsNull(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Boolean IsNull(String) Gets whether the specified property name has a null property value Declaration public bool IsNull(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean ReadNext() Advances the reader to the next item and determines whether there is another object to read. Declaration public bool ReadNext() Returns Type Description System.Boolean Explicit Interface Implementations IEnumerable.GetEnumerator() Returns an enumerator that iterates through the collection. Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements IFeatureReader IReader IDisposable IFeature IRecord IEnumerable<>"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.MutableFeatureBase.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.MutableFeatureBase.html",
    "title": "Class MutableFeatureBase | MapGuide Maestro",
    "keywords": "Class MutableFeatureBase Represents a Feature instance whose properties can be modified Inheritance System.Object RecordBase MutableRecordBase MutableFeatureBase Implements IRecordReset IMutableFeature IMutableRecord IRecord IRecordInitialize Inherited Members MutableRecordBase.ClonePropertyValue(PropertyValue) MutableRecordBase.Item[Int32] MutableRecordBase.Item[String] MutableRecordBase.SetNull(String) MutableRecordBase.SetNull(Int32) MutableRecordBase.SetBoolean(String, Boolean) MutableRecordBase.SetByte(String, Byte) MutableRecordBase.SetBlob(String, Byte[]) MutableRecordBase.SetClob(String, Char[]) MutableRecordBase.SetDouble(String, Double) MutableRecordBase.SetDateTime(String, DateTime) MutableRecordBase.SetInt16(String, Int16) MutableRecordBase.SetInt32(String, Int32) MutableRecordBase.SetInt64(String, Int64) MutableRecordBase.SetSingle(String, Single) MutableRecordBase.SetString(String, String) MutableRecordBase.SetGeometry(String, IGeometryRef) MutableRecordBase.SetBoolean(Int32, Boolean) MutableRecordBase.SetByte(Int32, Byte) MutableRecordBase.SetBlob(Int32, Byte[]) MutableRecordBase.SetClob(Int32, Char[]) MutableRecordBase.SetDouble(Int32, Double) MutableRecordBase.SetDateTime(Int32, DateTime) MutableRecordBase.SetInt16(Int32, Int16) MutableRecordBase.SetInt32(Int32, Int32) MutableRecordBase.SetInt64(Int32, Int64) MutableRecordBase.SetSingle(Int32, Single) MutableRecordBase.SetString(Int32, String) MutableRecordBase.SetGeometry(Int32, IGeometryRef) RecordBase._values RecordBase._ordinalMap RecordBase.GetValue(String) RecordBase.PropertyExists(String) RecordBase.PutValue(String, PropertyValue) RecordBase.IsNull(String) RecordBase.IsNull(Int32) RecordBase.GetBoolean(String) RecordBase.GetByte(String) RecordBase.GetBlob(String) RecordBase.GetClob(String) RecordBase.GetDouble(String) RecordBase.GetDateTime(String) RecordBase.GetFeatureObject(String) RecordBase.GetInt16(String) RecordBase.GetInt32(String) RecordBase.GetInt64(String) RecordBase.GetSingle(String) RecordBase.GetString(String) RecordBase.GetGeometry(String) RecordBase.GetBoolean(Int32) RecordBase.GetByte(Int32) RecordBase.GetBlob(Int32) RecordBase.GetClob(Int32) RecordBase.GetDouble(Int32) RecordBase.IRecord.GetDateTime(Int32) RecordBase.GetFeatureObject(Int32) RecordBase.GetInt16(Int32) RecordBase.GetInt32(Int32) RecordBase.GetInt64(Int32) RecordBase.GetSingle(Int32) RecordBase.GetString(Int32) RecordBase.GetGeometry(Int32) RecordBase.FieldCount RecordBase.GetName(Int32) RecordBase.GetFieldType(Int32) RecordBase.Update(IRecord) RecordBase.PropertyNames RecordBase.GetPropertyType(String) RecordBase.GetPropertyType(Int32) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class MutableFeatureBase : MutableRecordBase, IRecordReset, IMutableFeature, IMutableRecord, IRecord, IRecordInitialize Constructors MutableFeatureBase(IRecordInitialize, ClassDefinition) Creates a new instance Declaration protected MutableFeatureBase(IRecordInitialize feature, ClassDefinition source) Parameters Type Name Description IRecordInitialize feature ClassDefinition source MutableFeatureBase(MutableFeatureBase) Creates a new instance Declaration protected MutableFeatureBase(MutableFeatureBase feat) Parameters Type Name Description MutableFeatureBase feat Fields _clsDef The class definition Declaration protected ClassDefinition _clsDef Field Value Type Description ClassDefinition Properties ClassDefinition Gets the associated class definition Declaration public ClassDefinition ClassDefinition { get; } Property Value Type Description ClassDefinition Implements IRecordReset IMutableFeature IMutableRecord IRecord IRecordInitialize"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.MutableRecord.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.MutableRecord.html",
    "title": "Class MutableRecord | MapGuide Maestro",
    "keywords": "Class MutableRecord A record whose properties can be modified and allows for adding of new PropertyValue instances Inheritance System.Object RecordBase MutableRecordBase MutableRecord Implements IRecordReset IMutableRecord IRecord IRecordInitialize Inherited Members MutableRecordBase.ClonePropertyValue(PropertyValue) MutableRecordBase.Item[Int32] MutableRecordBase.Item[String] MutableRecordBase.SetNull(String) MutableRecordBase.SetNull(Int32) MutableRecordBase.SetBoolean(String, Boolean) MutableRecordBase.SetByte(String, Byte) MutableRecordBase.SetBlob(String, Byte[]) MutableRecordBase.SetClob(String, Char[]) MutableRecordBase.SetDouble(String, Double) MutableRecordBase.SetDateTime(String, DateTime) MutableRecordBase.SetInt16(String, Int16) MutableRecordBase.SetInt32(String, Int32) MutableRecordBase.SetInt64(String, Int64) MutableRecordBase.SetSingle(String, Single) MutableRecordBase.SetString(String, String) MutableRecordBase.SetGeometry(String, IGeometryRef) MutableRecordBase.SetBoolean(Int32, Boolean) MutableRecordBase.SetByte(Int32, Byte) MutableRecordBase.SetBlob(Int32, Byte[]) MutableRecordBase.SetClob(Int32, Char[]) MutableRecordBase.SetDouble(Int32, Double) MutableRecordBase.SetDateTime(Int32, DateTime) MutableRecordBase.SetInt16(Int32, Int16) MutableRecordBase.SetInt32(Int32, Int32) MutableRecordBase.SetInt64(Int32, Int64) MutableRecordBase.SetSingle(Int32, Single) MutableRecordBase.SetString(Int32, String) MutableRecordBase.SetGeometry(Int32, IGeometryRef) RecordBase._values RecordBase._ordinalMap RecordBase.GetValue(String) RecordBase.PropertyExists(String) RecordBase.PutValue(String, PropertyValue) RecordBase.IsNull(String) RecordBase.IsNull(Int32) RecordBase.GetBoolean(String) RecordBase.GetByte(String) RecordBase.GetBlob(String) RecordBase.GetClob(String) RecordBase.GetDouble(String) RecordBase.GetDateTime(String) RecordBase.GetFeatureObject(String) RecordBase.GetInt16(String) RecordBase.GetInt32(String) RecordBase.GetInt64(String) RecordBase.GetSingle(String) RecordBase.GetString(String) RecordBase.GetGeometry(String) RecordBase.GetBoolean(Int32) RecordBase.GetByte(Int32) RecordBase.GetBlob(Int32) RecordBase.GetClob(Int32) RecordBase.GetDouble(Int32) RecordBase.IRecord.GetDateTime(Int32) RecordBase.GetFeatureObject(Int32) RecordBase.GetInt16(Int32) RecordBase.GetInt32(Int32) RecordBase.GetInt64(Int32) RecordBase.GetSingle(Int32) RecordBase.GetString(Int32) RecordBase.GetGeometry(Int32) RecordBase.FieldCount RecordBase.GetName(Int32) RecordBase.GetFieldType(Int32) RecordBase.Update(IRecord) RecordBase.PropertyNames RecordBase.GetPropertyType(String) RecordBase.GetPropertyType(Int32) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class MutableRecord : MutableRecordBase, IRecordReset, IMutableRecord, IRecord, IRecordInitialize Constructors MutableRecord() Initializes a new instance Declaration public MutableRecord() Implements IRecordReset IMutableRecord IRecord IRecordInitialize"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.StringValue.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.StringValue.html",
    "title": "Class StringValue | MapGuide Maestro",
    "keywords": "Class StringValue Stores string data Inheritance System.Object PropertyValue ReferenceTypePropertyValue < System.String > StringValue Inherited Members ReferenceTypePropertyValue<String>.Value PropertyValue.IsNull PropertyValue.SetNull() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public class StringValue : ReferenceTypePropertyValue<string> Constructors StringValue() Initializes a new instance Declaration public StringValue() StringValue(String) Initializes a new instance Declaration public StringValue(string value) Parameters Type Name Description System.String value Properties PropertyDefType Gets the suggsted property definition type for this value Declaration public override PropertyDefinitionType PropertyDefType { get; } Property Value Type Description PropertyDefinitionType The suggsted property definition type. Overrides PropertyValue.PropertyDefType Type Gets the type. Declaration public override PropertyValueType Type { get; } Property Value Type Description PropertyValueType Overrides PropertyValue.Type Methods ValueAsString() Gets the value as a string Declaration public override string ValueAsString() Returns Type Description System.String Overrides PropertyValue.ValueAsString()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.ValueTypePropertyValue-1.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.ValueTypePropertyValue-1.html",
    "title": "Class ValueTypePropertyValue<T> | MapGuide Maestro",
    "keywords": "Class ValueTypePropertyValue<T> Base class of all nullable value type property values. Inheritance System.Object PropertyValue ValueTypePropertyValue<T> BooleanValue ByteValue DateTimeValue DoubleValue Int16Value Int32Value Int64Value SingleValue Inherited Members PropertyValue.Type PropertyValue.ValueAsString() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Feature Assembly : cs.temp.dll.dll Syntax public abstract class ValueTypePropertyValue<T> : PropertyValue where T : struct Type Parameters Name Description T Constructors ValueTypePropertyValue() Initializes a new instance of the ValueTypePropertyValue<T> class. Declaration protected ValueTypePropertyValue() ValueTypePropertyValue(T) Initializes a new instance of the ValueTypePropertyValue<T> class. Declaration protected ValueTypePropertyValue(T value) Parameters Type Name Description T value The value. Properties IsNull Gets or sets a value indicating whether this instance is null. Declaration public override bool IsNull { get; } Property Value Type Description System.Boolean true if this instance is null; otherwise, false . Overrides PropertyValue.IsNull PropertyDefType Gets the suggsted property definition type for this value Declaration public override PropertyDefinitionType PropertyDefType { get; } Property Value Type Description PropertyDefinitionType The suggsted property definition type. Overrides PropertyValue.PropertyDefType Value Gets or sets the value. Declaration public T Value { get; set; } Property Value Type Description T The value. Methods SetNull() Sets the value to null. Declaration public override void SetNull() Overrides PropertyValue.SetNull()"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Feature.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Feature.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.Feature | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.Feature Classes BlobValue Stores blob data BooleanValue Stores boolean data ByteValue Stores byte data ClobValue Stores clob data ClrFdoTypeMap Helper class to map MapGuide/FDO data/property types to CLR data types DateTimeValue Stores datetime data DoubleValue Stores double data FeatureArrayReader A subclass of FeatureReaderBase that iterates over an array of IFeature instances FeatureBase Base implementation of the IFeature interface FeatureReaderBase Base implementation of the IFeatureReader interface FeatureValue Stores feature data GeometryValue Stores geometry data Int16Value Stores int16 data Int32Value Stores int32 data Int64Value Stores int64 data LimitingFeatureReader Wraps a IFeatureReader to only allow up the specified number of iterations MutableFeatureBase Represents a Feature instance whose properties can be modified MutableRecord A record whose properties can be modified and allows for adding of new PropertyValue instances MutableRecordBase A record whose properties can be modified PropertyValue Base class of all MapGuide property values. Functions as a nullable box type around an underlying data type RasterValue Stores raster data ReaderBase Base implementation of the IReader interface RecordBase Base implementation of the IRecord interface ReferenceTypePropertyValue<T> Base class of all reference type property values SingleValue Stores float data StringValue Stores string data ValueTypePropertyValue<T> Base class of all nullable value type property values. Interfaces IFeature Provides access to the property values within each feature for a IFeatureReader IFeatureReader Provides a forward-only, read-only iterator for reading features selected from a feature source IMutableFeature Defines a mutable feature record IMutableRecord Defines a records whose properties can be modified IReader Provides a forward-only, read-only iterator for reading data. You must call ReadNext() before you can access any data IRecord Provides access to the property values within each result for a IReader IRecordInitialize Provides a means for initializing a IRecord instance with PropertyValue instances IRecordReset Provides a means for resetting a IRecord instance Enums ReaderType Defines the types of readers"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Geometry.IGeometryRef.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Geometry.IGeometryRef.html",
    "title": "Interface IGeometryRef | MapGuide Maestro",
    "keywords": "Interface IGeometryRef Defines a geometry instance Namespace : OSGeo.MapGuide.MaestroAPI.Geometry Assembly : cs.temp.dll.dll Syntax public interface IGeometryRef Properties Area Gets the area of this instance Declaration double Area { get; } Property Value Type Description System.Double IsEmpty Gets whether this instance is empty Declaration bool IsEmpty { get; } Property Value Type Description System.Boolean IsSimple Gets whether this entity is simple or not. Simple entities do not contain any points of self-tangency or self intersection. Declaration bool IsSimple { get; } Property Value Type Description System.Boolean IsValid Gets whether the coordinates given to construct the entity represent a valid Geometry Declaration bool IsValid { get; } Property Value Type Description System.Boolean Length Gets the length of this instance Declaration double Length { get; } Property Value Type Description System.Double Methods AsText() Gets the well-known text representation of this geometry Declaration string AsText() Returns Type Description System.String Contains(IGeometryRef) Returns true if and only if no points of B lie in the exterior of A, and at least one point of the interior of B lies in the interior of A Declaration bool Contains(IGeometryRef other) Parameters Type Name Description IGeometryRef other Returns Type Description System.Boolean ConvexHull() Gets the minimum convex geometry that encloses all geometries within the set Declaration IGeometryRef ConvexHull() Returns Type Description IGeometryRef Crosses(IGeometryRef) Returns true if the supplied geometries have some, but not all, interior points in common Declaration bool Crosses(IGeometryRef other) Parameters Type Name Description IGeometryRef other Returns Type Description System.Boolean Difference(IGeometryRef) Returns a geometry that represents that part of geometry A that does not intersect with geometry B Declaration IGeometryRef Difference(IGeometryRef other) Parameters Type Name Description IGeometryRef other Returns Type Description IGeometryRef Disjoint(IGeometryRef) Returns true if the Geometries do not \"spatially intersect\" - if they do not share any space together Declaration bool Disjoint(IGeometryRef other) Parameters Type Name Description IGeometryRef other Returns Type Description System.Boolean Equals(IGeometryRef) Returns true if the given geometries represent the same geometry. Directionality is ignored Declaration bool Equals(IGeometryRef other) Parameters Type Name Description IGeometryRef other Returns Type Description System.Boolean GetCentroid(Boolean) Gets the centroid of the geometry instance Declaration IPoint2D GetCentroid(bool envelope) Parameters Type Name Description System.Boolean envelope If true, will return the center of the geometry's envelope instead. This is faster for really complex geometries and you only require an approximate center (eg. A point to zoom to) Returns Type Description IPoint2D GetEnvelope() Gets the envelope of this geometry Declaration IEnvelope GetEnvelope() Returns Type Description IEnvelope Intersection(IGeometryRef) Returns a geometry that represents the point set intersection of this geometry and another Declaration IGeometryRef Intersection(IGeometryRef other) Parameters Type Name Description IGeometryRef other Returns Type Description IGeometryRef Intersects(IGeometryRef) This is a convenience method. Given 2 geometries a and b, a.Intersects(b) is true if and only if a.Disjoint (b) is false. Declaration bool Intersects(IGeometryRef other) Parameters Type Name Description IGeometryRef other Returns Type Description System.Boolean Overlaps(IGeometryRef) Given 2 geometries a and b, a.Overlaps(b) is true if and only if the dimension of the interior of a equals the dimension of the interior of b equals the dimension of the intersection of the interior of a and the interior of b and the intersection of a and b is neither a nor b Declaration bool Overlaps(IGeometryRef other) Parameters Type Name Description IGeometryRef other Returns Type Description System.Boolean SymmetricDifference(IGeometryRef) Returns a geometry that represents the point set symmetric difference of this geometry with another Declaration IGeometryRef SymmetricDifference(IGeometryRef other) Parameters Type Name Description IGeometryRef other Returns Type Description IGeometryRef Touches(IGeometryRef) Returns true if the geometries have at least one point in common, but their interiors do not intersect Declaration bool Touches(IGeometryRef other) Parameters Type Name Description IGeometryRef other Returns Type Description System.Boolean Union(IGeometryRef) Returns a geometry that represents the point set union of the Geometries Declaration IGeometryRef Union(IGeometryRef other) Parameters Type Name Description IGeometryRef other Returns Type Description IGeometryRef Within(IGeometryRef) Returns true if the geometry A is completely inside geometry B Declaration bool Within(IGeometryRef other) Parameters Type Name Description IGeometryRef other Returns Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Internal.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Internal.html",
    "title": "Namespace OSGeo.MapGuide.MaestroAPI.Internal | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.MaestroAPI.Internal Classes FixedWKTReader A fixed version of WKTReader that can parse 3D geometry WKT"
  },
  "api/OSGeo.MapGuide.MaestroAPI.IServerConnection.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.IServerConnection.html",
    "title": "Interface IServerConnection | MapGuide Maestro",
    "keywords": "Interface IServerConnection MapGuide Platform connection interface. This is the root object of the Maestro API which typically represents a session with a MapGuide Server. Connections are created through the ConnectionProviderRegistry class. All implementations supports the base services of the MapGuide Geospatial API: Resource Service ( IResourceService ) for manipulation of repositories and resources Feature Service ( IFeatureService ) an abstraction layer for querying feature data in technology-independent manner. Coordinate System Catalog ( ICoordinateSystemCatalog for querying coordinate systems and for translating WKT, cs code and EPSG codes to other forms Additional services are supported at various levels depending on the implementation. The Capabilities property provides information about what features, services and resource types are not supported. Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public interface IServerConnection Properties AutoRestartSession Gets or sets a value indicating if the session should automatically be restarted if it expires Declaration bool AutoRestartSession { get; set; } Property Value Type Description System.Boolean Capabilities Gets the capabilities for this connection. The capabilities describes what commands and services are supported by this connection Declaration IConnectionCapabilities Capabilities { get; } Property Value Type Description IConnectionCapabilities CloneParameters Gets a collection of name-value parameters required to create another copy of this connection via the ConnectionProviderRegistry Declaration NameValueCollection CloneParameters { get; } Property Value Type Description NameValueCollection Remarks Each invocation returns a new instance CoordinateSystemCatalog Gets the coordinate system catalog Declaration ICoordinateSystemCatalog CoordinateSystemCatalog { get; } Property Value Type Description ICoordinateSystemCatalog DisableValidation Enables/Disables resource validation Declaration bool DisableValidation { get; set; } Property Value Type Description System.Boolean DisplayName Gets a string that can be used to identify the server by a user Declaration string DisplayName { get; } Property Value Type Description System.String FeatureService Gets the feature service Declaration IFeatureService FeatureService { get; } Property Value Type Description IFeatureService MaxTestedVersion Gets the max tested version Declaration Version MaxTestedVersion { get; } Property Value Type Description Version ProviderName Gets the name of the provider of this implementation Declaration string ProviderName { get; } Property Value Type Description System.String ResourceService Gets the resource service Declaration IResourceService ResourceService { get; } Property Value Type Description IResourceService SessionID Gets the session ID for this connection Declaration string SessionID { get; } Property Value Type Description System.String SiteVersion Gets the version of the site we're connected to Declaration Version SiteVersion { get; } Property Value Type Description Version Methods Clone() Returns a clone copy of this connection Declaration IServerConnection Clone() Returns Type Description IServerConnection CreateCommand(Int32) Creates a command of the specified type Declaration ICommand CreateCommand(int commandType) Parameters Type Name Description System.Int32 commandType The type of command to create. See CommandType for allowed values Returns Type Description ICommand Remarks Some commands may not be supported by the connection. You can find out if the connection supports a particular command through the Capabilities CreateGeometryReader() Creates a geometry text reader Declaration IGeometryTextReader CreateGeometryReader() Returns Type Description IGeometryTextReader ExecuteLoadProcedure(ILoadProcedure, LengthyOperationProgressCallBack, Boolean) Executes the specified load procedure Declaration string[] ExecuteLoadProcedure(ILoadProcedure loadProc, LengthyOperationProgressCallBack callback, bool ignoreUnsupportedFeatures) Parameters Type Name Description ILoadProcedure loadProc LengthyOperationProgressCallBack callback System.Boolean ignoreUnsupportedFeatures Returns Type Description System.String [] ExecuteLoadProcedure(String, LengthyOperationProgressCallBack, Boolean) Executes the load procedure indicated by the specified resource id Declaration string[] ExecuteLoadProcedure(string resourceID, LengthyOperationProgressCallBack callback, bool ignoreUnsupportedFeatures) Parameters Type Name Description System.String resourceID LengthyOperationProgressCallBack callback System.Boolean ignoreUnsupportedFeatures Returns Type Description System.String [] GetCalculator() Returns a meters-per-unit calculator Declaration IMpuCalculator GetCalculator() Returns Type Description IMpuCalculator GetCustomProperty(String) Gets the value of the specified property name Declaration object GetCustomProperty(string name) Parameters Type Name Description System.String name Returns Type Description System.Object GetCustomPropertyNames() Enumerates the names of all custom properties for this connection Declaration string[] GetCustomPropertyNames() Returns Type Description System.String [] GetCustomPropertyType(String) Gets the type of the specified property name Declaration Type GetCustomPropertyType(string name) Parameters Type Name Description System.String name Returns Type Description Type GetPreviewUrlGenerator() Gets the preview URL generator. Declaration IResourcePreviewUrlGenerator GetPreviewUrlGenerator() Returns Type Description IResourcePreviewUrlGenerator The preview URL generator. Returns null if this connection does not support browser-based resource previews Remarks Each call will return a new instance GetService(Int32) Gets the service based on the given type Declaration IService GetService(int serviceType) Parameters Type Name Description System.Int32 serviceType The type of service to create. See ServiceType for allowed values Returns Type Description IService Remarks Some commands may not be supported by the connection. You can find out if the connection supports a particular command through the Capabilities RestartSession() Restarts the server session, and creates a new session ID Declaration void RestartSession() RestartSession(Boolean) Restarts the server session, and creates a new session ID Declaration bool RestartSession(bool throwException) Parameters Type Name Description System.Boolean throwException If set to true, the call throws an exception if the call failed Returns Type Description System.Boolean True if the creation succeed, false otherwise SetCustomProperty(String, Object) Sets the value of the specified property name Declaration void SetCustomProperty(string name, object value) Parameters Type Name Description System.String name System.Object value Events RequestDispatched Raised when a outbound request has been dispatched Declaration event RequestEventHandler RequestDispatched Event Type Type Description RequestEventHandler SessionIDChanged Raised when the session ID has changed Declaration event EventHandler SessionIDChanged Event Type Type Description EventHandler"
  },
  "api/OSGeo.MapGuide.MaestroAPI.KnownSiteVersions.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.KnownSiteVersions.html",
    "title": "Enum KnownSiteVersions | MapGuide Maestro",
    "keywords": "Enum KnownSiteVersions This file contains the current known versions of the MapGuide server. Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public enum KnownSiteVersions Fields Name Description Aims2013_SP1 Autodesk Infrastructure Map Server 2013 SP1 Aims2014 Autodesk Infrastructure Map Server 2014 MapGuideEP1_1 MapGuide Enterprise 2007 MapGuideEP1_2 MapGuide Enterprise 2008 MapGuideEP2009 MapGuide Enterprise 2009 MapGuideEP2009_SP1 MapGuide Enterprise 2009 SP1 MapGuideEP2010 MapGuide Enterprise 2010 MapGuideEP2010_SP1 MapGuide Enterprise 2010 Update 1 MapGuideEP2010_SP1b MapGuide Enterprise 2010 Update 1b MapGuideEP2011 MapGuide Enterprise 2011 MapGuideEP2011_SP1 MapGuide Enterprise 2011 Update 1 MapGuideEP2012 Autodesk Infrastructure Map Server 2012 MapGuideOS1_1 MapGuide Open Source 1.1.0 MapGuideOS1_2 MapGuide Open Source 1.2.0 MapGuideOS2_0 MapGuide Open Source 2.0.0 MapGuideOS2_0_2 MapGuide Open Source 2.0.2 MapGuideOS2_0B1 MapGuide Open Source 2.0.0 beta 1 MapGuideOS2_1 MapGuide Open Source 2.1.0 MapGuideOS2_2 MapGuide Open Source 2.2.0 MapGuideOS2_4 MapGuide Open Source 2.4.0 MapGuideOS2_4_1 MapGuide Open Source 2.4.1 MapGuideOS2_5 MapGuide Open Source 2.5.0 MapGuideOS2_5_1 MapGuide Open Source 2.5.1 MapGuideOS2_5_2 MapGuide Open Source 2.5.2 MapGuideOS2_6 MapGuide Open Source 2.6 MapGuideOS2_6_1 MapGuide Open Source 2.6.1 MapGuideOS3_0 MapGuide Open Source 3.0 MapGuideOS3_1 MapGuide Open Source 3.1"
  },
  "api/OSGeo.MapGuide.MaestroAPI.LengthyOperationCallBack.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.LengthyOperationCallBack.html",
    "title": "Delegate LengthyOperationCallBack | MapGuide Maestro",
    "keywords": "Delegate LengthyOperationCallBack A delegate used to represent relay progress for lengthy operations Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public delegate void LengthyOperationCallBack(object sender, LengthyOperationCallbackArgs items); Parameters Type Name Description System.Object sender LengthyOperationCallbackArgs items"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Mapping.LayerEventHandler.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Mapping.LayerEventHandler.html",
    "title": "Delegate LayerEventHandler | MapGuide Maestro",
    "keywords": "Delegate LayerEventHandler Namespace : OSGeo.MapGuide.MaestroAPI.Mapping Assembly : cs.temp.dll.dll Syntax public delegate void LayerEventHandler(object sender, RuntimeMapLayer layer); Parameters Type Name Description System.Object sender RuntimeMapLayer layer"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Mapping.MapObservable.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Mapping.MapObservable.html",
    "title": "Class MapObservable | MapGuide Maestro",
    "keywords": "Class MapObservable Base class implementation of the System.ComponentModel.INotifyPropertyChanged interface Inheritance System.Object MapObservable RuntimeMap RuntimeMapGroup RuntimeMapLayer Namespace : OSGeo.MapGuide.MaestroAPI.Mapping Assembly : cs.temp.dll.dll Syntax public abstract class MapObservable : INotifyPropertyChanged Fields _disableChangeTracking Indicates whether property change events will be raised Declaration protected bool _disableChangeTracking Field Value Type Description System.Boolean Methods ObservableSet<T>(T, T, Action<T>, String) If the specified old value is different from the new value, the specified setter is invoked and a System.ComponentModel.INotifyPropertyChanged.PropertyChanged event is raised Declaration protected virtual bool ObservableSet<T>(T oldValue, T newValue, Action<T> setter, string propertyName) Parameters Type Name Description T oldValue T newValue Action <T> setter System.String propertyName Returns Type Description System.Boolean Type Parameters Name Description T OnPropertyChanged(String) Raises the PropertyChanged event Declaration protected virtual void OnPropertyChanged(string propertyName) Parameters Type Name Description System.String propertyName SetField<T>(ref T, T, String) Set the specified field with the specified value raising the PropertyChanged event Declaration protected bool SetField<T>(ref T field, T value, string propertyName) Parameters Type Name Description T field T value System.String propertyName Returns Type Description System.Boolean Type Parameters Name Description T Events PropertyChanged Occurs when a property changes Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Mapping.MapSelection.LayerSelection.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Mapping.MapSelection.LayerSelection.html",
    "title": "Class MapSelection.LayerSelection | MapGuide Maestro",
    "keywords": "Class MapSelection.LayerSelection Represents a layer selection Inheritance System.Object MapSelection.LayerSelection Namespace : OSGeo.MapGuide.MaestroAPI.Mapping Assembly : cs.temp.dll.dll Syntax public class LayerSelection : IList<object[]> Constructors LayerSelection(RuntimeMapLayer) Constructs a new LayerSelection with a number of selected featured Declaration public LayerSelection(RuntimeMapLayer layer) Parameters Type Name Description RuntimeMapLayer layer The layer to represent LayerSelection(RuntimeMapLayer, IEnumerable<Object[]>) Constructs a new LayerSelection with a number of selected featured Declaration public LayerSelection(RuntimeMapLayer layer, IEnumerable<object[]> ids) Parameters Type Name Description RuntimeMapLayer layer The layer to represent IEnumerable < System.Object []> ids The list of composite IDs that the layer supports Properties Count Returns the number of composite keys (and thus selected objects) Declaration public int Count { get; } Property Value Type Description System.Int32 IsReadOnly Gets a value indicating if the collection is read-only Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean Item[Int32] Gets or sets the composite key for the specified index Declaration public object[] this[int index] { get; set; } Parameters Type Name Description System.Int32 index The index for the composite key Property Value Type Description System.Object [] The composite key Layer Gets the layer that contains the selected objects Declaration public RuntimeMapLayer Layer { get; } Property Value Type Description RuntimeMapLayer Methods Add(Object[]) Adds a composite key to the selection Declaration public void Add(object[] values) Parameters Type Name Description System.Object [] values The composite key AddFeature(IRecord) Adds the specified record to the selection Declaration public void AddFeature(IRecord record) Parameters Type Name Description IRecord record AddFeatures(IReader, Int32) Adds records from the specified reader into this selection Declaration public int AddFeatures(IReader reader, int limit) Parameters Type Name Description IReader reader The reader System.Int32 limit The maximum number of records to add. Specify -1 for all Returns Type Description System.Int32 Number of records added AddRange(IEnumerable<Object[]>) Adds a number of composite keys Declaration public void AddRange(IEnumerable<object[]> lst) Parameters Type Name Description IEnumerable < System.Object []> lst A list of composite keys Clear() Removes all composite keys from the collection Declaration public void Clear() Contains(Object[]) Returns a value indicating if the composite key is contained in the collection Declaration public bool Contains(object[] item) Parameters Type Name Description System.Object [] item The composite key to look for Returns Type Description System.Boolean True if the collection contains the composite key, false otherwise CopyTo(Object[][], Int32) Not implemented Declaration public void CopyTo(object[][] array, int arrayIndex) Parameters Type Name Description System.Object [][] array System.Int32 arrayIndex EncodeIDString(Object[]) Encodes the given combined keyset into an ID string for use in the Xml Declaration public string EncodeIDString(object[] values) Parameters Type Name Description System.Object [] values The combined key Returns Type Description System.String A base64 encoded ID string GetEnumerator() Returns an enumerator for the collection Declaration public IEnumerator<object[]> GetEnumerator() Returns Type Description IEnumerator < System.Object []> An enumerator for the collection IndexOf(Object[]) Returns the index of the given composite key Declaration public int IndexOf(object[] item) Parameters Type Name Description System.Object [] item The composite key to look for Returns Type Description System.Int32 The index of the composite key or -1 if the key is not found Insert(Int32, Object[]) Inserts a key at the specified location Declaration public void Insert(int index, object[] item) Parameters Type Name Description System.Int32 index The index to insert the key at System.Object [] item The key to insert ParseIDString(String) Parses a base64 encoded string with key values Declaration public object[] ParseIDString(string id) Parameters Type Name Description System.String id The base64 encoded ID string Returns Type Description System.Object [] The composite value key Remove(Object[]) Removes the given composite key from the collection Declaration public bool Remove(object[] item) Parameters Type Name Description System.Object [] item The composite key to remove Returns Type Description System.Boolean True if the composite key was found and removed, false otherwise RemoveAt(Int32) Removes the element at the specified location Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index The index of the item to remove Explicit Interface Implementations IEnumerable.GetEnumerator() Returns an enumerator for the collection Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator An enumerator for the collection"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Mapping.MapSelection.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Mapping.MapSelection.html",
    "title": "Class MapSelection | MapGuide Maestro",
    "keywords": "Class MapSelection Represents a map selection Inheritance System.Object MapSelection Implements IList < MapSelection.LayerSelection > Namespace : OSGeo.MapGuide.MaestroAPI.Mapping Assembly : cs.temp.dll.dll Syntax public class MapSelection : IBinarySerializable, IList<MapSelection.LayerSelection> Examples This sample shows how to list selected features in ASP.net. The sample expects 3 parameters: The session ID (SESSION) The runtime map name (MAPNAME) The selection XML (SELECTION) string agent = \"http://localhost/mapguide/mapagent/mapagent.fcgi\"; IServerConnection conn = ConnectionProviderRegistry.CreateConnection( \"Maestro.Http\", \"Url\", agent, \"SessionId\", Request.Params[\"SESSION\"]); IMappingService mpSvc = (IMappingService)conn.GetService((int)ServiceType.Mapping); string rtMapId = \"Session:\" + conn.SessionID + \"//\" + Request.Params[\"MAPNAME\"] + \".Map\"; RuntimeMap rtMap = mpSvc.OpenMap(rtMapId); string xml = Request.Params[\"SELECTION\"]; //The map selection contains one or more layer selections //each containing a one or more sets of identity property values //(because a feature may have multiple identity properties) MapSelection selection = new MapSelection(rtMap, System.Web.HttpUtility.UrlDecode(xml)); if (selection.Count > 0) { StringBuilder sb = new StringBuilder(); for (int i = 0; i < selection.Count; i++) { MapSelection.LayerSelection layerSel = selection[i]; sb.Append(\"<p>Layer: \" + layerSel.Layer.Name + \" (\" + layerSel.Count + \" selected item)\"); sb.Append(\"<table>\"); for (int j = 0; j < layerSel.Count; j++) { sb.Append(\"<tr>\"); object[] values = layerSel[j]; for (int k = 0; k < values.Length; k++) { sb.Append(\"<td>\"); sb.Append(values[k].ToString()); sb.Append(\"</td>\"); } sb.AppendFormat(\"<td><a href='FeatureInfo.aspx?MAPNAME={0}&SESSION={1}&LAYERID={2}&ID={3}'>More Info</a></td>\", rtMap.Name, conn.SessionID, layerSel.Layer.ObjectId, System.Web.HttpUtility.UrlEncode(layerSel.EncodeIDString(values))); sb.Append(\"</tr>\"); } sb.Append(\"</table>\"); Response.WriteLine(\"<p>Showing IDs of selected features</p>\"); Response.WriteLine(sb.ToString()); } } else { Response.WriteLine(\"Nothing selected. Select some features first then run this sample again.\"); } Constructors MapSelection(RuntimeMap) Constructor Declaration public MapSelection(RuntimeMap map) Parameters Type Name Description RuntimeMap map MapSelection(RuntimeMap, String) Constructor Declaration public MapSelection(RuntimeMap map, string xml) Parameters Type Name Description RuntimeMap map System.String xml Properties Count Gets the number of layers in this selection Declaration public int Count { get; } Property Value Type Description System.Int32 IsReadOnly Gets whether this is read only Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean Item[RuntimeMapLayer] Gets the selection layer at a given index Declaration public MapSelection.LayerSelection this[RuntimeMapLayer index] { get; } Parameters Type Name Description RuntimeMapLayer index The index to get or set the item for Property Value Type Description MapSelection.LayerSelection The item at the given index Item[Int32] Gets or sets the selection layer at a given index Declaration public MapSelection.LayerSelection this[int index] { get; set; } Parameters Type Name Description System.Int32 index The index to get or set the item for Property Value Type Description MapSelection.LayerSelection The item at the given index Methods Add(MapSelection.LayerSelection) Adds the specified layer selection Declaration public void Add(MapSelection.LayerSelection item) Parameters Type Name Description MapSelection.LayerSelection item Add(RuntimeMapLayer) Adds the specified layer Declaration public void Add(RuntimeMapLayer layer) Parameters Type Name Description RuntimeMapLayer layer Clear() Clears this selction Declaration public void Clear() Contains(MapSelection.LayerSelection) Gets whether this selection contains the specified layer selection Declaration public bool Contains(MapSelection.LayerSelection item) Parameters Type Name Description MapSelection.LayerSelection item Returns Type Description System.Boolean Contains(RuntimeMapLayer) Gets whether this selection contains the specified layer Declaration public bool Contains(RuntimeMapLayer item) Parameters Type Name Description RuntimeMapLayer item Returns Type Description System.Boolean CopyTo(MapSelection.LayerSelection[], Int32) Copies the elements of the System.Collections.Generic.ICollection`1 to an System.Array , starting at a particular System.Array index. Declaration public void CopyTo(MapSelection.LayerSelection[] array, int arrayIndex) Parameters Type Name Description MapSelection.LayerSelection [] array The one-dimensional System.Array that is the destination of the elements copied from System.Collections.Generic.ICollection`1 . The System.Array must have zero-based indexing. System.Int32 arrayIndex The zero-based index in array at which copying begins. Exceptions Type Condition System.ArgumentNullException array is null. System.ArgumentOutOfRangeException arrayIndex is less than 0. System.ArgumentException array is multidimensional. -or- arrayIndex is equal to or greater than the length of array . -or- The number of elements in the source System.Collections.Generic.ICollection`1 is greater than the available space from arrayIndex to the end of the destination array . Deserialize(MgBinaryDeserializer) Deserializes this object using the specified deserializer. Declaration public void Deserialize(MgBinaryDeserializer d) Parameters Type Name Description MgBinaryDeserializer d The deserializer. GetEnumerator() Gets the layer selection enumerator Declaration public IEnumerator<MapSelection.LayerSelection> GetEnumerator() Returns Type Description IEnumerator < MapSelection.LayerSelection > IndexOf(MapSelection.LayerSelection) Returns the index of the given layer Declaration public int IndexOf(MapSelection.LayerSelection item) Parameters Type Name Description MapSelection.LayerSelection item The layer to look for Returns Type Description System.Int32 The index of the layer, or -1 if the layer is not in the collection IndexOf(RuntimeMapLayer) Returns the index of the given layer Declaration public int IndexOf(RuntimeMapLayer layer) Parameters Type Name Description RuntimeMapLayer layer The layer. Returns Type Description System.Int32 The index of the layer, or -1 if the layer is not in the collection Insert(Int32, MapSelection.LayerSelection) Inserts a selection layer into the collection Declaration public void Insert(int index, MapSelection.LayerSelection item) Parameters Type Name Description System.Int32 index The index to place the item at MapSelection.LayerSelection item The item to insert Insert(Int32, RuntimeMapLayer) Inserts a selection layer into the collection Declaration public void Insert(int index, RuntimeMapLayer layer) Parameters Type Name Description System.Int32 index The index to place the item at RuntimeMapLayer layer The layer. LoadXml(String) Initialize this selection from the specified xml string Declaration public void LoadXml(string xml) Parameters Type Name Description System.String xml Remove(MapSelection.LayerSelection) Removes the specified layer selection Declaration public bool Remove(MapSelection.LayerSelection item) Parameters Type Name Description MapSelection.LayerSelection item Returns Type Description System.Boolean RemoveAt(Int32) Removes the item at the given index Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index The index to remove the item at Serialize(MgBinarySerializer) Serializes this instance using the specified serializer. Declaration public void Serialize(MgBinarySerializer s) Parameters Type Name Description MgBinarySerializer s The serializer. ToXml() Returns an xml document that represents the current map selection Declaration public string ToXml() Returns Type Description System.String An xml document that represents the current map selection Explicit Interface Implementations IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements IList<>"
  },
  "api/OSGeo.MapGuide.MaestroAPI.PlatformConnectionBase.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.PlatformConnectionBase.html",
    "title": "Class PlatformConnectionBase | MapGuide Maestro",
    "keywords": "Class PlatformConnectionBase Base class of all connection classes. Covers functionality encompassed by the MapGuide Geospatial Platform API (ie. Feature Service and Resource Service) Inheritance System.Object PlatformConnectionBase MgServerConnectionBase Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public abstract class PlatformConnectionBase Constructors PlatformConnectionBase() Initializes a new instance of the PlatformConnectionBase class. Declaration protected PlatformConnectionBase() Fields m_cachedSchemas A lookup table for Xsd Schemas Declaration protected Hashtable m_cachedSchemas Field Value Type Description Hashtable m_classDefinitionCache a class definition cache Declaration protected Dictionary<string, ClassDefinition> m_classDefinitionCache Field Value Type Description Dictionary < System.String , ClassDefinition > m_disableValidation A flag indicating if Xsd validation is perfomed Declaration protected bool m_disableValidation Field Value Type Description System.Boolean m_featureSchemaCache feature source description cache Declaration protected Dictionary<string, FeatureSourceDescription> m_featureSchemaCache Field Value Type Description Dictionary < System.String , FeatureSourceDescription > m_schemasPath The path of Xsd schemas Declaration protected string m_schemasPath Field Value Type Description System.String m_serializers A list of cached serializers Declaration protected Hashtable m_serializers Field Value Type Description Hashtable m_validator The current XML validator Declaration protected XmlValidator m_validator Field Value Type Description XmlValidator Properties CachedSchemas Gets or sets the collection of cached schemas. Use the object type for key, and an XmlSchema instance for value. Declaration public virtual Hashtable CachedSchemas { get; set; } Property Value Type Description Hashtable CacheStats Gets the cache stats for the current connection Declaration public ConnectionCacheStats CacheStats { get; } Property Value Type Description ConnectionCacheStats CloneParameters Gets a collection of name-value parameters required to create another copy of this connection via the ConnectionProviderRegistry Declaration public abstract NameValueCollection CloneParameters { get; } Property Value Type Description NameValueCollection DisableValidation Gets or sets a flag that indicates if the Xml resources are validated before leaving and entering the server. Declaration public bool DisableValidation { get; set; } Property Value Type Description System.Boolean FeatureProviders Gets a list of installed feature providers Declaration public abstract FeatureProviderRegistryFeatureProvider[] FeatureProviders { get; } Property Value Type Description FeatureProviderRegistryFeatureProvider [] MaxTestedVersion Gets the highest version the API is currently tested againts Declaration public virtual Version MaxTestedVersion { get; } Property Value Type Description Version ProviderName Gets the name of the provider of this implementation Declaration public abstract string ProviderName { get; } Property Value Type Description System.String SessionID Gets the current SessionID. Declaration public abstract string SessionID { get; } Property Value Type Description System.String SiteVersion Gets the site version. Declaration public abstract Version SiteVersion { get; } Property Value Type Description Version The site version. Methods AggregateQueryFeatureSource(String, String, String) Performs an aggregate query on all columns in the datasource Declaration public virtual IReader AggregateQueryFeatureSource(string resourceID, string schema, string filter) Parameters Type Name Description System.String resourceID The resourceID of the FeatureSource to query System.String schema The schema name System.String filter The filter to apply to the Returns Type Description IReader A FeatureSetReader with the aggregated values AggregateQueryFeatureSource(String, String, String, Specialized.NameValueCollection) Performs an aggregate query on computed resources Declaration public abstract IReader AggregateQueryFeatureSource(string resourceID, string schema, string filter, Specialized.NameValueCollection aggregateFunctions) Parameters Type Name Description System.String resourceID The resourceID of the FeatureSource to query System.String schema The schema name System.String filter The filter to apply to the System.Collections.Specialized.NameValueCollection aggregateFunctions A collection of column name and aggregate functions Returns Type Description IReader A FeatureSetReader with the aggregated values AggregateQueryFeatureSource(String, String, String, String[]) Performs an aggregate query on columns in the datasource Declaration public abstract IReader AggregateQueryFeatureSource(string resourceID, string schema, string filter, string[] columns) Parameters Type Name Description System.String resourceID The resourceID of the FeatureSource to query System.String schema The schema name System.String filter The filter to apply to the System.String [] columns The columns to aggregate Returns Type Description IReader A IFeatureReader with the aggregated values Clone() Clones this instance. Declaration public abstract IServerConnection Clone() Returns Type Description IServerConnection CopyFolder(String, String, Boolean) Copies a folder and all its content. This does not update any references. Declaration public abstract void CopyFolder(string oldpath, string newpath, bool overwrite) Parameters Type Name Description System.String oldpath The current folder path, the one copying from System.String newpath The new folder path, the one copying to System.Boolean overwrite True if the copy can overwrite an existing folder, false otherwise CopyFolderWithReferences(String, String, LengthyOperationCallBack, LengthyOperationProgressCallBack) Copies folder, and subsequently updates all resources within the folder to use the new folder path instead of the originating one. Declaration public bool CopyFolderWithReferences(string oldpath, string newpath, LengthyOperationCallBack callback, LengthyOperationProgressCallBack progress) Parameters Type Name Description System.String oldpath The current folder path, the one copying from System.String newpath The new folder path, the one copying to LengthyOperationCallBack callback A callback delegate, being called for non progress reporting events. LengthyOperationProgressCallBack progress A callback delegate, being called for progress reporting events. Returns Type Description System.Boolean CopyResource(String, String, Boolean) Copies a resource from one location to another. This does not update any references. Declaration public abstract void CopyResource(string oldpath, string newpath, bool overwrite) Parameters Type Name Description System.String oldpath The current resource path, the one copying from System.String newpath The new resource path, the one copying to System.Boolean overwrite True if the copy can overwrite an existing resource, false otherwise CreateCommand(Int32) Creates the command. Declaration public virtual ICommand CreateCommand(int cmdType) Parameters Type Name Description System.Int32 cmdType Type of the CMD. Returns Type Description ICommand CreateFolder(String) Creates a folder on the server Declaration public virtual void CreateFolder(string resourceID) Parameters Type Name Description System.String resourceID The path of the folder to create CreateGeometryReader() Creates a geometry text reader for creating IGeometryRef instances from WKT text Declaration public virtual IGeometryTextReader CreateGeometryReader() Returns Type Description IGeometryTextReader CreateMap(IMapDefinition) Creates a new runtime map instance from an existing map definition. The runtime map resource id is calculated from the current session id and the name component of the Map Definition resource id Declaration public RuntimeMap CreateMap(IMapDefinition mdf) Parameters Type Name Description IMapDefinition mdf Returns Type Description RuntimeMap CreateMap(IMapDefinition, Boolean) Creates a new runtime map instance from an existing map definition. The runtime map resource id is calculated from the current session id and the name component of the Map Definition resource id Declaration public RuntimeMap CreateMap(IMapDefinition mdf, bool suppressErrors) Parameters Type Name Description IMapDefinition mdf System.Boolean suppressErrors Returns Type Description RuntimeMap CreateMap(IMapDefinition, Double) Creates a new runtime map instance from an existing map definition. The runtime map resource id is calculated from the current session id and the name component of the Map Definition resource id Declaration public RuntimeMap CreateMap(IMapDefinition mdf, double metersPerUnit) Parameters Type Name Description IMapDefinition mdf The map definition. System.Double metersPerUnit The meters per unit. Returns Type Description RuntimeMap CreateMap(IMapDefinition, Double, Boolean) Creates a new runtime map instance from an existing map definition. The runtime map resource id is calculated from the current session id and the name component of the Map Definition resource id Declaration public RuntimeMap CreateMap(IMapDefinition mdf, double metersPerUnit, bool suppressErrors) Parameters Type Name Description IMapDefinition mdf The map definition. System.Double metersPerUnit The meters per unit. System.Boolean suppressErrors Returns Type Description RuntimeMap CreateMap(String, IMapDefinition) Creates a new runtime map instance from an existing map definition. Meters per unit is calculated from the Coordinate System WKT of the map definition. Declaration public RuntimeMap CreateMap(string runtimeMapResourceId, IMapDefinition mdf) Parameters Type Name Description System.String runtimeMapResourceId IMapDefinition mdf Returns Type Description RuntimeMap Remarks Calculation of meters-per-unit may differ between implementations. This may have an adverse effect on things such as rendering and measuring depending on the underlying implementation If you are certain of the meters-per-unit value required, use the overloaded method that accepts a metersPerUnit parameter. CreateMap(String, IMapDefinition, Boolean) Creates a new runtime map instance from an existing map definition. Meters per unit is calculated from the Coordinate System WKT of the map definition. Declaration public RuntimeMap CreateMap(string runtimeMapResourceId, IMapDefinition mdf, bool suppressErrors) Parameters Type Name Description System.String runtimeMapResourceId IMapDefinition mdf System.Boolean suppressErrors Returns Type Description RuntimeMap Remarks Calculation of meters-per-unit may differ between implementations. This may have an adverse effect on things such as rendering and measuring depending on the underlying implementation If you are certain of the meters-per-unit value required, use the overloaded method that accepts a metersPerUnit parameter. CreateMap(String, IMapDefinition, Double) Creates a new runtime map instance from an existing map definition Declaration public virtual RuntimeMap CreateMap(string runtimeMapResourceId, IMapDefinition mdf, double metersPerUnit) Parameters Type Name Description System.String runtimeMapResourceId IMapDefinition mdf System.Double metersPerUnit Returns Type Description RuntimeMap CreateMap(String, IMapDefinition, Double, Boolean) Creates a new runtime map instance from an existing map definition Declaration public virtual RuntimeMap CreateMap(string runtimeMapResourceId, IMapDefinition mdf, double metersPerUnit, bool suppressErrors) Parameters Type Name Description System.String runtimeMapResourceId IMapDefinition mdf System.Double metersPerUnit System.Boolean suppressErrors Returns Type Description RuntimeMap CreateMap(String, String) Creates a new runtime map instance from an existing map definition. Meters per unit is calculated from the Coordinate System WKT of the map definition. Declaration public RuntimeMap CreateMap(string runtimeMapResourceId, string baseMapDefinitionId) Parameters Type Name Description System.String runtimeMapResourceId System.String baseMapDefinitionId Returns Type Description RuntimeMap Remarks Calculation of meters-per-unit may differ between implementations. This may have an adverse effect on things such as rendering and measuring depending on the underlying implementation If you are certain of the meters-per-unit value required, use the overloaded method that accepts a metersPerUnit parameter. CreateMap(String, String, Boolean) Creates a new runtime map instance from an existing map definition. Meters per unit is calculated from the Coordinate System WKT of the map definition. Declaration public RuntimeMap CreateMap(string runtimeMapResourceId, string baseMapDefinitionId, bool suppressErrors) Parameters Type Name Description System.String runtimeMapResourceId System.String baseMapDefinitionId System.Boolean suppressErrors Returns Type Description RuntimeMap Remarks Calculation of meters-per-unit may differ between implementations. This may have an adverse effect on things such as rendering and measuring depending on the underlying implementation If you are certain of the meters-per-unit value required, use the overloaded method that accepts a metersPerUnit parameter. CreateMap(String, String, Double) Creates a new runtime map instance from an existing map definition Declaration public virtual RuntimeMap CreateMap(string runtimeMapResourceId, string baseMapDefinitionId, double metersPerUnit) Parameters Type Name Description System.String runtimeMapResourceId System.String baseMapDefinitionId System.Double metersPerUnit Returns Type Description RuntimeMap CreateMap(String, String, Double, Boolean) Creates a new runtime map instance from an existing map definition Declaration public virtual RuntimeMap CreateMap(string runtimeMapResourceId, string baseMapDefinitionId, double metersPerUnit, bool suppressErrors) Parameters Type Name Description System.String runtimeMapResourceId System.String baseMapDefinitionId System.Double metersPerUnit System.Boolean suppressErrors Returns Type Description RuntimeMap CreateMapGroup(RuntimeMap, IBaseMapGroup) Creates a new runtime map group Declaration public virtual RuntimeMapGroup CreateMapGroup(RuntimeMap parent, IBaseMapGroup group) Parameters Type Name Description RuntimeMap parent The map. IBaseMapGroup group The group. Returns Type Description RuntimeMapGroup CreateMapGroup(RuntimeMap, IMapLayerGroup) Creates a new runtime map group Declaration public virtual RuntimeMapGroup CreateMapGroup(RuntimeMap parent, IMapLayerGroup group) Parameters Type Name Description RuntimeMap parent The parent runtime map. The runtime map must have been created or opened from this same service instance IMapLayerGroup group The group. Returns Type Description RuntimeMapGroup CreateMapGroup(RuntimeMap, String) Creates the map group. Declaration public virtual RuntimeMapGroup CreateMapGroup(RuntimeMap parent, string name) Parameters Type Name Description RuntimeMap parent The parent runtime map. The runtime map must have been created or opened from this same service instance System.String name The name. Returns Type Description RuntimeMapGroup CreateMapLayer(RuntimeMap, IBaseMapLayer) Creates a new runtime map layer from the specified IBaseMapLayer instance Declaration public RuntimeMapLayer CreateMapLayer(RuntimeMap parent, IBaseMapLayer source) Parameters Type Name Description RuntimeMap parent The parent runtime map. The runtime map must have been created or opened from this same service instance IBaseMapLayer source The map definition layer Returns Type Description RuntimeMapLayer CreateMapLayer(RuntimeMap, IBaseMapLayer, Boolean) Creates a new runtime map layer from the specified IBaseMapLayer instance Declaration public RuntimeMapLayer CreateMapLayer(RuntimeMap parent, IBaseMapLayer source, bool suppressErrors) Parameters Type Name Description RuntimeMap parent The parent runtime map. The runtime map must have been created or opened from this same service instance IBaseMapLayer source The map definition layer System.Boolean suppressErrors Returns Type Description RuntimeMapLayer CreateMapLayer(RuntimeMap, ILayerDefinition) Creates a new runtime map layer from the specified Layer Definition Declaration public virtual RuntimeMapLayer CreateMapLayer(RuntimeMap parent, ILayerDefinition ldf) Parameters Type Name Description RuntimeMap parent The parent runtime map. The runtime map must have been created or opened from this same service instance ILayerDefinition ldf The layer definition Returns Type Description RuntimeMapLayer CreateMapLayer(RuntimeMap, ILayerDefinition, Boolean) Creates a new runtime map layer from the specified Layer Definition Declaration public virtual RuntimeMapLayer CreateMapLayer(RuntimeMap parent, ILayerDefinition ldf, bool suppressErrors) Parameters Type Name Description RuntimeMap parent The parent runtime map. The runtime map must have been created or opened from this same service instance ILayerDefinition ldf The layer definition System.Boolean suppressErrors Returns Type Description RuntimeMapLayer CreateMapLayer(RuntimeMap, IMapLayer) Creates a new runtime map layer from the specified IBaseMapLayer instance Declaration public RuntimeMapLayer CreateMapLayer(RuntimeMap parent, IMapLayer source) Parameters Type Name Description RuntimeMap parent The parent runtime map. The runtime map must have been created or opened from this same service instance IMapLayer source The map definition layer Returns Type Description RuntimeMapLayer CreateMapLayer(RuntimeMap, IMapLayer, Boolean) Creates a new runtime map layer from the specified IBaseMapLayer instance Declaration public RuntimeMapLayer CreateMapLayer(RuntimeMap parent, IMapLayer source, bool suppressErrors) Parameters Type Name Description RuntimeMap parent The parent runtime map. The runtime map must have been created or opened from this same service instance IMapLayer source The map definition layer System.Boolean suppressErrors Returns Type Description RuntimeMapLayer DeleteResource(String) Deletes the resource. Declaration public abstract void DeleteResource(string resourceID) Parameters Type Name Description System.String resourceID The resourceid. DescribeFeatureSource(String) Gets the feature source description. Declaration public virtual FeatureSourceDescription DescribeFeatureSource(string resourceID) Parameters Type Name Description System.String resourceID The resource ID. Returns Type Description FeatureSourceDescription DescribeFeatureSource(String, String) Describes the feature source. Declaration public abstract FeatureSchema DescribeFeatureSource(string resourceID, string schema) Parameters Type Name Description System.String resourceID The resource ID. System.String schema The schema. Returns Type Description FeatureSchema DescribeFeatureSourceInternal(String) Calls the actual implementation of the DescribeFeatureSource API Declaration protected abstract FeatureSourceDescription DescribeFeatureSourceInternal(string resourceId) Parameters Type Name Description System.String resourceId Returns Type Description FeatureSourceDescription DescribeFeatureSourcePartial(String, String, String[]) Describes the specified feature source restricted to only the specified schema and the specified class names Declaration public abstract FeatureSchema DescribeFeatureSourcePartial(string resourceID, string schema, string[] classNames) Parameters Type Name Description System.String resourceID System.String schema System.String [] classNames Returns Type Description FeatureSchema DeserializeObject(Type, Stream) Deserializes an object from a stream. Declaration public virtual object DeserializeObject(Type type, Stream data) Parameters Type Name Description Type type The expected object type Stream data The stream containing the object Returns Type Description System.Object The deserialized object DeserializeObject<T>(Stream) Deserializes an object from a stream. Declaration public virtual T DeserializeObject<T>(Stream data) Parameters Type Name Description Stream data The stream containing the object Returns Type Description T The deserialized object Type Parameters Name Description T The expected object type Dispose() Releases unmanaged and - optionally - managed resources Declaration public void Dispose() Dispose(Boolean) Dispose of this instance Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing EnumerateDataStores(String, String) Enumerates the data stores. Declaration public abstract DataStoreList EnumerateDataStores(string providerName, string partialConnString) Parameters Type Name Description System.String providerName Name of the provider. System.String partialConnString The partial conn string. Returns Type Description DataStoreList EnumerateResourceReferences(String) Enumereates all references to a given resource Declaration public abstract ResourceReferenceList EnumerateResourceReferences(string resourceid) Parameters Type Name Description System.String resourceid The resource to enumerate references for Returns Type Description ResourceReferenceList A list of resources that reference the given resourceID EnumerateUnmanagedData(String, String, Boolean, UnmanagedDataTypes) Enumerates all unmanaged folders, meaning alias'ed folders Declaration public abstract UnmanagedDataList EnumerateUnmanagedData(string startpath, string filter, bool recursive, UnmanagedDataTypes type) Parameters Type Name Description System.String startpath The path to retrieve the data from System.String filter A filter applied to the items System.Boolean recursive True if the list should contains recursive results UnmanagedDataTypes type The type of data to return Returns Type Description UnmanagedDataList A list of unmanaged data ExecuteLoadProcedure(ILoadProcedure, LengthyOperationProgressCallBack, Boolean) Executes the load procedure. Declaration public virtual string[] ExecuteLoadProcedure(ILoadProcedure loadProc, LengthyOperationProgressCallBack callback, bool ignoreUnsupported) Parameters Type Name Description ILoadProcedure loadProc The load proc. LengthyOperationProgressCallBack callback The callback. System.Boolean ignoreUnsupported if set to true [ignore unsupported]. Returns Type Description System.String [] ExecuteLoadProcedure(String, LengthyOperationProgressCallBack, Boolean) Executes the load procedure. Declaration public virtual string[] ExecuteLoadProcedure(string resourceID, LengthyOperationProgressCallBack callback, bool ignoreUnsupported) Parameters Type Name Description System.String resourceID The resource ID. LengthyOperationProgressCallBack callback The callback. System.Boolean ignoreUnsupported if set to true [ignore unsupported]. Returns Type Description System.String [] Finalize() Finalizer Declaration protected void Finalize() FixAndValidateFolderPath(String) Validates the origin of the folder, and ensures the folder path has a trailing slash. Declaration protected virtual string FixAndValidateFolderPath(string folderpath) Parameters Type Name Description System.String folderpath The path to validate and fix Returns Type Description System.String The fixed path GetCalculator() Gets the MPU calculator Declaration public virtual IMpuCalculator GetCalculator() Returns Type Description IMpuCalculator GetClassDefinition(String, String) Gets the class definition. Declaration public virtual ClassDefinition GetClassDefinition(string resourceID, string className) Parameters Type Name Description System.String resourceID The resource ID. System.String className The class name to look for. Returns Type Description ClassDefinition GetClassDefinitionInternal(String, String, String) Fetches the specified class definition Declaration protected abstract ClassDefinition GetClassDefinitionInternal(string resourceId, string schemaName, string className) Parameters Type Name Description System.String resourceId System.String schemaName System.String className Returns Type Description ClassDefinition GetClassNames(String, String) Gets the class names. Declaration public abstract string[] GetClassNames(string resourceId, string schemaName) Parameters Type Name Description System.String resourceId The resource id. System.String schemaName Name of the schema. Returns Type Description System.String [] GetCustomProperty(String) Gets the custom property. Declaration public abstract object GetCustomProperty(string name) Parameters Type Name Description System.String name The name. Returns Type Description System.Object GetCustomPropertyNames() Gets the custom property names. Declaration public abstract string[] GetCustomPropertyNames() Returns Type Description System.String [] GetCustomPropertyType(String) Gets the type of the custom property. Declaration public abstract Type GetCustomPropertyType(string name) Parameters Type Name Description System.String name The name. Returns Type Description Type GetFeatureProvider(String) Returns an installed provider, given the name of the provider Declaration public virtual FeatureProviderRegistryFeatureProvider GetFeatureProvider(string providername) Parameters Type Name Description System.String providername The name of the provider Returns Type Description FeatureProviderRegistryFeatureProvider The first matching provider or null GetFolderHeader(String) Gets the folder header. Declaration public virtual ResourceFolderHeaderType GetFolderHeader(string resourceID) Parameters Type Name Description System.String resourceID The resource ID. Returns Type Description ResourceFolderHeaderType GetFolderOrResourceHeader(String) Gets the folder or resource header. Declaration public abstract object GetFolderOrResourceHeader(string resourceId) Parameters Type Name Description System.String resourceId The resource id. Returns Type Description System.Object GetIdentityProperties(String, String) Gets the names of the identity properties from a feature Declaration public abstract string[] GetIdentityProperties(string resourceID, string classname) Parameters Type Name Description System.String resourceID The resourceID for the FeatureSource System.String classname The classname of the feature, including schema Returns Type Description System.String [] A string array with the found identities GetInterface() Gets the interface of this connection Declaration protected abstract IServerConnection GetInterface() Returns Type Description IServerConnection GetLongTransactions(String, Boolean) Gets the long transactions for the specified feature source Declaration public abstract ILongTransactionList GetLongTransactions(string resourceId, bool activeOnly) Parameters Type Name Description System.String resourceId The feature source id System.Boolean activeOnly If true, will only return active long transactions Returns Type Description ILongTransactionList GetPreviewUrlGenerator() Gets the preview URL generator. Declaration public virtual IResourcePreviewUrlGenerator GetPreviewUrlGenerator() Returns Type Description IResourcePreviewUrlGenerator The preview URL generator. Returns null if this connection does not support browser-based resource previews GetRepositoryResources() Gets a full list of resources in the permanent server repository (Library). This method returns the full catalog and should be used sparringly. Declaration public virtual ResourceList GetRepositoryResources() Returns Type Description ResourceList A list of contained resources GetRepositoryResources(Int32) Gets a list of resources in the permanent server repository (Library). This method limits folder recursion to the specified depth. Declaration public virtual ResourceList GetRepositoryResources(int depth) Parameters Type Name Description System.Int32 depth The max depth to recurse. Use -1 for no limit. Returns Type Description ResourceList A list of contained resources GetRepositoryResources(String) Gets a list of resources in the permanent server repository (Library). This method limits folder recursion to the specified depth. Declaration public virtual ResourceList GetRepositoryResources(string startingpoint) Parameters Type Name Description System.String startingpoint The folder from which to return items. Use null for \"Library://\" Returns Type Description ResourceList A list of contained resources GetRepositoryResources(String, Int32) Gets a list of resources in the permanent server repository (Library). This method limits folder recursion to the specified depth. Declaration public virtual ResourceList GetRepositoryResources(string startingpoint, int depth) Parameters Type Name Description System.String startingpoint The folder from which to return items. Use null for \"Library://\" System.Int32 depth The max depth to recurse. Use -1 for no limit. Returns Type Description ResourceList A list of contained resources GetRepositoryResources(String, String) Gets a list of resources in the permanent server repository (Library). This method limits folder recursion to the specified depth. Declaration public virtual ResourceList GetRepositoryResources(string startingpoint, string type) Parameters Type Name Description System.String startingpoint The folder from which to return items. Use null for \"Library://\" System.String type The type of resource to look for. Basically this is the resource extension, like \".MapDefinition\". Use null for all resources. Returns Type Description ResourceList A list of contained resources GetRepositoryResources(String, String, Int32) Gets a list of resources in the permanent server repository (Library). This method limits folder recursion to the specified depth. Declaration public ResourceList GetRepositoryResources(string startingpoint, string type, int depth) Parameters Type Name Description System.String startingpoint The folder from which to return items. Use null for \"Library://\" System.String type The type of resource to look for. Basically this is the resource extension, like \".MapDefinition\". Use null for all resources. System.Int32 depth The max depth to recurse. Use -1 for no limit. Returns Type Description ResourceList A list of contained resources GetRepositoryResources(String, String, Int32, Boolean) Gets a list of resources in the permanent server repository (Library). Declaration public abstract ResourceList GetRepositoryResources(string startingpoint, string type, int depth, bool computeChildren) Parameters Type Name Description System.String startingpoint The folder from which to return items. Use null for \"Library://\" System.String type The type of resource to look for. Basically this is the resource extension, like \".MapDefinition\". Use null for all resources. System.Int32 depth The max depth to recurse. Use -1 for no limit. System.Boolean computeChildren A flag indicating if the count of subfolders and resources should be calculated for leaf nodes Returns Type Description ResourceList A list of contained resources GetResource(String) Returns an object deserialized from server data. Uses the ResourceID to infer the object type. Declaration public virtual IResource GetResource(string resourceID) Parameters Type Name Description System.String resourceID The full resourceID of the item to retrieve. Returns Type Description IResource A deserialized object. GetResourceData(String, String) Returns data from a resource as a memorystream Declaration public abstract Stream GetResourceData(string resourceID, string dataname) Parameters Type Name Description System.String resourceID The id of the resource to fetch data from System.String dataname The name of the associated data item Returns Type Description Stream A stream containing the references resource data GetResourceHeader(String) Gets the resource header. Declaration public virtual ResourceDocumentHeaderType GetResourceHeader(string resourceID) Parameters Type Name Description System.String resourceID The resource ID. Returns Type Description ResourceDocumentHeaderType GetResourceXmlData(String) Returns raw data from the server a byte array Declaration public abstract Stream GetResourceXmlData(string resourceID) Parameters Type Name Description System.String resourceID The full resourceID to get data from Returns Type Description Stream Raw data from the given resource GetSchema(Type) Gets the Xsd schema for a given type. Declaration protected virtual Schema.XmlSchema GetSchema(Type type) Parameters Type Name Description Type type The type to get the schema for Returns Type Description System.Xml.Schema.XmlSchema The schema for the given type GetSchemaMapping(String, String) Gets the schema mappings for the given FDO provider. These mappings form the basis for a custom configuration document for a feature source that supports configuration Declaration public abstract ConfigurationDocument GetSchemaMapping(string provider, string partialConnString) Parameters Type Name Description System.String provider The FDO provider System.String partialConnString The connection string Returns Type Description ConfigurationDocument GetSchemas(String) Gets the schemas. Declaration public abstract string[] GetSchemas(string resourceId) Parameters Type Name Description System.String resourceId The resource id. Returns Type Description System.String [] GetSerializer(Type) Returns an XmlSerializer for the given type Declaration protected virtual Serialization.XmlSerializer GetSerializer(Type type) Parameters Type Name Description Type type The object type to serialize Returns Type Description System.Xml.Serialization.XmlSerializer An XmlSerializer for the given type GetSpatialContextInfo(String, Boolean) Returns the spatial info for a given featuresource Declaration public abstract FdoSpatialContextList GetSpatialContextInfo(string resourceID, bool activeOnly) Parameters Type Name Description System.String resourceID The ID of the resource to query System.Boolean activeOnly Query only active items Returns Type Description FdoSpatialContextList A list of spatial contexts GetSpatialExtent(String, String, String) Gets the spatial extent. Declaration public virtual ObjCommon.IEnvelope GetSpatialExtent(string resourceID, string schema, string geometry) Parameters Type Name Description System.String resourceID The resource ID. System.String schema The schema. System.String geometry The geometry. Returns Type Description ObjCommon.IEnvelope GetSpatialExtent(String, String, String, Boolean) Gets the spatial extent. Declaration public virtual ObjCommon.IEnvelope GetSpatialExtent(string resourceID, string schema, string geometry, bool allowFallbackToContextInformation) Parameters Type Name Description System.String resourceID The resource ID. System.String schema The schema. System.String geometry The geometry. System.Boolean allowFallbackToContextInformation if set to true [allow fallback to context information]. Returns Type Description ObjCommon.IEnvelope GetSpatialExtent(String, String, String, String) Gets the spatial extent. Declaration public virtual ObjCommon.IEnvelope GetSpatialExtent(string resourceID, string schema, string geometry, string filter) Parameters Type Name Description System.String resourceID The resource ID. System.String schema The schema. System.String geometry The geometry. System.String filter The filter. Returns Type Description ObjCommon.IEnvelope GetSpatialExtent(String, String, String, String, Boolean) Gets the spatial extent. Declaration protected virtual ObjCommon.IEnvelope GetSpatialExtent(string resourceID, string schema, string geometry, string filter, bool allowFallbackToContextInformation) Parameters Type Name Description System.String resourceID The resource ID. System.String schema The schema. System.String geometry The geometry. System.String filter The filter. System.Boolean allowFallbackToContextInformation if set to true [allow fallback to context information]. Returns Type Description ObjCommon.IEnvelope Exceptions Type Condition NullExtentException Thrown if the geometric extent is null HasFolder(String) Returns a value indicating if a given folder exists Declaration public virtual bool HasFolder(string folderpath) Parameters Type Name Description System.String folderpath The path of the folder Returns Type Description System.Boolean True if the folder exists, false otherwise. Also returns false on error. InferMPU(String, Double) Infers the meters per unit value from the specified coordinate system Declaration protected virtual double InferMPU(string csWkt, double units) Parameters Type Name Description System.String csWkt System.Double units Returns Type Description System.Double MoveFolder(String, String, Boolean) Moves a folder and its content from one location to another. This does not update any references. Declaration public abstract void MoveFolder(string oldpath, string newpath, bool overwrite) Parameters Type Name Description System.String oldpath The current folder path, the one moving from System.String newpath The new folder path, the one moving to System.Boolean overwrite True if the move can overwrite an existing folder, false otherwise MoveFolderWithReferences(String, String, LengthyOperationCallBack, LengthyOperationProgressCallBack) Moves a folder, and subsequently updates all resources pointing to the old resource path Declaration public virtual bool MoveFolderWithReferences(string oldpath, string newpath, LengthyOperationCallBack callback, LengthyOperationProgressCallBack progress) Parameters Type Name Description System.String oldpath The current folder path, the one moving from System.String newpath The new folder path, the one moving to LengthyOperationCallBack callback A callback delegate, being called for non progress reporting events. LengthyOperationProgressCallBack progress A callback delegate, being called for progress reporting events. Returns Type Description System.Boolean MoveResource(String, String, Boolean) Moves a resource from one location to another. This does not update any references. Declaration public abstract void MoveResource(string oldpath, string newpath, bool overwrite) Parameters Type Name Description System.String oldpath The current resource path, the one moving from System.String newpath The new resource path, the one moving to System.Boolean overwrite True if the move can overwrite an existing resource, false otherwise MoveResourceWithReferences(String, String, LengthyOperationCallBack, LengthyOperationProgressCallBack) Moves a resource, and subsequently updates all resources pointing to the old resource path Declaration public virtual bool MoveResourceWithReferences(string oldpath, string newpath, LengthyOperationCallBack callback, LengthyOperationProgressCallBack progress) Parameters Type Name Description System.String oldpath The current resource path, the one moving from System.String newpath The new resource path, the one moving to LengthyOperationCallBack callback A callback delegate, being called for non progress reporting events. LengthyOperationProgressCallBack progress A callback delegate, being called for progress reporting events. Returns Type Description System.Boolean OnRequestDispatched(String) Called when [request dispatched]. Declaration protected void OnRequestDispatched(string data) Parameters Type Name Description System.String data The data. OnResourceAdded(String) Raises the ResourceAdded event Declaration protected void OnResourceAdded(string resId) Parameters Type Name Description System.String resId OnResourceDeleted(String) Raises the ResourceDeleted event Declaration protected void OnResourceDeleted(string resId) Parameters Type Name Description System.String resId OnResourceUpdated(String) Raises the ResourceUpdated event Declaration protected void OnResourceUpdated(string resId) Parameters Type Name Description System.String resId OpenMap(String) Opens the specified runtime map Declaration public virtual RuntimeMap OpenMap(string runtimeMapResourceId) Parameters Type Name Description System.String runtimeMapResourceId Returns Type Description RuntimeMap PurgeCachedItemsOf(String) Removes all cached items associated with the given feature source Declaration protected int PurgeCachedItemsOf(string resourceId) Parameters Type Name Description System.String resourceId Returns Type Description System.Int32 QueryFeatureSource(String, String) Executes a feature query on the specified feature source Declaration public IFeatureReader QueryFeatureSource(string resourceID, string className) Parameters Type Name Description System.String resourceID The Feature Source ID System.String className The feature class name Returns Type Description IFeatureReader A IFeatureReader containing the results of the query QueryFeatureSource(String, String, String) Executes a feature query on the specified feature source Declaration public IFeatureReader QueryFeatureSource(string resourceID, string className, string filter) Parameters Type Name Description System.String resourceID The Feature Source ID System.String className The feature class name System.String filter The FDO filter string that determines what features will be returned Returns Type Description IFeatureReader A IFeatureReader containing the results of the query QueryFeatureSource(String, String, String, String[]) Executes a feature query on the specified feature source Declaration public IFeatureReader QueryFeatureSource(string resourceID, string className, string filter, string[] propertyNames) Parameters Type Name Description System.String resourceID The Feature Source ID System.String className The feature class name System.String filter The FDO filter string that determines what features will be returned System.String [] propertyNames A list of properties that are to be returned in the query result Returns Type Description IFeatureReader A IFeatureReader containing the results of the query QueryFeatureSource(String, String, String, String[], NameValueCollection) Executes a feature query on the specified feature source Declaration public abstract IFeatureReader QueryFeatureSource(string resourceID, string className, string filter, string[] propertyNames, NameValueCollection computedProperties) Parameters Type Name Description System.String resourceID The Feature Source ID System.String className The feature class name System.String filter The FDO filter string that determines what features will be returned System.String [] propertyNames A list of properties that are to be returned in the query result NameValueCollection computedProperties A list of name/value pairs that contain the alias (name) for an FDO expression (value) Returns Type Description IFeatureReader A IFeatureReader containing the results of the query QueryFeatureSource(String, String, String, String[], NameValueCollection, Int32) Executes a feature query on the specified feature source Declaration public virtual IFeatureReader QueryFeatureSource(string resourceID, string className, string filter, string[] propertyNames, NameValueCollection computedProperties, int limit) Parameters Type Name Description System.String resourceID The Feature Source ID System.String className The feature class name System.String filter The FDO filter string that determines what features will be returned System.String [] propertyNames A list of properties that are to be returned in the query result NameValueCollection computedProperties A list of name/value pairs that contain the alias (name) for an FDO expression (value) System.Int32 limit Limits the number of features returned in the reader. -1 for all features Returns Type Description IFeatureReader A IFeatureReader containing the results of the query RemoveVersionFromProviderName(String) Removes the version numbers from a providername Declaration public virtual string RemoveVersionFromProviderName(string providername) Parameters Type Name Description System.String providername The name of the provider, with or without version numbers Returns Type Description System.String The provider name without version numbers ResetFeatureSourceSchemaCache() Resets the feature source schema cache. Declaration public virtual void ResetFeatureSourceSchemaCache() ResourceExists(String) Returns a boolean indicating if a given resource exists Declaration public virtual bool ResourceExists(string resourceID) Parameters Type Name Description System.String resourceID The resource to look for Returns Type Description System.Boolean True if the resource exists false otherwise. Also returns false on error. SaveResource(IResource) Saves the resource. Declaration public void SaveResource(IResource resource) Parameters Type Name Description IResource resource The resource. SaveResourceAs(IResource, String) Saves the resource with the specified resource ID Declaration public void SaveResourceAs(IResource resource, string resourceid) Parameters Type Name Description IResource resource The resource. System.String resourceid The resourceid. SerializeObject(Object) Serialize an object into a new memory stream. Declaration public virtual MemoryStream SerializeObject(object o) Parameters Type Name Description System.Object o The object to serialize Returns Type Description System.IO.MemoryStream A memorystream with the serialized object SerializeObject(Object, Stream) Serializes an object into a stream Declaration public virtual void SerializeObject(object o, Stream stream) Parameters Type Name Description System.Object o The object to serialize Stream stream The stream to serialize into SetCustomProperty(String, Object) Sets the custom property. Declaration public abstract void SetCustomProperty(string name, object value) Parameters Type Name Description System.String name The name. System.Object value The value. SetFolderHeader(String, ResourceFolderHeaderType) Sets the folder header. Declaration public virtual void SetFolderHeader(string resourceID, ResourceFolderHeaderType header) Parameters Type Name Description System.String resourceID The resource ID. ResourceFolderHeaderType header The header. SetFolderOrResourceHeader(String, Object) Sets the folder or resource header. Declaration public virtual void SetFolderOrResourceHeader(string resourceID, object header) Parameters Type Name Description System.String resourceID The resource ID. System.Object header The header. SetResourceData(String, String, ResourceDataType, Stream) Uploads data to a resource Declaration public virtual void SetResourceData(string resourceid, string dataname, ResourceDataType datatype, Stream stream) Parameters Type Name Description System.String resourceid The id of the resource to update System.String dataname The name of the data to update or create ResourceDataType datatype The type of data Stream stream A stream containing the new content of the resource data SetResourceData(String, String, ResourceDataType, Stream, Utility.StreamCopyProgressDelegate) Uploads data to a resource Declaration public abstract void SetResourceData(string resourceid, string dataname, ResourceDataType datatype, Stream stream, Utility.StreamCopyProgressDelegate callback) Parameters Type Name Description System.String resourceid The id of the resource to update System.String dataname The name of the data to update or create ResourceDataType datatype The type of data Stream stream A stream containing the new content of the resource data Utility.StreamCopyProgressDelegate callback The callback. SetResourceHeader(String, ResourceDocumentHeaderType) Sets the resource header. Declaration public virtual void SetResourceHeader(string resourceID, ResourceDocumentHeaderType header) Parameters Type Name Description System.String resourceID The resource ID. ResourceDocumentHeaderType header The header. SetResourceXmlData(String, Stream) Writes raw data into a resource. Declaration public virtual void SetResourceXmlData(string resourceID, Stream stream) Parameters Type Name Description System.String resourceID The resourceID to write into System.IO.Stream stream The stream containing the data to write. SetResourceXmlData(String, Stream, Stream) Sets the resource XML data. Declaration public abstract void SetResourceXmlData(string resourceId, Stream content, Stream header) Parameters Type Name Description System.String resourceId The resource id. System.IO.Stream content The content. System.IO.Stream header The header. TestConnection(String) Tests the connection. Declaration public abstract string TestConnection(string featuresource) Parameters Type Name Description System.String featuresource The featuresource. Returns Type Description System.String Touch(String) Forces a timestamp update of the specified resource. This is akin to setting the resource's content using its existing content. Declaration public virtual void Touch(string resourceId) Parameters Type Name Description System.String resourceId UpdateRepository(String, ResourceFolderHeaderType) Updates the repository. Declaration public abstract void UpdateRepository(string resourceId, ResourceFolderHeaderType header) Parameters Type Name Description System.String resourceId The resource id. ResourceFolderHeaderType header The header. UpdateResourceReferences(Object, String, String, Boolean) Updates all resource references inside an object. Declaration public virtual void UpdateResourceReferences(object o, string oldresourcepath, string newresourcepath, bool folderupdates) Parameters Type Name Description System.Object o The object in which the resource references are to be updated System.String oldresourcepath The current resource path, the one updating from System.String newresourcepath The new resource path, the one updating to System.Boolean folderupdates True if the old and new resource path identifiers are folders, false otherwise UpdateResourceReferences(Object, String, String, Boolean, Hashtable) Updates all resource references inside an object. Declaration protected void UpdateResourceReferences(object o, string oldresourcepath, string newresourcepath, bool folderupdates, Hashtable visited) Parameters Type Name Description System.Object o The object in which the resource references are to be updated System.String oldresourcepath The current resource path, the one updating from System.String newresourcepath The new resource path, the one updating to System.Boolean folderupdates True if the old and new resource path identifiers are folders, false otherwise Hashtable visited A hashtable with objects previously visited. Used for recursion, leave as null when calling from outside the API. UploadPackage(String, Utility.StreamCopyProgressDelegate) Upload a MapGuide Package file to the server Declaration public abstract void UploadPackage(string filename, Utility.StreamCopyProgressDelegate callback) Parameters Type Name Description System.String filename Name of the file to upload Utility.StreamCopyProgressDelegate callback A callback argument used to display progress. May be null. ValidateVersion(SiteVersion) Validates the current server version against the highest tested version. Declaration protected virtual void ValidateVersion(SiteVersion version) Parameters Type Name Description SiteVersion version The version to validate ValidateVersion(Version) Validates the current server version against the highest tested version. Declaration protected virtual void ValidateVersion(Version version) Parameters Type Name Description Version version The version to validate WriteResource(String, Object) Writes an object into a resourceID Declaration public virtual void WriteResource(string resourceID, object resource) Parameters Type Name Description System.String resourceID The resource to write into System.Object resource The resourcec to write Events RequestDispatched Raised when a outbound request has been dispatched Declaration public event RequestEventHandler RequestDispatched Event Type Type Description RequestEventHandler ResourceAdded Raised when a resource is added Declaration public event ResourceEventHandler ResourceAdded Event Type Type Description ResourceEventHandler ResourceDeleted Raised when a resource is deleted. Note if a folder is deleted, this will only be raised for the folder and not its children. Also note that this is raised on any move operations as the original source is for all intents and purposes, deleted. Declaration public event ResourceEventHandler ResourceDeleted Event Type Type Description ResourceEventHandler ResourceUpdated Raised when a resource is updated Declaration public event ResourceEventHandler ResourceUpdated Event Type Type Description ResourceEventHandler"
  },
  "api/OSGeo.MapGuide.MaestroAPI.QueryMapFeaturesLayerAttributes.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.QueryMapFeaturesLayerAttributes.html",
    "title": "Enum QueryMapFeaturesLayerAttributes | MapGuide Maestro",
    "keywords": "Enum QueryMapFeaturesLayerAttributes Flags that can be used for the QueryMapFeatures operation Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public enum QueryMapFeaturesLayerAttributes Fields Name Description AllLayers All layers Default Default OnlySelectable Only selectable OnlyVisible Only visible OnlyWithToolTips Only with tooltips VisibleWithToolTips Visible with tooltips"
  },
  "api/OSGeo.MapGuide.MaestroAPI.RequestEventArgs.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.RequestEventArgs.html",
    "title": "Class RequestEventArgs | MapGuide Maestro",
    "keywords": "Class RequestEventArgs event object containing dispatched request infromation Inheritance System.Object RequestEventArgs Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public class RequestEventArgs : EventArgs Constructors RequestEventArgs(String) Initializes a new instance of the RequestEventArgs class. Declaration public RequestEventArgs(string data) Parameters Type Name Description System.String data The data. Properties Data Gets or sets the data. Declaration public string Data { get; } Property Value Type Description System.String The data."
  },
  "api/OSGeo.MapGuide.MaestroAPI.RequestEventHandler.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.RequestEventHandler.html",
    "title": "Delegate RequestEventHandler | MapGuide Maestro",
    "keywords": "Delegate RequestEventHandler Namespace : OSGeo.MapGuide.MaestroAPI Assembly : cs.temp.dll.dll Syntax public delegate void RequestEventHandler(object sender, RequestEventArgs e); Parameters Type Name Description System.Object sender RequestEventArgs e"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Comparison.DiffEngine.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Comparison.DiffEngine.html",
    "title": "Class DiffEngine | MapGuide Maestro",
    "keywords": "Class DiffEngine Computes the differences between two sources Inheritance System.Object DiffEngine Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Comparison Assembly : cs.temp.dll.dll Syntax public class DiffEngine Constructors DiffEngine() Initializes a new instance Declaration public DiffEngine() Methods DiffReport() Returns the result of the difference computation Declaration public List<DiffResultSpan> DiffReport() Returns Type Description List < DiffResultSpan > ProcessDiff(IDiffList, IDiffList) Performs the difference computation Declaration public double ProcessDiff(IDiffList source, IDiffList destination) Parameters Type Name Description IDiffList source IDiffList destination Returns Type Description System.Double The total execution time in seconds ProcessDiff(IDiffList, IDiffList, DiffEngineLevel) Performs the difference computation using the specified level of control Declaration public double ProcessDiff(IDiffList source, IDiffList destination, DiffEngineLevel level) Parameters Type Name Description IDiffList source IDiffList destination DiffEngineLevel level Returns Type Description System.Double The total execution time in seconds"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Comparison.DiffEngineLevel.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Comparison.DiffEngineLevel.html",
    "title": "Enum DiffEngineLevel | MapGuide Maestro",
    "keywords": "Enum DiffEngineLevel Controls the level of perfection required when computing the differences Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Comparison Assembly : cs.temp.dll.dll Syntax public enum DiffEngineLevel Fields Name Description FastImperfect Fast, but imperfect Medium A balanced trade between speed and perfection SlowPerfect Slow, but perfect"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Comparison.DiffResultSpan.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Comparison.DiffResultSpan.html",
    "title": "Class DiffResultSpan | MapGuide Maestro",
    "keywords": "Class DiffResultSpan Defines a diff result span Inheritance System.Object DiffResultSpan Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Comparison Assembly : cs.temp.dll.dll Syntax public class DiffResultSpan : IComparable Constructors DiffResultSpan(DiffResultSpanStatus, Int32, Int32, Int32) Initializes this instance Declaration protected DiffResultSpan(DiffResultSpanStatus status, int destIndex, int sourceIndex, int length) Parameters Type Name Description DiffResultSpanStatus status System.Int32 destIndex System.Int32 sourceIndex System.Int32 length Properties DestIndex The destination index Declaration public int DestIndex { get; } Property Value Type Description System.Int32 Length Gets the length of this span Declaration public int Length { get; } Property Value Type Description System.Int32 SourceIndex The source index Declaration public int SourceIndex { get; } Property Value Type Description System.Int32 Status Gets the status of this span Declaration public DiffResultSpanStatus Status { get; } Property Value Type Description DiffResultSpanStatus Methods CompareTo(Object) Compares this instance against the specified object Declaration public int CompareTo(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Int32 ToString() Returns a string that represents the current object Declaration public override string ToString() Returns Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Comparison.DiffResultSpanStatus.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Comparison.DiffResultSpanStatus.html",
    "title": "Enum DiffResultSpanStatus | MapGuide Maestro",
    "keywords": "Enum DiffResultSpanStatus Defines the status of a diff result span Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Comparison Assembly : cs.temp.dll.dll Syntax public enum DiffResultSpanStatus Fields Name Description AddDestination DeleteSource NoChange Replace"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.LayerDefinitionValidator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.LayerDefinitionValidator.html",
    "title": "Class LayerDefinitionValidator | MapGuide Maestro",
    "keywords": "Class LayerDefinitionValidator Resource validator for Layer Definitions Inheritance System.Object BaseLayerDefinitionValidator LayerDefinitionValidator Implements IResourceValidator Inherited Members BaseLayerDefinitionValidator.Connection BaseLayerDefinitionValidator.Validate(ResourceValidationContext, IResource, Boolean) BaseLayerDefinitionValidator.ValidateBase(ResourceValidationContext, IResource, Boolean) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public class LayerDefinitionValidator : BaseLayerDefinitionValidator, IResourceValidator Properties SupportedResourceAndVersion Gets the supported resource and version. Declaration public override ResourceTypeDescriptor SupportedResourceAndVersion { get; } Property Value Type Description ResourceTypeDescriptor The supported resource and version. Overrides BaseLayerDefinitionValidator.SupportedResourceAndVersion Implements IResourceValidator"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.LoadProcedureValidator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.LoadProcedureValidator.html",
    "title": "Class LoadProcedureValidator | MapGuide Maestro",
    "keywords": "Class LoadProcedureValidator Resource validator for Load Procedures Inheritance System.Object BaseLoadProcedureValidator LoadProcedureValidator Implements IResourceValidator Inherited Members BaseLoadProcedureValidator.Connection BaseLoadProcedureValidator.Validate(ResourceValidationContext, IResource, Boolean) BaseLoadProcedureValidator.ValidateBase(ResourceValidationContext, IResource, Boolean) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public class LoadProcedureValidator : BaseLoadProcedureValidator, IResourceValidator Properties SupportedResourceAndVersion Gets the resource type and version this validator supports Declaration public override ResourceTypeDescriptor SupportedResourceAndVersion { get; } Property Value Type Description ResourceTypeDescriptor Overrides BaseLoadProcedureValidator.SupportedResourceAndVersion Implements IResourceValidator"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.MapDefinitionValidator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.MapDefinitionValidator.html",
    "title": "Class MapDefinitionValidator | MapGuide Maestro",
    "keywords": "Class MapDefinitionValidator A Map Definition validator Inheritance System.Object BaseMapDefinitionValidator MapDefinitionValidator Implements IResourceValidator Inherited Members BaseMapDefinitionValidator.Connection BaseMapDefinitionValidator.Validate(ResourceValidationContext, IResource, Boolean) BaseMapDefinitionValidator.ValidateBase(ResourceValidationContext, IResource, Boolean) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public class MapDefinitionValidator : BaseMapDefinitionValidator, IResourceValidator Properties SupportedResourceAndVersion Gets the resource type and version this validator supports Declaration public override ResourceTypeDescriptor SupportedResourceAndVersion { get; } Property Value Type Description ResourceTypeDescriptor Overrides BaseMapDefinitionValidator.SupportedResourceAndVersion Implements IResourceValidator"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.PrintLayoutValidator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.PrintLayoutValidator.html",
    "title": "Class PrintLayoutValidator | MapGuide Maestro",
    "keywords": "Class PrintLayoutValidator Resource validator for Print Layouts Inheritance System.Object PrintLayoutValidator Implements IResourceValidator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public class PrintLayoutValidator : IResourceValidator Properties Connection The server connection which validation will be performed against Declaration public IServerConnection Connection { get; set; } Property Value Type Description IServerConnection SupportedResourceAndVersion Gets the resource type and version this validator supports Declaration public ResourceTypeDescriptor SupportedResourceAndVersion { get; } Property Value Type Description ResourceTypeDescriptor Methods Validate(ResourceValidationContext, IResource, Boolean) Validats the specified resources for common issues associated with this resource type Declaration public ValidationIssue[] Validate(ResourceValidationContext context, IResource resource, bool recurse) Parameters Type Name Description ResourceValidationContext context IResource resource System.Boolean recurse Returns Type Description ValidationIssue [] Implements IResourceValidator"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.ResourceValidationContext.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.ResourceValidationContext.html",
    "title": "Class ResourceValidationContext | MapGuide Maestro",
    "keywords": "Class ResourceValidationContext Provides a context for the resource validation system. This improves performance of validation by skipping over already validated resources and re-using previously cached information where possible Inheritance System.Object ResourceValidationContext Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public class ResourceValidationContext Examples This example shows how a ResourceValidationContext is used IResource resource; IServerConnection conn; ... var context = new ResourceValidationContext(conn); var issues = ResourceValidatorSet.Validate(context, item, false); Constructors ResourceValidationContext(IServerConnection) Initializes a new instance of the ResourceValidationContext class. Declaration public ResourceValidationContext(IServerConnection conn) Parameters Type Name Description IServerConnection conn The server connection Methods DescribeFeatureSource(String) Describes the feature source Declaration public FeatureSourceDescription DescribeFeatureSource(string resourceId) Parameters Type Name Description System.String resourceId The resource id. Returns Type Description FeatureSourceDescription GetResource(String) Gets the resource. Declaration public IResource GetResource(string resourceId) Parameters Type Name Description System.String resourceId The resource id. Returns Type Description IResource GetSpatialContexts(String) Gets the spatial contexts. Declaration public FdoSpatialContextList GetSpatialContexts(string resourceId) Parameters Type Name Description System.String resourceId The resource id. Returns Type Description FdoSpatialContextList IsAlreadyValidated(String) Determines whether the specified resource has already been validated Declaration public bool IsAlreadyValidated(string resourceId) Parameters Type Name Description System.String resourceId The resource id. Returns Type Description System.Boolean true if [the specified resource has already been validated]; otherwise, false . MarkValidated(String) Marks the specified resource id as being validated. Declaration public void MarkValidated(string resourceId) Parameters Type Name Description System.String resourceId The resource id. Reset() Clears all cached items and validated resources Declaration public void Reset() ResourceExists(String) Gets whether the specified resource exists Declaration public bool ResourceExists(string resourceId) Parameters Type Name Description System.String resourceId The resource id. Returns Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.ResourceValidatorLoader.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.ResourceValidatorLoader.html",
    "title": "Class ResourceValidatorLoader | MapGuide Maestro",
    "keywords": "Class ResourceValidatorLoader Utility class that initializes the default set of resource validators Inheritance System.Object ResourceValidatorLoader Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public static class ResourceValidatorLoader Examples This example shows how a ResourceValidatorLoader is used IResource resource; IServerConnection conn; ... ResourceValidatorLoader.LoadStockValidators(); var context = new ResourceValidationContext(conn); var issues = ResourceValidatorSet.Validate(context, item, false); Methods LoadStockValidators() Loads the default set of validators in this assembly Declaration public static void LoadStockValidators() Remarks This method only needs to be called once. Subsequent calls return immediately. As such it is ideal to put this call in your application's startup/initialization code."
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.ResourceValidatorSet.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.ResourceValidatorSet.html",
    "title": "Class ResourceValidatorSet | MapGuide Maestro",
    "keywords": "Class ResourceValidatorSet A collection of resource validators. Use this to validate a given resource for common issues. Inheritance System.Object ResourceValidatorSet Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public static class ResourceValidatorSet Examples This example shows how a ResourceValidatorSet is used IResource resource; IServerConnection conn; ... var context = new ResourceValidationContext(conn); var issues = ResourceValidatorSet.Validate(context, item, false); Methods HasValidator(String, Version) Determines whether the specified resource types has validator. Declaration public static bool HasValidator(string resourceTypes, Version version) Parameters Type Name Description System.String resourceTypes The resource types. Version version The version. Returns Type Description System.Boolean true if the specified resource types has validator; otherwise, false . RegisterValidator(IResourceValidator) Registers the validator. Declaration public static void RegisterValidator(IResourceValidator validator) Parameters Type Name Description IResourceValidator validator The validator. Validate(ResourceValidationContext, IEnumerable<IResource>, Boolean) Validates the specified items. Declaration public static ValidationIssue[] Validate(ResourceValidationContext context, IEnumerable<IResource> items, bool recurse) Parameters Type Name Description ResourceValidationContext context The context. IEnumerable < IResource > items The items. System.Boolean recurse if set to true [recurse]. Returns Type Description ValidationIssue [] Validate(ResourceValidationContext, IResource, Boolean) Validates the specified item using an existing validation context to skip over items already validated Declaration public static ValidationIssue[] Validate(ResourceValidationContext context, IResource item, bool recurse) Parameters Type Name Description ResourceValidationContext context IResource item System.Boolean recurse Returns Type Description ValidationIssue []"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.SymbolDefinitionValidator.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Resource.Validation.SymbolDefinitionValidator.html",
    "title": "Class SymbolDefinitionValidator | MapGuide Maestro",
    "keywords": "Class SymbolDefinitionValidator Resource validator for Symbol Definitions Inheritance System.Object BaseSymbolDefinitionValidator SymbolDefinitionValidator Implements IResourceValidator Inherited Members BaseSymbolDefinitionValidator.Connection BaseSymbolDefinitionValidator.Validate(ResourceValidationContext, IResource, Boolean) BaseSymbolDefinitionValidator.ValidateBase(ResourceValidationContext, IResource, Boolean) BaseSymbolDefinitionValidator.ValidateSimpleSymbolDefinition(ISimpleSymbolDefinition, ResourceValidationContext) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Resource.Validation Assembly : cs.temp.dll.dll Syntax public class SymbolDefinitionValidator : BaseSymbolDefinitionValidator, IResourceValidator Properties SupportedResourceAndVersion Gets the resource type and version this validator supports Declaration public override ResourceTypeDescriptor SupportedResourceAndVersion { get; } Property Value Type Description ResourceTypeDescriptor Overrides BaseSymbolDefinitionValidator.SupportedResourceAndVersion Implements IResourceValidator"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Schema.GeometricPropertyDefinition.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Schema.GeometricPropertyDefinition.html",
    "title": "Class GeometricPropertyDefinition | MapGuide Maestro",
    "keywords": "Class GeometricPropertyDefinition A geometric property Inheritance System.Object SchemaElement PropertyDefinition GeometricPropertyDefinition Implements IFdoSerializable IExpressionPropertySource Inherited Members PropertyDefinition.Parent PropertyDefinition.Parse(XmlNode, XmlNamespaceManager) PropertyDefinition.Clone(PropertyDefinition) SchemaElement.Name SchemaElement.Description System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Schema Assembly : cs.temp.dll.dll Syntax public class GeometricPropertyDefinition : PropertyDefinition, IFdoSerializable, IExpressionPropertySource Constructors GeometricPropertyDefinition(String, String) Initializes a new instance of the GeometricPropertyDefinition class. Declaration public GeometricPropertyDefinition(string name, string description) Parameters Type Name Description System.String name The name. System.String description The description. Properties ExpressionType Gets the expression data type Declaration public override ExpressionDataType ExpressionType { get; } Property Value Type Description ExpressionDataType Overrides PropertyDefinition.ExpressionType GeometricTypes Gets or sets the FeatureGeometricType that can be stored in this geometric property. The returned value may be any combination of the values from the FeatureGeometricType enumeration combined via a bit-wise or operation. Declaration public FeatureGeometricType GeometricTypes { get; set; } Property Value Type Description FeatureGeometricType HasElevation Gets or sets a Boolean value that indicates if the geometry of this property include elevation values. Declaration public bool HasElevation { get; set; } Property Value Type Description System.Boolean HasMeasure Gets or sets a Boolean value that indicates if the geometry of this property includes measurement values that can be used for dynamic segmentation. Declaration public bool HasMeasure { get; set; } Property Value Type Description System.Boolean IsReadOnly Gets or sets a Boolean value that indicates if this geometric property is read-only. Declaration public bool IsReadOnly { get; set; } Property Value Type Description System.Boolean SpatialContextAssociation Gets or sets the Spatial Context name associated to this geometric property. Declaration public string SpatialContextAssociation { get; set; } Property Value Type Description System.String SpecificGeometryTypes Gets or sets the specific set of geometry types that can be stored in this geometric property. The provided value is a list of geometry types that are supported. Usually, one specific type is supported, but there can be more than one. Declaration public SpecificGeometryType[] SpecificGeometryTypes { get; set; } Property Value Type Description SpecificGeometryType [] Type Gets the type of property definition Declaration public override PropertyDefinitionType Type { get; } Property Value Type Description PropertyDefinitionType Overrides PropertyDefinition.Type Methods GeometryTypesToString() Converts the current specified geometry types to a space-delimited list of types Declaration public string GeometryTypesToString() Returns Type Description System.String GetIndividualGeometricTypes() Gets an array of the individual FeatureGeometricType values that compose the final masked value that is returned by the OSGeo.MapGuide.MaestroAPI.GeometricPropertyDefinition.GeometricTypes property Declaration public FeatureGeometricType[] GetIndividualGeometricTypes() Returns Type Description FeatureGeometricType [] ReadXml(XmlNode, XmlNamespaceManager) Set the current element's content from the current XML node Declaration protected override void ReadXml(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description System.Xml.XmlNode node System.Xml.XmlNamespaceManager mgr Overrides PropertyDefinition.ReadXml(XmlNode, XmlNamespaceManager) WriteXml(XmlDocument, XmlNode) Writes the current element's content Declaration protected override void WriteXml(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description System.Xml.XmlDocument doc System.Xml.XmlNode currentNode Overrides PropertyDefinition.WriteXml(XmlDocument, XmlNode) Implements IFdoSerializable IExpressionPropertySource"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Schema.PropertyDefinition.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Schema.PropertyDefinition.html",
    "title": "Class PropertyDefinition | MapGuide Maestro",
    "keywords": "Class PropertyDefinition Base class of all property definitions Inheritance System.Object SchemaElement PropertyDefinition DataPropertyDefinition GeometricPropertyDefinition RasterPropertyDefinition Implements IFdoSerializable IExpressionPropertySource Inherited Members SchemaElement.Name SchemaElement.Description System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Schema Assembly : cs.temp.dll.dll Syntax public abstract class PropertyDefinition : SchemaElement, IFdoSerializable, IExpressionPropertySource Properties ExpressionType Gets the expression data type Declaration public abstract ExpressionDataType ExpressionType { get; } Property Value Type Description ExpressionDataType Parent Gets the parent class definition Declaration public ClassDefinition Parent { get; } Property Value Type Description ClassDefinition Type Gets the type of property Declaration public abstract PropertyDefinitionType Type { get; } Property Value Type Description PropertyDefinitionType Methods Clone(PropertyDefinition) Creates a clone of the specified instance Declaration public static PropertyDefinition Clone(PropertyDefinition prop) Parameters Type Name Description PropertyDefinition prop The instance to clone. Returns Type Description PropertyDefinition Parse(XmlNode, XmlNamespaceManager) Parses the specified XML node into a Property Definition Declaration public static PropertyDefinition Parse(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description System.Xml.XmlNode node System.Xml.XmlNamespaceManager mgr Returns Type Description PropertyDefinition ReadXml(XmlNode, XmlNamespaceManager) Set the current element's content from the current XML node Declaration protected abstract void ReadXml(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description System.Xml.XmlNode node System.Xml.XmlNamespaceManager mgr WriteXml(XmlDocument, XmlNode) Writes the current element's content Declaration protected abstract void WriteXml(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description System.Xml.XmlDocument doc System.Xml.XmlNode currentNode Implements IFdoSerializable IExpressionPropertySource"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Schema.PropertyDefinitionType.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Schema.PropertyDefinitionType.html",
    "title": "Enum PropertyDefinitionType | MapGuide Maestro",
    "keywords": "Enum PropertyDefinitionType Defines the types of properties in a FDO class definition Namespace : OSGeo.MapGuide.MaestroAPI.Schema Assembly : cs.temp.dll.dll Syntax public enum PropertyDefinitionType Fields Name Description Association Association Properties Data Data Properties Geometry Geometric Properties Object Object Properties Raster Raster Properties"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Schema.PropertyValueType.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Schema.PropertyValueType.html",
    "title": "Enum PropertyValueType | MapGuide Maestro",
    "keywords": "Enum PropertyValueType Defines the valid types of property values Namespace : OSGeo.MapGuide.MaestroAPI.Schema Assembly : cs.temp.dll.dll Syntax public enum PropertyValueType Fields Name Description Blob BLOB Boolean Boolean Byte Byte Clob CLOB DateTime DateTime Double Double Feature Feature Geometry Geometry Int16 Int16 Int32 Int32 Int64 Int64 Null Invalid or Unknown Raster Raster Single Single String String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Schema.RasterPropertyDefinition.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Schema.RasterPropertyDefinition.html",
    "title": "Class RasterPropertyDefinition | MapGuide Maestro",
    "keywords": "Class RasterPropertyDefinition Has the information needed to create or completely describe a raster property. This class encapsulates the information necessary to insert a 'new' raster, in the absence of any other information, for the properties defined using this schema element. Inheritance System.Object SchemaElement PropertyDefinition RasterPropertyDefinition Implements IFdoSerializable IExpressionPropertySource Inherited Members PropertyDefinition.Parent PropertyDefinition.Parse(XmlNode, XmlNamespaceManager) PropertyDefinition.Clone(PropertyDefinition) SchemaElement.Name SchemaElement.Description System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Schema Assembly : cs.temp.dll.dll Syntax public class RasterPropertyDefinition : PropertyDefinition, IFdoSerializable, IExpressionPropertySource Constructors RasterPropertyDefinition(String, String) Initializes a new instance of the RasterPropertyDefinition class. Declaration public RasterPropertyDefinition(string name, string description) Parameters Type Name Description System.String name The name. System.String description The description. Properties DefaultImageXSize Gets or sets the default size of image file in the horizontal direction in pixels (number of columns). Declaration public int DefaultImageXSize { get; set; } Property Value Type Description System.Int32 DefaultImageYSize Gets or sets the default size of an image file in the vertical direction in pixels (number of rows). Declaration public int DefaultImageYSize { get; set; } Property Value Type Description System.Int32 ExpressionType Gets the expression data type Declaration public override ExpressionDataType ExpressionType { get; } Property Value Type Description ExpressionDataType Overrides PropertyDefinition.ExpressionType IsNullable Gets or sets whether this property's value can be null. Declaration public bool IsNullable { get; set; } Property Value Type Description System.Boolean IsReadOnly Gets or sets whether this property is read-only. Declaration public bool IsReadOnly { get; set; } Property Value Type Description System.Boolean SpatialContextAssociation Gets or sets the Spatial Context name associated to this raster property. Declaration public string SpatialContextAssociation { get; set; } Property Value Type Description System.String Type Gets the type of property definition Declaration public override PropertyDefinitionType Type { get; } Property Value Type Description PropertyDefinitionType Overrides PropertyDefinition.Type Methods ReadXml(XmlNode, XmlNamespaceManager) Set the current element's content from the current XML node Declaration protected override void ReadXml(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description System.Xml.XmlNode node System.Xml.XmlNamespaceManager mgr Overrides PropertyDefinition.ReadXml(XmlNode, XmlNamespaceManager) WriteXml(XmlDocument, XmlNode) Writes the current element's content Declaration protected override void WriteXml(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description System.Xml.XmlDocument doc System.Xml.XmlNode currentNode Overrides PropertyDefinition.WriteXml(XmlDocument, XmlNode) Implements IFdoSerializable IExpressionPropertySource"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Schema.SchemaElement.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Schema.SchemaElement.html",
    "title": "Class SchemaElement | MapGuide Maestro",
    "keywords": "Class SchemaElement Base class of all FDO schema elements Inheritance System.Object SchemaElement ClassDefinition FeatureSchema PropertyDefinition Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Schema Assembly : cs.temp.dll.dll Syntax public abstract class SchemaElement Properties Description Gets or sets the description of this element Declaration public string Description { get; set; } Property Value Type Description System.String Name Gets or sets the name of this element Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Schema.SpecificGeometryType.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Schema.SpecificGeometryType.html",
    "title": "Enum SpecificGeometryType | MapGuide Maestro",
    "keywords": "Enum SpecificGeometryType Defines the valid specific geometry types for geometric storage Namespace : OSGeo.MapGuide.MaestroAPI.Schema Assembly : cs.temp.dll.dll Syntax public enum SpecificGeometryType Fields Name Description CurvePolygon Curve Polygons CurveString Curve Strings LineString Line Strings MultiCurvePolygon Multi Curve Polygons MultiCurveString Multi Curve Strings MultiGeometry Multi Geometries MultiLineString Multi Line Strings MultiPoint Multi Points MultiPolygon Multi Polygons Point Points Polygon Polygons"
  },
  "api/OSGeo.MapGuide.MaestroAPI.Schema.UnmappedDataType.html": {
    "href": "api/OSGeo.MapGuide.MaestroAPI.Schema.UnmappedDataType.html",
    "title": "Class UnmappedDataType | MapGuide Maestro",
    "keywords": "Class UnmappedDataType Dummy class that represents an unknown data type Inheritance System.Object UnmappedDataType Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.MaestroAPI.Schema Assembly : cs.temp.dll.dll Syntax public class UnmappedDataType"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IWidgetParameter.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IWidgetParameter.html",
    "title": "Interface IWidgetParameter | MapGuide Maestro",
    "keywords": "Interface IWidgetParameter Describes a parameter of a fusion widget Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IWidgetParameter Properties AllowedValue Gets the list of allowed value of this parameter Declaration IAllowedValue[] AllowedValue { get; } Property Value Type Description IAllowedValue [] DefaultValue Gets the default value of this parameter Declaration string DefaultValue { get; } Property Value Type Description System.String Description Gets the description of the parameter Declaration string Description { get; } Property Value Type Description System.String IsMandatory Gets whether this parameter is mandatory Declaration bool IsMandatory { get; } Property Value Type Description System.Boolean Label Gets the label for this parameter Declaration string Label { get; } Property Value Type Description System.String Max Gets the maximum allowed value of this parameter Declaration string Max { get; } Property Value Type Description System.String Min Gets the minimum allowed value of this parameter Declaration string Min { get; } Property Value Type Description System.String Name Gets the name of the parameter Declaration string Name { get; } Property Value Type Description System.String Type Gets the type of the parameter Declaration string Type { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IWidgetSet.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.IWidgetSet.html",
    "title": "Interface IWidgetSet | MapGuide Maestro",
    "keywords": "Interface IWidgetSet Represents a flexible layout's widget set. This is analogous to a Command Set in a Web Layout Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public interface IWidgetSet Properties ContainerCount The number of widget containers Declaration int ContainerCount { get; } Property Value Type Description System.Int32 Containers The list of widget containers Declaration IEnumerable<IWidgetContainer> Containers { get; } Property Value Type Description IEnumerable < IWidgetContainer > MapWidget Gets the designated map widget Declaration IMapWidget MapWidget { get; } Property Value Type Description IMapWidget WidgetCount Gets the total number of widgets in this widget set Declaration int WidgetCount { get; } Property Value Type Description System.Int32 Widgets Gets the list of widgets Declaration IEnumerable<IWidget> Widgets { get; } Property Value Type Description IEnumerable < IWidget > Methods AddContainer(IWidgetContainer) Adds a widget container Declaration void AddContainer(IWidgetContainer container) Parameters Type Name Description IWidgetContainer container AddWidget(IWidget) Adds a widget Declaration void AddWidget(IWidget widget) Parameters Type Name Description IWidget widget RemoveContainer(IWidgetContainer) Removes the given widget container Declaration void RemoveContainer(IWidgetContainer container) Parameters Type Name Description IWidgetContainer container RemoveWidget(IWidget) Removes the specified widget Declaration void RemoveWidget(IWidget widget) Parameters Type Name Description IWidget widget"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.KnownWidgetNames.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.KnownWidgetNames.html",
    "title": "Class KnownWidgetNames | MapGuide Maestro",
    "keywords": "Class KnownWidgetNames A set of known widgets that come with a fusion installation Inheritance System.Object KnownWidgetNames Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public static class KnownWidgetNames Fields About About Declaration public const string About = \"About\" Field Value Type Description System.String ActivityIndicator ActivityIndicator Declaration public const string ActivityIndicator = \"ActivityIndicator\" Field Value Type Description System.String BasemapSwitcher BasemapSwitcher Declaration public const string BasemapSwitcher = \"BasemapSwitcher\" Field Value Type Description System.String Buffer Buffer Declaration public const string Buffer = \"Buffer\" Field Value Type Description System.String BufferPanel BufferPanel Declaration public const string BufferPanel = \"BufferPanel\" Field Value Type Description System.String CenterSelection CenterSelection Declaration public const string CenterSelection = \"CenterSelection\" Field Value Type Description System.String ClearSelection ClearSelection Declaration public const string ClearSelection = \"ClearSelection\" Field Value Type Description System.String ColorPicker ColorPicker Declaration public const string ColorPicker = \"ColorPicker\" Field Value Type Description System.String CTRLClick CTRLClick Declaration public const string CTRLClick = \"CTRLClick\" Field Value Type Description System.String CursorPosition CursorPosition Declaration public const string CursorPosition = \"CursorPosition\" Field Value Type Description System.String EditableScale EditableScale Declaration public const string EditableScale = \"EditableScale\" Field Value Type Description System.String ExtentHistory ExtentHistory Declaration public const string ExtentHistory = \"ExtentHistory\" Field Value Type Description System.String FeatureInfo FeatureInfo Declaration public const string FeatureInfo = \"FeatureInfo\" Field Value Type Description System.String Help Help Declaration public const string Help = \"Help\" Field Value Type Description System.String InitialMapView InitialMapView Declaration public const string InitialMapView = \"InitialMapView\" Field Value Type Description System.String InvokeScript InvokeScript Declaration public const string InvokeScript = \"InvokeScript\" Field Value Type Description System.String InvokeURL InvokeURL Declaration public const string InvokeURL = \"InvokeURL\" Field Value Type Description System.String LayerManager LayerManager Declaration public const string LayerManager = \"LayerManager\" Field Value Type Description System.String Legend Legend Declaration public const string Legend = \"Legend\" Field Value Type Description System.String LinkToView LinkToView Declaration public const string LinkToView = \"LinkToView\" Field Value Type Description System.String MapMenu MapMenu Declaration public const string MapMenu = \"MapMenu\" Field Value Type Description System.String Maptip Maptip Declaration public const string Maptip = \"Maptip\" Field Value Type Description System.String Measure Measure Declaration public const string Measure = \"Measure\" Field Value Type Description System.String Navigator Navigator Declaration public const string Navigator = \"Navigator\" Field Value Type Description System.String OverviewMap OverviewMap Declaration public const string OverviewMap = \"OverviewMap\" Field Value Type Description System.String Pan Pan Declaration public const string Pan = \"Pan\" Field Value Type Description System.String PanOnClick PanOnClick Declaration public const string PanOnClick = \"PanOnClick\" Field Value Type Description System.String PanQuery PanQuery Declaration public const string PanQuery = \"PanQuery\" Field Value Type Description System.String Print Print Declaration public const string Print = \"Print\" Field Value Type Description System.String Query Query Declaration public const string Query = \"Query\" Field Value Type Description System.String QuickPlot QuickPlot Declaration public const string QuickPlot = \"QuickPlot\" Field Value Type Description System.String Redline Redline Declaration public const string Redline = \"Redline\" Field Value Type Description System.String RefreshMap RefreshMap Declaration public const string RefreshMap = \"RefreshMap\" Field Value Type Description System.String SaveMap SaveMap Declaration public const string SaveMap = \"SaveMap\" Field Value Type Description System.String Scalebar Scalebar Declaration public const string Scalebar = \"Scalebar\" Field Value Type Description System.String ScalebarDual ScalebarDual Declaration public const string ScalebarDual = \"ScalebarDual\" Field Value Type Description System.String Search Search Declaration public const string Search = \"Search\" Field Value Type Description System.String Select Select Declaration public const string Select = \"Select\" Field Value Type Description System.String SelectionInfo SelectionInfo Declaration public const string SelectionInfo = \"SelectionInfo\" Field Value Type Description System.String SelectPolygon SelectPolygon Declaration public const string SelectPolygon = \"SelectPolygon\" Field Value Type Description System.String SelectRadius SelectRadius Declaration public const string SelectRadius = \"SelectRadius\" Field Value Type Description System.String SelectRadiusValue SelectRadiusValue Declaration public const string SelectRadiusValue = \"SelectRadiusValue\" Field Value Type Description System.String SelectWithin SelectWithin Declaration public const string SelectWithin = \"SelectWithin\" Field Value Type Description System.String TaskPane TaskPane Declaration public const string TaskPane = \"TaskPane\" Field Value Type Description System.String Theme Theme Declaration public const string Theme = \"Theme\" Field Value Type Description System.String ViewOptions ViewOptions Declaration public const string ViewOptions = \"ViewOptions\" Field Value Type Description System.String ViewSize ViewSize Declaration public const string ViewSize = \"ViewSize\" Field Value Type Description System.String Zoom Zoom Declaration public const string Zoom = \"Zoom\" Field Value Type Description System.String ZoomOnClick ZoomOnClick Declaration public const string ZoomOnClick = \"ZoomOnClick\" Field Value Type Description System.String ZoomToSelection ZoomToSelection Declaration public const string ZoomToSelection = \"ZoomToSelection\" Field Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.UiItemFunctionType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.UiItemFunctionType.html",
    "title": "Enum UiItemFunctionType | MapGuide Maestro",
    "keywords": "Enum UiItemFunctionType Defines the type of UI items Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax [Serializable] public enum UiItemFunctionType Fields Name Description Flyout Separator Widget"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.WidgetFactoryMethod.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.WidgetFactoryMethod.html",
    "title": "Delegate WidgetFactoryMethod | MapGuide Maestro",
    "keywords": "Delegate WidgetFactoryMethod Factory method signature for creating fusion widgets Namespace : OSGeo.MapGuide.ObjectModels.ApplicationDefinition Assembly : cs.temp.dll.dll Syntax public delegate IWidget WidgetFactoryMethod(IWidgetInfo info); Parameters Type Name Description IWidgetInfo info Returns Type Description IWidget"
  },
  "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.ApplicationDefinition.html",
    "title": "Namespace OSGeo.MapGuide.ObjectModels.ApplicationDefinition | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.ObjectModels.ApplicationDefinition Classes ExtensionMethods Extension method class FusionTemplateNames Defines the stock fusion template names that come with a standard MapGuide installation KnownWidgetNames A set of known widgets that come with a fusion installation Interfaces IAllowedValue Describes an allowed widget parameter value IApplicationDefinition Represents a fusion flexible layout (aka. An Application Definition document) IApplicationDefinitionContainerInfo Describes a fusion container IApplicationDefinitionContainerInfoSet Describes all available containers IApplicationDefinitionPanel Describes a fusion template panel IApplicationDefinitionTemplateInfo Describes a fusion template IApplicationDefinitionTemplateInfoSet Describes all available templates IApplicationDefinitionWidgetInfoSet Describes all available widgets ICmsMapOptions Describes external base layer options IExtensibleElement Represents an element that is extensible with arbitrary XML content IExtension Represents a region of arbitrary XML content IFlyoutItem Represents a toolbar/menu flyout item IMap Describes a map entry in a map group IMapGroup Describes a Map Group in a Flexible Layout. A MapGroup consists of a MapGuide Map Definition and zero or more external base layers IMapGuideOverlayOptions Describes MapGuide overlay options IMapSet Describes the map set of the Flexible Layout IMapView The initial view of the map IMapWidget Represents a map widget IMenu A interface for widgets and components with menu-like characteristics ISeparator Represents a menu/toolbar separator IUIItem Represents a UI toolbar/menu item IUIItemContainer Represents a UI item container component IUIWidget Represents a widget definition that is accessible from a menu or toolbar IWidget Represents a fusion application widget IWidgetContainer Represents a container component in a flexible layout IWidgetInfo Describes a fusion widget IWidgetItem Represents a widget reference. This is analogous to a command item in a Web Layouts IWidgetParameter Describes a parameter of a fusion widget IWidgetSet Represents a flexible layout's widget set. This is analogous to a Command Set in a Web Layout Enums UiItemFunctionType Defines the type of UI items Delegates ContainerFactoryMethod Factory method signature for creating fusion widget containers WidgetFactoryMethod Factory method signature for creating fusion widgets"
  },
  "api/OSGeo.MapGuide.ObjectModels.BaseSerializable.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.BaseSerializable.html",
    "title": "Class BaseSerializable | MapGuide Maestro",
    "keywords": "Class BaseSerializable The base class of all serializable resource types Inheritance System.Object BaseSerializable BaseSerializableMapDefinition Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels Assembly : cs.temp.dll.dll Syntax public abstract class BaseSerializable Methods NormalizedSerialize(XmlSerializer, Object) Performs a normalized serialization Declaration protected virtual string NormalizedSerialize(XmlSerializer serializer, object obj) Parameters Type Name Description XmlSerializer serializer System.Object obj Returns Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.BaseSerializableMapDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.BaseSerializableMapDefinition.html",
    "title": "Class BaseSerializableMapDefinition | MapGuide Maestro",
    "keywords": "Class BaseSerializableMapDefinition The base class of all serializable map definition types Inheritance System.Object BaseSerializable BaseSerializableMapDefinition Inherited Members BaseSerializable.NormalizedSerialize(XmlSerializer, Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels Assembly : cs.temp.dll.dll Syntax public class BaseSerializableMapDefinition : BaseSerializable Methods ParseHTMLColor(String) Parses the given HTML color Declaration protected Color ParseHTMLColor(string strColor) Parameters Type Name Description System.String strColor Returns Type Description Color SerializeHTMLColor(Color, Boolean) Serializes the given color Declaration protected string SerializeHTMLColor(Color color, bool bIncludeAlpha) Parameters Type Name Description Color color System.Boolean bIncludeAlpha Returns Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.ExtendedDataType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.ExtendedDataType.html",
    "title": "Class ExtendedDataType | MapGuide Maestro",
    "keywords": "Class ExtendedDataType Inheritance System.Object ExtendedDataType Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class ExtendedDataType : ComponentModel.INotifyPropertyChanged Properties Any Declaration public XmlElement[] Any { get; set; } Property Value Type Description System.Xml.XmlElement [] Methods Clone() Create a clone of this ExtendedDataType object Declaration public virtual ExtendedDataType Clone() Returns Type Description ExtendedDataType Deserialize(String) Declaration public static ExtendedDataType Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description ExtendedDataType Deserialize(String, out ExtendedDataType) Declaration public static bool Deserialize(string xml, out ExtendedDataType obj) Parameters Type Name Description System.String xml ExtendedDataType obj Returns Type Description System.Boolean Deserialize(String, out ExtendedDataType, out Exception) Deserializes workflow markup into an ExtendedDataType object Declaration public static bool Deserialize(string xml, out ExtendedDataType obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize ExtendedDataType obj Output ExtendedDataType object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static ExtendedDataType LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ExtendedDataType LoadFromFile(String, out ExtendedDataType) Declaration public static bool LoadFromFile(string fileName, out ExtendedDataType obj) Parameters Type Name Description System.String fileName ExtendedDataType obj Returns Type Description System.Boolean LoadFromFile(String, out ExtendedDataType, out Exception) Deserializes xml markup from file into an ExtendedDataType object Declaration public static bool LoadFromFile(string fileName, out ExtendedDataType obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize ExtendedDataType obj Output ExtendedDataType object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current ExtendedDataType object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current ExtendedDataType object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.FdoLongTransactionList.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.FdoLongTransactionList.html",
    "title": "Class FdoLongTransactionList | MapGuide Maestro",
    "keywords": "Class FdoLongTransactionList A list of FDO long transactions Inheritance System.Object FdoLongTransactionList Implements ILongTransactionList Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class FdoLongTransactionList : ComponentModel.INotifyPropertyChanged, ILongTransactionList Properties LongTransaction Declaration public BindingList<FdoLongTransactionListLongTransaction> LongTransaction { get; set; } Property Value Type Description BindingList < FdoLongTransactionListLongTransaction > ProviderName Declaration public string ProviderName { get; set; } Property Value Type Description System.String Transactions Gets the long transactions in this list Declaration public IEnumerable<ILongTransaction> Transactions { get; } Property Value Type Description IEnumerable < ILongTransaction > Methods Clone() Create a clone of this FdoLongTransactionList object Declaration public virtual FdoLongTransactionList Clone() Returns Type Description FdoLongTransactionList Deserialize(String) Declaration public static FdoLongTransactionList Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description FdoLongTransactionList Deserialize(String, out FdoLongTransactionList) Declaration public static bool Deserialize(string xml, out FdoLongTransactionList obj) Parameters Type Name Description System.String xml FdoLongTransactionList obj Returns Type Description System.Boolean Deserialize(String, out FdoLongTransactionList, out Exception) Deserializes workflow markup into an FdoLongTransactionList object Declaration public static bool Deserialize(string xml, out FdoLongTransactionList obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize FdoLongTransactionList obj Output FdoLongTransactionList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static FdoLongTransactionList LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description FdoLongTransactionList LoadFromFile(String, out FdoLongTransactionList) Declaration public static bool LoadFromFile(string fileName, out FdoLongTransactionList obj) Parameters Type Name Description System.String fileName FdoLongTransactionList obj Returns Type Description System.Boolean LoadFromFile(String, out FdoLongTransactionList, out Exception) Deserializes xml markup from file into an FdoLongTransactionList object Declaration public static bool LoadFromFile(string fileName, out FdoLongTransactionList obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize FdoLongTransactionList obj Output FdoLongTransactionList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current FdoLongTransactionList object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current FdoLongTransactionList object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Implements ILongTransactionList"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.FdoLongTransactionListLongTransaction.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.FdoLongTransactionListLongTransaction.html",
    "title": "Class FdoLongTransactionListLongTransaction | MapGuide Maestro",
    "keywords": "Class FdoLongTransactionListLongTransaction A FDO long transaction Inheritance System.Object FdoLongTransactionListLongTransaction Implements ILongTransaction Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class FdoLongTransactionListLongTransaction : ComponentModel.INotifyPropertyChanged, ILongTransaction Properties CreationDate Declaration public string CreationDate { get; set; } Property Value Type Description System.String Description Declaration public string Description { get; set; } Property Value Type Description System.String IsActive Declaration public bool IsActive { get; set; } Property Value Type Description System.Boolean IsFrozen Declaration public bool IsFrozen { get; set; } Property Value Type Description System.Boolean Name Declaration public string Name { get; set; } Property Value Type Description System.String Owner Declaration public string Owner { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this FdoLongTransactionListLongTransaction object Declaration public virtual FdoLongTransactionListLongTransaction Clone() Returns Type Description FdoLongTransactionListLongTransaction Deserialize(String) Declaration public static FdoLongTransactionListLongTransaction Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description FdoLongTransactionListLongTransaction Deserialize(String, out FdoLongTransactionListLongTransaction) Declaration public static bool Deserialize(string xml, out FdoLongTransactionListLongTransaction obj) Parameters Type Name Description System.String xml FdoLongTransactionListLongTransaction obj Returns Type Description System.Boolean Deserialize(String, out FdoLongTransactionListLongTransaction, out Exception) Deserializes workflow markup into an FdoLongTransactionListLongTransaction object Declaration public static bool Deserialize(string xml, out FdoLongTransactionListLongTransaction obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize FdoLongTransactionListLongTransaction obj Output FdoLongTransactionListLongTransaction object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static FdoLongTransactionListLongTransaction LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description FdoLongTransactionListLongTransaction LoadFromFile(String, out FdoLongTransactionListLongTransaction) Declaration public static bool LoadFromFile(string fileName, out FdoLongTransactionListLongTransaction obj) Parameters Type Name Description System.String fileName FdoLongTransactionListLongTransaction obj Returns Type Description System.Boolean LoadFromFile(String, out FdoLongTransactionListLongTransaction, out Exception) Deserializes xml markup from file into an FdoLongTransactionListLongTransaction object Declaration public static bool LoadFromFile(string fileName, out FdoLongTransactionListLongTransaction obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize FdoLongTransactionListLongTransaction obj Output FdoLongTransactionListLongTransaction object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current FdoLongTransactionListLongTransaction object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current FdoLongTransactionListLongTransaction object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Implements ILongTransaction"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.FdoSpatialContextList.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.FdoSpatialContextList.html",
    "title": "Class FdoSpatialContextList | MapGuide Maestro",
    "keywords": "Class FdoSpatialContextList Inheritance System.Object FdoSpatialContextList Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class FdoSpatialContextList : ComponentModel.INotifyPropertyChanged Properties ProviderName Declaration public string ProviderName { get; set; } Property Value Type Description System.String SpatialContext Declaration public BindingList<FdoSpatialContextListSpatialContext> SpatialContext { get; set; } Property Value Type Description BindingList < FdoSpatialContextListSpatialContext > Methods Clone() Create a clone of this FdoSpatialContextList object Declaration public virtual FdoSpatialContextList Clone() Returns Type Description FdoSpatialContextList Deserialize(String) Declaration public static FdoSpatialContextList Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description FdoSpatialContextList Deserialize(String, out FdoSpatialContextList) Declaration public static bool Deserialize(string xml, out FdoSpatialContextList obj) Parameters Type Name Description System.String xml FdoSpatialContextList obj Returns Type Description System.Boolean Deserialize(String, out FdoSpatialContextList, out Exception) Deserializes workflow markup into an FdoSpatialContextList object Declaration public static bool Deserialize(string xml, out FdoSpatialContextList obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize FdoSpatialContextList obj Output FdoSpatialContextList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static FdoSpatialContextList LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description FdoSpatialContextList LoadFromFile(String, out FdoSpatialContextList) Declaration public static bool LoadFromFile(string fileName, out FdoSpatialContextList obj) Parameters Type Name Description System.String fileName FdoSpatialContextList obj Returns Type Description System.Boolean LoadFromFile(String, out FdoSpatialContextList, out Exception) Deserializes xml markup from file into an FdoSpatialContextList object Declaration public static bool LoadFromFile(string fileName, out FdoSpatialContextList obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize FdoSpatialContextList obj Output FdoSpatialContextList object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current FdoSpatialContextList object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current FdoSpatialContextList object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.FdoSpatialContextListSpatialContext.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.FdoSpatialContextListSpatialContext.html",
    "title": "Class FdoSpatialContextListSpatialContext | MapGuide Maestro",
    "keywords": "Class FdoSpatialContextListSpatialContext An FDO spatial context definition Inheritance System.Object FdoSpatialContextListSpatialContext Implements IFdoSpatialContext IFdoSerializable Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class FdoSpatialContextListSpatialContext : ComponentModel.INotifyPropertyChanged, IFdoSpatialContext, IFdoSerializable Constructors FdoSpatialContextListSpatialContext() Declaration public FdoSpatialContextListSpatialContext() Properties CoordinateSystemName Declaration public string CoordinateSystemName { get; set; } Property Value Type Description System.String CoordinateSystemWkt Declaration public string CoordinateSystemWkt { get; set; } Property Value Type Description System.String Description Declaration public string Description { get; set; } Property Value Type Description System.String Extent This would return AWKT representing extents e.g. polygon, polyline or circle etc. Declaration public FdoSpatialContextListSpatialContextExtent Extent { get; set; } Property Value Type Description FdoSpatialContextListSpatialContextExtent ExtentType Declaration public FdoSpatialContextListSpatialContextExtentType ExtentType { get; set; } Property Value Type Description FdoSpatialContextListSpatialContextExtentType IsActive Declaration public bool IsActive { get; set; } Property Value Type Description System.Boolean Name Declaration public string Name { get; set; } Property Value Type Description System.String XYTolerance Declaration public double XYTolerance { get; set; } Property Value Type Description System.Double ZTolerance Declaration public double ZTolerance { get; set; } Property Value Type Description System.Double Methods Clone() Create a clone of this FdoSpatialContextListSpatialContext object Declaration public virtual FdoSpatialContextListSpatialContext Clone() Returns Type Description FdoSpatialContextListSpatialContext Deserialize(String) Declaration public static FdoSpatialContextListSpatialContext Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description FdoSpatialContextListSpatialContext Deserialize(String, out FdoSpatialContextListSpatialContext) Declaration public static bool Deserialize(string xml, out FdoSpatialContextListSpatialContext obj) Parameters Type Name Description System.String xml FdoSpatialContextListSpatialContext obj Returns Type Description System.Boolean Deserialize(String, out FdoSpatialContextListSpatialContext, out Exception) Deserializes workflow markup into an FdoSpatialContextListSpatialContext object Declaration public static bool Deserialize(string xml, out FdoSpatialContextListSpatialContext obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize FdoSpatialContextListSpatialContext obj Output FdoSpatialContextListSpatialContext object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static FdoSpatialContextListSpatialContext LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description FdoSpatialContextListSpatialContext LoadFromFile(String, out FdoSpatialContextListSpatialContext) Declaration public static bool LoadFromFile(string fileName, out FdoSpatialContextListSpatialContext obj) Parameters Type Name Description System.String fileName FdoSpatialContextListSpatialContext obj Returns Type Description System.Boolean LoadFromFile(String, out FdoSpatialContextListSpatialContext, out Exception) Deserializes xml markup from file into an FdoSpatialContextListSpatialContext object Declaration public static bool LoadFromFile(string fileName, out FdoSpatialContextListSpatialContext obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize FdoSpatialContextListSpatialContext obj Output FdoSpatialContextListSpatialContext object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info ReadXml(XmlNode, XmlNamespaceManager) Initialize from the given XML node Declaration public void ReadXml(XmlNode node, XmlNamespaceManager mgr) Parameters Type Name Description System.Xml.XmlNode node System.Xml.XmlNamespaceManager mgr SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current FdoSpatialContextListSpatialContext object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current FdoSpatialContextListSpatialContext object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value WriteXml(XmlDocument, XmlNode) Writes to XML Declaration public void WriteXml(XmlDocument doc, XmlNode currentNode) Parameters Type Name Description System.Xml.XmlDocument doc System.Xml.XmlNode currentNode Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Explicit Interface Implementations IFdoSpatialContext.Extent Declaration IEnvelope IFdoSpatialContext.Extent { get; set; } Returns Type Description IEnvelope Implements IFdoSpatialContext IFdoSerializable"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.FdoSpatialContextListSpatialContextExtent.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.FdoSpatialContextListSpatialContextExtent.html",
    "title": "Class FdoSpatialContextListSpatialContextExtent | MapGuide Maestro",
    "keywords": "Class FdoSpatialContextListSpatialContextExtent This would return AWKT representing extents e.g. polygon, polyline or circle etc. Inheritance System.Object FdoSpatialContextListSpatialContextExtent Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class FdoSpatialContextListSpatialContextExtent : ComponentModel.INotifyPropertyChanged Properties LowerLeftCoordinate Declaration public FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate LowerLeftCoordinate { get; set; } Property Value Type Description FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate UpperRightCoordinate Declaration public FdoSpatialContextListSpatialContextExtentUpperRightCoordinate UpperRightCoordinate { get; set; } Property Value Type Description FdoSpatialContextListSpatialContextExtentUpperRightCoordinate Methods Clone() Create a clone of this FdoSpatialContextListSpatialContextExtent object Declaration public virtual FdoSpatialContextListSpatialContextExtent Clone() Returns Type Description FdoSpatialContextListSpatialContextExtent Deserialize(String) Declaration public static FdoSpatialContextListSpatialContextExtent Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description FdoSpatialContextListSpatialContextExtent Deserialize(String, out FdoSpatialContextListSpatialContextExtent) Declaration public static bool Deserialize(string xml, out FdoSpatialContextListSpatialContextExtent obj) Parameters Type Name Description System.String xml FdoSpatialContextListSpatialContextExtent obj Returns Type Description System.Boolean Deserialize(String, out FdoSpatialContextListSpatialContextExtent, out Exception) Deserializes workflow markup into an FdoSpatialContextListSpatialContextExtent object Declaration public static bool Deserialize(string xml, out FdoSpatialContextListSpatialContextExtent obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize FdoSpatialContextListSpatialContextExtent obj Output FdoSpatialContextListSpatialContextExtent object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static FdoSpatialContextListSpatialContextExtent LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description FdoSpatialContextListSpatialContextExtent LoadFromFile(String, out FdoSpatialContextListSpatialContextExtent) Declaration public static bool LoadFromFile(string fileName, out FdoSpatialContextListSpatialContextExtent obj) Parameters Type Name Description System.String fileName FdoSpatialContextListSpatialContextExtent obj Returns Type Description System.Boolean LoadFromFile(String, out FdoSpatialContextListSpatialContextExtent, out Exception) Deserializes xml markup from file into an FdoSpatialContextListSpatialContextExtent object Declaration public static bool LoadFromFile(string fileName, out FdoSpatialContextListSpatialContextExtent obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize FdoSpatialContextListSpatialContextExtent obj Output FdoSpatialContextListSpatialContextExtent object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current FdoSpatialContextListSpatialContextExtent object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current FdoSpatialContextListSpatialContextExtent object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate.html",
    "title": "Class FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate | MapGuide Maestro",
    "keywords": "Class FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate Inheritance System.Object FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public class FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate : ComponentModel.INotifyPropertyChanged Properties M Declaration public string M { get; set; } Property Value Type Description System.String X Declaration public string X { get; set; } Property Value Type Description System.String Y Declaration public string Y { get; set; } Property Value Type Description System.String Z Declaration public string Z { get; set; } Property Value Type Description System.String Methods Clone() Create a clone of this FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate object Declaration public virtual FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate Clone() Returns Type Description FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate Deserialize(String) Declaration public static FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate Deserialize(string xml) Parameters Type Name Description System.String xml Returns Type Description FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate Deserialize(String, out FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate) Declaration public static bool Deserialize(string xml, out FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate obj) Parameters Type Name Description System.String xml FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate obj Returns Type Description System.Boolean Deserialize(String, out FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate, out Exception) Deserializes workflow markup into an FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate object Declaration public static bool Deserialize(string xml, out FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate obj, out Exception exception) Parameters Type Name Description System.String xml string workflow markup to deserialize FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate obj Output FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false LoadFromFile(String) Declaration public static FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate LoadFromFile(string fileName) Parameters Type Name Description System.String fileName Returns Type Description FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate LoadFromFile(String, out FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate) Declaration public static bool LoadFromFile(string fileName, out FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate obj) Parameters Type Name Description System.String fileName FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate obj Returns Type Description System.Boolean LoadFromFile(String, out FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate, out Exception) Deserializes xml markup from file into an FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate object Declaration public static bool LoadFromFile(string fileName, out FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate obj, out Exception exception) Parameters Type Name Description System.String fileName string xml file to load and deserialize FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate obj Output FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate object System.Exception exception output Exception value if deserialize failed Returns Type Description System.Boolean true if this XmlSerializer can deserialize the object; otherwise, false OnPropertyChanged(String) Declaration public virtual void OnPropertyChanged(string info) Parameters Type Name Description System.String info SaveToFile(String) Declaration public virtual void SaveToFile(string fileName) Parameters Type Name Description System.String fileName SaveToFile(String, out Exception) Serializes current FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate object into file Declaration public virtual bool SaveToFile(string fileName, out Exception exception) Parameters Type Name Description System.String fileName full path of outupt xml file System.Exception exception output Exception value if failed Returns Type Description System.Boolean true if can serialize and save into file; otherwise, false Serialize() Serializes current FdoSpatialContextListSpatialContextExtentLowerLeftCoordinate object into an XML document Declaration public virtual string Serialize() Returns Type Description System.String string XML value Events PropertyChanged Declaration public event ComponentModel.PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.Common.FdoSpatialContextListSpatialContextExtentType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.Common.FdoSpatialContextListSpatialContextExtentType.html",
    "title": "Enum FdoSpatialContextListSpatialContextExtentType | MapGuide Maestro",
    "keywords": "Enum FdoSpatialContextListSpatialContextExtentType Namespace : OSGeo.MapGuide.ObjectModels.Common Assembly : cs.temp.dll.dll Syntax [Serializable] public enum FdoSpatialContextListSpatialContextExtentType Fields Name Description Dynamic Static"
  },
  "api/OSGeo.MapGuide.ObjectModels.FeatureSource.ISpatialContextInfo.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.FeatureSource.ISpatialContextInfo.html",
    "title": "Interface ISpatialContextInfo | MapGuide Maestro",
    "keywords": "Interface ISpatialContextInfo Represents a spatial context override Namespace : OSGeo.MapGuide.ObjectModels.FeatureSource Assembly : cs.temp.dll.dll Syntax public interface ISpatialContextInfo Properties CoordinateSystem Gets or sets the coordinate system. Declaration string CoordinateSystem { get; set; } Property Value Type Description System.String The coordinate system. Name Gets or sets the name. Declaration string Name { get; set; } Property Value Type Description System.String The name."
  },
  "api/OSGeo.MapGuide.ObjectModels.FeatureSource.RelateTypeEnum.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.FeatureSource.RelateTypeEnum.html",
    "title": "Enum RelateTypeEnum | MapGuide Maestro",
    "keywords": "Enum RelateTypeEnum Defines the type of joins Namespace : OSGeo.MapGuide.ObjectModels.FeatureSource Assembly : cs.temp.dll.dll Syntax [Serializable] public enum RelateTypeEnum Fields Name Description Association Inner LeftOuter RightOuter"
  },
  "api/OSGeo.MapGuide.ObjectModels.FeatureSource.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.FeatureSource.html",
    "title": "Namespace OSGeo.MapGuide.ObjectModels.FeatureSource | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.ObjectModels.FeatureSource Classes ExtensionMethods Extension methods FeatureSourceCredentialExtensions Extension methods for feature sources FeatureSourceExtensions Extension method class Interfaces IAttributeRelation Represents an attribute join ICalculatedProperty Represents a FDO calculated property IFeatureSource Represents an FDO feature source IFeatureSourceExtension Represents an extended feature class IRelateProperty Represents a property pair in an attribute join ISpatialContextInfo Represents a spatial context override Enums RelateTypeEnum Defines the type of joins"
  },
  "api/OSGeo.MapGuide.ObjectModels.FontInfo.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.FontInfo.html",
    "title": "Struct FontInfo | MapGuide Maestro",
    "keywords": "Struct FontInfo Font information Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : OSGeo.MapGuide.ObjectModels Assembly : cs.temp.dll.dll Syntax public struct FontInfo Properties Bold Enable/disable bold Declaration public bool Bold { get; set; } Property Value Type Description System.Boolean Italic Enable/disable italics Declaration public bool Italic { get; set; } Property Value Type Description System.Boolean Name The name of the font Declaration public string Name { get; set; } Property Value Type Description System.String Underline Enable/disable underline Declaration public bool Underline { get; set; } Property Value Type Description System.Boolean"
  },
  "api/OSGeo.MapGuide.ObjectModels.IO.ReadOnlyRewindableStream.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.IO.ReadOnlyRewindableStream.html",
    "title": "Class ReadOnlyRewindableStream | MapGuide Maestro",
    "keywords": "Class ReadOnlyRewindableStream A read-only, rewindable stream Inheritance System.Object ReadOnlyRewindableStream Namespace : OSGeo.MapGuide.ObjectModels.IO Assembly : cs.temp.dll.dll Syntax public abstract class ReadOnlyRewindableStream : Stream Properties CanRead Gets whether this stream supports reading Declaration public override bool CanRead { get; } Property Value Type Description System.Boolean CanRewind Gets whether this stream is rewindable. If not, calls to Rewind() throw a System.InvalidOperationException Declaration public abstract bool CanRewind { get; } Property Value Type Description System.Boolean CanSeek Gets whether this stream supports seeking Declaration public override bool CanSeek { get; } Property Value Type Description System.Boolean CanWrite Gets whether this stream supports writing Declaration public override bool CanWrite { get; } Property Value Type Description System.Boolean Position Gets or sets the position (not implemented) Declaration public override long Position { get; set; } Property Value Type Description System.Int64 Methods Rewind() Resets the internal position of the stream Declaration public abstract void Rewind() Seek(Int64, SeekOrigin) Seeks to the specified offset in the stream (not implemented) Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name Description System.Int64 offset SeekOrigin origin Returns Type Description System.Int64 SetLength(Int64) Sets the length of the stream (not implemented) Declaration public override void SetLength(long value) Parameters Type Name Description System.Int64 value Write(Byte[], Int32, Int32) Writes the specified buffer into the stream (not implemented) Declaration public override void Write(byte[] buffer, int offset, int count) Parameters Type Name Description System.Byte [] buffer System.Int32 offset System.Int32 count"
  },
  "api/OSGeo.MapGuide.ObjectModels.IO.Utf8XmlWriter.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.IO.Utf8XmlWriter.html",
    "title": "Class Utf8XmlWriter | MapGuide Maestro",
    "keywords": "Class Utf8XmlWriter Overrides the default XmlWriter, to ensure that the Xml is Utf8 and with whitespaces, as the MapGuide server requires Utf8 Inheritance System.Object Utf8XmlWriter Namespace : OSGeo.MapGuide.ObjectModels.IO Assembly : cs.temp.dll.dll Syntax public class Utf8XmlWriter : XmlTextWriter Constructors Utf8XmlWriter(Stream) Initializes a new instance of the Utf8XmlWriter class. Declaration public Utf8XmlWriter(Stream s) Parameters Type Name Description System.IO.Stream s The s. Utf8XmlWriter(TextWriter) Initializes a new instance of the Utf8XmlWriter class. Declaration public Utf8XmlWriter(TextWriter w) Parameters Type Name Description System.IO.TextWriter w The TextWriter to write to. It is assumed that the TextWriter is already set to the correct encoding. Methods WriteStartDocument() Writes the XML declaration with the version \"1.0\". Declaration public override void WriteStartDocument() Exceptions Type Condition System.InvalidOperationException This is not the first write method called after the constructor. WriteStartDocument(Boolean) Writes the XML declaration with the version \"1.0\" and the standalone attribute. Declaration public override void WriteStartDocument(bool standalone) Parameters Type Name Description System.Boolean standalone If true, it writes \"standalone=yes\"; if false, it writes \"standalone=no\". Exceptions Type Condition System.InvalidOperationException This is not the first write method called after the constructor."
  },
  "api/OSGeo.MapGuide.ObjectModels.IO.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.IO.html",
    "title": "Namespace OSGeo.MapGuide.ObjectModels.IO | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.ObjectModels.IO Classes ReadOnlyRewindableStream A read-only, rewindable stream Utf8XmlWriter Overrides the default XmlWriter, to ensure that the Xml is Utf8 and with whitespaces, as the MapGuide server requires Utf8"
  },
  "api/OSGeo.MapGuide.ObjectModels.IResource.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.IResource.html",
    "title": "Interface IResource | MapGuide Maestro",
    "keywords": "Interface IResource Represents a MapGuide Resource Inherited Members IVersionedEntity.ResourceVersion Namespace : OSGeo.MapGuide.ObjectModels Assembly : cs.temp.dll.dll Syntax public interface IResource : IVersionedEntity, ICloneable, INotifyPropertyChanged Properties IsStronglyTyped Indicates whether this resource is strongly typed. If false it means the implementer is a UntypedResource object. This usually means that the matching serializer could not be found because the resource version is unrecognised. Declaration bool IsStronglyTyped { get; } Property Value Type Description System.Boolean ResourceID Gets or sets the resource ID. Declaration string ResourceID { get; set; } Property Value Type Description System.String The resource ID. ResourceType Gets the type of the resource. Declaration string ResourceType { get; } Property Value Type Description System.String The type of the resource. ValidatingSchema Gets the validating schema. Declaration string ValidatingSchema { get; } Property Value Type Description System.String The validating schema. Methods Serialize() Serializes this instance to XML and returns the XML content. It is not recommended to call this method directly instead use OSGeo.MapGuide.ObjectModels.ResourceTypeRegistry.Serialize as that will invoke any pre-serialization hooks that may have been set up for this particular resource. Declaration string Serialize() Returns Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IGridScaleRange.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IGridScaleRange.html",
    "title": "Interface IGridScaleRange | MapGuide Maestro",
    "keywords": "Interface IGridScaleRange A grid scale range Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IGridScaleRange Properties ColorStyle Gets or sets the color style. Declaration IGridColorStyle ColorStyle { get; set; } Property Value Type Description IGridColorStyle The color style. MaxScale Gets or sets the zoomed out part of the scale range. Defaults to the application's maximum value if not specified. Exclusive Declaration double ? MaxScale { get; set; } Property Value Type Description System.Nullable < System.Double > MinScale Gets or sets the zoomed in part of the scale range. Defaults to 0 if not specified. Inclusive Declaration double ? MinScale { get; set; } Property Value Type Description System.Nullable < System.Double > RebuildFactor When the user has zoomed in by this amount, a request for more detailed raster data is made Declaration double RebuildFactor { get; set; } Property Value Type Description System.Double SurfaceStyle Defines the height field of the grid Declaration IGridSurfaceStyle SurfaceStyle { get; set; } Property Value Type Description IGridSurfaceStyle Methods CreateColorStyle() Creates a default grid color style Declaration IGridColorStyle CreateColorStyle() Returns Type Description IGridColorStyle CreateSurfaceStyle() Creates a default grid surface style Declaration IGridSurfaceStyle CreateSurfaceStyle() Returns Type Description IGridSurfaceStyle"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IGridSurfaceStyle.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IGridSurfaceStyle.html",
    "title": "Interface IGridSurfaceStyle | MapGuide Maestro",
    "keywords": "Interface IGridSurfaceStyle A grid surface style Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IGridSurfaceStyle Properties Band Gets or sets the band to use for 3D data Declaration string Band { get; set; } Property Value Type Description System.String DefaultColor Gets or sets the default color to use if no ColorStyle is defined at a pixel Declaration string DefaultColor { get; set; } Property Value Type Description System.String ScaleFactor Gets or sets the value that determines how to scale the inputs into a consistent elevation. Defaults to 1 if not specified Declaration double ScaleFactor { get; set; } Property Value Type Description System.Double ZeroValue Gets or sets the value that determines which input value is mapped to zero elevation. Defaults to 0 if not specified Declaration double ZeroValue { get; set; } Property Value Type Description System.Double"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IHillShade.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IHillShade.html",
    "title": "Interface IHillShade | MapGuide Maestro",
    "keywords": "Interface IHillShade Specifies how to shade given a band and a light source Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IHillShade Properties Altitude Gets or sets the altitude of the sun in degrees Declaration double Altitude { get; set; } Property Value Type Description System.Double Azimuth Gets or sets the azimuth of the sun in degrees Declaration double Azimuth { get; set; } Property Value Type Description System.Double Band Gets or sets the name of the band used for the computation Declaration string Band { get; set; } Property Value Type Description System.String ScaleFactor Gets or sets the scale factor applied to the band prior to computing hillshade. Defaults to 1 if not specified Declaration double ScaleFactor { get; set; } Property Value Type Description System.Double"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IImageSymbol.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IImageSymbol.html",
    "title": "Interface IImageSymbol | MapGuide Maestro",
    "keywords": "Interface IImageSymbol Symbols that are comprised of a raster. Inherited Members ISymbol.Type ISymbol.Unit ISymbol.SizeContext ISymbol.SizeX ISymbol.SizeY ISymbol.Rotation ISymbol.MaintainAspect ISymbol.InsertionPointX ISymbol.InsertionPointY ICloneableLayerElement<IImageSymbol>.Clone() Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IImageSymbol : ISymbol, ICloneableLayerElement<IImageSymbol> Properties Image Gets or sets the image. Declaration IBaseImageSymbol Image { get; set; } Property Value Type Description IBaseImageSymbol The image."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IInlineImageSymbol.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IInlineImageSymbol.html",
    "title": "Interface IInlineImageSymbol | MapGuide Maestro",
    "keywords": "Interface IInlineImageSymbol Represents an inline symbol image Inherited Members IBaseImageSymbol.Type ICloneableLayerElement<IInlineImageSymbol>.Clone() Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IInlineImageSymbol : IBaseImageSymbol, ICloneableLayerElement<IInlineImageSymbol> Properties Content Gets or sets the BinHex data for image Declaration byte[] Content { get; set; } Property Value Type Description System.Byte []"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ILayerDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ILayerDefinition.html",
    "title": "Interface ILayerDefinition | MapGuide Maestro",
    "keywords": "Interface ILayerDefinition Top-level interface of the layer definition Inherited Members IResource.ValidatingSchema IResource.ResourceID IResource.ResourceType IResource.Serialize() IResource.IsStronglyTyped IVersionedEntity.ResourceVersion ILayerElementFactory.CreatePair(String, String) ILayerElementFactory.CreateDefaultAreaRule() ILayerElementFactory.CreateDefaultAreaStyle() ILayerElementFactory.CreateDefaultFill() ILayerElementFactory.CreateDefaultLineStyle() ILayerElementFactory.CreateDefaultMarkSymbol() ILayerElementFactory.CreateDefaultPointStyle() ILayerElementFactory.CreateDefaultPointSymbolization2D() ILayerElementFactory.CreateDefaultStroke() ILayerElementFactory.CreateDefaultTextSymbol() ILayerElementFactory.CreateDefaultAdvancedPlacement(Double) ILayerElementFactory.CreateFill(String, Drawing.Color, Drawing.Color) ILayerElementFactory.CreateDefaultLineRule() ILayerElementFactory.CreateDefaultPointRule() ILayerElementFactory.CreateStroke(Drawing.Color) ILayerElementFactory.CreateVectorScaleRange() ILayerElementFactory.CreateDefaultFontSymbol() ILayerElementFactory.CreateDefaultW2DSymbol(String, String) ILayerElementFactory.CreateDefaultCompositeRule() ILayerElementFactory.CreateDefaultCompositeStyle() ILayerElementFactory.CreateUrlData() ILayerElementFactory.CreateDefaultAreaSymbolizationFill() ILayerElementFactory.CloneCompositeSymbolization(ICompositeSymbolization) Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface ILayerDefinition : IResource, IVersionedEntity, ICloneable, INotifyPropertyChanged, ILayerElementFactory Properties SubLayer Gets the sub layer. Declaration ISubLayerDefinition SubLayer { get; } Property Value Type Description ISubLayerDefinition The sub layer."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ILayerElementFactory.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ILayerElementFactory.html",
    "title": "Interface ILayerElementFactory | MapGuide Maestro",
    "keywords": "Interface ILayerElementFactory Factory interface to assist in creating common layer definition elements Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface ILayerElementFactory Methods CloneCompositeSymbolization(ICompositeSymbolization) Clones the given symbolization Declaration ICompositeSymbolization CloneCompositeSymbolization(ICompositeSymbolization sym) Parameters Type Name Description ICompositeSymbolization sym Returns Type Description ICompositeSymbolization CreateDefaultAdvancedPlacement(Double) Creates a default advanced placement setting Declaration IAdvancedPlacement CreateDefaultAdvancedPlacement(double scaleLimit) Parameters Type Name Description System.Double scaleLimit Returns Type Description IAdvancedPlacement CreateDefaultAreaRule() Creates a default area rule (monochromatic) Declaration IAreaRule CreateDefaultAreaRule() Returns Type Description IAreaRule CreateDefaultAreaStyle() Creates a default area style (monochromatic) Declaration IAreaVectorStyle CreateDefaultAreaStyle() Returns Type Description IAreaVectorStyle CreateDefaultAreaSymbolizationFill() Creates a default AreaSymbolizationFill element Declaration IAreaSymbolizationFill CreateDefaultAreaSymbolizationFill() Returns Type Description IAreaSymbolizationFill CreateDefaultCompositeRule() Creates the default composite rule. Declaration ICompositeRule CreateDefaultCompositeRule() Returns Type Description ICompositeRule Remarks This method does not create any composite symbolizations. This is up for the calling method to provide CreateDefaultCompositeStyle() Creates a default composite style. Declaration ICompositeTypeStyle CreateDefaultCompositeStyle() Returns Type Description ICompositeTypeStyle Remarks This method does not create any composite symbolizations. This is up for the calling method to provide CreateDefaultFill() Creates a default fill (monochromatic) Declaration IFill CreateDefaultFill() Returns Type Description IFill CreateDefaultFontSymbol() Creates a font symbol Declaration IFontSymbol CreateDefaultFontSymbol() Returns Type Description IFontSymbol CreateDefaultLineRule() Creates a default line rule Declaration ILineRule CreateDefaultLineRule() Returns Type Description ILineRule CreateDefaultLineStyle() Creates a default line style (monochromatic) Declaration ILineVectorStyle CreateDefaultLineStyle() Returns Type Description ILineVectorStyle CreateDefaultMarkSymbol() Creates a default mark symbol Declaration IMarkSymbol CreateDefaultMarkSymbol() Returns Type Description IMarkSymbol CreateDefaultPointRule() Creates a default point rule Declaration IPointRule CreateDefaultPointRule() Returns Type Description IPointRule CreateDefaultPointStyle() Creates a default point style Declaration IPointVectorStyle CreateDefaultPointStyle() Returns Type Description IPointVectorStyle CreateDefaultPointSymbolization2D() Creates a default 2D point symbolization Declaration IPointSymbolization2D CreateDefaultPointSymbolization2D() Returns Type Description IPointSymbolization2D CreateDefaultStroke() Creates a default stroke Declaration IStroke CreateDefaultStroke() Returns Type Description IStroke CreateDefaultTextSymbol() Creates a default text symbol Declaration ITextSymbol CreateDefaultTextSymbol() Returns Type Description ITextSymbol CreateDefaultW2DSymbol(String, String) Creates a W2D symbol from a Symbol Library Declaration IW2DSymbol CreateDefaultW2DSymbol(string symbolLibrary, string symbolName) Parameters Type Name Description System.String symbolLibrary System.String symbolName Returns Type Description IW2DSymbol CreateFill(String, Drawing.Color, Drawing.Color) Creates a fill Declaration IFill CreateFill(string pattern, Drawing.Color background, Drawing.Color foreground) Parameters Type Name Description System.String pattern System.Drawing.Color background System.Drawing.Color foreground Returns Type Description IFill CreatePair(String, String) Creates a name-value pair Declaration INameStringPair CreatePair(string name, string value) Parameters Type Name Description System.String name System.String value Returns Type Description INameStringPair CreateStroke(Drawing.Color) Creates a stroke of the specified color Declaration IStroke CreateStroke(Drawing.Color color) Parameters Type Name Description System.Drawing.Color color Returns Type Description IStroke CreateUrlData() Creates tehe default URL data Declaration IUrlData CreateUrlData() Returns Type Description IUrlData CreateVectorScaleRange() Creates a vector scale range Declaration IVectorScaleRange CreateVectorScaleRange() Returns Type Description IVectorScaleRange"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ILineRule.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.ILineRule.html",
    "title": "Interface ILineRule | MapGuide Maestro",
    "keywords": "Interface ILineRule A style rule for the line geometry type Inherited Members IBasicVectorRule.Label IVectorRule.LegendLabel IVectorRule.Filter Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface ILineRule : IBasicVectorRule, IVectorRule Properties StrokeCount Gets the number of strokes in this line rule Declaration int StrokeCount { get; } Property Value Type Description System.Int32 Strokes Gets the symbolization settings for this line rule Declaration IEnumerable<IStroke> Strokes { get; } Property Value Type Description IEnumerable < IStroke > Methods AddStroke(IStroke) Adds a stroke to this rule Declaration void AddStroke(IStroke stroke) Parameters Type Name Description IStroke stroke RemoveStroke(IStroke) Removes a stroke from this rule Declaration void RemoveStroke(IStroke stroke) Parameters Type Name Description IStroke stroke SetStrokes(IEnumerable<IStroke>) Removes any existing strokes and adds the specified list of strokes Declaration void SetStrokes(IEnumerable<IStroke> strokes) Parameters Type Name Description IEnumerable < IStroke > strokes"
  },
  "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.ISdfLoadProcedure.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.ISdfLoadProcedure.html",
    "title": "Interface ISdfLoadProcedure | MapGuide Maestro",
    "keywords": "Interface ISdfLoadProcedure A SDF load procedure. Execution is supported with limitations Inherited Members IBaseLoadProcedure.Type IBaseLoadProcedure.SourceFile IBaseLoadProcedure.AddFile(String) IBaseLoadProcedure.RemoveFile(String) IBaseLoadProcedure.RootPath IBaseLoadProcedure.CoordinateSystem IBaseLoadProcedure.GenerateSpatialDataSources IBaseLoadProcedure.SpatialDataSourcesPath IBaseLoadProcedure.SpatialDataSourcesFolder IBaseLoadProcedure.GenerateLayers IBaseLoadProcedure.LayersPath IBaseLoadProcedure.LayersFolder IBaseLoadProcedure.GenerateMaps IBaseLoadProcedure.MapsPath IBaseLoadProcedure.MapsFolder IBaseLoadProcedure.GenerateSymbolLibraries IBaseLoadProcedure.SymbolLibrariesPath IBaseLoadProcedure.SymbolLibrariesFolder IBaseLoadProcedure.ResourceId Namespace : OSGeo.MapGuide.ObjectModels.LoadProcedure Assembly : cs.temp.dll.dll Syntax public interface ISdfLoadProcedure : IBaseLoadProcedure, INotifyPropertyChanged Remarks The SDF Load Procedure has the following limitations when executed by Maestro The input SDF files must be SDF3 files. Loading of SDF2 files is not supported Properties Generalization Not supported by Maestro Declaration double Generalization { get; set; } Property Value Type Description System.Double SdfKeyTreatment Not supported by Maestro Declaration SdfKeyTreatmentType SdfKeyTreatment { get; set; } Property Value Type Description SdfKeyTreatmentType"
  },
  "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.IShpLoadProcedure.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.IShpLoadProcedure.html",
    "title": "Interface IShpLoadProcedure | MapGuide Maestro",
    "keywords": "Interface IShpLoadProcedure A SHP load procedure. Execution is supported with limitations Inherited Members IBaseLoadProcedure.Type IBaseLoadProcedure.SourceFile IBaseLoadProcedure.AddFile(String) IBaseLoadProcedure.RemoveFile(String) IBaseLoadProcedure.RootPath IBaseLoadProcedure.CoordinateSystem IBaseLoadProcedure.GenerateSpatialDataSources IBaseLoadProcedure.SpatialDataSourcesPath IBaseLoadProcedure.SpatialDataSourcesFolder IBaseLoadProcedure.GenerateLayers IBaseLoadProcedure.LayersPath IBaseLoadProcedure.LayersFolder IBaseLoadProcedure.GenerateMaps IBaseLoadProcedure.MapsPath IBaseLoadProcedure.MapsFolder IBaseLoadProcedure.GenerateSymbolLibraries IBaseLoadProcedure.SymbolLibrariesPath IBaseLoadProcedure.SymbolLibrariesFolder IBaseLoadProcedure.ResourceId Namespace : OSGeo.MapGuide.ObjectModels.LoadProcedure Assembly : cs.temp.dll.dll Syntax public interface IShpLoadProcedure : IBaseLoadProcedure, INotifyPropertyChanged Remarks The SHP Load Procedure has the following limitations when executed by Maestro Generalization is not supported Conversion to SDF is not supported Properties ConvertToSdf Not supported by Maestro Declaration bool ConvertToSdf { get; set; } Property Value Type Description System.Boolean Generalization Not supported by Maestro Declaration double Generalization { get; set; } Property Value Type Description System.Double"
  },
  "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.ISqliteLoadProcedure.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.ISqliteLoadProcedure.html",
    "title": "Interface ISqliteLoadProcedure | MapGuide Maestro",
    "keywords": "Interface ISqliteLoadProcedure A SQLite load procedure. Execution is supported with limitations Inherited Members IBaseLoadProcedure.Type IBaseLoadProcedure.SourceFile IBaseLoadProcedure.AddFile(String) IBaseLoadProcedure.RemoveFile(String) IBaseLoadProcedure.RootPath IBaseLoadProcedure.CoordinateSystem IBaseLoadProcedure.GenerateSpatialDataSources IBaseLoadProcedure.SpatialDataSourcesPath IBaseLoadProcedure.SpatialDataSourcesFolder IBaseLoadProcedure.GenerateLayers IBaseLoadProcedure.LayersPath IBaseLoadProcedure.LayersFolder IBaseLoadProcedure.GenerateMaps IBaseLoadProcedure.MapsPath IBaseLoadProcedure.MapsFolder IBaseLoadProcedure.GenerateSymbolLibraries IBaseLoadProcedure.SymbolLibrariesPath IBaseLoadProcedure.SymbolLibrariesFolder IBaseLoadProcedure.ResourceId Namespace : OSGeo.MapGuide.ObjectModels.LoadProcedure Assembly : cs.temp.dll.dll Syntax public interface ISqliteLoadProcedure : IBaseLoadProcedure, INotifyPropertyChanged Remarks SQLite load procedures can only be saved to a server whose site version is 2.2 or higher The SQLite Load Procedure has the following limitations when executed by Maestro Generalization is not supported Properties Generalization Not supported by Maestro Declaration double Generalization { get; set; } Property Value Type Description System.Double"
  },
  "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.LoadType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.LoadType.html",
    "title": "Enum LoadType | MapGuide Maestro",
    "keywords": "Enum LoadType The types of load procedures Namespace : OSGeo.MapGuide.ObjectModels.LoadProcedure Assembly : cs.temp.dll.dll Syntax public enum LoadType Fields Name Description Dwf A Load Procedure for DWF files Dwg A Load Procedure for DWG files (not supported by Maestro) Raster A Load Procedure for Raster files (not supported by Maestro) Sdf A Load Procedure for SDF 3.0 files Shp A Load Procedure for SHP files Sqlite A Load Procedure for SQLite files"
  },
  "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.SdfKeyTreatmentType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.SdfKeyTreatmentType.html",
    "title": "Enum SdfKeyTreatmentType | MapGuide Maestro",
    "keywords": "Enum SdfKeyTreatmentType Defines how to handle duplicate SDF2 keys (not supported by Maestro) Namespace : OSGeo.MapGuide.ObjectModels.LoadProcedure Assembly : cs.temp.dll.dll Syntax public enum SdfKeyTreatmentType Fields Name Description AutogenerateAll DiscardDuplicates MergeDuplicates"
  },
  "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LoadProcedure.html",
    "title": "Namespace OSGeo.MapGuide.ObjectModels.LoadProcedure | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.ObjectModels.LoadProcedure Classes BaseLoadProcedureExtensions Extension method class Interfaces IBaseLoadProcedure Base type of all load procedures. All Load Procedures at the minimum require the following information: A list of source files. The root path to load into The folder where spatial data sources will be created [optional, but useless if not specified] The folder where layers will be created [optional. dependent on #3] Once initialized, load procedures can be executed via OSGeo.MapGuide.MaestroAPI.MgServerConnectionBase.ExecuteLoadProcedure(OSGeo.MapGuide.ObjectModels.LoadProcedure.ILoadProcedure,OSGeo.MapGuide.MaestroAPI.LengthyOperationProgressCallBack,System.Boolean) method Because Load Procedures are also resources, they can be saved into the library repository via the OSGeo.MapGuide.MaestroAPI.Services.IResourceService.SaveResource(IResourceHandle) method and retrieved from the repository via the GetResource(String) method IDwfLoadProcedure A DWF load procedure. Execution is supported with limitations IDwgLoadProcedure A DWG load procedure. Execution not supported by Maestro ILoadProcedure Represents Load Procedures IRasterLoadProcedure A raster load procedure. Execution not supported by Maestro ISdfLoadProcedure A SDF load procedure. Execution is supported with limitations IShpLoadProcedure A SHP load procedure. Execution is supported with limitations ISqliteLoadProcedure A SQLite load procedure. Execution is supported with limitations Enums LoadType The types of load procedures SdfKeyTreatmentType Defines how to handle duplicate SDF2 keys (not supported by Maestro)"
  },
  "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IBaseMapDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IBaseMapDefinition.html",
    "title": "Interface IBaseMapDefinition | MapGuide Maestro",
    "keywords": "Interface IBaseMapDefinition Represents the tiled map portion of the Map Definition Namespace : OSGeo.MapGuide.ObjectModels.MapDefinition Assembly : cs.temp.dll.dll Syntax public interface IBaseMapDefinition : ITileSetAbstract"
  },
  "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IBaseMapGroup.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.MapDefinition.IBaseMapGroup.html",
    "title": "Interface IBaseMapGroup | MapGuide Maestro",
    "keywords": "Interface IBaseMapGroup Tiled map group Inherited Members IMapLegendElementBase.Name IMapLegendElementBase.ShowInLegend IMapLegendElementBase.LegendLabel IMapLegendElementBase.ExpandInLegend Namespace : OSGeo.MapGuide.ObjectModels.MapDefinition Assembly : cs.temp.dll.dll Syntax public interface IBaseMapGroup : IMapLegendElementBase, INotifyPropertyChanged Properties BaseMapLayer Gets the base map layers. Declaration IEnumerable<IBaseMapLayer> BaseMapLayer { get; } Property Value Type Description IEnumerable < IBaseMapLayer > The base map layers. Visible Gets or sets a value indicating whether this IBaseMapGroup is visible. Declaration bool Visible { get; set; } Property Value Type Description System.Boolean true if visible; otherwise, false . Methods AddLayer(String, String) Adds the layer. Declaration IBaseMapLayer AddLayer(string layerName, string resourceId) Parameters Type Name Description System.String layerName Name of the layer. System.String resourceId The resource id. Returns Type Description IBaseMapLayer GetIndex(IBaseMapLayer) Gets the index of the specified layer Declaration int GetIndex(IBaseMapLayer layer) Parameters Type Name Description IBaseMapLayer layer Returns Type Description System.Int32 InsertLayer(Int32, IBaseMapLayer) Insert the base map layer at the specified index Declaration void InsertLayer(int index, IBaseMapLayer layer) Parameters Type Name Description System.Int32 index IBaseMapLayer layer MoveDown(IBaseMapLayer) Moves the specified layer down. Declaration int MoveDown(IBaseMapLayer layer) Parameters Type Name Description IBaseMapLayer layer The layer. Returns Type Description System.Int32 MoveUp(IBaseMapLayer) Moves the specified layer up. Declaration int MoveUp(IBaseMapLayer layer) Parameters Type Name Description IBaseMapLayer layer The layer. Returns Type Description System.Int32 RemoveBaseMapLayer(IBaseMapLayer) Removes the base map layer. Declaration void RemoveBaseMapLayer(IBaseMapLayer layer) Parameters Type Name Description IBaseMapLayer layer The layer."
  },
  "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IFeatureStyleInfo.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IFeatureStyleInfo.html",
    "title": "Interface IFeatureStyleInfo | MapGuide Maestro",
    "keywords": "Interface IFeatureStyleInfo Represents a feature style Namespace : OSGeo.MapGuide.ObjectModels.RuntimeMap Assembly : cs.temp.dll.dll Syntax public interface IFeatureStyleInfo Properties Rules Gets the style rules for this feature style Declaration IRuleInfoCollection Rules { get; } Property Value Type Description IRuleInfoCollection Type Gets the type of the feature style Declaration int Type { get; } Property Value Type Description System.Int32"
  },
  "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IFeatureStyleInfoCollection.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IFeatureStyleInfoCollection.html",
    "title": "Interface IFeatureStyleInfoCollection | MapGuide Maestro",
    "keywords": "Interface IFeatureStyleInfoCollection A collection of feature styles Inherited Members IReadOnlyCollection<IFeatureStyleInfo>.Count IReadOnlyCollection<IFeatureStyleInfo>.Item[Int32] Namespace : OSGeo.MapGuide.ObjectModels.RuntimeMap Assembly : cs.temp.dll.dll Syntax public interface IFeatureStyleInfoCollection : IReadOnlyCollection<IFeatureStyleInfo>, IEnumerable<IFeatureStyleInfo>"
  },
  "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IReadOnlyCollection-1.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IReadOnlyCollection-1.html",
    "title": "Interface IReadOnlyCollection<T> | MapGuide Maestro",
    "keywords": "Interface IReadOnlyCollection<T> A generic read-only collection interface Namespace : OSGeo.MapGuide.ObjectModels.RuntimeMap Assembly : cs.temp.dll.dll Syntax public interface IReadOnlyCollection<T> : IEnumerable<T> Type Parameters Name Description T Properties Count Gets the number of items in this collection Declaration int Count { get; } Property Value Type Description System.Int32 Item[Int32] Gets the item at the given index Declaration T this[int index] { get; } Parameters Type Name Description System.Int32 index Property Value Type Description T"
  },
  "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IRuleInfo.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IRuleInfo.html",
    "title": "Interface IRuleInfo | MapGuide Maestro",
    "keywords": "Interface IRuleInfo Represents a style rule Namespace : OSGeo.MapGuide.ObjectModels.RuntimeMap Assembly : cs.temp.dll.dll Syntax public interface IRuleInfo Properties Filter Gets the filter for this rule Declaration string Filter { get; } Property Value Type Description System.String IconBase64 Gets the icon for this rule Declaration string IconBase64 { get; } Property Value Type Description System.String LegendLabel Gets the legend label for this rule Declaration string LegendLabel { get; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IRuleInfoCollection.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IRuleInfoCollection.html",
    "title": "Interface IRuleInfoCollection | MapGuide Maestro",
    "keywords": "Interface IRuleInfoCollection A collection of style rules Inherited Members IReadOnlyCollection<IRuleInfo>.Count IReadOnlyCollection<IRuleInfo>.Item[Int32] Namespace : OSGeo.MapGuide.ObjectModels.RuntimeMap Assembly : cs.temp.dll.dll Syntax public interface IRuleInfoCollection : IReadOnlyCollection<IRuleInfo>, IEnumerable<IRuleInfo>"
  },
  "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IRuntimeLayerGroupInfo.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IRuntimeLayerGroupInfo.html",
    "title": "Interface IRuntimeLayerGroupInfo | MapGuide Maestro",
    "keywords": "Interface IRuntimeLayerGroupInfo Represents a group of a runtime map Inherited Members IRuntimeMapLegendElement.Name IRuntimeMapLegendElement.LegendLabel IRuntimeMapLegendElement.ObjectID IRuntimeMapLegendElement.ParentID IRuntimeMapLegendElement.DisplayInLegend IRuntimeMapLegendElement.ExpandInLegend IRuntimeMapLegendElement.Visible IRuntimeMapLegendElement.ActuallyVisible Namespace : OSGeo.MapGuide.ObjectModels.RuntimeMap Assembly : cs.temp.dll.dll Syntax public interface IRuntimeLayerGroupInfo : IRuntimeMapLegendElement Properties GroupType Gets the type of the group Declaration int GroupType { get; } Property Value Type Description System.Int32"
  },
  "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IRuntimeLayerGroupInfoCollection.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IRuntimeLayerGroupInfoCollection.html",
    "title": "Interface IRuntimeLayerGroupInfoCollection | MapGuide Maestro",
    "keywords": "Interface IRuntimeLayerGroupInfoCollection A collection of groups Inherited Members IReadOnlyCollection<IRuntimeLayerGroupInfo>.Count IReadOnlyCollection<IRuntimeLayerGroupInfo>.Item[Int32] Namespace : OSGeo.MapGuide.ObjectModels.RuntimeMap Assembly : cs.temp.dll.dll Syntax public interface IRuntimeLayerGroupInfoCollection : IReadOnlyCollection<IRuntimeLayerGroupInfo>, IEnumerable<IRuntimeLayerGroupInfo>"
  },
  "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IRuntimeLayerInfo.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IRuntimeLayerInfo.html",
    "title": "Interface IRuntimeLayerInfo | MapGuide Maestro",
    "keywords": "Interface IRuntimeLayerInfo Represents a layer of the runtime map Inherited Members IRuntimeMapLegendElement.Name IRuntimeMapLegendElement.LegendLabel IRuntimeMapLegendElement.ObjectID IRuntimeMapLegendElement.ParentID IRuntimeMapLegendElement.DisplayInLegend IRuntimeMapLegendElement.ExpandInLegend IRuntimeMapLegendElement.Visible IRuntimeMapLegendElement.ActuallyVisible Namespace : OSGeo.MapGuide.ObjectModels.RuntimeMap Assembly : cs.temp.dll.dll Syntax public interface IRuntimeLayerInfo : IRuntimeMapLegendElement Properties FeatureSource Gets feature source information of the layer Declaration IFeatureSourceInfo FeatureSource { get; } Property Value Type Description IFeatureSourceInfo LayerDefinition Gets the Layer Definition ID Declaration string LayerDefinition { get; } Property Value Type Description System.String LayerType Gets the type of layer Declaration int LayerType { get; } Property Value Type Description System.Int32 ScaleRanges Gets information about the scale ranges in the layer Declaration IScaleRangeInfoCollection ScaleRanges { get; } Property Value Type Description IScaleRangeInfoCollection"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IElevationSettings.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IElevationSettings.html",
    "title": "Interface IElevationSettings | MapGuide Maestro",
    "keywords": "Interface IElevationSettings Represents elevation settings Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IElevationSettings Properties Unit Gets or sets the unit. Declaration LengthUnitType Unit { get; set; } Property Value Type Description LengthUnitType The unit. ZExtrusion Gets or sets the Z extrusion. Declaration string ZExtrusion { get; set; } Property Value Type Description System.String The Z extrusion. ZOffset Gets or sets the Z offset. Declaration string ZOffset { get; set; } Property Value Type Description System.String The Z offset. ZOffsetType Gets or sets the type of the Z offset. Declaration ElevationTypeType ZOffsetType { get; set; } Property Value Type Description ElevationTypeType The type of the Z offset."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IExplicitColor.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IExplicitColor.html",
    "title": "Interface IExplicitColor | MapGuide Maestro",
    "keywords": "Interface IExplicitColor An explicit color Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IExplicitColor Properties Type Gets the type. Declaration ItemChoiceType Type { get; } Property Value Type Description ItemChoiceType The type."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IExplicitColorBand.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IExplicitColorBand.html",
    "title": "Interface IExplicitColorBand | MapGuide Maestro",
    "keywords": "Interface IExplicitColorBand An explicit color band Inherited Members IExplicitColor.Type Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IExplicitColorBand : IExplicitColor Properties Band Gets the band. Declaration string Band { get; } Property Value Type Description System.String The band."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IExplicitColorBands.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IExplicitColorBands.html",
    "title": "Interface IExplicitColorBands | MapGuide Maestro",
    "keywords": "Interface IExplicitColorBands An explicit color band Inherited Members IExplicitColor.Type Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IExplicitColorBands : IExplicitColor Properties Bands Gets the bands. Declaration IGridColorBands Bands { get; } Property Value Type Description IGridColorBands The bands."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IExplictColorValue.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IExplictColorValue.html",
    "title": "Interface IExplictColorValue | MapGuide Maestro",
    "keywords": "Interface IExplictColorValue An explicit color value Inherited Members IExplicitColor.Type Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IExplictColorValue : IExplicitColor Properties Value Gets the value. Declaration string Value { get; } Property Value Type Description System.String The value."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IFill.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IFill.html",
    "title": "Interface IFill | MapGuide Maestro",
    "keywords": "Interface IFill Represents a fill Inherited Members ICloneableLayerElement<IFill>.Clone() Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IFill : ICloneableLayerElement<IFill> Properties BackgroundColor Gets or sets the background color Declaration string BackgroundColor { get; set; } Property Value Type Description System.String FillPattern Gets or sets the fill pattern Declaration string FillPattern { get; set; } Property Value Type Description System.String ForegroundColor Gets or sets the foreground color Declaration string ForegroundColor { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IFontSymbol.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IFontSymbol.html",
    "title": "Interface IFontSymbol | MapGuide Maestro",
    "keywords": "Interface IFontSymbol Symbols that are specified by a font and character. Inherited Members ISymbol.Type ISymbol.Unit ISymbol.SizeContext ISymbol.SizeX ISymbol.SizeY ISymbol.Rotation ISymbol.MaintainAspect ISymbol.InsertionPointX ISymbol.InsertionPointY ICloneableLayerElement<IFontSymbol>.Clone() Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IFontSymbol : ISymbol, ICloneableLayerElement<IFontSymbol> Properties Bold Gets or sets whether to bold the text Declaration bool ? Bold { get; set; } Property Value Type Description System.Nullable < System.Boolean > Character Gets or sets the character Declaration string Character { get; set; } Property Value Type Description System.String FontName Gets or sets the name of the font. If the font is not installed, the actual font used is application dependent. Declaration string FontName { get; set; } Property Value Type Description System.String ForegroundColor Gets or sets the foreground color Declaration string ForegroundColor { get; set; } Property Value Type Description System.String Italic Gets or sets whether to italicize the text Declaration bool ? Italic { get; set; } Property Value Type Description System.Nullable < System.Boolean > Underlined Gets or sets whether to underline the text Declaration bool ? Underlined { get; set; } Property Value Type Description System.Nullable < System.Boolean >"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IGridColor.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IGridColor.html",
    "title": "Interface IGridColor | MapGuide Maestro",
    "keywords": "Interface IGridColor A grid color Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IGridColor Properties ExplicitColor Gets or sets the color of the explicit. Declaration IExplicitColor ExplicitColor { get; set; } Property Value Type Description IExplicitColor The color of the explicit. Methods GetValue() Gets the html color value Declaration string GetValue() Returns Type Description System.String SetValue(String) Set the color Declaration void SetValue(string htmlColor) Parameters Type Name Description System.String htmlColor"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IGridColorBands.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IGridColorBands.html",
    "title": "Interface IGridColorBands | MapGuide Maestro",
    "keywords": "Interface IGridColorBands Specifies a color using distinct RGB values Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IGridColorBands Properties BlueBand Gets or sets the blue channel band Declaration IChannelBand BlueBand { get; set; } Property Value Type Description IChannelBand GreenBand Gets or sets the green channel band Declaration IChannelBand GreenBand { get; set; } Property Value Type Description IChannelBand RedBand Gets or sets the red channel band Declaration IChannelBand RedBand { get; set; } Property Value Type Description IChannelBand"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IGridColorRule.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IGridColorRule.html",
    "title": "Interface IGridColorRule | MapGuide Maestro",
    "keywords": "Interface IGridColorRule A grid color rule Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IGridColorRule Properties Color Gets or sets the color. Declaration IGridColor Color { get; set; } Property Value Type Description IGridColor The color. Filter Gets or sets a filter for the rule. This is a boolean FDO expression. Any features that pass this filter are styled using this rule's stylization Declaration string Filter { get; set; } Property Value Type Description System.String Label Gets or sets a label for the rule. Does not apply to GridColorRule Declaration ITextSymbol Label { get; set; } Property Value Type Description ITextSymbol LegendLabel Gets or sets the label for the rule to be displayed in the legend Declaration string LegendLabel { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IGridColorStyle.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IGridColorStyle.html",
    "title": "Interface IGridColorStyle | MapGuide Maestro",
    "keywords": "Interface IGridColorStyle A grid color style Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IGridColorStyle Properties BrightnessFactor Gets or sets the brightness factor Declaration double ? BrightnessFactor { get; set; } Property Value Type Description System.Nullable < System.Double > ColorRule Gets the color rules for this style Declaration IEnumerable<IGridColorRule> ColorRule { get; } Property Value Type Description IEnumerable < IGridColorRule > ColorRuleCount Gets the number of color rules Declaration int ColorRuleCount { get; } Property Value Type Description System.Int32 ContrastFactor Gets or sets the contrast factor Declaration double ? ContrastFactor { get; set; } Property Value Type Description System.Nullable < System.Double > HillShade Gets or sets the hill shade. Declaration IHillShade HillShade { get; set; } Property Value Type Description IHillShade The hill shade. TransparencyColor Gets or sets the transparency color. If a pixel color prior to factoring in HillShade is this value then the pixel is transparent Declaration string TransparencyColor { get; set; } Property Value Type Description System.String Methods AddColorRule(IGridColorRule) Adds a color rule to this style Declaration void AddColorRule(IGridColorRule rule) Parameters Type Name Description IGridColorRule rule CreateHillShade() Creates a default hillshade Declaration IHillShade CreateHillShade() Returns Type Description IHillShade GetColorRuleAt(Int32) Gets the color rule at the specified index Declaration IGridColorRule GetColorRuleAt(int index) Parameters Type Name Description System.Int32 index Returns Type Description IGridColorRule RemoveColorRule(IGridColorRule) Removes the specified color rule from this style Declaration void RemoveColorRule(IGridColorRule rule) Parameters Type Name Description IGridColorRule rule"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IThemeLabel.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IThemeLabel.html",
    "title": "Interface IThemeLabel | MapGuide Maestro",
    "keywords": "Interface IThemeLabel Provides legend labeling information for a theme Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IThemeLabel Properties CategoryFormat Gets or sets the default legend format to use for each category Declaration string CategoryFormat { get; set; } Property Value Type Description System.String Description Gets or sets the legend description for the theme Declaration string Description { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IUrlData.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IUrlData.html",
    "title": "Interface IUrlData | MapGuide Maestro",
    "keywords": "Interface IUrlData URL information for features Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IUrlData Properties Content Gets or sets the real address of the URL. This can be a string FDO expression Declaration string Content { get; set; } Property Value Type Description System.String The content. ContentOverride Gets or sets the override of URL content for a specific feature which can be a string FDO expression Declaration string ContentOverride { get; set; } Property Value Type Description System.String The content override. Description Gets or sets the description of the URL. This can be a string FDO expression Declaration string Description { get; set; } Property Value Type Description System.String The description. DescriptionOverride Gets or sets the override of URL description for a specific feature which can be a string FDO expression Declaration string DescriptionOverride { get; set; } Property Value Type Description System.String The description override."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IVectorLayerDefinition.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IVectorLayerDefinition.html",
    "title": "Interface IVectorLayerDefinition | MapGuide Maestro",
    "keywords": "Interface IVectorLayerDefinition Represents a layer definition based on a vector-based feature source Inherited Members ISubLayerDefinition.LayerType ISubLayerDefinition.ResourceId Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IVectorLayerDefinition : ISubLayerDefinition, INotifyPropertyChanged Properties FeatureName Gets or sets fully qualified name of the feature class which this layer applies Declaration string FeatureName { get; set; } Property Value Type Description System.String Filter Gets or sets an FDO filter which is applied when rendering/styling features Declaration string Filter { get; set; } Property Value Type Description System.String Geometry Gets or sets the geometry field of the feature class which this layer applies Declaration string Geometry { get; set; } Property Value Type Description System.String PropertyMapping Gets the property mappings for this layer. This determines which properties are displayed (and what labels to use) in the property pane and Declaration IEnumerable<INameStringPair> PropertyMapping { get; } Property Value Type Description IEnumerable < INameStringPair > SymbolDefinitionVersion Gets the supported symbol definition version to use for composite symbolization. If the Layer Definition does not support composite symbolization, null is returned Declaration Version SymbolDefinitionVersion { get; } Property Value Type Description Version ToolTip Gets or sets an FDO expression which represents the HTML content that is displayed when the mouse is over the current feature Declaration string ToolTip { get; set; } Property Value Type Description System.String Url Gets or sets an FDO expression which represents the URL that is opened when a feature is selected Declaration string Url { get; set; } Property Value Type Description System.String Remarks If this is a IVectorLayerDefinition2 instance, this property is a pass through to the Content property value. In other words it is equivalent to getting or setting the value of UrlData.Content VectorScaleRange Gets the scale ranges for this layer Declaration IEnumerable<IVectorScaleRange> VectorScaleRange { get; } Property Value Type Description IEnumerable < IVectorScaleRange > Methods AddPropertyMapping(INameStringPair) Adds the specified property mapping Declaration void AddPropertyMapping(INameStringPair pair) Parameters Type Name Description INameStringPair pair AddVectorScaleRange(IVectorScaleRange) Adds the specified vector scale range Declaration void AddVectorScaleRange(IVectorScaleRange range) Parameters Type Name Description IVectorScaleRange range ClearPropertyMappings() Removes all property mappings Declaration void ClearPropertyMappings() GetPosition(INameStringPair) Gets the position of the specified pair in the order of property mappings Declaration int GetPosition(INameStringPair pair) Parameters Type Name Description INameStringPair pair Returns Type Description System.Int32 GetPropertyMapping(String) Gets the property mapping for the feature class property Declaration INameStringPair GetPropertyMapping(string name) Parameters Type Name Description System.String name Returns Type Description INameStringPair GetPropertyMappingAt(Int32) Gets the property mapping at the specified index Declaration INameStringPair GetPropertyMappingAt(int index) Parameters Type Name Description System.Int32 index Returns Type Description INameStringPair GetScaleRangeAt(Int32) Gets the scale range at this specified index Declaration IVectorScaleRange GetScaleRangeAt(int index) Parameters Type Name Description System.Int32 index Returns Type Description IVectorScaleRange IndexOfScaleRange(IVectorScaleRange) Gets the collection index of this scale range Declaration int IndexOfScaleRange(IVectorScaleRange range) Parameters Type Name Description IVectorScaleRange range Returns Type Description System.Int32 MoveDown(INameStringPair) Moves the specified pair down the order of property mappings Declaration int MoveDown(INameStringPair pair) Parameters Type Name Description INameStringPair pair Returns Type Description System.Int32 MoveUp(INameStringPair) Moves the specified pair up the order of property mappings Declaration int MoveUp(INameStringPair pair) Parameters Type Name Description INameStringPair pair Returns Type Description System.Int32 RemoveAllScaleRanges() Removes all scale ranges from this layer Declaration void RemoveAllScaleRanges() RemovePropertyMapping(INameStringPair) Removes the specified property mapping Declaration void RemovePropertyMapping(INameStringPair pair) Parameters Type Name Description INameStringPair pair RemoveVectorScaleRange(IVectorScaleRange) Removes the specified vector scale range Declaration void RemoveVectorScaleRange(IVectorScaleRange range) Parameters Type Name Description IVectorScaleRange range"
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IVectorLayerDefinition2.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IVectorLayerDefinition2.html",
    "title": "Interface IVectorLayerDefinition2 | MapGuide Maestro",
    "keywords": "Interface IVectorLayerDefinition2 Based on Layer Definition schema 2.4.0 Inherited Members IVectorLayerDefinition.FeatureName IVectorLayerDefinition.Geometry IVectorLayerDefinition.Url IVectorLayerDefinition.ToolTip IVectorLayerDefinition.Filter IVectorLayerDefinition.VectorScaleRange IVectorLayerDefinition.IndexOfScaleRange(IVectorScaleRange) IVectorLayerDefinition.RemoveAllScaleRanges() IVectorLayerDefinition.GetScaleRangeAt(Int32) IVectorLayerDefinition.AddVectorScaleRange(IVectorScaleRange) IVectorLayerDefinition.RemoveVectorScaleRange(IVectorScaleRange) IVectorLayerDefinition.PropertyMapping IVectorLayerDefinition.AddPropertyMapping(INameStringPair) IVectorLayerDefinition.RemovePropertyMapping(INameStringPair) IVectorLayerDefinition.GetPropertyMappingAt(Int32) IVectorLayerDefinition.GetPropertyMapping(String) IVectorLayerDefinition.GetPosition(INameStringPair) IVectorLayerDefinition.MoveUp(INameStringPair) IVectorLayerDefinition.MoveDown(INameStringPair) IVectorLayerDefinition.SymbolDefinitionVersion IVectorLayerDefinition.ClearPropertyMappings() ISubLayerDefinition.LayerType ISubLayerDefinition.ResourceId Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IVectorLayerDefinition2 : IVectorLayerDefinition, ISubLayerDefinition, INotifyPropertyChanged Properties UrlData Gets or sets the URL data. Declaration IUrlData UrlData { get; set; } Property Value Type Description IUrlData The URL data."
  },
  "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IVectorRule.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.LayerDefinition.IVectorRule.html",
    "title": "Interface IVectorRule | MapGuide Maestro",
    "keywords": "Interface IVectorRule Base interface for style rules of all geometric types Namespace : OSGeo.MapGuide.ObjectModels.LayerDefinition Assembly : cs.temp.dll.dll Syntax public interface IVectorRule Properties Filter Gets or sets the filter for this rule Declaration string Filter { get; set; } Property Value Type Description System.String LegendLabel Gets or sets the label for the rule to be displayed in the legend Declaration string LegendLabel { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IScaleRangeInfoCollection.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.IScaleRangeInfoCollection.html",
    "title": "Interface IScaleRangeInfoCollection | MapGuide Maestro",
    "keywords": "Interface IScaleRangeInfoCollection A collection of scale ranges Inherited Members IReadOnlyCollection<IScaleRangeInfo>.Count IReadOnlyCollection<IScaleRangeInfo>.Item[Int32] Namespace : OSGeo.MapGuide.ObjectModels.RuntimeMap Assembly : cs.temp.dll.dll Syntax public interface IScaleRangeInfoCollection : IReadOnlyCollection<IScaleRangeInfo>, IEnumerable<IScaleRangeInfo>"
  },
  "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.RuntimeMap.html",
    "title": "Namespace OSGeo.MapGuide.ObjectModels.RuntimeMap | MapGuide Maestro",
    "keywords": "Namespace OSGeo.MapGuide.ObjectModels.RuntimeMap Interfaces ICoordinateSystemInfo Represents coordinate system information for a Runtime Map IFeatureSourceInfo Represents Feature Source information for a layer IFeatureStyleInfo Represents a feature style IFeatureStyleInfoCollection A collection of feature styles IReadOnlyCollection<T> A generic read-only collection interface IRuleInfo Represents a style rule IRuleInfoCollection A collection of style rules IRuntimeLayerGroupInfo Represents a group of a runtime map IRuntimeLayerGroupInfoCollection A collection of groups IRuntimeLayerInfo Represents a layer of the runtime map IRuntimeLayerInfoCollection A collection of layers IRuntimeMapInfo Describes the structure of a Runtime Map IRuntimeMapInfo2 Describes the structure of a Runtime Map. Based on RuntimeMap v3.0.0 schema IRuntimeMapLegendElement Models a legend element IScaleRangeInfo Represents a scale range of a layer IScaleRangeInfoCollection A collection of scale ranges"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.AngleControl.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.AngleControl.html",
    "title": "Enum AngleControl | MapGuide Maestro",
    "keywords": "Enum AngleControl The types of angle control Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum AngleControl Fields Name Description FromAngle FromGeometry"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ITextFrame.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ITextFrame.html",
    "title": "Interface ITextFrame | MapGuide Maestro",
    "keywords": "Interface ITextFrame A text frame Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface ITextFrame Properties FillColor Gets or sets the color of the fill. Declaration string FillColor { get; set; } Property Value Type Description System.String The color of the fill. LineColor Gets or sets the color of the line. Declaration string LineColor { get; set; } Property Value Type Description System.String The color of the line. OffsetX Gets or sets the offset X. Declaration double ? OffsetX { get; set; } Property Value Type Description System.Nullable < System.Double > The offset X. OffsetY Gets or sets the offset Y. Declaration double ? OffsetY { get; set; } Property Value Type Description System.Nullable < System.Double > The offset Y."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ITextGraphic.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ITextGraphic.html",
    "title": "Interface ITextGraphic | MapGuide Maestro",
    "keywords": "Interface ITextGraphic Text graphics Inherited Members IGraphicBase.ResizeControl IGraphicBase.Type Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface ITextGraphic : IGraphicBase Properties Angle Gets or sets the angle. Declaration string Angle { get; set; } Property Value Type Description System.String The angle. Bold Gets or sets the bold. Declaration string Bold { get; set; } Property Value Type Description System.String The bold. Content Gets or sets the content. Declaration string Content { get; set; } Property Value Type Description System.String The content. FontName Gets or sets the name of the font. Declaration string FontName { get; set; } Property Value Type Description System.String The name of the font. Frame Gets or sets the frame. Declaration ITextFrame Frame { get; set; } Property Value Type Description ITextFrame The frame. GhostColor Gets or sets the color of the ghost. Declaration string GhostColor { get; set; } Property Value Type Description System.String The color of the ghost. Height Gets or sets the height. Declaration string Height { get; set; } Property Value Type Description System.String The height. HeightScalable Gets or sets the height scalable. Declaration string HeightScalable { get; set; } Property Value Type Description System.String The height scalable. HorizontalAlignment Gets or sets the horizontal alignment. Declaration string HorizontalAlignment { get; set; } Property Value Type Description System.String The horizontal alignment. Italic Gets or sets the italic. Declaration string Italic { get; set; } Property Value Type Description System.String The italic. Justification Gets or sets the justification. Declaration string Justification { get; set; } Property Value Type Description System.String The justification. LineSpacing Gets or sets the line spacing. Declaration string LineSpacing { get; set; } Property Value Type Description System.String The line spacing. PositionX Gets or sets the position X. Declaration string PositionX { get; set; } Property Value Type Description System.String The position X. PositionY Gets or sets the position Y. Declaration string PositionY { get; set; } Property Value Type Description System.String The position Y. TextColor Gets or sets the color of the text. Declaration string TextColor { get; set; } Property Value Type Description System.String The color of the text. Underlined Gets or sets the underlined. Declaration string Underlined { get; set; } Property Value Type Description System.String The underlined. VerticalAlignment Gets or sets the vertical alignment. Declaration string VerticalAlignment { get; set; } Property Value Type Description System.String The vertical alignment."
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ITextGraphic2.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ITextGraphic2.html",
    "title": "Interface ITextGraphic2 | MapGuide Maestro",
    "keywords": "Interface ITextGraphic2 An extension of the text element to support rich text. Introduced with the Symbol Definition 1.1.0 schema Inherited Members ITextGraphic.Content ITextGraphic.FontName ITextGraphic.Bold ITextGraphic.Italic ITextGraphic.Underlined ITextGraphic.Height ITextGraphic.HeightScalable ITextGraphic.Angle ITextGraphic.PositionX ITextGraphic.PositionY ITextGraphic.HorizontalAlignment ITextGraphic.VerticalAlignment ITextGraphic.Justification ITextGraphic.LineSpacing ITextGraphic.TextColor ITextGraphic.GhostColor ITextGraphic.Frame IGraphicBase.ResizeControl IGraphicBase.Type Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface ITextGraphic2 : ITextGraphic, IGraphicBase Properties Markup Gets or sets the type of rich text markup used to render the contents Declaration string Markup { get; set; } Property Value Type Description System.String ObliqueAngle Gets or sets the skew of shear angle to be applied to the text Declaration string ObliqueAngle { get; set; } Property Value Type Description System.String Overlined Gets or sets the text style attribute to create a line that runs on top of the text Declaration string Overlined { get; set; } Property Value Type Description System.String TrackSpacing Gets or sets the width scale applied to inter character spacing independent of the font character spacing Declaration string TrackSpacing { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IUsageBase.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.IUsageBase.html",
    "title": "Interface IUsageBase | MapGuide Maestro",
    "keywords": "Interface IUsageBase Base usage interface Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public interface IUsageBase Properties Angle Specifies the symbol angle, in degrees. Only applies if AngleControl evaluates to FromAngle. Defaults to 0 Declaration string Angle { get; set; } Property Value Type Description System.String AngleControl Specifies how the symbol angle is defined. This must evaluate to one of: FromAngle (default) or FromGeometry Declaration string AngleControl { get; set; } Property Value Type Description System.String"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.Justification.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.Justification.html",
    "title": "Enum Justification | MapGuide Maestro",
    "keywords": "Enum Justification The types of justification Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum Justification Fields Name Description Center FromAlignment Justified Left Right"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.LineCap.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.LineCap.html",
    "title": "Enum LineCap | MapGuide Maestro",
    "keywords": "Enum LineCap The types of line cap Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum LineCap Fields Name Description None Round Square Triangle"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.LineJoin.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.LineJoin.html",
    "title": "Enum LineJoin | MapGuide Maestro",
    "keywords": "Enum LineJoin The types of line join Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum LineJoin Fields Name Description Bevel Miter None Round"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.OriginControl.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.OriginControl.html",
    "title": "Enum OriginControl | MapGuide Maestro",
    "keywords": "Enum OriginControl The types of origin control Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum OriginControl Fields Name Description Centroid Global Local"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ResizeControl.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.ResizeControl.html",
    "title": "Enum ResizeControl | MapGuide Maestro",
    "keywords": "Enum ResizeControl The types of resize control Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum ResizeControl Fields Name Description AddToResizeBox AdjustToResizeBox ResizeNone"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.SimpleSymbolReferenceType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.SimpleSymbolReferenceType.html",
    "title": "Enum SimpleSymbolReferenceType | MapGuide Maestro",
    "keywords": "Enum SimpleSymbolReferenceType The type of simple symbol reference Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum SimpleSymbolReferenceType Fields Name Description Inline Inlined definition Library External resource id reference Undefined Undefined"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.SymbolDefExtensions.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.SymbolDefExtensions.html",
    "title": "Class SymbolDefExtensions | MapGuide Maestro",
    "keywords": "Class SymbolDefExtensions Extension methods for symbol definitions Inheritance System.Object SymbolDefExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public static class SymbolDefExtensions Methods GetParameter(ISymbolDefinitionBase, String) Gets the parameter definition for the given identifer Declaration public static IParameter GetParameter(this ISymbolDefinitionBase sym, string identifier) Parameters Type Name Description ISymbolDefinitionBase sym System.String identifier Returns Type Description IParameter GetParameters(ISimpleSymbolDefinition) Gets the parameters. Declaration public static IEnumerable<IParameter> GetParameters(this ISimpleSymbolDefinition ssym) Parameters Type Name Description ISimpleSymbolDefinition ssym The ssym. Returns Type Description IEnumerable < IParameter > GetParameters(ISymbolDefinitionBase) Gets the parameters. Declaration public static IEnumerable<IParameter> GetParameters(this ISymbolDefinitionBase sym) Parameters Type Name Description ISymbolDefinitionBase sym The sym. Returns Type Description IEnumerable < IParameter >"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.SymbolDefinitionType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.SymbolDefinitionType.html",
    "title": "Enum SymbolDefinitionType | MapGuide Maestro",
    "keywords": "Enum SymbolDefinitionType Indicates the type of symbol definition Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum SymbolDefinitionType Fields Name Description Compound A compound symbol definition Simple A simple symbol definition"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.SymbolInstanceType.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.SymbolInstanceType.html",
    "title": "Enum SymbolInstanceType | MapGuide Maestro",
    "keywords": "Enum SymbolInstanceType Defines the type of symbol instances Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum SymbolInstanceType Fields Name Description Inline An inline symbol definition Reference A library reference to an existing symbol definition"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.UnitsControl.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.UnitsControl.html",
    "title": "Enum UnitsControl | MapGuide Maestro",
    "keywords": "Enum UnitsControl The types of units control Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum UnitsControl Fields Name Description Absolute Parametric"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.VertexControl.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.VertexControl.html",
    "title": "Enum VertexControl | MapGuide Maestro",
    "keywords": "Enum VertexControl The types of vertex control Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum VertexControl Fields Name Description OverlapDirect OverlapNone OverlapNoWrap Introduced with Symbol Definition 1.1.0 schema OverlapWrap"
  },
  "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.VertexJoin.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.SymbolDefinition.VertexJoin.html",
    "title": "Enum VertexJoin | MapGuide Maestro",
    "keywords": "Enum VertexJoin The types of vertex join Namespace : OSGeo.MapGuide.ObjectModels.SymbolDefinition Assembly : cs.temp.dll.dll Syntax public enum VertexJoin Fields Name Description Bevel Miter None Round"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.CommandEventArgs.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.CommandEventArgs.html",
    "title": "Class CommandEventArgs | MapGuide Maestro",
    "keywords": "Class CommandEventArgs Event args for a command Inheritance System.Object CommandEventArgs Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public class CommandEventArgs : EventArgs Constructors CommandEventArgs(ICommand) Constructor Declaration public CommandEventArgs(ICommand cmd) Parameters Type Name Description ICommand cmd Properties Command The command Declaration public ICommand Command { get; } Property Value Type Description ICommand"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.CommandEventHandler.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.CommandEventHandler.html",
    "title": "Delegate CommandEventHandler | MapGuide Maestro",
    "keywords": "Delegate CommandEventHandler Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public delegate void CommandEventHandler(object sender, CommandEventArgs args); Parameters Type Name Description System.Object sender CommandEventArgs args"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IBasicCommand.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IBasicCommand.html",
    "title": "Interface IBasicCommand | MapGuide Maestro",
    "keywords": "Interface IBasicCommand A built-in basic command Inherited Members ICommand.Name ICommand.Label ICommand.TargetViewer ILocalizable.Tooltip ILocalizable.Description ILocalizable.ImageURL ILocalizable.DisabledImageURL Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IBasicCommand : ICommand, ILocalizable, INotifyPropertyChanged Properties Action Gets or sets the action. Declaration BasicCommandActionType Action { get; set; } Property Value Type Description BasicCommandActionType The action."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IBufferCommand.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IBufferCommand.html",
    "title": "Interface IBufferCommand | MapGuide Maestro",
    "keywords": "Interface IBufferCommand Buffer command Inherited Members ITargetedCommand.Target ITargetedCommand.TargetFrame ICommand.Name ICommand.Label ICommand.TargetViewer ILocalizable.Tooltip ILocalizable.Description ILocalizable.ImageURL ILocalizable.DisabledImageURL Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IBufferCommand : ITargetedCommand, ICustomCommand, ICommand, ILocalizable, INotifyPropertyChanged"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.ICommand.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.ICommand.html",
    "title": "Interface ICommand | MapGuide Maestro",
    "keywords": "Interface ICommand Base viewer command Inherited Members ILocalizable.Tooltip ILocalizable.Description ILocalizable.ImageURL ILocalizable.DisabledImageURL Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface ICommand : ILocalizable, INotifyPropertyChanged Properties Label Gets or sets the label. Declaration string Label { get; set; } Property Value Type Description System.String The label. Name Gets or sets the name. Declaration string Name { get; set; } Property Value Type Description System.String The name. TargetViewer Gets or sets the target viewer. Declaration TargetViewerType TargetViewer { get; set; } Property Value Type Description TargetViewerType The target viewer."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.ICommandItem.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.ICommandItem.html",
    "title": "Interface ICommandItem | MapGuide Maestro",
    "keywords": "Interface ICommandItem A menu item that invokes a command Inherited Members IUIItem.Parent IUIItem.Function Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface ICommandItem : IUIItem Properties Command Gets or sets the command. Declaration string Command { get; set; } Property Value Type Description System.String The command."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.ICommandSet.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.ICommandSet.html",
    "title": "Interface ICommandSet | MapGuide Maestro",
    "keywords": "Interface ICommandSet The master list of viewer commands Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface ICommandSet Properties CommandCount Gets the command count. Declaration int CommandCount { get; } Property Value Type Description System.Int32 The command count. Commands Gets the commands. Declaration IEnumerable<ICommand> Commands { get; } Property Value Type Description IEnumerable < ICommand > The commands. Methods AddCommand(ICommand) Adds the command. Declaration void AddCommand(ICommand cmd) Parameters Type Name Description ICommand cmd The CMD. Clear() Clears this instance. Declaration void Clear() RemoveCommand(ICommand) Removes the command. Declaration void RemoveCommand(ICommand cmd) Parameters Type Name Description ICommand cmd The CMD. Events CustomCommandAdded Occurs when [custom command added]. Declaration event CommandEventHandler CustomCommandAdded Event Type Type Description CommandEventHandler CustomCommandRemoved Occurs when [custom command removed]. Declaration event CommandEventHandler CustomCommandRemoved Event Type Type Description CommandEventHandler"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IContextMenu.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IContextMenu.html",
    "title": "Interface IContextMenu | MapGuide Maestro",
    "keywords": "Interface IContextMenu The viewer context menu Inherited Members IMenu.ItemCount IMenu.Items IMenu.MoveUp(IUIItem) IMenu.MoveDown(IUIItem) IMenu.GetIndex(IUIItem) IMenu.Insert(IUIItem, Int32) IMenu.AddItem(IUIItem) IMenu.RemoveItem(IUIItem) IWebLayoutControl.Visible Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IContextMenu : IMenu, IWebLayoutControl, INotifyPropertyChanged"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.ICustomCommand.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.ICustomCommand.html",
    "title": "Interface ICustomCommand | MapGuide Maestro",
    "keywords": "Interface ICustomCommand A custom command Inherited Members ICommand.Name ICommand.Label ICommand.TargetViewer ILocalizable.Tooltip ILocalizable.Description ILocalizable.ImageURL ILocalizable.DisabledImageURL Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface ICustomCommand : ICommand, ILocalizable, INotifyPropertyChanged"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IFlyoutItem.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IFlyoutItem.html",
    "title": "Interface IFlyoutItem | MapGuide Maestro",
    "keywords": "Interface IFlyoutItem A flyout menu item Inherited Members IUIItem.Parent IUIItem.Function IMenu.ItemCount IMenu.Items IMenu.MoveUp(IUIItem) IMenu.MoveDown(IUIItem) IMenu.GetIndex(IUIItem) IMenu.Insert(IUIItem, Int32) IMenu.AddItem(IUIItem) IMenu.RemoveItem(IUIItem) ILocalizable.Tooltip ILocalizable.Description ILocalizable.ImageURL ILocalizable.DisabledImageURL Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IFlyoutItem : IUIItem, IMenu, ILocalizable, INotifyPropertyChanged Properties Label Gets or sets the label. Declaration string Label { get; set; } Property Value Type Description System.String The label."
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IGetPrintablePageCommand.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IGetPrintablePageCommand.html",
    "title": "Interface IGetPrintablePageCommand | MapGuide Maestro",
    "keywords": "Interface IGetPrintablePageCommand Get printable page command Inherited Members ITargetedCommand.Target ITargetedCommand.TargetFrame ICommand.Name ICommand.Label ICommand.TargetViewer ILocalizable.Tooltip ILocalizable.Description ILocalizable.ImageURL ILocalizable.DisabledImageURL Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IGetPrintablePageCommand : ITargetedCommand, ICustomCommand, ICommand, ILocalizable, INotifyPropertyChanged"
  },
  "api/OSGeo.MapGuide.ObjectModels.WebLayout.IHelpCommand.html": {
    "href": "api/OSGeo.MapGuide.ObjectModels.WebLayout.IHelpCommand.html",
    "title": "Interface IHelpCommand | MapGuide Maestro",
    "keywords": "Interface IHelpCommand A help command Inherited Members ITargetedCommand.Target ITargetedCommand.TargetFrame ICommand.Name ICommand.Label ICommand.TargetViewer ILocalizable.Tooltip ILocalizable.Description ILocalizable.ImageURL ILocalizable.DisabledImageURL Namespace : OSGeo.MapGuide.ObjectModels.WebLayout Assembly : cs.temp.dll.dll Syntax public interface IHelpCommand : ITargetedCommand, ICustomCommand, ICommand, ILocalizable, INotifyPropertyChanged Properties URL Gets or sets the URL. Declaration string URL { get; set; } Property Value Type Description System.String The URL."
  }
}